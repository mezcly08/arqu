

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 13:09:17 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  0028DD                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _AM_PM
   111  0028DD  05                 	db	5
   112                           
   113                           ;initializer for _Clock_type
   114  0028DE  06                 	db	6
   115                           
   116                           	psect	idataBANK1
   117  0028D6                     __pidataBANK1:
   118                           	callstack 0
   119                           
   120                           ;initializer for _days
   121  0028D6  53                 	db	83
   122  0028D7  4D                 	db	77
   123  0028D8  54                 	db	84
   124  0028D9  57                 	db	87
   125  0028DA  74                 	db	116
   126  0028DB  46                 	db	70
   127  0028DC  73                 	db	115
   128                           
   129                           	psect	idataBANK2
   130  001D4A                     __pidataBANK2:
   131                           	callstack 0
   132                           
   133                           ;initializer for encenderBombillas@F3598
   134  001D4A  53                 	db	83
   135  001D4B  65                 	db	101
   136  001D4C  20                 	db	32
   137  001D4D  65                 	db	101
   138  001D4E  6E                 	db	110
   139  001D4F  63                 	db	99
   140  001D50  65                 	db	101
   141  001D51  6E                 	db	110
   142  001D52  64                 	db	100
   143  001D53  69                 	db	105
   144  001D54  6F                 	db	111
   145  001D55  20                 	db	32
   146  001D56  6C                 	db	108
   147  001D57  61                 	db	97
   148  001D58  20                 	db	32
   149  001D59  62                 	db	98
   150  001D5A  6F                 	db	111
   151  001D5B  6D                 	db	109
   152  001D5C  62                 	db	98
   153  001D5D  69                 	db	105
   154  001D5E  6C                 	db	108
   155  001D5F  6C                 	db	108
   156  001D60  61                 	db	97
   157  001D61  20                 	db	32
   158  001D62  34                 	db	52
   159  001D63  0D                 	db	13
   160  001D64  00                 	db	0
   161                           
   162                           ;initializer for encenderBombillas@F3595
   163  001D65  53                 	db	83
   164  001D66  65                 	db	101
   165  001D67  20                 	db	32
   166  001D68  65                 	db	101
   167  001D69  6E                 	db	110
   168  001D6A  63                 	db	99
   169  001D6B  65                 	db	101
   170  001D6C  6E                 	db	110
   171  001D6D  64                 	db	100
   172  001D6E  69                 	db	105
   173  001D6F  6F                 	db	111
   174  001D70  20                 	db	32
   175  001D71  6C                 	db	108
   176  001D72  61                 	db	97
   177  001D73  20                 	db	32
   178  001D74  62                 	db	98
   179  001D75  6F                 	db	111
   180  001D76  6D                 	db	109
   181  001D77  62                 	db	98
   182  001D78  69                 	db	105
   183  001D79  6C                 	db	108
   184  001D7A  6C                 	db	108
   185  001D7B  61                 	db	97
   186  001D7C  20                 	db	32
   187  001D7D  33                 	db	51
   188  001D7E  0D                 	db	13
   189  001D7F  00                 	db	0
   190                           
   191                           ;initializer for encenderBombillas@F3592
   192  001D80  53                 	db	83
   193  001D81  65                 	db	101
   194  001D82  20                 	db	32
   195  001D83  65                 	db	101
   196  001D84  6E                 	db	110
   197  001D85  63                 	db	99
   198  001D86  65                 	db	101
   199  001D87  6E                 	db	110
   200  001D88  64                 	db	100
   201  001D89  69                 	db	105
   202  001D8A  6F                 	db	111
   203  001D8B  20                 	db	32
   204  001D8C  6C                 	db	108
   205  001D8D  61                 	db	97
   206  001D8E  20                 	db	32
   207  001D8F  62                 	db	98
   208  001D90  6F                 	db	111
   209  001D91  6D                 	db	109
   210  001D92  62                 	db	98
   211  001D93  69                 	db	105
   212  001D94  6C                 	db	108
   213  001D95  6C                 	db	108
   214  001D96  61                 	db	97
   215  001D97  20                 	db	32
   216  001D98  32                 	db	50
   217  001D99  0D                 	db	13
   218  001D9A  00                 	db	0
   219                           
   220                           ;initializer for encenderBombillas@F3589
   221  001D9B  53                 	db	83
   222  001D9C  65                 	db	101
   223  001D9D  20                 	db	32
   224  001D9E  65                 	db	101
   225  001D9F  6E                 	db	110
   226  001DA0  63                 	db	99
   227  001DA1  65                 	db	101
   228  001DA2  6E                 	db	110
   229  001DA3  64                 	db	100
   230  001DA4  69                 	db	105
   231  001DA5  6F                 	db	111
   232  001DA6  20                 	db	32
   233  001DA7  6C                 	db	108
   234  001DA8  61                 	db	97
   235  001DA9  20                 	db	32
   236  001DAA  62                 	db	98
   237  001DAB  6F                 	db	111
   238  001DAC  6D                 	db	109
   239  001DAD  62                 	db	98
   240  001DAE  69                 	db	105
   241  001DAF  6C                 	db	108
   242  001DB0  6C                 	db	108
   243  001DB1  61                 	db	97
   244  001DB2  20                 	db	32
   245  001DB3  31                 	db	49
   246  001DB4  0D                 	db	13
   247  001DB5  00                 	db	0
   248                           
   249                           ;initializer for mostrarFechaHora@F3608
   250  001DB6  52                 	db	82
   251  001DB7  65                 	db	101
   252  001DB8  67                 	db	103
   253  001DB9  69                 	db	105
   254  001DBA  73                 	db	115
   255  001DBB  74                 	db	116
   256  001DBC  72                 	db	114
   257  001DBD  61                 	db	97
   258  001DBE  6E                 	db	110
   259  001DBF  64                 	db	100
   260  001DC0  6F                 	db	111
   261  001DC1  20                 	db	32
   262  001DC2  48                 	db	72
   263  001DC3  6F                 	db	111
   264  001DC4  72                 	db	114
   265  001DC5  61                 	db	97
   266  001DC6  20                 	db	32
   267  001DC7  79                 	db	121
   268  001DC8  20                 	db	32
   269  001DC9  46                 	db	70
   270  001DCA  65                 	db	101
   271  001DCB  63                 	db	99
   272  001DCC  68                 	db	104
   273  001DCD  61                 	db	97
   274  001DCE  0D                 	db	13
   275  001DCF  00                 	db	0
   276                           
   277                           ;initializer for offBombillas@F3584
   278  001DD0  42                 	db	66
   279  001DD1  6F                 	db	111
   280  001DD2  6D                 	db	109
   281  001DD3  62                 	db	98
   282  001DD4  69                 	db	105
   283  001DD5  6C                 	db	108
   284  001DD6  6C                 	db	108
   285  001DD7  61                 	db	97
   286  001DD8  73                 	db	115
   287  001DD9  20                 	db	32
   288  001DDA  41                 	db	65
   289  001DDB  70                 	db	112
   290  001DDC  61                 	db	97
   291  001DDD  67                 	db	103
   292  001DDE  61                 	db	97
   293  001DDF  64                 	db	100
   294  001DE0  61                 	db	97
   295  001DE1  73                 	db	115
   296  001DE2  20                 	db	32
   297  001DE3  0D                 	db	13
   298  001DE4  00                 	db	0
   299                           
   300                           ;initializer for encenderBombillas@F3604
   301  001DE5  54                 	db	84
   302  001DE6  65                 	db	101
   303  001DE7  6D                 	db	109
   304  001DE8  70                 	db	112
   305  001DE9  65                 	db	101
   306  001DEA  72                 	db	114
   307  001DEB  61                 	db	97
   308  001DEC  74                 	db	116
   309  001DED  75                 	db	117
   310  001DEE  72                 	db	114
   311  001DEF  61                 	db	97
   312  001DF0  20                 	db	32
   313  001DF1  41                 	db	65
   314  001DF2  6C                 	db	108
   315  001DF3  74                 	db	116
   316  001DF4  61                 	db	97
   317  001DF5  20                 	db	32
   318  001DF6  0D                 	db	13
   319  001DF7  00                 	db	0
   320                           
   321                           ;initializer for onLEDS@F3580
   322  001DF8  54                 	db	84
   323  001DF9  65                 	db	101
   324  001DFA  6D                 	db	109
   325  001DFB  70                 	db	112
   326  001DFC  65                 	db	101
   327  001DFD  72                 	db	114
   328  001DFE  61                 	db	97
   329  001DFF  74                 	db	116
   330  001E00  75                 	db	117
   331  001E01  72                 	db	114
   332  001E02  61                 	db	97
   333  001E03  20                 	db	32
   334  001E04  49                 	db	73
   335  001E05  64                 	db	100
   336  001E06  65                 	db	101
   337  001E07  61                 	db	97
   338  001E08  6C                 	db	108
   339  001E09  0D                 	db	13
   340  001E0A  00                 	db	0
   341                           
   342                           ;initializer for offLEDS@F3574
   343  001E0B  41                 	db	65
   344  001E0C  70                 	db	112
   345  001E0D  61                 	db	97
   346  001E0E  67                 	db	103
   347  001E0F  61                 	db	97
   348  001E10  6E                 	db	110
   349  001E11  64                 	db	100
   350  001E12  6F                 	db	111
   351  001E13  20                 	db	32
   352  001E14  4C                 	db	76
   353  001E15  45                 	db	69
   354  001E16  44                 	db	68
   355  001E17  53                 	db	83
   356  001E18  0D                 	db	13
   357  001E19  00                 	db	0
   358                           
   359                           	psect	idataBANK3
   360  002120                     __pidataBANK3:
   361                           	callstack 0
   362                           
   363                           ;initializer for main@F3565
   364  002120  4C                 	db	76
   365  002121  61                 	db	97
   366  002122  20                 	db	32
   367  002123  68                 	db	104
   368  002124  6F                 	db	111
   369  002125  72                 	db	114
   370  002126  61                 	db	97
   371  002127  20                 	db	32
   372  002128  6E                 	db	110
   373  002129  6F                 	db	111
   374  00212A  63                 	db	99
   375  00212B  74                 	db	116
   376  00212C  75                 	db	117
   377  00212D  72                 	db	114
   378  00212E  6E                 	db	110
   379  00212F  61                 	db	97
   380  002130  20                 	db	32
   381  002131  65                 	db	101
   382  002132  6D                 	db	109
   383  002133  70                 	db	112
   384  002134  69                 	db	105
   385  002135  65                 	db	101
   386  002136  7A                 	db	122
   387  002137  61                 	db	97
   388  002138  20                 	db	32
   389  002139  61                 	db	97
   390  00213A  20                 	db	32
   391  00213B  6C                 	db	108
   392  00213C  61                 	db	97
   393  00213D  73                 	db	115
   394  00213E  20                 	db	32
   395  00213F  31                 	db	49
   396  002140  38                 	db	56
   397  002141  3A                 	db	58
   398  002142  30                 	db	48
   399  002143  30                 	db	48
   400  002144  0D                 	db	13
   401  002145  00                 	db	0
   402                           
   403                           ;initializer for main@F3562
   404  002146  4E                 	db	78
   405  002147  6F                 	db	111
   406  002148  20                 	db	32
   407  002149  73                 	db	115
   408  00214A  65                 	db	101
   409  00214B  20                 	db	32
   410  00214C  68                 	db	104
   411  00214D  61                 	db	97
   412  00214E  20                 	db	32
   413  00214F  70                 	db	112
   414  002150  72                 	db	114
   415  002151  65                 	db	101
   416  002152  6E                 	db	110
   417  002153  64                 	db	100
   418  002154  69                 	db	105
   419  002155  64                 	db	100
   420  002156  6F                 	db	111
   421  002157  20                 	db	32
   422  002158  6E                 	db	110
   423  002159  69                 	db	105
   424  00215A  6E                 	db	110
   425  00215B  67                 	db	103
   426  00215C  75                 	db	117
   427  00215D  6E                 	db	110
   428  00215E  61                 	db	97
   429  00215F  20                 	db	32
   430  002160  62                 	db	98
   431  002161  6F                 	db	111
   432  002162  6D                 	db	109
   433  002163  62                 	db	98
   434  002164  69                 	db	105
   435  002165  6C                 	db	108
   436  002166  6C                 	db	108
   437  002167  61                 	db	97
   438  002168  0D                 	db	13
   439  002169  00                 	db	0
   440                           
   441                           ;initializer for encenderBombillas@F3601
   442  00216A  53                 	db	83
   443  00216B  65                 	db	101
   444  00216C  20                 	db	32
   445  00216D  65                 	db	101
   446  00216E  6E                 	db	110
   447  00216F  63                 	db	99
   448  002170  65                 	db	101
   449  002171  6E                 	db	110
   450  002172  64                 	db	100
   451  002173  69                 	db	105
   452  002174  6F                 	db	111
   453  002175  20                 	db	32
   454  002176  6C                 	db	108
   455  002177  61                 	db	97
   456  002178  20                 	db	32
   457  002179  62                 	db	98
   458  00217A  6F                 	db	111
   459  00217B  6D                 	db	109
   460  00217C  62                 	db	98
   461  00217D  69                 	db	105
   462  00217E  6C                 	db	108
   463  00217F  6C                 	db	108
   464  002180  61                 	db	97
   465  002181  20                 	db	32
   466  002182  35                 	db	53
   467  002183  0D                 	db	13
   468  002184  00                 	db	0
   469  0000                     _PORTCbits	set	3970
   470  0000                     _TXREG	set	4013
   471  0000                     _ADCON1	set	4033
   472  0000                     _OSCCON	set	4051
   473  0000                     _SPBRG	set	4015
   474  0000                     _RCSTAbits	set	4011
   475  0000                     _BAUDCONbits	set	4024
   476  0000                     _TXSTAbits	set	4012
   477  0000                     _TRISCbits	set	3988
   478  0000                     _PORTAbits	set	3968
   479  0000                     _TRISA	set	3986
   480  0000                     _SSPCON2bits	set	4037
   481  0000                     _SSPADD	set	4040
   482  0000                     _SSPCON2	set	4037
   483  0000                     _SSPCON1	set	4038
   484  0000                     _SSPSTAT	set	4039
   485  0000                     _SSPBUF	set	4041
   486  0000                     _SSPSTATbits	set	4039
   487  0000                     _LATD	set	3980
   488  0000                     _TRISC	set	3988
   489  0000                     _TRISD	set	3989
   490  0000                     _LATC2	set	31834
   491  0000                     _ACKEN	set	32300
   492  0000                     _ACKDT	set	32301
   493  0000                     _PEN	set	32298
   494  0000                     _RSEN	set	32297
   495  0000                     _ACKSTAT	set	32302
   496  0000                     _SSPIF	set	31987
   497  0000                     _SSPIE	set	31979
   498  0000                     _TRISB1	set	31897
   499  0000                     _TRISB0	set	31896
   500  0000                     _RCEN	set	32299
   501  0000                     _LATC1	set	31833
   502  0000                     _LATC0	set	31832
   503                           
   504                           	psect	smallconst
   505  000800                     __psmallconst:
   506                           	callstack 0
   507  000800  00                 	db	0
   508  000801                     STR_1:
   509  000801  45                 	db	69	;'E'
   510  000802  52                 	db	82	;'R'
   511  000803  52                 	db	82	;'R'
   512  000804  4F                 	db	79	;'O'
   513  000805  52                 	db	82	;'R'
   514  000806  20                 	db	32
   515  000807  48                 	db	72	;'H'
   516  000808  4F                 	db	79	;'O'
   517  000809  52                 	db	82	;'R'
   518  00080A  41                 	db	65	;'A'
   519  00080B  20                 	db	32
   520  00080C  00                 	db	0
   521  00080D                     STR_2:
   522  00080D  4E                 	db	78	;'N'
   523  00080E  4F                 	db	79	;'O'
   524  00080F  20                 	db	32
   525  000810  4E                 	db	78	;'N'
   526  000811  4F                 	db	79	;'O'
   527  000812  43                 	db	67	;'C'
   528  000813  54                 	db	84	;'T'
   529  000814  55                 	db	85	;'U'
   530  000815  52                 	db	82	;'R'
   531  000816  4E                 	db	78	;'N'
   532  000817  41                 	db	65	;'A'
   533  000818  00                 	db	0
   534  000819                     STR_17:
   535  000819  43                 	db	67	;'C'
   536  00081A  61                 	db	97	;'a'
   537  00081B  6C                 	db	108	;'l'
   538  00081C  20                 	db	32
   539  00081D  25                 	db	37
   540  00081E  78                 	db	120	;'x'
   541  00081F  2D                 	db	45
   542  000820  00                 	db	0
   543  000821                     STR_13:
   544  000821  54                 	db	84	;'T'
   545  000822  69                 	db	105	;'i'
   546  000823  6D                 	db	109	;'m'
   547  000824  3A                 	db	58	;':'
   548  000825  25                 	db	37
   549  000826  78                 	db	120	;'x'
   550  000827  3A                 	db	58	;':'
   551  000828  00                 	db	0
   552  000829                     STR_4:
   553  000829  2E                 	db	46
   554  00082A  25                 	db	37
   555  00082B  64                 	db	100	;'d'
   556  00082C  20                 	db	32
   557  00082D  00                 	db	0
   558  00082E                     STR_8:
   559  00082E  54                 	db	84	;'T'
   560  00082F  65                 	db	101	;'e'
   561  000830  6D                 	db	109	;'m'
   562  000831  70                 	db	112	;'p'
   563  000832  00                 	db	0
   564  000833                     STR_11:
   565  000833  25                 	db	37
   566  000834  78                 	db	120	;'x'
   567  000835  20                 	db	32
   568  000836  00                 	db	0
   569  000837                     STR_6:
   570  000837  2E                 	db	46
   571  000838  25                 	db	37
   572  000839  64                 	db	100	;'d'
   573  00083A  00                 	db	0
   574  00083B                     STR_23:
   575  00083B  57                 	db	87	;'W'
   576  00083C  65                 	db	101	;'e'
   577  00083D  64                 	db	100	;'d'
   578  00083E  00                 	db	0
   579  00083F                     STR_22:
   580  00083F  54                 	db	84	;'T'
   581  000840  75                 	db	117	;'u'
   582  000841  65                 	db	101	;'e'
   583  000842  00                 	db	0
   584  000843                     STR_25:
   585  000843  46                 	db	70	;'F'
   586  000844  72                 	db	114	;'r'
   587  000845  69                 	db	105	;'i'
   588  000846  00                 	db	0
   589  000847                     STR_7:
   590  000847  48                 	db	72	;'H'
   591  000848  75                 	db	117	;'u'
   592  000849  6D                 	db	109	;'m'
   593  00084A  00                 	db	0
   594  00084B                     STR_21:
   595  00084B  4D                 	db	77	;'M'
   596  00084C  6F                 	db	111	;'o'
   597  00084D  6E                 	db	110	;'n'
   598  00084E  00                 	db	0
   599  00084F                     STR_20:
   600  00084F  53                 	db	83	;'S'
   601  000850  75                 	db	117	;'u'
   602  000851  6E                 	db	110	;'n'
   603  000852  00                 	db	0
   604  000853                     STR_26:
   605  000853  53                 	db	83	;'S'
   606  000854  61                 	db	97	;'a'
   607  000855  74                 	db	116	;'t'
   608  000856  00                 	db	0
   609  000857                     STR_24:
   610  000857  54                 	db	84	;'T'
   611  000858  68                 	db	104	;'h'
   612  000859  75                 	db	117	;'u'
   613  00085A  00                 	db	0
   614  00085B                     STR_10:
   615  00085B  41                 	db	65	;'A'
   616  00085C  4D                 	db	77	;'M'
   617  00085D  00                 	db	0
   618  00085E                     STR_9:
   619  00085E  50                 	db	80	;'P'
   620  00085F  4D                 	db	77	;'M'
   621  000860  00                 	db	0
   622  000861  00                 	db	0	; dummy byte at the end
   623  0000                     
   624                           ; #config settings
   625                           
   626                           	psect	cinit
   627  00207A                     __pcinit:
   628                           	callstack 0
   629  00207A                     start_initialization:
   630                           	callstack 0
   631  00207A                     __initialization:
   632                           	callstack 0
   633                           
   634                           ; Initialize objects allocated to BANK3 (101 bytes)
   635                           ; load TBLPTR registers with __pidataBANK3
   636  00207A  0E20               	movlw	low __pidataBANK3
   637  00207C  6EF6               	movwf	tblptrl,c
   638  00207E  0E21               	movlw	high __pidataBANK3
   639  002080  6EF7               	movwf	tblptrh,c
   640  002082  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   641  002084  6EF8               	movwf	tblptru,c
   642  002086  EE03  F000         	lfsr	0,__pdataBANK3
   643  00208A  EE10 F065          	lfsr	1,101
   644  00208E                     copy_data0:
   645  00208E  0009               	tblrd		*+
   646  002090  CFF5 FFEE          	movff	tablat,postinc0
   647  002094  50E5               	movf	postdec1,w,c
   648  002096  50E1               	movf	fsr1l,w,c
   649  002098  E1FA               	bnz	copy_data0
   650                           
   651                           ; Initialize objects allocated to BANK2 (208 bytes)
   652                           ; load TBLPTR registers with __pidataBANK2
   653  00209A  0E4A               	movlw	low __pidataBANK2
   654  00209C  6EF6               	movwf	tblptrl,c
   655  00209E  0E1D               	movlw	high __pidataBANK2
   656  0020A0  6EF7               	movwf	tblptrh,c
   657  0020A2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   658  0020A4  6EF8               	movwf	tblptru,c
   659  0020A6  EE02  F000         	lfsr	0,__pdataBANK2
   660  0020AA  EE10 F0D0          	lfsr	1,208
   661  0020AE                     copy_data1:
   662  0020AE  0009               	tblrd		*+
   663  0020B0  CFF5 FFEE          	movff	tablat,postinc0
   664  0020B4  50E5               	movf	postdec1,w,c
   665  0020B6  50E1               	movf	fsr1l,w,c
   666  0020B8  E1FA               	bnz	copy_data1
   667                           
   668                           ; Initialize objects allocated to BANK1 (7 bytes)
   669                           ; load TBLPTR registers with __pidataBANK1
   670  0020BA  0ED6               	movlw	low __pidataBANK1
   671  0020BC  6EF6               	movwf	tblptrl,c
   672  0020BE  0E28               	movlw	high __pidataBANK1
   673  0020C0  6EF7               	movwf	tblptrh,c
   674  0020C2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   675  0020C4  6EF8               	movwf	tblptru,c
   676  0020C6  EE01  F0F0         	lfsr	0,__pdataBANK1
   677  0020CA  EE10 F007          	lfsr	1,7
   678  0020CE                     copy_data2:
   679  0020CE  0009               	tblrd		*+
   680  0020D0  CFF5 FFEE          	movff	tablat,postinc0
   681  0020D4  50E5               	movf	postdec1,w,c
   682  0020D6  50E1               	movf	fsr1l,w,c
   683  0020D8  E1FA               	bnz	copy_data2
   684                           
   685                           ; Initialize objects allocated to BANK0 (2 bytes)
   686                           ; load TBLPTR registers with __pidataBANK0
   687  0020DA  0EDD               	movlw	low __pidataBANK0
   688  0020DC  6EF6               	movwf	tblptrl,c
   689  0020DE  0E28               	movlw	high __pidataBANK0
   690  0020E0  6EF7               	movwf	tblptrh,c
   691  0020E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   692  0020E4  6EF8               	movwf	tblptru,c
   693  0020E6  0009               	tblrd		*+	;fetch initializer
   694  0020E8  CFF5 F0FD          	movff	tablat,__pdataBANK0
   695  0020EC  0009               	tblrd		*+	;fetch initializer
   696  0020EE  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   697                           
   698                           ; Clear objects allocated to BANK2 (32 bytes)
   699  0020F2  EE02  F0D0         	lfsr	0,__pbssBANK2
   700  0020F6  0E20               	movlw	32
   701  0020F8                     clear_0:
   702  0020F8  6AEE               	clrf	postinc0,c
   703  0020FA  06E8               	decf	wreg,f,c
   704  0020FC  E1FD               	bnz	clear_0
   705                           
   706                           ; Clear objects allocated to BANK1 (74 bytes)
   707  0020FE  EE01  F0A6         	lfsr	0,__pbssBANK1
   708  002102  0E4A               	movlw	74
   709  002104                     clear_1:
   710  002104  6AEE               	clrf	postinc0,c
   711  002106  06E8               	decf	wreg,f,c
   712  002108  E1FD               	bnz	clear_1
   713                           
   714                           ; Clear objects allocated to BANK0 (27 bytes)
   715  00210A  EE00  F0E2         	lfsr	0,__pbssBANK0
   716  00210E  0E1B               	movlw	27
   717  002110                     clear_2:
   718  002110  6AEE               	clrf	postinc0,c
   719  002112  06E8               	decf	wreg,f,c
   720  002114  E1FD               	bnz	clear_2
   721  002116                     end_of_initialization:
   722                           	callstack 0
   723  002116                     __end_of__initialization:
   724                           	callstack 0
   725  002116  0E00               	movlw	low (__Lmediumconst shr (0+16))
   726  002118  6EF8               	movwf	tblptru,c
   727  00211A  0100               	movlb	0
   728  00211C  EFBC  F00B         	goto	_main	;jump to C main() function
   729                           
   730                           	psect	bssBANK0
   731  0000E2                     __pbssBANK0:
   732                           	callstack 0
   733  0000E2                     _width:
   734                           	callstack 0
   735  0000E2                     	ds	2
   736  0000E4                     _prec:
   737                           	callstack 0
   738  0000E4                     	ds	2
   739  0000E6                     _flags:
   740                           	callstack 0
   741  0000E6                     	ds	2
   742  0000E8                     _Year:
   743                           	callstack 0
   744  0000E8                     	ds	2
   745  0000EA                     _Month:
   746                           	callstack 0
   747  0000EA                     	ds	2
   748  0000EC                     _Date:
   749                           	callstack 0
   750  0000EC                     	ds	2
   751  0000EE                     _Day:
   752                           	callstack 0
   753  0000EE                     	ds	2
   754  0000F0                     _hour:
   755                           	callstack 0
   756  0000F0                     	ds	2
   757  0000F2                     _min:
   758                           	callstack 0
   759  0000F2                     	ds	2
   760  0000F4                     _sec:
   761                           	callstack 0
   762  0000F4                     	ds	2
   763  0000F6                     _agr:
   764                           	callstack 0
   765  0000F6                     	ds	2
   766  0000F8                     _valor2:
   767                           	callstack 0
   768  0000F8                     	ds	1
   769  0000F9                     _T_Integral:
   770                           	callstack 0
   771  0000F9                     	ds	1
   772  0000FA                     _T_Decimal:
   773                           	callstack 0
   774  0000FA                     	ds	1
   775  0000FB                     _RH_Integral:
   776                           	callstack 0
   777  0000FB                     	ds	1
   778  0000FC                     _RH_Decimal:
   779                           	callstack 0
   780  0000FC                     	ds	1
   781                           
   782                           	psect	dataBANK0
   783  0000FD                     __pdataBANK0:
   784                           	callstack 0
   785  0000FD                     _AM_PM:
   786                           	callstack 0
   787  0000FD                     	ds	1
   788  0000FE                     _Clock_type:
   789                           	callstack 0
   790  0000FE                     	ds	1
   791                           
   792                           	psect	bssBANK1
   793  0001A6                     __pbssBANK1:
   794                           	callstack 0
   795  0001A6                     _nout:
   796                           	callstack 0
   797  0001A6                     	ds	2
   798  0001A8                     _acum:
   799                           	callstack 0
   800  0001A8                     	ds	2
   801  0001AA                     _year:
   802                           	callstack 0
   803  0001AA                     	ds	10
   804  0001B4                     _month:
   805                           	callstack 0
   806  0001B4                     	ds	10
   807  0001BE                     _date:
   808                           	callstack 0
   809  0001BE                     	ds	10
   810  0001C8                     _hours:
   811                           	callstack 0
   812  0001C8                     	ds	10
   813  0001D2                     _mins:
   814                           	callstack 0
   815  0001D2                     	ds	10
   816  0001DC                     _secs:
   817                           	callstack 0
   818  0001DC                     	ds	10
   819  0001E6                     _value:
   820                           	callstack 0
   821  0001E6                     	ds	10
   822                           
   823                           	psect	dataBANK1
   824  0001F0                     __pdataBANK1:
   825                           	callstack 0
   826  0001F0                     _days:
   827                           	callstack 0
   828  0001F0                     	ds	7
   829                           
   830                           	psect	bssBANK2
   831  0002D0                     __pbssBANK2:
   832                           	callstack 0
   833  0002D0                     _dbuf:
   834                           	callstack 0
   835  0002D0                     	ds	32
   836                           
   837                           	psect	dataBANK2
   838  000200                     __pdataBANK2:
   839                           	callstack 0
   840  000200                     encenderBombillas@F3598:
   841                           	callstack 0
   842  000200                     	ds	27
   843  00021B                     encenderBombillas@F3595:
   844                           	callstack 0
   845  00021B                     	ds	27
   846  000236                     encenderBombillas@F3592:
   847                           	callstack 0
   848  000236                     	ds	27
   849  000251                     encenderBombillas@F3589:
   850                           	callstack 0
   851  000251                     	ds	27
   852  00026C                     mostrarFechaHora@F3608:
   853                           	callstack 0
   854  00026C                     	ds	26
   855  000286                     offBombillas@F3584:
   856                           	callstack 0
   857  000286                     	ds	21
   858  00029B                     encenderBombillas@F3604:
   859                           	callstack 0
   860  00029B                     	ds	19
   861  0002AE                     onLEDS@F3580:
   862                           	callstack 0
   863  0002AE                     	ds	19
   864  0002C1                     offLEDS@F3574:
   865                           	callstack 0
   866  0002C1                     	ds	15
   867                           
   868                           	psect	dataBANK3
   869  000300                     __pdataBANK3:
   870                           	callstack 0
   871  000300                     main@F3565:
   872                           	callstack 0
   873  000300                     	ds	38
   874  000326                     main@F3562:
   875                           	callstack 0
   876  000326                     	ds	36
   877  00034A                     encenderBombillas@F3601:
   878                           	callstack 0
   879  00034A                     	ds	27
   880                           
   881                           	psect	cstackBANK1
   882  000100                     __pcstackBANK1:
   883                           	callstack 0
   884  000100                     encenderBombillas@buffer_TX:
   885                           	callstack 0
   886                           
   887                           ; 27 bytes @ 0x0
   888  000100                     	ds	27
   889  00011B                     encenderBombillas@buffer_TX_787:
   890                           	callstack 0
   891                           
   892                           ; 27 bytes @ 0x1B
   893  00011B                     	ds	27
   894  000136                     encenderBombillas@buffer_TX_790:
   895                           	callstack 0
   896                           
   897                           ; 27 bytes @ 0x36
   898  000136                     	ds	27
   899  000151                     encenderBombillas@buffer_TX_793:
   900                           	callstack 0
   901                           
   902                           ; 27 bytes @ 0x51
   903  000151                     	ds	27
   904  00016C                     encenderBombillas@buffer_TX_796:
   905                           	callstack 0
   906                           
   907                           ; 27 bytes @ 0x6C
   908  00016C                     	ds	27
   909  000187                     encenderBombillas@buffer_TX_799:
   910                           	callstack 0
   911                           
   912                           ; 19 bytes @ 0x87
   913  000187                     	ds	19
   914  00019A                     encenderBombillas@i:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x9A
   918  00019A                     	ds	2
   919  00019C                     encenderBombillas@i_788:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x9C
   923  00019C                     	ds	2
   924  00019E                     encenderBombillas@i_791:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x9E
   928  00019E                     	ds	2
   929  0001A0                     encenderBombillas@i_794:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xA0
   933  0001A0                     	ds	2
   934  0001A2                     encenderBombillas@i_797:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0xA2
   938  0001A2                     	ds	2
   939  0001A4                     encenderBombillas@i_800:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0xA4
   943  0001A4                     	ds	2
   944                           
   945                           	psect	cstackBANK0
   946  000060                     __pcstackBANK0:
   947                           	callstack 0
   948  000060                     ?_vfprintf:
   949                           	callstack 0
   950  000060                     vfprintf@fp:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x0
   954  000060                     	ds	2
   955  000062                     vfprintf@fmt:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x2
   959  000062                     	ds	2
   960  000064                     vfprintf@ap:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x4
   964  000064                     	ds	2
   965  000066                     ?_sprintf:
   966                           	callstack 0
   967  000066                     sprintf@s:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971  000066                     	ds	2
   972  000068                     sprintf@fmt:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x8
   976  000068                     	ds	6
   977  00006E                     sprintf@ap:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0xE
   981  00006E                     	ds	2
   982  000070                     sprintf@f:
   983                           	callstack 0
   984                           
   985                           ; 6 bytes @ 0x10
   986  000070                     	ds	6
   987  000076                     ??_mostrarFechaHora:
   988                           
   989                           ; 1 bytes @ 0x16
   990  000076                     	ds	2
   991  000078                     mostrarFechaHora@buffer_TX:
   992                           	callstack 0
   993                           
   994                           ; 26 bytes @ 0x18
   995  000078                     	ds	26
   996  000092                     mostrarFechaHora@i:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x32
  1000  000092                     	ds	2
  1001  000094                     main@buffer_TX_745:
  1002                           	callstack 0
  1003                           
  1004                           ; 38 bytes @ 0x34
  1005  000094                     	ds	38
  1006  0000BA                     main@buffer_TX:
  1007                           	callstack 0
  1008                           
  1009                           ; 36 bytes @ 0x5A
  1010  0000BA                     	ds	36
  1011  0000DE                     main@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x7E
  1015  0000DE                     	ds	2
  1016  0000E0                     main@i_746:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x80
  1020  0000E0                     	ds	2
  1021                           
  1022                           	psect	cstackCOMRAM
  1023  000001                     __pcstackCOMRAM:
  1024                           	callstack 0
  1025  000001                     ??_DHT11_Start:
  1026  000001                     ?_strlen:
  1027                           	callstack 0
  1028  000001                     ?_isupper:
  1029                           	callstack 0
  1030  000001                     ?_isalpha:
  1031                           	callstack 0
  1032  000001                     ?_islower:
  1033                           	callstack 0
  1034  000001                     ?___aodiv:
  1035                           	callstack 0
  1036  000001                     ?___aomod:
  1037                           	callstack 0
  1038  000001                     I2C_Read@flag:
  1039                           	callstack 0
  1040  000001                     I2C_Write@data:
  1041                           	callstack 0
  1042  000001                     DHT11_ReadData@i:
  1043                           	callstack 0
  1044  000001                     MSdelay@val:
  1045                           	callstack 0
  1046  000001                     isalpha@c:
  1047                           	callstack 0
  1048  000001                     isupper@c:
  1049                           	callstack 0
  1050  000001                     fputc@c:
  1051                           	callstack 0
  1052  000001                     strlen@s:
  1053                           	callstack 0
  1054  000001                     islower@c:
  1055                           	callstack 0
  1056  000001                     ___aodiv@dividend:
  1057                           	callstack 0
  1058  000001                     ___aomod@dividend:
  1059                           	callstack 0
  1060  000001                     offLEDS@buffer_TX:
  1061                           	callstack 0
  1062  000001                     onLEDS@buffer_TX:
  1063                           	callstack 0
  1064  000001                     offBombillas@buffer_TX:
  1065                           	callstack 0
  1066                           
  1067                           ; 21 bytes @ 0x0
  1068  000001                     	ds	1
  1069  000002                     I2C_Read@buffer:
  1070                           	callstack 0
  1071  000002                     I2C_Start@slave_write_address:
  1072                           	callstack 0
  1073  000002                     I2C_Repeated_Start@slave_read_address:
  1074                           	callstack 0
  1075  000002                     DHT11_ReadData@data:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x1
  1079  000002                     	ds	1
  1080  000003                     ??_isupper:
  1081  000003                     ??_isalpha:
  1082  000003                     ??_islower:
  1083  000003                     ??_RTC_Read_Clock:
  1084  000003                     ??_RTC_Read_Calendar:
  1085  000003                     MSdelay@i:
  1086                           	callstack 0
  1087  000003                     fputc@fp:
  1088                           	callstack 0
  1089  000003                     strlen@a:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x2
  1093  000003                     	ds	1
  1094  000004                     RTC_Read_Clock@read_clock_address:
  1095                           	callstack 0
  1096  000004                     RTC_Read_Calendar@read_calendar_address:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x3
  1100  000004                     	ds	1
  1101  000005                     ??_fputc:
  1102  000005                     MSdelay@j:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x4
  1106  000005                     	ds	2
  1107  000007                     ?_toupper:
  1108                           	callstack 0
  1109  000007                     LCD_Command@cmd:
  1110                           	callstack 0
  1111  000007                     LCD_Char@dat:
  1112                           	callstack 0
  1113  000007                     toupper@c:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x6
  1117  000007                     	ds	1
  1118  000008                     LCD_String@msg:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122  000008                     	ds	1
  1123  000009                     ??_toupper:
  1124  000009                     ___aodiv@divisor:
  1125                           	callstack 0
  1126  000009                     ___aomod@divisor:
  1127                           	callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x8
  1130  000009                     	ds	1
  1131  00000A                     LCD_String_xy@pos:
  1132                           	callstack 0
  1133  00000A                     fputs@s:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x9
  1137  00000A                     	ds	1
  1138  00000B                     LCD_String_xy@msg:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0xA
  1142  00000B                     	ds	1
  1143  00000C                     fputs@fp:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0xB
  1147  00000C                     	ds	1
  1148  00000D                     LCD_String_xy@row:
  1149                           	callstack 0
  1150  00000D                     _toupper$1449:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0xC
  1154  00000D                     	ds	1
  1155  00000E                     LCD_String_xy@location:
  1156                           	callstack 0
  1157  00000E                     fputs@c:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0xD
  1161  00000E                     	ds	1
  1162  00000F                     fputs@i:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xE
  1166  00000F                     	ds	1
  1167  000010                     offLEDS@i:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0xF
  1171  000010                     	ds	1
  1172  000011                     ?_pad:
  1173                           	callstack 0
  1174  000011                     ___aodiv@counter:
  1175                           	callstack 0
  1176  000011                     ___aomod@counter:
  1177                           	callstack 0
  1178  000011                     pad@fp:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x10
  1182  000011                     	ds	1
  1183  000012                     ___aodiv@sign:
  1184                           	callstack 0
  1185  000012                     ___aomod@sign:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x11
  1189  000012                     	ds	1
  1190  000013                     ?_abs:
  1191                           	callstack 0
  1192  000013                     pad@buf:
  1193                           	callstack 0
  1194  000013                     abs@a:
  1195                           	callstack 0
  1196  000013                     ___aodiv@quotient:
  1197                           	callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x12
  1200  000013                     	ds	1
  1201  000014                     onLEDS@T_Integral:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x13
  1205  000014                     	ds	1
  1206  000015                     ??_abs:
  1207  000015                     onLEDS@valor:
  1208                           	callstack 0
  1209  000015                     pad@p:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x14
  1213  000015                     	ds	1
  1214  000016                     offBombillas@i:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x15
  1218  000016                     	ds	1
  1219  000017                     ??_pad:
  1220  000017                     onLEDS@i:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x16
  1224  000017                     	ds	1
  1225  000018                     pad@i:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x17
  1229  000018                     	ds	1
  1230  000019                     
  1231                           ; 1 bytes @ 0x18
  1232  000019                     	ds	1
  1233  00001A                     pad@w:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x19
  1237  00001A                     	ds	2
  1238  00001C                     ?_dtoa:
  1239                           	callstack 0
  1240  00001C                     ?_xtoa:
  1241                           	callstack 0
  1242  00001C                     dtoa@fp:
  1243                           	callstack 0
  1244  00001C                     xtoa@fp:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x1B
  1248  00001C                     	ds	2
  1249  00001E                     dtoa@d:
  1250                           	callstack 0
  1251  00001E                     xtoa@d:
  1252                           	callstack 0
  1253                           
  1254                           ; 8 bytes @ 0x1D
  1255  00001E                     	ds	8
  1256  000026                     ??_dtoa:
  1257  000026                     xtoa@x:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x25
  1261  000026                     	ds	1
  1262  000027                     ??_xtoa:
  1263                           
  1264                           ; 1 bytes @ 0x26
  1265  000027                     	ds	7
  1266  00002E                     _dtoa$1353:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x2D
  1270  00002E                     	ds	1
  1271  00002F                     _xtoa$1364:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x2E
  1275  00002F                     	ds	1
  1276  000030                     dtoa@p:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x2F
  1280  000030                     	ds	1
  1281  000031                     _xtoa$1365:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x30
  1285  000031                     	ds	1
  1286  000032                     dtoa@w:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x31
  1290  000032                     	ds	1
  1291  000033                     xtoa@p:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x32
  1295  000033                     	ds	1
  1296  000034                     dtoa@s:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x33
  1300  000034                     	ds	1
  1301  000035                     xtoa@w:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x34
  1305  000035                     	ds	1
  1306  000036                     dtoa@n:
  1307                           	callstack 0
  1308                           
  1309                           ; 8 bytes @ 0x35
  1310  000036                     	ds	1
  1311  000037                     xtoa@n:
  1312                           	callstack 0
  1313                           
  1314                           ; 8 bytes @ 0x36
  1315  000037                     	ds	7
  1316  00003E                     dtoa@i:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x3D
  1320  00003E                     	ds	1
  1321  00003F                     xtoa@i:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x3E
  1325  00003F                     	ds	2
  1326  000041                     xtoa@c:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x40
  1330  000041                     	ds	2
  1331  000043                     ?_vfpfcnvrt:
  1332                           	callstack 0
  1333  000043                     vfpfcnvrt@fp:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x42
  1337  000043                     	ds	2
  1338  000045                     vfpfcnvrt@fmt:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x44
  1342  000045                     	ds	2
  1343  000047                     vfpfcnvrt@ap:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x46
  1347  000047                     	ds	2
  1348  000049                     ??_vfpfcnvrt:
  1349                           
  1350                           ; 1 bytes @ 0x48
  1351  000049                     	ds	4
  1352  00004D                     vfpfcnvrt@ll:
  1353                           	callstack 0
  1354                           
  1355                           ; 8 bytes @ 0x4C
  1356  00004D                     	ds	8
  1357  000055                     vfpfcnvrt@llu:
  1358                           	callstack 0
  1359                           
  1360                           ; 8 bytes @ 0x54
  1361  000055                     	ds	8
  1362  00005D                     vfpfcnvrt@c:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x5C
  1366  00005D                     	ds	1
  1367  00005E                     vfprintf@cfmt:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x5D
  1371  00005E                     	ds	2
  1372  000060                     
  1373                           ; 1 bytes @ 0x5F
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1376 ;;
  1377 ;; *************** function _main *****************
  1378 ;; Defined at:
  1379 ;;		line 106 in file "Controlador.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               2  128[BANK0 ] int 
  1384 ;;  i               2  126[BANK0 ] int 
  1385 ;;  buffer_TX      38   52[BANK0 ] unsigned char [38]
  1386 ;;  buffer_TX      36   90[BANK0 ] unsigned char [36]
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         0      78       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         0      78       0       0       0       0       0       0       0
  1400 ;;Total ram usage:       78 bytes
  1401 ;; Hardware stack levels required when called:    9
  1402 ;; This function calls:
  1403 ;;		_DHT11_CheckResponse
  1404 ;;		_DHT11_ReadData
  1405 ;;		_DHT11_Start
  1406 ;;		_I2C_Init
  1407 ;;		_LCD_Init
  1408 ;;		_LCD_String_xy
  1409 ;;		_MSdelay
  1410 ;;		_encenderBombillas
  1411 ;;		_imprimirTemHum
  1412 ;;		_mostrarFechaHora
  1413 ;;		_offBombillas
  1414 ;;		_offLEDS
  1415 ;;		_verificarHora
  1416 ;; This function is called by:
  1417 ;;		Startup code after reset
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text0
  1422  001778                     __ptext0:
  1423                           	callstack 0
  1424  001778                     _main:
  1425                           	callstack 22
  1426  001778                     
  1427                           ;Controlador.c: 107:     TRISA = 0;
  1428  001778  0E00               	movlw	0
  1429  00177A  6E92               	movwf	146,c	;volatile
  1430  00177C                     
  1431                           ;Controlador.c: 110:     PORTAbits.RA0 = 0;
  1432  00177C  9080               	bcf	128,0,c	;volatile
  1433  00177E                     
  1434                           ;Controlador.c: 111:     PORTAbits.RA1 = 0;
  1435  00177E  9280               	bcf	128,1,c	;volatile
  1436  001780                     
  1437                           ;Controlador.c: 112:     PORTAbits.RA2 = 0;
  1438  001780  9480               	bcf	128,2,c	;volatile
  1439  001782                     
  1440                           ;Controlador.c: 113:     PORTAbits.RA3 = 0;
  1441  001782  9680               	bcf	128,3,c	;volatile
  1442  001784                     
  1443                           ;Controlador.c: 114:     PORTAbits.RA4 = 0;
  1444  001784  9880               	bcf	128,4,c	;volatile
  1445  001786                     
  1446                           ;Controlador.c: 117:     TRISCbits.RC6 = 0;
  1447  001786  9C94               	bcf	148,6,c	;volatile
  1448  001788                     
  1449                           ;Controlador.c: 118:     TXSTAbits.TX9 = 0;
  1450  001788  9CAC               	bcf	172,6,c	;volatile
  1451  00178A                     
  1452                           ;Controlador.c: 119:     TXSTAbits.TXEN = 1;
  1453  00178A  8AAC               	bsf	172,5,c	;volatile
  1454  00178C                     
  1455                           ;Controlador.c: 120:     TXSTAbits.SYNC = 0;
  1456  00178C  98AC               	bcf	172,4,c	;volatile
  1457  00178E                     
  1458                           ;Controlador.c: 121:     TXSTAbits.BRGH = 0;
  1459  00178E  94AC               	bcf	172,2,c	;volatile
  1460  001790                     
  1461                           ;Controlador.c: 122:     BAUDCONbits.BRG16 = 0;
  1462  001790  96B8               	bcf	184,3,c	;volatile
  1463  001792                     
  1464                           ;Controlador.c: 123:     RCSTAbits.SPEN = 1;
  1465  001792  8EAB               	bsf	171,7,c	;volatile
  1466                           
  1467                           ;Controlador.c: 124:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1468  001794  0E0C               	movlw	12
  1469  001796  6EAF               	movwf	175,c	;volatile
  1470                           
  1471                           ;Controlador.c: 126:     OSCCON = 0x72;
  1472  001798  0E72               	movlw	114
  1473  00179A  6ED3               	movwf	211,c	;volatile
  1474                           
  1475                           ;Controlador.c: 130:     ADCON1 = 0x0F;
  1476  00179C  0E0F               	movlw	15
  1477  00179E  6EC1               	movwf	193,c	;volatile
  1478  0017A0                     l3261:
  1479                           
  1480                           ;Controlador.c: 134:         LCD_Init();
  1481  0017A0  ECCD  F013         	call	_LCD_Init	;wreg free
  1482  0017A4                     
  1483                           ;Controlador.c: 135:         I2C_Init();
  1484  0017A4  EC37  F014         	call	_I2C_Init	;wreg free
  1485  0017A8                     
  1486                           ;Controlador.c: 136:         MSdelay(10);
  1487  0017A8  0E00               	movlw	0
  1488  0017AA  6E02               	movwf	(MSdelay@val+1)^0,c
  1489  0017AC  0E0A               	movlw	10
  1490  0017AE  6E01               	movwf	MSdelay@val^0,c
  1491  0017B0  EC67  F012         	call	_MSdelay	;wreg free
  1492  0017B4                     
  1493                           ;Controlador.c: 138:         verificarHora();
  1494  0017B4  EC56  F011         	call	_verificarHora	;wreg free
  1495  0017B8                     
  1496                           ;Controlador.c: 139:         if (hour >= 18 || hour <= 6) {
  1497  0017B8  0100               	movlb	0	; () banked
  1498  0017BA  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1499  0017BC  EFEB  F00B         	goto	u3040
  1500  0017C0  51F1               	movf	(_hour+1)& (0+255),w,b
  1501  0017C2  E107               	bnz	u3041
  1502  0017C4  0E12               	movlw	18
  1503  0017C6  5DF0               	subwf	_hour& (0+255),w,b
  1504  0017C8  B0D8               	btfsc	status,0,c
  1505  0017CA  EFE9  F00B         	goto	u3041
  1506  0017CE  EFEB  F00B         	goto	u3040
  1507  0017D2                     u3041:
  1508  0017D2  EFF9  F00B         	goto	l3273
  1509  0017D6                     u3040:
  1510  0017D6                     
  1511                           ; BSR set to: 0
  1512  0017D6  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1513  0017D8  EFF9  F00B         	goto	u3050
  1514  0017DC  51F1               	movf	(_hour+1)& (0+255),w,b
  1515  0017DE  E107               	bnz	u3051
  1516  0017E0  0E07               	movlw	7
  1517  0017E2  5DF0               	subwf	_hour& (0+255),w,b
  1518  0017E4  B0D8               	btfsc	status,0,c
  1519  0017E6  EFF7  F00B         	goto	u3051
  1520  0017EA  EFF9  F00B         	goto	u3050
  1521  0017EE                     u3051:
  1522  0017EE  EF73  F00C         	goto	l3325
  1523  0017F2                     u3050:
  1524  0017F2                     l3273:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;Controlador.c: 140:             DHT11_Start();
  1528  0017F2  EC0B  F014         	call	_DHT11_Start	;wreg free
  1529  0017F6                     
  1530                           ;Controlador.c: 141:             DHT11_CheckResponse();
  1531  0017F6  ECE4  F013         	call	_DHT11_CheckResponse	;wreg free
  1532  0017FA                     
  1533                           ;Controlador.c: 144:             RH_Integral = DHT11_ReadData();
  1534  0017FA  ECE3  F011         	call	_DHT11_ReadData	;wreg free
  1535  0017FE  0100               	movlb	0	; () banked
  1536  001800  6FFB               	movwf	_RH_Integral& (0+255),b
  1537  001802                     
  1538                           ; BSR set to: 0
  1539                           ;Controlador.c: 145:             RH_Decimal = DHT11_ReadData();
  1540  001802  ECE3  F011         	call	_DHT11_ReadData	;wreg free
  1541  001806  0100               	movlb	0	; () banked
  1542  001808  6FFC               	movwf	_RH_Decimal& (0+255),b
  1543  00180A                     
  1544                           ; BSR set to: 0
  1545                           ;Controlador.c: 146:             T_Integral = DHT11_ReadData();
  1546  00180A  ECE3  F011         	call	_DHT11_ReadData	;wreg free
  1547  00180E  0100               	movlb	0	; () banked
  1548  001810  6FF9               	movwf	_T_Integral& (0+255),b
  1549  001812                     
  1550                           ; BSR set to: 0
  1551                           ;Controlador.c: 147:             T_Decimal = DHT11_ReadData();
  1552  001812  ECE3  F011         	call	_DHT11_ReadData	;wreg free
  1553  001816  0100               	movlb	0	; () banked
  1554  001818  6FFA               	movwf	_T_Decimal& (0+255),b
  1555  00181A                     
  1556                           ; BSR set to: 0
  1557                           ;Controlador.c: 149:             imprimirTemHum();
  1558  00181A  EC33  F00E         	call	_imprimirTemHum	;wreg free
  1559  00181E                     
  1560                           ;Controlador.c: 151:             char buffer_TX[] = "No se ha prendido ninguna bombilla\
      +                          r";
  1561  00181E  EE23  F026         	lfsr	2,main@F3562
  1562  001822  EE10  F0BA         	lfsr	1,main@buffer_TX
  1563  001826  0E23               	movlw	35
  1564  001828                     u3061:
  1565  001828  CFDB FFE3          	movff	plusw2,plusw1
  1566  00182C  06E8               	decf	wreg,f,c
  1567  00182E  E2FC               	bc	u3061
  1568  001830                     
  1569                           ;Controlador.c: 152:             for (int i = 0; i < 35; i++) {
  1570  001830  0E00               	movlw	0
  1571  001832  0100               	movlb	0	; () banked
  1572  001834  6FDF               	movwf	(main@i+1)& (0+255),b
  1573  001836  0E00               	movlw	0
  1574  001838  6FDE               	movwf	main@i& (0+255),b
  1575  00183A                     l282:
  1576                           
  1577                           ;Controlador.c: 154:                 while (!TXSTAbits.TRMT) {
  1578  00183A  A2AC               	btfss	172,1,c	;volatile
  1579  00183C  EF22  F00C         	goto	u3071
  1580  001840  EF24  F00C         	goto	u3070
  1581  001844                     u3071:
  1582  001844  EF1D  F00C         	goto	l282
  1583  001848                     u3070:
  1584  001848                     
  1585                           ;Controlador.c: 157:                 TXREG = buffer_TX[i];
  1586  001848  0EBA               	movlw	low main@buffer_TX
  1587  00184A  0100               	movlb	0	; () banked
  1588  00184C  25DE               	addwf	main@i& (0+255),w,b
  1589  00184E  6ED9               	movwf	fsr2l,c
  1590  001850  0E00               	movlw	high main@buffer_TX
  1591  001852  21DF               	addwfc	(main@i+1)& (0+255),w,b
  1592  001854  6EDA               	movwf	fsr2h,c
  1593  001856  50DF               	movf	indf2,w,c
  1594  001858  6EAD               	movwf	173,c	;volatile
  1595  00185A                     
  1596                           ; BSR set to: 0
  1597                           ;Controlador.c: 158:             }
  1598  00185A  4BDE               	infsnz	main@i& (0+255),f,b
  1599  00185C  2BDF               	incf	(main@i+1)& (0+255),f,b
  1600  00185E                     
  1601                           ; BSR set to: 0
  1602  00185E  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  1603  001860  EF3B  F00C         	goto	u3081
  1604  001864  51DF               	movf	(main@i+1)& (0+255),w,b
  1605  001866  E109               	bnz	u3080
  1606  001868  0E23               	movlw	35
  1607  00186A  5DDE               	subwf	main@i& (0+255),w,b
  1608  00186C  A0D8               	btfss	status,0,c
  1609  00186E  EF3B  F00C         	goto	u3081
  1610  001872  EF3D  F00C         	goto	u3080
  1611  001876                     u3081:
  1612  001876  EF1D  F00C         	goto	l282
  1613  00187A                     u3080:
  1614  00187A                     l3301:
  1615                           
  1616                           ;Controlador.c: 159:             MSdelay(1000);
  1617  00187A  0E03               	movlw	3
  1618  00187C  6E02               	movwf	(MSdelay@val+1)^0,c
  1619  00187E  0EE8               	movlw	232
  1620  001880  6E01               	movwf	MSdelay@val^0,c
  1621  001882  EC67  F012         	call	_MSdelay	;wreg free
  1622                           
  1623                           ;Controlador.c: 161:             while (agr == 0) {
  1624  001886  EF4B  F00C         	goto	l3309
  1625  00188A                     l3303:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;Controlador.c: 163:                 encenderBombillas();
  1629  00188A  EC31  F004         	call	_encenderBombillas	;wreg free
  1630  00188E                     
  1631                           ;Controlador.c: 164:                 imprimirTemHum();
  1632  00188E  EC33  F00E         	call	_imprimirTemHum	;wreg free
  1633  001892  EF3D  F00C         	goto	l3301
  1634  001896                     l3309:
  1635                           
  1636                           ;Controlador.c: 161:             while (agr == 0) {
  1637  001896  0100               	movlb	0	; () banked
  1638  001898  51F6               	movf	_agr& (0+255),w,b
  1639  00189A  11F7               	iorwf	(_agr+1)& (0+255),w,b
  1640  00189C  B4D8               	btfsc	status,2,c
  1641  00189E  EF53  F00C         	goto	u3091
  1642  0018A2  EF55  F00C         	goto	u3090
  1643  0018A6                     u3091:
  1644  0018A6  EF45  F00C         	goto	l3303
  1645  0018AA                     u3090:
  1646  0018AA                     
  1647                           ; BSR set to: 0
  1648                           ;Controlador.c: 168:             mostrarFechaHora();
  1649  0018AA  ECFE  F005         	call	_mostrarFechaHora	;wreg free
  1650  0018AE                     
  1651                           ;Controlador.c: 169:             MSdelay(1000);
  1652  0018AE  0E03               	movlw	3
  1653  0018B0  6E02               	movwf	(MSdelay@val+1)^0,c
  1654  0018B2  0EE8               	movlw	232
  1655  0018B4  6E01               	movwf	MSdelay@val^0,c
  1656  0018B6  EC67  F012         	call	_MSdelay	;wreg free
  1657  0018BA                     
  1658                           ;Controlador.c: 170:             agr = 0;
  1659  0018BA  0E00               	movlw	0
  1660  0018BC  0100               	movlb	0	; () banked
  1661  0018BE  6FF7               	movwf	(_agr+1)& (0+255),b
  1662  0018C0  0E00               	movlw	0
  1663  0018C2  6FF6               	movwf	_agr& (0+255),b
  1664  0018C4                     
  1665                           ; BSR set to: 0
  1666                           ;Controlador.c: 171:             acum = 0;
  1667  0018C4  0E00               	movlw	0
  1668  0018C6  0101               	movlb	1	; () banked
  1669  0018C8  6FA9               	movwf	(_acum+1)& (0+255),b
  1670  0018CA  0E00               	movlw	0
  1671  0018CC  6FA8               	movwf	_acum& (0+255),b
  1672  0018CE                     
  1673                           ; BSR set to: 1
  1674                           ;Controlador.c: 172:             offBombillas();
  1675  0018CE  ECC3  F010         	call	_offBombillas	;wreg free
  1676  0018D2                     
  1677                           ;Controlador.c: 173:             offLEDS();
  1678  0018D2  EC26  F011         	call	_offLEDS	;wreg free
  1679  0018D6                     
  1680                           ;Controlador.c: 174:             MSdelay(2000);
  1681  0018D6  0E07               	movlw	7
  1682  0018D8  6E02               	movwf	(MSdelay@val+1)^0,c
  1683  0018DA  0ED0               	movlw	208
  1684  0018DC  6E01               	movwf	MSdelay@val^0,c
  1685  0018DE  EC67  F012         	call	_MSdelay	;wreg free
  1686                           
  1687                           ;Controlador.c: 176:         } else {
  1688  0018E2  EFB3  F00C         	goto	l3341
  1689  0018E6                     l3325:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;Controlador.c: 177:             LCD_String_xy(0, 0, "ERROR HORA ");
  1693  0018E6  0E00               	movlw	0
  1694  0018E8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1695  0018EA  0E01               	movlw	low STR_1
  1696  0018EC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1697  0018EE  0E08               	movlw	high STR_1
  1698  0018F0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1699  0018F2  0E00               	movlw	0
  1700  0018F4  ECF1  F012         	call	_LCD_String_xy
  1701                           
  1702                           ;Controlador.c: 178:             LCD_String_xy(1, 0, "NO NOCTURNA");
  1703  0018F8  0E00               	movlw	0
  1704  0018FA  6E0A               	movwf	LCD_String_xy@pos^0,c
  1705  0018FC  0E0D               	movlw	low STR_2
  1706  0018FE  6E0B               	movwf	LCD_String_xy@msg^0,c
  1707  001900  0E08               	movlw	high STR_2
  1708  001902  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1709  001904  0E01               	movlw	1
  1710  001906  ECF1  F012         	call	_LCD_String_xy
  1711  00190A                     
  1712                           ;Controlador.c: 179:             char buffer_TX[] = "La hora nocturna empieza a las 18:0
      +                          0\r";
  1713  00190A  EE23  F000         	lfsr	2,main@F3565
  1714  00190E  EE10  F094         	lfsr	1,main@buffer_TX_745
  1715  001912  0E25               	movlw	37
  1716  001914                     u3101:
  1717  001914  CFDB FFE3          	movff	plusw2,plusw1
  1718  001918  06E8               	decf	wreg,f,c
  1719  00191A  E2FC               	bc	u3101
  1720  00191C                     
  1721                           ;Controlador.c: 180:             for (int i = 0; i < 37; i++) {
  1722  00191C  0E00               	movlw	0
  1723  00191E  0100               	movlb	0	; () banked
  1724  001920  6FE1               	movwf	(main@i_746+1)& (0+255),b
  1725  001922  0E00               	movlw	0
  1726  001924  6FE0               	movwf	main@i_746& (0+255),b
  1727  001926                     l293:
  1728                           
  1729                           ;Controlador.c: 182:                 while (!TXSTAbits.TRMT) {
  1730  001926  A2AC               	btfss	172,1,c	;volatile
  1731  001928  EF98  F00C         	goto	u3111
  1732  00192C  EF9A  F00C         	goto	u3110
  1733  001930                     u3111:
  1734  001930  EF93  F00C         	goto	l293
  1735  001934                     u3110:
  1736  001934                     
  1737                           ;Controlador.c: 185:                 TXREG = buffer_TX[i];
  1738  001934  0E94               	movlw	low main@buffer_TX_745
  1739  001936  0100               	movlb	0	; () banked
  1740  001938  25E0               	addwf	main@i_746& (0+255),w,b
  1741  00193A  6ED9               	movwf	fsr2l,c
  1742  00193C  0E00               	movlw	high main@buffer_TX_745
  1743  00193E  21E1               	addwfc	(main@i_746+1)& (0+255),w,b
  1744  001940  6EDA               	movwf	fsr2h,c
  1745  001942  50DF               	movf	indf2,w,c
  1746  001944  6EAD               	movwf	173,c	;volatile
  1747  001946                     
  1748                           ; BSR set to: 0
  1749                           ;Controlador.c: 186:             }
  1750  001946  4BE0               	infsnz	main@i_746& (0+255),f,b
  1751  001948  2BE1               	incf	(main@i_746+1)& (0+255),f,b
  1752  00194A                     
  1753                           ; BSR set to: 0
  1754  00194A  BFE1               	btfsc	(main@i_746+1)& (0+255),7,b
  1755  00194C  EFB1  F00C         	goto	u3121
  1756  001950  51E1               	movf	(main@i_746+1)& (0+255),w,b
  1757  001952  E109               	bnz	u3120
  1758  001954  0E25               	movlw	37
  1759  001956  5DE0               	subwf	main@i_746& (0+255),w,b
  1760  001958  A0D8               	btfss	status,0,c
  1761  00195A  EFB1  F00C         	goto	u3121
  1762  00195E  EFB3  F00C         	goto	u3120
  1763  001962                     u3121:
  1764  001962  EF93  F00C         	goto	l293
  1765  001966                     u3120:
  1766  001966                     l3341:
  1767                           
  1768                           ;Controlador.c: 188:         MSdelay(2000);
  1769  001966  0E07               	movlw	7
  1770  001968  6E02               	movwf	(MSdelay@val+1)^0,c
  1771  00196A  0ED0               	movlw	208
  1772  00196C  6E01               	movwf	MSdelay@val^0,c
  1773  00196E  EC67  F012         	call	_MSdelay	;wreg free
  1774  001972  EFD0  F00B         	goto	l3261
  1775  001976  EF00  F000         	goto	start
  1776  00197A                     __end_of_main:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _verificarHora *****************
  1780 ;; Defined at:
  1781 ;;		line 469 in file "Controlador.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    4
  1802 ;; This function calls:
  1803 ;;		_I2C_Stop
  1804 ;;		_LCD_String_xy
  1805 ;;		_MSdelay
  1806 ;;		_RTC_Read_Clock
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text1
  1813  0022AC                     __ptext1:
  1814                           	callstack 0
  1815  0022AC                     _verificarHora:
  1816                           	callstack 26
  1817  0022AC                     
  1818                           ;Controlador.c: 470:     RTC_Read_Clock(0);
  1819  0022AC  0E00               	movlw	0
  1820  0022AE  EC8C  F012         	call	_RTC_Read_Clock
  1821  0022B2                     
  1822                           ;Controlador.c: 471:     I2C_Stop();
  1823  0022B2  EC44  F014         	call	_I2C_Stop	;wreg free
  1824  0022B6                     
  1825                           ;Controlador.c: 472:     MSdelay(1000);
  1826  0022B6  0E03               	movlw	3
  1827  0022B8  6E02               	movwf	(MSdelay@val+1)^0,c
  1828  0022BA  0EE8               	movlw	232
  1829  0022BC  6E01               	movwf	MSdelay@val^0,c
  1830  0022BE  EC67  F012         	call	_MSdelay	;wreg free
  1831  0022C2                     
  1832                           ;Controlador.c: 473:     if (hour & (1 << Clock_type)) {
  1833  0022C2  0100               	movlb	0	; () banked
  1834  0022C4  ADF0               	btfss	_hour& (0+255),6,b
  1835  0022C6  EF67  F011         	goto	u2521
  1836  0022CA  EF69  F011         	goto	u2520
  1837  0022CE                     u2521:
  1838  0022CE  EF84  F011         	goto	l450
  1839  0022D2                     u2520:
  1840  0022D2                     
  1841                           ; BSR set to: 0
  1842                           ;Controlador.c: 474:         if (hour & (1 << AM_PM)) {
  1843  0022D2  ABF0               	btfss	_hour& (0+255),5,b
  1844  0022D4  EF6E  F011         	goto	u2531
  1845  0022D8  EF70  F011         	goto	u2530
  1846  0022DC                     u2531:
  1847  0022DC  EF7B  F011         	goto	l2897
  1848  0022E0                     u2530:
  1849  0022E0                     
  1850                           ; BSR set to: 0
  1851                           ;Controlador.c: 475:             LCD_String_xy(1, 14, "PM");
  1852  0022E0  0E0E               	movlw	14
  1853  0022E2  6E0A               	movwf	LCD_String_xy@pos^0,c
  1854  0022E4  0E5E               	movlw	low STR_9
  1855  0022E6  6E0B               	movwf	LCD_String_xy@msg^0,c
  1856  0022E8  0E08               	movlw	high STR_9
  1857  0022EA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1858  0022EC  0E01               	movlw	1
  1859  0022EE  ECF1  F012         	call	_LCD_String_xy
  1860                           
  1861                           ;Controlador.c: 476:         } else {
  1862  0022F2  EF84  F011         	goto	l450
  1863  0022F6                     l2897:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;Controlador.c: 477:             LCD_String_xy(1, 14, "AM");
  1867  0022F6  0E0E               	movlw	14
  1868  0022F8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1869  0022FA  0E5B               	movlw	low STR_10
  1870  0022FC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1871  0022FE  0E08               	movlw	high STR_10
  1872  002300  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1873  002302  0E01               	movlw	1
  1874  002304  ECF1  F012         	call	_LCD_String_xy
  1875  002308                     l450:
  1876  002308  0012               	return		;funcret
  1877  00230A                     __end_of_verificarHora:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _offLEDS *****************
  1881 ;; Defined at:
  1882 ;;		line 224 in file "Controlador.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  i               2   15[COMRAM] int 
  1887 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0
  1898 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1900 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1901 ;;Total ram usage:       17 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text2
  1911  00224C                     __ptext2:
  1912                           	callstack 0
  1913  00224C                     _offLEDS:
  1914                           	callstack 30
  1915  00224C                     
  1916                           ;Controlador.c: 225:     PORTCbits.RC5 = 0;
  1917  00224C  9A82               	bcf	130,5,c	;volatile
  1918                           
  1919                           ;Controlador.c: 226:     PORTCbits.RC4 = 0;
  1920  00224E  9882               	bcf	130,4,c	;volatile
  1921                           
  1922                           ;Controlador.c: 227:     PORTAbits.RA5 = 0;
  1923  002250  9A80               	bcf	128,5,c	;volatile
  1924  002252                     
  1925                           ;Controlador.c: 229:     char buffer_TX[] = "Apagando LEDS\r";
  1926  002252  EE22  F0C1         	lfsr	2,offLEDS@F3574
  1927  002256  EE10  F001         	lfsr	1,offLEDS@buffer_TX
  1928  00225A  0E0E               	movlw	14
  1929  00225C                     u2981:
  1930  00225C  CFDB FFE3          	movff	plusw2,plusw1
  1931  002260  06E8               	decf	wreg,f,c
  1932  002262  E2FC               	bc	u2981
  1933  002264                     
  1934                           ;Controlador.c: 230:     for (int i = 0; i < 15; i++) {
  1935  002264  0E00               	movlw	0
  1936  002266  6E11               	movwf	(offLEDS@i+1)^0,c
  1937  002268  0E00               	movlw	0
  1938  00226A  6E10               	movwf	offLEDS@i^0,c
  1939  00226C                     l333:
  1940                           
  1941                           ;Controlador.c: 232:         while (!TXSTAbits.TRMT) {
  1942  00226C  A2AC               	btfss	172,1,c	;volatile
  1943  00226E  EF3B  F011         	goto	u2991
  1944  002272  EF3D  F011         	goto	u2990
  1945  002276                     u2991:
  1946  002276  EF36  F011         	goto	l333
  1947  00227A                     u2990:
  1948  00227A                     
  1949                           ;Controlador.c: 235:         TXREG = buffer_TX[i];
  1950  00227A  0E01               	movlw	low offLEDS@buffer_TX
  1951  00227C  2410               	addwf	offLEDS@i^0,w,c
  1952  00227E  6ED9               	movwf	fsr2l,c
  1953  002280  0E00               	movlw	high offLEDS@buffer_TX
  1954  002282  2011               	addwfc	(offLEDS@i+1)^0,w,c
  1955  002284  6EDA               	movwf	fsr2h,c
  1956  002286  50DF               	movf	indf2,w,c
  1957  002288  6EAD               	movwf	173,c	;volatile
  1958  00228A                     
  1959                           ;Controlador.c: 236:     }
  1960  00228A  4A10               	infsnz	offLEDS@i^0,f,c
  1961  00228C  2A11               	incf	(offLEDS@i+1)^0,f,c
  1962  00228E  BE11               	btfsc	(offLEDS@i+1)^0,7,c
  1963  002290  EF53  F011         	goto	u3001
  1964  002294  5011               	movf	(offLEDS@i+1)^0,w,c
  1965  002296  E109               	bnz	u3000
  1966  002298  0E0F               	movlw	15
  1967  00229A  5C10               	subwf	offLEDS@i^0,w,c
  1968  00229C  A0D8               	btfss	status,0,c
  1969  00229E  EF53  F011         	goto	u3001
  1970  0022A2  EF55  F011         	goto	u3000
  1971  0022A6                     u3001:
  1972  0022A6  EF36  F011         	goto	l333
  1973  0022AA                     u3000:
  1974  0022AA  0012               	return		;funcret
  1975  0022AC                     __end_of_offLEDS:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _offBombillas *****************
  1979 ;; Defined at:
  1980 ;;		line 267 in file "Controlador.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  i               2   21[COMRAM] int 
  1985 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0
  1996 ;;      Locals:        23       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:        23       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:       23 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text3
  2009  002186                     __ptext3:
  2010                           	callstack 0
  2011  002186                     _offBombillas:
  2012                           	callstack 30
  2013  002186                     
  2014                           ;Controlador.c: 268:     PORTAbits.RA0 = 0;
  2015  002186  9080               	bcf	128,0,c	;volatile
  2016                           
  2017                           ;Controlador.c: 269:     PORTAbits.RA1 = 0;
  2018  002188  9280               	bcf	128,1,c	;volatile
  2019                           
  2020                           ;Controlador.c: 270:     PORTAbits.RA2 = 0;
  2021  00218A  9480               	bcf	128,2,c	;volatile
  2022                           
  2023                           ;Controlador.c: 271:     PORTAbits.RA3 = 0;
  2024  00218C  9680               	bcf	128,3,c	;volatile
  2025                           
  2026                           ;Controlador.c: 272:     PORTAbits.RA4 = 0;
  2027  00218E  9880               	bcf	128,4,c	;volatile
  2028  002190                     
  2029                           ;Controlador.c: 273:     char buffer_TX[] = "Bombillas Apagadas \r";
  2030  002190  EE22  F086         	lfsr	2,offBombillas@F3584
  2031  002194  EE10  F001         	lfsr	1,offBombillas@buffer_TX
  2032  002198  0E14               	movlw	20
  2033  00219A                     u2951:
  2034  00219A  CFDB FFE3          	movff	plusw2,plusw1
  2035  00219E  06E8               	decf	wreg,f,c
  2036  0021A0  E2FC               	bc	u2951
  2037  0021A2                     
  2038                           ;Controlador.c: 274:     for (int i = 0; i < 20; i++) {
  2039  0021A2  0E00               	movlw	0
  2040  0021A4  6E17               	movwf	(offBombillas@i+1)^0,c
  2041  0021A6  0E00               	movlw	0
  2042  0021A8  6E16               	movwf	offBombillas@i^0,c
  2043  0021AA                     l357:
  2044                           
  2045                           ;Controlador.c: 276:         while (!TXSTAbits.TRMT) {
  2046  0021AA  A2AC               	btfss	172,1,c	;volatile
  2047  0021AC  EFDA  F010         	goto	u2961
  2048  0021B0  EFDC  F010         	goto	u2960
  2049  0021B4                     u2961:
  2050  0021B4  EFD5  F010         	goto	l357
  2051  0021B8                     u2960:
  2052  0021B8                     
  2053                           ;Controlador.c: 279:         TXREG = buffer_TX[i];
  2054  0021B8  0E01               	movlw	low offBombillas@buffer_TX
  2055  0021BA  2416               	addwf	offBombillas@i^0,w,c
  2056  0021BC  6ED9               	movwf	fsr2l,c
  2057  0021BE  0E00               	movlw	high offBombillas@buffer_TX
  2058  0021C0  2017               	addwfc	(offBombillas@i+1)^0,w,c
  2059  0021C2  6EDA               	movwf	fsr2h,c
  2060  0021C4  50DF               	movf	indf2,w,c
  2061  0021C6  6EAD               	movwf	173,c	;volatile
  2062  0021C8                     
  2063                           ;Controlador.c: 280:     }
  2064  0021C8  4A16               	infsnz	offBombillas@i^0,f,c
  2065  0021CA  2A17               	incf	(offBombillas@i+1)^0,f,c
  2066  0021CC  BE17               	btfsc	(offBombillas@i+1)^0,7,c
  2067  0021CE  EFF2  F010         	goto	u2971
  2068  0021D2  5017               	movf	(offBombillas@i+1)^0,w,c
  2069  0021D4  E109               	bnz	u2970
  2070  0021D6  0E14               	movlw	20
  2071  0021D8  5C16               	subwf	offBombillas@i^0,w,c
  2072  0021DA  A0D8               	btfss	status,0,c
  2073  0021DC  EFF2  F010         	goto	u2971
  2074  0021E0  EFF4  F010         	goto	u2970
  2075  0021E4                     u2971:
  2076  0021E4  EFD5  F010         	goto	l357
  2077  0021E8                     u2970:
  2078  0021E8  0012               	return		;funcret
  2079  0021EA                     __end_of_offBombillas:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _mostrarFechaHora *****************
  2083 ;; Defined at:
  2084 ;;		line 391 in file "Controlador.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  i               2   50[BANK0 ] int 
  2089 ;;  buffer_TX      26   24[BANK0 ] unsigned char [26]
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0
  2100 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2101 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2102 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2103 ;;Total ram usage:       30 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    8
  2106 ;; This function calls:
  2107 ;;		_I2C_Stop
  2108 ;;		_LCD_Init
  2109 ;;		_LCD_String
  2110 ;;		_LCD_String_xy
  2111 ;;		_MSdelay
  2112 ;;		_RTC_Read_Calendar
  2113 ;;		_RTC_Read_Clock
  2114 ;;		_sprintf
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text4
  2121  000BFC                     __ptext4:
  2122                           	callstack 0
  2123  000BFC                     _mostrarFechaHora:
  2124                           	callstack 22
  2125  000BFC                     
  2126                           ;Controlador.c: 392:     LCD_Init();
  2127  000BFC  ECCD  F013         	call	_LCD_Init	;wreg free
  2128                           
  2129                           ;Controlador.c: 393:     RTC_Read_Clock(0);
  2130  000C00  0E00               	movlw	0
  2131  000C02  EC8C  F012         	call	_RTC_Read_Clock
  2132  000C06                     
  2133                           ;Controlador.c: 394:     I2C_Stop();
  2134  000C06  EC44  F014         	call	_I2C_Stop	;wreg free
  2135  000C0A                     
  2136                           ;Controlador.c: 395:     MSdelay(1000);
  2137  000C0A  0E03               	movlw	3
  2138  000C0C  6E02               	movwf	(MSdelay@val+1)^0,c
  2139  000C0E  0EE8               	movlw	232
  2140  000C10  6E01               	movwf	MSdelay@val^0,c
  2141  000C12  EC67  F012         	call	_MSdelay	;wreg free
  2142  000C16                     
  2143                           ;Controlador.c: 396:     if (hour & (1 << Clock_type)) {
  2144  000C16  0100               	movlb	0	; () banked
  2145  000C18  ADF0               	btfss	_hour& (0+255),6,b
  2146  000C1A  EF11  F006         	goto	u2901
  2147  000C1E  EF13  F006         	goto	u2900
  2148  000C22                     u2901:
  2149  000C22  EF76  F006         	goto	l3127
  2150  000C26                     u2900:
  2151  000C26                     
  2152                           ; BSR set to: 0
  2153                           ;Controlador.c: 398:         if (hour & (1 << AM_PM)) {
  2154  000C26  ABF0               	btfss	_hour& (0+255),5,b
  2155  000C28  EF18  F006         	goto	u2911
  2156  000C2C  EF1A  F006         	goto	u2910
  2157  000C30                     u2911:
  2158  000C30  EF25  F006         	goto	l3111
  2159  000C34                     u2910:
  2160  000C34                     
  2161                           ; BSR set to: 0
  2162                           ;Controlador.c: 399:             LCD_String_xy(1, 14, "PM");
  2163  000C34  0E0E               	movlw	14
  2164  000C36  6E0A               	movwf	LCD_String_xy@pos^0,c
  2165  000C38  0E5E               	movlw	low STR_9
  2166  000C3A  6E0B               	movwf	LCD_String_xy@msg^0,c
  2167  000C3C  0E08               	movlw	high STR_9
  2168  000C3E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2169  000C40  0E01               	movlw	1
  2170  000C42  ECF1  F012         	call	_LCD_String_xy
  2171                           
  2172                           ;Controlador.c: 400:         } else {
  2173  000C46  EF2E  F006         	goto	l3113
  2174  000C4A                     l3111:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;Controlador.c: 401:             LCD_String_xy(1, 14, "AM");
  2178  000C4A  0E0E               	movlw	14
  2179  000C4C  6E0A               	movwf	LCD_String_xy@pos^0,c
  2180  000C4E  0E5B               	movlw	low STR_10
  2181  000C50  6E0B               	movwf	LCD_String_xy@msg^0,c
  2182  000C52  0E08               	movlw	high STR_10
  2183  000C54  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2184  000C56  0E01               	movlw	1
  2185  000C58  ECF1  F012         	call	_LCD_String_xy
  2186  000C5C                     l3113:
  2187                           
  2188                           ;Controlador.c: 404:         hour = hour & (0x1f);
  2189  000C5C  0E1F               	movlw	31
  2190  000C5E  0100               	movlb	0	; () banked
  2191  000C60  15F0               	andwf	_hour& (0+255),w,b
  2192  000C62  6FF0               	movwf	_hour& (0+255),b
  2193  000C64  6BF1               	clrf	(_hour+1)& (0+255),b
  2194  000C66                     
  2195                           ; BSR set to: 0
  2196                           ;Controlador.c: 405:         sprintf(secs, "%x ", sec);
  2197  000C66  0EDC               	movlw	low _secs
  2198  000C68  6F66               	movwf	sprintf@s& (0+255),b
  2199  000C6A  0E01               	movlw	high _secs
  2200  000C6C  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2201  000C6E  0E33               	movlw	low STR_11
  2202  000C70  6F68               	movwf	sprintf@fmt& (0+255),b
  2203  000C72  0E08               	movlw	high STR_11
  2204  000C74  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2205  000C76  C0F4  F06A         	movff	_sec,?_sprintf+4
  2206  000C7A  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2207  000C7E  EC3E  F012         	call	_sprintf	;wreg free
  2208  000C82                     
  2209                           ;Controlador.c: 406:         sprintf(mins, "%x:", min);
  2210  000C82  0ED2               	movlw	low _mins
  2211  000C84  0100               	movlb	0	; () banked
  2212  000C86  6F66               	movwf	sprintf@s& (0+255),b
  2213  000C88  0E01               	movlw	high _mins
  2214  000C8A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2215  000C8C  0E25               	movlw	low (STR_13+4)
  2216  000C8E  6F68               	movwf	sprintf@fmt& (0+255),b
  2217  000C90  0E08               	movlw	high (STR_13+4)
  2218  000C92  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2219  000C94  C0F2  F06A         	movff	_min,?_sprintf+4
  2220  000C98  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2221  000C9C  EC3E  F012         	call	_sprintf	;wreg free
  2222  000CA0                     
  2223                           ;Controlador.c: 407:         sprintf(hours, "Tim:%x:", hour);
  2224  000CA0  0EC8               	movlw	low _hours
  2225  000CA2  0100               	movlb	0	; () banked
  2226  000CA4  6F66               	movwf	sprintf@s& (0+255),b
  2227  000CA6  0E01               	movlw	high _hours
  2228  000CA8  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2229  000CAA  0E21               	movlw	low STR_13
  2230  000CAC  6F68               	movwf	sprintf@fmt& (0+255),b
  2231  000CAE  0E08               	movlw	high STR_13
  2232  000CB0  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2233  000CB2  C0F0  F06A         	movff	_hour,?_sprintf+4
  2234  000CB6  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2235  000CBA  EC3E  F012         	call	_sprintf	;wreg free
  2236  000CBE                     
  2237                           ;Controlador.c: 408:         LCD_String_xy(0, 0, hours);
  2238  000CBE  0E00               	movlw	0
  2239  000CC0  6E0A               	movwf	LCD_String_xy@pos^0,c
  2240  000CC2  0EC8               	movlw	low _hours
  2241  000CC4  6E0B               	movwf	LCD_String_xy@msg^0,c
  2242  000CC6  0E01               	movlw	high _hours
  2243  000CC8  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2244  000CCA  0E00               	movlw	0
  2245  000CCC  ECF1  F012         	call	_LCD_String_xy
  2246  000CD0                     l3123:
  2247                           
  2248                           ;Controlador.c: 409:         LCD_String(mins);
  2249  000CD0  0ED2               	movlw	low _mins
  2250  000CD2  6E08               	movwf	LCD_String@msg^0,c
  2251  000CD4  0E01               	movlw	high _mins
  2252  000CD6  6E09               	movwf	(LCD_String@msg+1)^0,c
  2253  000CD8  ECB4  F011         	call	_LCD_String	;wreg free
  2254  000CDC                     
  2255                           ;Controlador.c: 410:         LCD_String(secs);
  2256  000CDC  0EDC               	movlw	low _secs
  2257  000CDE  6E08               	movwf	LCD_String@msg^0,c
  2258  000CE0  0E01               	movlw	high _secs
  2259  000CE2  6E09               	movwf	(LCD_String@msg+1)^0,c
  2260  000CE4  ECB4  F011         	call	_LCD_String	;wreg free
  2261                           
  2262                           ;Controlador.c: 411:     } else {
  2263  000CE8  EFB1  F006         	goto	l3141
  2264  000CEC                     l3127:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;Controlador.c: 413:         hour = hour & (0x3f);
  2268  000CEC  0E3F               	movlw	63
  2269  000CEE  15F0               	andwf	_hour& (0+255),w,b
  2270  000CF0  6FF0               	movwf	_hour& (0+255),b
  2271  000CF2  6BF1               	clrf	(_hour+1)& (0+255),b
  2272  000CF4                     
  2273                           ; BSR set to: 0
  2274                           ;Controlador.c: 414:         sprintf(secs, "%x ", sec);
  2275  000CF4  0EDC               	movlw	low _secs
  2276  000CF6  6F66               	movwf	sprintf@s& (0+255),b
  2277  000CF8  0E01               	movlw	high _secs
  2278  000CFA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2279  000CFC  0E33               	movlw	low STR_11
  2280  000CFE  6F68               	movwf	sprintf@fmt& (0+255),b
  2281  000D00  0E08               	movlw	high STR_11
  2282  000D02  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2283  000D04  C0F4  F06A         	movff	_sec,?_sprintf+4
  2284  000D08  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2285  000D0C  EC3E  F012         	call	_sprintf	;wreg free
  2286  000D10                     
  2287                           ;Controlador.c: 415:         sprintf(mins, "%x:", min);
  2288  000D10  0ED2               	movlw	low _mins
  2289  000D12  0100               	movlb	0	; () banked
  2290  000D14  6F66               	movwf	sprintf@s& (0+255),b
  2291  000D16  0E01               	movlw	high _mins
  2292  000D18  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2293  000D1A  0E25               	movlw	low (STR_13+4)
  2294  000D1C  6F68               	movwf	sprintf@fmt& (0+255),b
  2295  000D1E  0E08               	movlw	high (STR_13+4)
  2296  000D20  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2297  000D22  C0F2  F06A         	movff	_min,?_sprintf+4
  2298  000D26  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2299  000D2A  EC3E  F012         	call	_sprintf	;wreg free
  2300  000D2E                     
  2301                           ;Controlador.c: 416:         sprintf(hours, "Tim:%x:", hour);
  2302  000D2E  0EC8               	movlw	low _hours
  2303  000D30  0100               	movlb	0	; () banked
  2304  000D32  6F66               	movwf	sprintf@s& (0+255),b
  2305  000D34  0E01               	movlw	high _hours
  2306  000D36  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2307  000D38  0E21               	movlw	low STR_13
  2308  000D3A  6F68               	movwf	sprintf@fmt& (0+255),b
  2309  000D3C  0E08               	movlw	high STR_13
  2310  000D3E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2311  000D40  C0F0  F06A         	movff	_hour,?_sprintf+4
  2312  000D44  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2313  000D48  EC3E  F012         	call	_sprintf	;wreg free
  2314  000D4C                     
  2315                           ;Controlador.c: 417:         LCD_String_xy(0, 0, hours);
  2316  000D4C  0E00               	movlw	0
  2317  000D4E  6E0A               	movwf	LCD_String_xy@pos^0,c
  2318  000D50  0EC8               	movlw	low _hours
  2319  000D52  6E0B               	movwf	LCD_String_xy@msg^0,c
  2320  000D54  0E01               	movlw	high _hours
  2321  000D56  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2322  000D58  0E00               	movlw	0
  2323  000D5A  ECF1  F012         	call	_LCD_String_xy
  2324  000D5E  EF68  F006         	goto	l3123
  2325  000D62                     l3141:
  2326                           
  2327                           ;Controlador.c: 422:     RTC_Read_Calendar(3);
  2328  000D62  0E03               	movlw	3
  2329  000D64  EC11  F012         	call	_RTC_Read_Calendar
  2330  000D68                     
  2331                           ;Controlador.c: 423:     I2C_Stop();
  2332  000D68  EC44  F014         	call	_I2C_Stop	;wreg free
  2333  000D6C                     
  2334                           ;Controlador.c: 424:     sprintf(date, "Cal %x-", Date);
  2335  000D6C  0EBE               	movlw	low _date
  2336  000D6E  0100               	movlb	0	; () banked
  2337  000D70  6F66               	movwf	sprintf@s& (0+255),b
  2338  000D72  0E01               	movlw	high _date
  2339  000D74  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2340  000D76  0E19               	movlw	low STR_17
  2341  000D78  6F68               	movwf	sprintf@fmt& (0+255),b
  2342  000D7A  0E08               	movlw	high STR_17
  2343  000D7C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2344  000D7E  C0EC  F06A         	movff	_Date,?_sprintf+4
  2345  000D82  C0ED  F06B         	movff	_Date+1,?_sprintf+5
  2346  000D86  EC3E  F012         	call	_sprintf	;wreg free
  2347  000D8A                     
  2348                           ;Controlador.c: 425:     sprintf(month, "%x-", Month);
  2349  000D8A  0EB4               	movlw	low _month
  2350  000D8C  0100               	movlb	0	; () banked
  2351  000D8E  6F66               	movwf	sprintf@s& (0+255),b
  2352  000D90  0E01               	movlw	high _month
  2353  000D92  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2354  000D94  0E1D               	movlw	low (STR_17+4)
  2355  000D96  6F68               	movwf	sprintf@fmt& (0+255),b
  2356  000D98  0E08               	movlw	high (STR_17+4)
  2357  000D9A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2358  000D9C  C0EA  F06A         	movff	_Month,?_sprintf+4
  2359  000DA0  C0EB  F06B         	movff	_Month+1,?_sprintf+5
  2360  000DA4  EC3E  F012         	call	_sprintf	;wreg free
  2361  000DA8                     
  2362                           ;Controlador.c: 426:     sprintf(year, "%x ", Year);
  2363  000DA8  0EAA               	movlw	low _year
  2364  000DAA  0100               	movlb	0	; () banked
  2365  000DAC  6F66               	movwf	sprintf@s& (0+255),b
  2366  000DAE  0E01               	movlw	high _year
  2367  000DB0  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2368  000DB2  0E33               	movlw	low STR_11
  2369  000DB4  6F68               	movwf	sprintf@fmt& (0+255),b
  2370  000DB6  0E08               	movlw	high STR_11
  2371  000DB8  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2372  000DBA  C0E8  F06A         	movff	_Year,?_sprintf+4
  2373  000DBE  C0E9  F06B         	movff	_Year+1,?_sprintf+5
  2374  000DC2  EC3E  F012         	call	_sprintf	;wreg free
  2375  000DC6                     
  2376                           ;Controlador.c: 427:     LCD_String_xy(2, 0, date);
  2377  000DC6  0E00               	movlw	0
  2378  000DC8  6E0A               	movwf	LCD_String_xy@pos^0,c
  2379  000DCA  0EBE               	movlw	low _date
  2380  000DCC  6E0B               	movwf	LCD_String_xy@msg^0,c
  2381  000DCE  0E01               	movlw	high _date
  2382  000DD0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2383  000DD2  0E02               	movlw	2
  2384  000DD4  ECF1  F012         	call	_LCD_String_xy
  2385  000DD8                     
  2386                           ;Controlador.c: 428:     LCD_String(month);
  2387  000DD8  0EB4               	movlw	low _month
  2388  000DDA  6E08               	movwf	LCD_String@msg^0,c
  2389  000DDC  0E01               	movlw	high _month
  2390  000DDE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2391  000DE0  ECB4  F011         	call	_LCD_String	;wreg free
  2392  000DE4                     
  2393                           ;Controlador.c: 429:     LCD_String(year);
  2394  000DE4  0EAA               	movlw	low _year
  2395  000DE6  6E08               	movwf	LCD_String@msg^0,c
  2396  000DE8  0E01               	movlw	high _year
  2397  000DEA  6E09               	movwf	(LCD_String@msg+1)^0,c
  2398  000DEC  ECB4  F011         	call	_LCD_String	;wreg free
  2399                           
  2400                           ;Controlador.c: 432:     switch (days[Day]) {
  2401  000DF0  EF32  F007         	goto	l3173
  2402  000DF4                     l3157:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;Controlador.c: 434:             LCD_String("Sun");
  2406  000DF4  0E4F               	movlw	low STR_20
  2407  000DF6  6E08               	movwf	LCD_String@msg^0,c
  2408  000DF8  0E08               	movlw	high STR_20
  2409  000DFA  6E09               	movwf	(LCD_String@msg+1)^0,c
  2410  000DFC  ECB4  F011         	call	_LCD_String	;wreg free
  2411                           
  2412                           ;Controlador.c: 435:             break;
  2413  000E00  EF62  F007         	goto	l3175
  2414  000E04                     l3159:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;Controlador.c: 437:             LCD_String("Mon");
  2418  000E04  0E4B               	movlw	low STR_21
  2419  000E06  6E08               	movwf	LCD_String@msg^0,c
  2420  000E08  0E08               	movlw	high STR_21
  2421  000E0A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2422  000E0C  ECB4  F011         	call	_LCD_String	;wreg free
  2423                           
  2424                           ;Controlador.c: 438:             break;
  2425  000E10  EF62  F007         	goto	l3175
  2426  000E14                     l3161:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;Controlador.c: 440:             LCD_String("Tue");
  2430  000E14  0E3F               	movlw	low STR_22
  2431  000E16  6E08               	movwf	LCD_String@msg^0,c
  2432  000E18  0E08               	movlw	high STR_22
  2433  000E1A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2434  000E1C  ECB4  F011         	call	_LCD_String	;wreg free
  2435                           
  2436                           ;Controlador.c: 441:             break;
  2437  000E20  EF62  F007         	goto	l3175
  2438  000E24                     l3163:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;Controlador.c: 443:             LCD_String("Wed");
  2442  000E24  0E3B               	movlw	low STR_23
  2443  000E26  6E08               	movwf	LCD_String@msg^0,c
  2444  000E28  0E08               	movlw	high STR_23
  2445  000E2A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2446  000E2C  ECB4  F011         	call	_LCD_String	;wreg free
  2447                           
  2448                           ;Controlador.c: 444:             break;
  2449  000E30  EF62  F007         	goto	l3175
  2450  000E34                     l3165:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;Controlador.c: 446:             LCD_String("Thu");
  2454  000E34  0E57               	movlw	low STR_24
  2455  000E36  6E08               	movwf	LCD_String@msg^0,c
  2456  000E38  0E08               	movlw	high STR_24
  2457  000E3A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2458  000E3C  ECB4  F011         	call	_LCD_String	;wreg free
  2459                           
  2460                           ;Controlador.c: 447:             break;
  2461  000E40  EF62  F007         	goto	l3175
  2462  000E44                     l3167:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;Controlador.c: 449:             LCD_String("Fri");
  2466  000E44  0E43               	movlw	low STR_25
  2467  000E46  6E08               	movwf	LCD_String@msg^0,c
  2468  000E48  0E08               	movlw	high STR_25
  2469  000E4A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2470  000E4C  ECB4  F011         	call	_LCD_String	;wreg free
  2471                           
  2472                           ;Controlador.c: 450:             break;
  2473  000E50  EF62  F007         	goto	l3175
  2474  000E54                     l3169:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;Controlador.c: 452:             LCD_String("Sat");
  2478  000E54  0E53               	movlw	low STR_26
  2479  000E56  6E08               	movwf	LCD_String@msg^0,c
  2480  000E58  0E08               	movlw	high STR_26
  2481  000E5A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2482  000E5C  ECB4  F011         	call	_LCD_String	;wreg free
  2483                           
  2484                           ;Controlador.c: 453:             break;
  2485  000E60  EF62  F007         	goto	l3175
  2486  000E64                     l3173:
  2487  000E64  0EF0               	movlw	low _days
  2488  000E66  0100               	movlb	0	; () banked
  2489  000E68  25EE               	addwf	_Day& (0+255),w,b
  2490  000E6A  6ED9               	movwf	fsr2l,c
  2491  000E6C  0E01               	movlw	high _days
  2492  000E6E  21EF               	addwfc	(_Day+1)& (0+255),w,b
  2493  000E70  6EDA               	movwf	fsr2h,c
  2494  000E72  50DF               	movf	indf2,w,c
  2495  000E74  6F76               	movwf	??_mostrarFechaHora& (0+255),b
  2496  000E76  6B77               	clrf	(??_mostrarFechaHora+1)& (0+255),b
  2497                           
  2498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2499                           ; Switch size 1, requested type "simple"
  2500                           ; Number of cases is 1, Range of values is 0 to 0
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte            4     3 (average)
  2504                           ;	Chosen strategy is simple_byte
  2505  000E78  5177               	movf	(??_mostrarFechaHora+1)& (0+255),w,b
  2506  000E7A  0A00               	xorlw	0	; case 0
  2507  000E7C  B4D8               	btfsc	status,2,c
  2508  000E7E  EF43  F007         	goto	l3363
  2509  000E82  EF62  F007         	goto	l3175
  2510  000E86                     l3363:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 7, Range of values is 70 to 116
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           22    12 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  000E86  5176               	movf	??_mostrarFechaHora& (0+255),w,b
  2520  000E88  0A46               	xorlw	70	; case 70
  2521  000E8A  B4D8               	btfsc	status,2,c
  2522  000E8C  EF22  F007         	goto	l3167
  2523  000E90  0A0B               	xorlw	11	; case 77
  2524  000E92  B4D8               	btfsc	status,2,c
  2525  000E94  EF02  F007         	goto	l3159
  2526  000E98  0A1E               	xorlw	30	; case 83
  2527  000E9A  B4D8               	btfsc	status,2,c
  2528  000E9C  EFFA  F006         	goto	l3157
  2529  000EA0  0A07               	xorlw	7	; case 84
  2530  000EA2  B4D8               	btfsc	status,2,c
  2531  000EA4  EF0A  F007         	goto	l3161
  2532  000EA8  0A03               	xorlw	3	; case 87
  2533  000EAA  B4D8               	btfsc	status,2,c
  2534  000EAC  EF12  F007         	goto	l3163
  2535  000EB0  0A24               	xorlw	36	; case 115
  2536  000EB2  B4D8               	btfsc	status,2,c
  2537  000EB4  EF2A  F007         	goto	l3169
  2538  000EB8  0A07               	xorlw	7	; case 116
  2539  000EBA  B4D8               	btfsc	status,2,c
  2540  000EBC  EF1A  F007         	goto	l3165
  2541  000EC0  EF62  F007         	goto	l3175
  2542  000EC4                     l3175:
  2543                           
  2544                           ;Controlador.c: 458:     char buffer_TX[] = "Registrando Hora y Fecha\r";
  2545  000EC4  EE22  F06C         	lfsr	2,mostrarFechaHora@F3608
  2546  000EC8  EE10  F078         	lfsr	1,mostrarFechaHora@buffer_TX
  2547  000ECC  0E19               	movlw	25
  2548  000ECE                     u2921:
  2549  000ECE  CFDB FFE3          	movff	plusw2,plusw1
  2550  000ED2  06E8               	decf	wreg,f,c
  2551  000ED4  E2FC               	bc	u2921
  2552  000ED6                     
  2553                           ;Controlador.c: 459:     for (int i = 0; i < 25; i++) {
  2554  000ED6  0E00               	movlw	0
  2555  000ED8  0100               	movlb	0	; () banked
  2556  000EDA  6F93               	movwf	(mostrarFechaHora@i+1)& (0+255),b
  2557  000EDC  0E00               	movlw	0
  2558  000EDE  6F92               	movwf	mostrarFechaHora@i& (0+255),b
  2559  000EE0                     l441:
  2560                           
  2561                           ;Controlador.c: 461:         while (!TXSTAbits.TRMT) {
  2562  000EE0  A2AC               	btfss	172,1,c	;volatile
  2563  000EE2  EF75  F007         	goto	u2931
  2564  000EE6  EF77  F007         	goto	u2930
  2565  000EEA                     u2931:
  2566  000EEA  EF70  F007         	goto	l441
  2567  000EEE                     u2930:
  2568  000EEE                     
  2569                           ;Controlador.c: 464:         TXREG = buffer_TX[i];
  2570  000EEE  0E78               	movlw	low mostrarFechaHora@buffer_TX
  2571  000EF0  0100               	movlb	0	; () banked
  2572  000EF2  2592               	addwf	mostrarFechaHora@i& (0+255),w,b
  2573  000EF4  6ED9               	movwf	fsr2l,c
  2574  000EF6  0E00               	movlw	high mostrarFechaHora@buffer_TX
  2575  000EF8  2193               	addwfc	(mostrarFechaHora@i+1)& (0+255),w,b
  2576  000EFA  6EDA               	movwf	fsr2h,c
  2577  000EFC  50DF               	movf	indf2,w,c
  2578  000EFE  6EAD               	movwf	173,c	;volatile
  2579  000F00                     
  2580                           ; BSR set to: 0
  2581                           ;Controlador.c: 465:     }
  2582  000F00  4B92               	infsnz	mostrarFechaHora@i& (0+255),f,b
  2583  000F02  2B93               	incf	(mostrarFechaHora@i+1)& (0+255),f,b
  2584  000F04                     
  2585                           ; BSR set to: 0
  2586  000F04  BF93               	btfsc	(mostrarFechaHora@i+1)& (0+255),7,b
  2587  000F06  EF8E  F007         	goto	u2941
  2588  000F0A  5193               	movf	(mostrarFechaHora@i+1)& (0+255),w,b
  2589  000F0C  E109               	bnz	u2940
  2590  000F0E  0E19               	movlw	25
  2591  000F10  5D92               	subwf	mostrarFechaHora@i& (0+255),w,b
  2592  000F12  A0D8               	btfss	status,0,c
  2593  000F14  EF8E  F007         	goto	u2941
  2594  000F18  EF90  F007         	goto	u2940
  2595  000F1C                     u2941:
  2596  000F1C  EF70  F007         	goto	l441
  2597  000F20                     u2940:
  2598  000F20                     
  2599                           ; BSR set to: 0
  2600  000F20  0012               	return		;funcret
  2601  000F22                     __end_of_mostrarFechaHora:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _RTC_Read_Clock *****************
  2605 ;; Defined at:
  2606 ;;		line 84 in file "Controlador.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  read_clock_a    1    wreg     unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0
  2621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2622 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2623 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    3
  2627 ;; This function calls:
  2628 ;;		_I2C_Read
  2629 ;;		_I2C_Repeated_Start
  2630 ;;		_I2C_Start
  2631 ;;		_I2C_Write
  2632 ;; This function is called by:
  2633 ;;		_mostrarFechaHora
  2634 ;;		_verificarHora
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text5
  2639  002518                     __ptext5:
  2640                           	callstack 0
  2641  002518                     _RTC_Read_Clock:
  2642                           	callstack 26
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;incstack = 0
  2646                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2647  002518  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2648  00251A                     
  2649                           ;Controlador.c: 85:     I2C_Start(0xD0);
  2650  00251A  0ED0               	movlw	208
  2651  00251C  EC9F  F013         	call	_I2C_Start
  2652                           
  2653                           ;Controlador.c: 86:     I2C_Write(read_clock_address);
  2654  002520  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2655  002522  ECFA  F013         	call	_I2C_Write
  2656                           
  2657                           ;Controlador.c: 87:     I2C_Repeated_Start(0xD1);
  2658  002526  0ED1               	movlw	209
  2659  002528  ECB6  F013         	call	_I2C_Repeated_Start
  2660  00252C                     
  2661                           ;Controlador.c: 88:     sec = I2C_Read(0);
  2662  00252C  0E00               	movlw	0
  2663  00252E  EC2F  F013         	call	_I2C_Read
  2664  002532  6E03               	movwf	??_RTC_Read_Clock^0,c
  2665  002534  5003               	movf	??_RTC_Read_Clock^0,w,c
  2666  002536  0100               	movlb	0	; () banked
  2667  002538  6FF4               	movwf	_sec& (0+255),b
  2668  00253A  6BF5               	clrf	(_sec+1)& (0+255),b
  2669  00253C                     
  2670                           ; BSR set to: 0
  2671                           ;Controlador.c: 89:     min = I2C_Read(0);
  2672  00253C  0E00               	movlw	0
  2673  00253E  EC2F  F013         	call	_I2C_Read
  2674  002542  6E03               	movwf	??_RTC_Read_Clock^0,c
  2675  002544  5003               	movf	??_RTC_Read_Clock^0,w,c
  2676  002546  0100               	movlb	0	; () banked
  2677  002548  6FF2               	movwf	_min& (0+255),b
  2678  00254A  6BF3               	clrf	(_min+1)& (0+255),b
  2679  00254C                     
  2680                           ; BSR set to: 0
  2681                           ;Controlador.c: 90:     hour = I2C_Read(1);
  2682  00254C  0E01               	movlw	1
  2683  00254E  EC2F  F013         	call	_I2C_Read
  2684  002552  6E03               	movwf	??_RTC_Read_Clock^0,c
  2685  002554  5003               	movf	??_RTC_Read_Clock^0,w,c
  2686  002556  0100               	movlb	0	; () banked
  2687  002558  6FF0               	movwf	_hour& (0+255),b
  2688  00255A  6BF1               	clrf	(_hour+1)& (0+255),b
  2689  00255C                     
  2690                           ; BSR set to: 0
  2691  00255C  0012               	return		;funcret
  2692  00255E                     __end_of_RTC_Read_Clock:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _RTC_Read_Calendar *****************
  2696 ;; Defined at:
  2697 ;;		line 94 in file "Controlador.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  read_calenda    1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        2 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    3
  2718 ;; This function calls:
  2719 ;;		_I2C_Read
  2720 ;;		_I2C_Repeated_Start
  2721 ;;		_I2C_Start
  2722 ;;		_I2C_Stop
  2723 ;;		_I2C_Write
  2724 ;; This function is called by:
  2725 ;;		_mostrarFechaHora
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text6
  2730  002422                     __ptext6:
  2731                           	callstack 0
  2732  002422                     _RTC_Read_Calendar:
  2733                           	callstack 26
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;incstack = 0
  2737                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2738  002422  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2739  002424                     
  2740                           ;Controlador.c: 95:     I2C_Start(0xD0);
  2741  002424  0ED0               	movlw	208
  2742  002426  EC9F  F013         	call	_I2C_Start
  2743                           
  2744                           ;Controlador.c: 96:     I2C_Write(read_calendar_address);
  2745  00242A  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2746  00242C  ECFA  F013         	call	_I2C_Write
  2747                           
  2748                           ;Controlador.c: 97:     I2C_Repeated_Start(0xD1);
  2749  002430  0ED1               	movlw	209
  2750  002432  ECB6  F013         	call	_I2C_Repeated_Start
  2751  002436                     
  2752                           ;Controlador.c: 98:     Day = I2C_Read(0);
  2753  002436  0E00               	movlw	0
  2754  002438  EC2F  F013         	call	_I2C_Read
  2755  00243C  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2756  00243E  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2757  002440  0100               	movlb	0	; () banked
  2758  002442  6FEE               	movwf	_Day& (0+255),b
  2759  002444  6BEF               	clrf	(_Day+1)& (0+255),b
  2760  002446                     
  2761                           ; BSR set to: 0
  2762                           ;Controlador.c: 99:     Date = I2C_Read(0);
  2763  002446  0E00               	movlw	0
  2764  002448  EC2F  F013         	call	_I2C_Read
  2765  00244C  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2766  00244E  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2767  002450  0100               	movlb	0	; () banked
  2768  002452  6FEC               	movwf	_Date& (0+255),b
  2769  002454  6BED               	clrf	(_Date+1)& (0+255),b
  2770  002456                     
  2771                           ; BSR set to: 0
  2772                           ;Controlador.c: 100:     Month = I2C_Read(0);
  2773  002456  0E00               	movlw	0
  2774  002458  EC2F  F013         	call	_I2C_Read
  2775  00245C  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2776  00245E  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2777  002460  0100               	movlb	0	; () banked
  2778  002462  6FEA               	movwf	_Month& (0+255),b
  2779  002464  6BEB               	clrf	(_Month+1)& (0+255),b
  2780  002466                     
  2781                           ; BSR set to: 0
  2782                           ;Controlador.c: 101:     Year = I2C_Read(1);
  2783  002466  0E01               	movlw	1
  2784  002468  EC2F  F013         	call	_I2C_Read
  2785  00246C  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2786  00246E  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2787  002470  0100               	movlb	0	; () banked
  2788  002472  6FE8               	movwf	_Year& (0+255),b
  2789  002474  6BE9               	clrf	(_Year+1)& (0+255),b
  2790  002476                     
  2791                           ; BSR set to: 0
  2792                           ;Controlador.c: 102:     I2C_Stop();
  2793  002476  EC44  F014         	call	_I2C_Stop	;wreg free
  2794  00247A  0012               	return		;funcret
  2795  00247C                     __end_of_RTC_Read_Calendar:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _I2C_Stop *****************
  2799 ;; Defined at:
  2800 ;;		line 140 in file "./I2C_Master_File.h"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      unsigned char 
  2807 ;; Registers used:
  2808 ;;		wreg
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_RTC_Read_Calendar
  2824 ;;		_mostrarFechaHora
  2825 ;;		_verificarHora
  2826 ;;		_I2C_Start_Wait
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text7
  2831  002888                     __ptext7:
  2832                           	callstack 0
  2833  002888                     _I2C_Stop:
  2834                           	callstack 29
  2835  002888                     
  2836                           ;./I2C_Master_File.h: 142:     PEN = 1;
  2837  002888  84C5               	bsf	4037,2,c	;volatile
  2838  00288A                     l194:
  2839  00288A  B4C5               	btfsc	4037,2,c	;volatile
  2840  00288C  EF4A  F014         	goto	u2391
  2841  002890  EF4C  F014         	goto	u2390
  2842  002894                     u2391:
  2843  002894  EF45  F014         	goto	l194
  2844  002898                     u2390:
  2845  002898                     
  2846                           ;./I2C_Master_File.h: 144:     if(!SSPSTATbits.P);
  2847  002898  50C7               	movf	199,w,c	;volatile
  2848  00289A  0012               	return		;funcret
  2849  00289C                     __end_of_I2C_Stop:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _I2C_Start *****************
  2853 ;; Defined at:
  2854 ;;		line 115 in file "./I2C_Master_File.h"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  slave_write_    1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      unsigned char 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2872 ;;Total ram usage:        1 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    2
  2875 ;; This function calls:
  2876 ;;		_I2C_Write
  2877 ;; This function is called by:
  2878 ;;		_RTC_Read_Clock
  2879 ;;		_RTC_Read_Calendar
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text8
  2884  00273E                     __ptext8:
  2885                           	callstack 0
  2886  00273E                     _I2C_Start:
  2887                           	callstack 26
  2888                           
  2889                           ;incstack = 0
  2890                           ;I2C_Start@slave_write_address stored from wreg
  2891  00273E  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2892  002740                     
  2893                           ;./I2C_Master_File.h: 115: char I2C_Start(char slave_write_address);./I2C_Master_File.h:
      +                           116: {;./I2C_Master_File.h: 117:     SSPCON2bits.SEN=1;
  2894  002740  80C5               	bsf	197,0,c	;volatile
  2895  002742                     l178:
  2896  002742  B0C5               	btfsc	197,0,c	;volatile
  2897  002744  EFA6  F013         	goto	u2401
  2898  002748  EFA8  F013         	goto	u2400
  2899  00274C                     u2401:
  2900  00274C  EFA1  F013         	goto	l178
  2901  002750                     u2400:
  2902  002750                     
  2903                           ;./I2C_Master_File.h: 119:  SSPIF=0;
  2904  002750  969E               	bcf	3998,3,c	;volatile
  2905                           
  2906                           ;./I2C_Master_File.h: 120:     if(!SSPSTATbits.S)
  2907  002752  B6C7               	btfsc	199,3,c	;volatile
  2908  002754  EFAE  F013         	goto	u2411
  2909  002758  EFB0  F013         	goto	u2410
  2910  00275C                     u2411:
  2911  00275C  EFB2  F013         	goto	l2769
  2912  002760                     u2410:
  2913  002760  EFB5  F013         	goto	l182
  2914  002764                     l2769:
  2915                           
  2916                           ;./I2C_Master_File.h: 122:     return (I2C_Write(slave_write_address));;	Return value of
      +                           _I2C_Start is never used
  2917  002764  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2918  002766  ECFA  F013         	call	_I2C_Write
  2919  00276A                     l182:
  2920  00276A  0012               	return		;funcret
  2921  00276C                     __end_of_I2C_Start:
  2922                           	callstack 0
  2923                           
  2924 ;; *************** function _I2C_Repeated_Start *****************
  2925 ;; Defined at:
  2926 ;;		line 126 in file "./I2C_Master_File.h"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  slave_read_a    1    wreg     unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      unsigned char 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        1 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    2
  2947 ;; This function calls:
  2948 ;;		_I2C_Write
  2949 ;; This function is called by:
  2950 ;;		_RTC_Read_Clock
  2951 ;;		_RTC_Read_Calendar
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text9
  2956  00276C                     __ptext9:
  2957                           	callstack 0
  2958  00276C                     _I2C_Repeated_Start:
  2959                           	callstack 26
  2960                           
  2961                           ;incstack = 0
  2962                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2963  00276C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2964  00276E                     
  2965                           ;./I2C_Master_File.h: 126: char I2C_Repeated_Start(char slave_read_address);./I2C_Master
      +                          _File.h: 127: {;./I2C_Master_File.h: 128:     RSEN = 1;
  2966  00276E  82C5               	bsf	4037,1,c	;volatile
  2967  002770                     l185:
  2968  002770  B2C5               	btfsc	4037,1,c	;volatile
  2969  002772  EFBD  F013         	goto	u2421
  2970  002776  EFBF  F013         	goto	u2420
  2971  00277A                     u2421:
  2972  00277A  EFB8  F013         	goto	l185
  2973  00277E                     u2420:
  2974  00277E                     
  2975                           ;./I2C_Master_File.h: 130:     SSPIF = 0;
  2976  00277E  969E               	bcf	3998,3,c	;volatile
  2977                           
  2978                           ;./I2C_Master_File.h: 131:  if(!SSPSTATbits.S)
  2979  002780  B6C7               	btfsc	199,3,c	;volatile
  2980  002782  EFC5  F013         	goto	u2431
  2981  002786  EFC7  F013         	goto	u2430
  2982  00278A                     u2431:
  2983  00278A  EFC9  F013         	goto	l2777
  2984  00278E                     u2430:
  2985  00278E  EFCC  F013         	goto	l189
  2986  002792                     l2777:
  2987                           
  2988                           ;./I2C_Master_File.h: 133:     I2C_Write(slave_read_address);
  2989  002792  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2990  002794  ECFA  F013         	call	_I2C_Write
  2991  002798                     l189:
  2992  002798  0012               	return		;funcret
  2993  00279A                     __end_of_I2C_Repeated_Start:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _I2C_Write *****************
  2997 ;; Defined at:
  2998 ;;		line 148 in file "./I2C_Master_File.h"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  data            1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  data            1    0[COMRAM] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      unsigned char 
  3005 ;; Registers used:
  3006 ;;		wreg, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    1
  3019 ;; This function calls:
  3020 ;;		_I2C_Ready
  3021 ;; This function is called by:
  3022 ;;		_I2C_Start
  3023 ;;		_I2C_Repeated_Start
  3024 ;;		_RTC_Read_Clock
  3025 ;;		_RTC_Read_Calendar
  3026 ;;		_I2C_Start_Wait
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text10
  3031  0027F4                     __ptext10:
  3032                           	callstack 0
  3033  0027F4                     _I2C_Write:
  3034                           	callstack 27
  3035                           
  3036                           ;incstack = 0
  3037                           ;I2C_Write@data stored from wreg
  3038  0027F4  6E01               	movwf	I2C_Write@data^0,c
  3039  0027F6                     
  3040                           ;./I2C_Master_File.h: 148: char I2C_Write(unsigned char data);./I2C_Master_File.h: 149: 
      +                          {;./I2C_Master_File.h: 150:       SSPBUF = data;
  3041  0027F6  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3042  0027FA                     
  3043                           ;./I2C_Master_File.h: 151:       I2C_Ready();
  3044  0027FA  EC62  F014         	call	_I2C_Ready	;wreg free
  3045  0027FE                     
  3046                           ;./I2C_Master_File.h: 152:       if (ACKSTAT)
  3047  0027FE  ACC5               	btfss	4037,6,c	;volatile
  3048  002800  EF04  F014         	goto	u2271
  3049  002804  EF06  F014         	goto	u2270
  3050  002808                     u2271:
  3051  002808  EF09  F014         	goto	l2671
  3052  00280C                     u2270:
  3053  00280C                     
  3054                           ;./I2C_Master_File.h: 153:         return 1;
  3055  00280C  0E01               	movlw	1
  3056  00280E  EF0A  F014         	goto	l202
  3057  002812                     l2671:
  3058                           
  3059                           ;./I2C_Master_File.h: 155:         return 2;
  3060  002812  0E02               	movlw	2
  3061  002814                     l202:
  3062  002814  0012               	return		;funcret
  3063  002816                     __end_of_I2C_Write:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _I2C_Read *****************
  3067 ;; Defined at:
  3068 ;;		line 59 in file "./I2C_Master_File.h"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  flag            1    wreg     unsigned char 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  flag            1    0[COMRAM] unsigned char 
  3073 ;;  buffer          1    1[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      unsigned char 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0
  3084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3087 ;;Total ram usage:        2 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    1
  3090 ;; This function calls:
  3091 ;;		_I2C_Ack
  3092 ;;		_I2C_Nack
  3093 ;;		_I2C_Ready
  3094 ;; This function is called by:
  3095 ;;		_RTC_Read_Clock
  3096 ;;		_RTC_Read_Calendar
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text11
  3101  00265E                     __ptext11:
  3102                           	callstack 0
  3103  00265E                     _I2C_Read:
  3104                           	callstack 27
  3105                           
  3106                           ;incstack = 0
  3107                           ;I2C_Read@flag stored from wreg
  3108  00265E  6E01               	movwf	I2C_Read@flag^0,c
  3109  002660                     
  3110                           ;./I2C_Master_File.h: 59: char I2C_Read(char flag);./I2C_Master_File.h: 61: {;./I2C_Mast
      +                          er_File.h: 62:         char buffer;;./I2C_Master_File.h: 63:         RCEN = 1;
  3111  002660  86C5               	bsf	4037,3,c	;volatile
  3112  002662                     l150:
  3113  002662  A0C7               	btfss	199,0,c	;volatile
  3114  002664  EF36  F013         	goto	u2371
  3115  002668  EF38  F013         	goto	u2370
  3116  00266C                     u2371:
  3117  00266C  EF31  F013         	goto	l150
  3118  002670                     u2370:
  3119  002670                     
  3120                           ;./I2C_Master_File.h: 66:         buffer = SSPBUF;
  3121  002670  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3122  002674                     
  3123                           ;./I2C_Master_File.h: 68:         if(flag==0)
  3124  002674  5001               	movf	I2C_Read@flag^0,w,c
  3125  002676  A4D8               	btfss	status,2,c
  3126  002678  EF40  F013         	goto	u2381
  3127  00267C  EF42  F013         	goto	u2380
  3128  002680                     u2381:
  3129  002680  EF46  F013         	goto	l2757
  3130  002684                     u2380:
  3131  002684                     
  3132                           ;./I2C_Master_File.h: 69:             I2C_Ack();
  3133  002684  EC58  F014         	call	_I2C_Ack	;wreg free
  3134  002688  EF48  F013         	goto	l154
  3135  00268C                     l2757:
  3136                           
  3137                           ;./I2C_Master_File.h: 71:             I2C_Nack();
  3138  00268C  EC4E  F014         	call	_I2C_Nack	;wreg free
  3139  002690                     l154:
  3140                           
  3141                           ;./I2C_Master_File.h: 72:         I2C_Ready();
  3142  002690  EC62  F014         	call	_I2C_Ready	;wreg free
  3143  002694                     
  3144                           ;./I2C_Master_File.h: 73:         return(buffer);
  3145  002694  5002               	movf	I2C_Read@buffer^0,w,c
  3146  002696  0012               	return		;funcret
  3147  002698                     __end_of_I2C_Read:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _I2C_Ready *****************
  3151 ;; Defined at:
  3152 ;;		line 90 in file "./I2C_Master_File.h"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		None
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_I2C_Read
  3176 ;;		_I2C_Write
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text12
  3181  0028C4                     __ptext12:
  3182                           	callstack 0
  3183  0028C4                     _I2C_Ready:
  3184                           	callstack 27
  3185  0028C4                     l161:
  3186  0028C4  A69E               	btfss	3998,3,c	;volatile
  3187  0028C6  EF67  F014         	goto	u1921
  3188  0028CA  EF69  F014         	goto	u1920
  3189  0028CE                     u1921:
  3190  0028CE  EF62  F014         	goto	l161
  3191  0028D2                     u1920:
  3192  0028D2                     
  3193                           ;./I2C_Master_File.h: 93:     SSPIF=0;
  3194  0028D2  969E               	bcf	3998,3,c	;volatile
  3195  0028D4  0012               	return		;funcret
  3196  0028D6                     __end_of_I2C_Ready:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _I2C_Nack *****************
  3200 ;; Defined at:
  3201 ;;		line 165 in file "./I2C_Master_File.h"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		None
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_I2C_Read
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text13
  3229  00289C                     __ptext13:
  3230                           	callstack 0
  3231  00289C                     _I2C_Nack:
  3232                           	callstack 27
  3233  00289C                     
  3234                           ;./I2C_Master_File.h: 167:     ACKDT=1;
  3235  00289C  8AC5               	bsf	4037,5,c	;volatile
  3236                           
  3237                           ;./I2C_Master_File.h: 168:  ACKEN=1;
  3238  00289E  88C5               	bsf	4037,4,c	;volatile
  3239  0028A0                     l212:
  3240  0028A0  B8C5               	btfsc	4037,4,c	;volatile
  3241  0028A2  EF55  F014         	goto	u2261
  3242  0028A6  EF57  F014         	goto	u2260
  3243  0028AA                     u2261:
  3244  0028AA  EF50  F014         	goto	l212
  3245  0028AE                     u2260:
  3246  0028AE  0012               	return		;funcret
  3247  0028B0                     __end_of_I2C_Nack:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _I2C_Ack *****************
  3251 ;; Defined at:
  3252 ;;		line 158 in file "./I2C_Master_File.h"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		None
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_I2C_Read
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text14
  3280  0028B0                     __ptext14:
  3281                           	callstack 0
  3282  0028B0                     _I2C_Ack:
  3283                           	callstack 27
  3284  0028B0                     
  3285                           ;./I2C_Master_File.h: 160:     ACKDT=0;
  3286  0028B0  9AC5               	bcf	4037,5,c	;volatile
  3287                           
  3288                           ;./I2C_Master_File.h: 161:  ACKEN=1;
  3289  0028B2  88C5               	bsf	4037,4,c	;volatile
  3290  0028B4                     l206:
  3291  0028B4  B8C5               	btfsc	4037,4,c	;volatile
  3292  0028B6  EF5F  F014         	goto	u2251
  3293  0028BA  EF61  F014         	goto	u2250
  3294  0028BE                     u2251:
  3295  0028BE  EF5A  F014         	goto	l206
  3296  0028C2                     u2250:
  3297  0028C2  0012               	return		;funcret
  3298  0028C4                     __end_of_I2C_Ack:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _LCD_Init *****************
  3302 ;; Defined at:
  3303 ;;		line 37 in file "LCD_16x2.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    2
  3324 ;; This function calls:
  3325 ;;		_LCD_Command
  3326 ;;		_MSdelay
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;;		_mostrarFechaHora
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text15
  3334  00279A                     __ptext15:
  3335                           	callstack 0
  3336  00279A                     _LCD_Init:
  3337                           	callstack 27
  3338  00279A                     
  3339                           ;LCD_16x2.c: 39:     TRISD = 0x00;
  3340  00279A  0E00               	movlw	0
  3341  00279C  6E95               	movwf	149,c	;volatile
  3342                           
  3343                           ;LCD_16x2.c: 40:     TRISC = 0x00;
  3344  00279E  0E00               	movlw	0
  3345  0027A0  6E94               	movwf	148,c	;volatile
  3346  0027A2                     
  3347                           ;LCD_16x2.c: 41:     MSdelay(20);
  3348  0027A2  0E00               	movlw	0
  3349  0027A4  6E02               	movwf	(MSdelay@val+1)^0,c
  3350  0027A6  0E14               	movlw	20
  3351  0027A8  6E01               	movwf	MSdelay@val^0,c
  3352  0027AA  EC67  F012         	call	_MSdelay	;wreg free
  3353  0027AE                     
  3354                           ;LCD_16x2.c: 42:  LCD_Command(0x38);
  3355  0027AE  0E38               	movlw	56
  3356  0027B0  EC29  F014         	call	_LCD_Command
  3357  0027B4                     
  3358                           ;LCD_16x2.c: 43:     LCD_Command(0x01);
  3359  0027B4  0E01               	movlw	1
  3360  0027B6  EC29  F014         	call	_LCD_Command
  3361  0027BA                     
  3362                           ;LCD_16x2.c: 44:     LCD_Command(0x0c);
  3363  0027BA  0E0C               	movlw	12
  3364  0027BC  EC29  F014         	call	_LCD_Command
  3365  0027C0                     
  3366                           ;LCD_16x2.c: 45:     LCD_Command(0x06);
  3367  0027C0  0E06               	movlw	6
  3368  0027C2  EC29  F014         	call	_LCD_Command
  3369  0027C6  0012               	return		;funcret
  3370  0027C8                     __end_of_LCD_Init:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _imprimirTemHum *****************
  3374 ;; Defined at:
  3375 ;;		line 283 in file "Controlador.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    8
  3396 ;; This function calls:
  3397 ;;		_LCD_Char
  3398 ;;		_LCD_String
  3399 ;;		_LCD_String_xy
  3400 ;;		_sprintf
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text16
  3407  001C66                     __ptext16:
  3408                           	callstack 0
  3409  001C66                     _imprimirTemHum:
  3410                           	callstack 22
  3411  001C66                     
  3412                           ;Controlador.c: 285:     sprintf(value, "%d", RH_Integral);
  3413  001C66  0EE6               	movlw	low _value
  3414  001C68  0100               	movlb	0	; () banked
  3415  001C6A  6F66               	movwf	sprintf@s& (0+255),b
  3416  001C6C  0E01               	movlw	high _value
  3417  001C6E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3418  001C70  0E38               	movlw	low (STR_6+1)
  3419  001C72  6F68               	movwf	sprintf@fmt& (0+255),b
  3420  001C74  0E08               	movlw	high (STR_6+1)
  3421  001C76  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3422  001C78  C0FB  F06A         	movff	_RH_Integral,?_sprintf+4
  3423  001C7C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3424  001C7E  EC3E  F012         	call	_sprintf	;wreg free
  3425  001C82                     
  3426                           ;Controlador.c: 286:     LCD_String_xy(0, 0, value);
  3427  001C82  0E00               	movlw	0
  3428  001C84  6E0A               	movwf	LCD_String_xy@pos^0,c
  3429  001C86  0EE6               	movlw	low _value
  3430  001C88  6E0B               	movwf	LCD_String_xy@msg^0,c
  3431  001C8A  0E01               	movlw	high _value
  3432  001C8C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3433  001C8E  0E00               	movlw	0
  3434  001C90  ECF1  F012         	call	_LCD_String_xy
  3435  001C94                     
  3436                           ;Controlador.c: 287:     sprintf(value, ".%d ", RH_Decimal);
  3437  001C94  0EE6               	movlw	low _value
  3438  001C96  0100               	movlb	0	; () banked
  3439  001C98  6F66               	movwf	sprintf@s& (0+255),b
  3440  001C9A  0E01               	movlw	high _value
  3441  001C9C  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3442  001C9E  0E29               	movlw	low STR_4
  3443  001CA0  6F68               	movwf	sprintf@fmt& (0+255),b
  3444  001CA2  0E08               	movlw	high STR_4
  3445  001CA4  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3446  001CA6  C0FC  F06A         	movff	_RH_Decimal,?_sprintf+4
  3447  001CAA  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3448  001CAC  EC3E  F012         	call	_sprintf	;wreg free
  3449                           
  3450                           ;Controlador.c: 288:     LCD_String(value);
  3451  001CB0  0EE6               	movlw	low _value
  3452  001CB2  6E08               	movwf	LCD_String@msg^0,c
  3453  001CB4  0E01               	movlw	high _value
  3454  001CB6  6E09               	movwf	(LCD_String@msg+1)^0,c
  3455  001CB8  ECB4  F011         	call	_LCD_String	;wreg free
  3456  001CBC                     
  3457                           ;Controlador.c: 289:     LCD_Char('%');
  3458  001CBC  0E25               	movlw	37
  3459  001CBE  EC1B  F014         	call	_LCD_Char
  3460  001CC2                     
  3461                           ;Controlador.c: 292:     sprintf(value, "%d", T_Integral);
  3462  001CC2  0EE6               	movlw	low _value
  3463  001CC4  0100               	movlb	0	; () banked
  3464  001CC6  6F66               	movwf	sprintf@s& (0+255),b
  3465  001CC8  0E01               	movlw	high _value
  3466  001CCA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3467  001CCC  0E38               	movlw	low (STR_6+1)
  3468  001CCE  6F68               	movwf	sprintf@fmt& (0+255),b
  3469  001CD0  0E08               	movlw	high (STR_6+1)
  3470  001CD2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3471  001CD4  C0F9  F06A         	movff	_T_Integral,?_sprintf+4
  3472  001CD8  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3473  001CDA  EC3E  F012         	call	_sprintf	;wreg free
  3474  001CDE                     
  3475                           ;Controlador.c: 293:     LCD_String_xy(1, 0, value);
  3476  001CDE  0E00               	movlw	0
  3477  001CE0  6E0A               	movwf	LCD_String_xy@pos^0,c
  3478  001CE2  0EE6               	movlw	low _value
  3479  001CE4  6E0B               	movwf	LCD_String_xy@msg^0,c
  3480  001CE6  0E01               	movlw	high _value
  3481  001CE8  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3482  001CEA  0E01               	movlw	1
  3483  001CEC  ECF1  F012         	call	_LCD_String_xy
  3484  001CF0                     
  3485                           ;Controlador.c: 294:     sprintf(value, ".%d", T_Decimal);
  3486  001CF0  0EE6               	movlw	low _value
  3487  001CF2  0100               	movlb	0	; () banked
  3488  001CF4  6F66               	movwf	sprintf@s& (0+255),b
  3489  001CF6  0E01               	movlw	high _value
  3490  001CF8  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3491  001CFA  0E37               	movlw	low STR_6
  3492  001CFC  6F68               	movwf	sprintf@fmt& (0+255),b
  3493  001CFE  0E08               	movlw	high STR_6
  3494  001D00  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3495  001D02  C0FA  F06A         	movff	_T_Decimal,?_sprintf+4
  3496  001D06  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3497  001D08  EC3E  F012         	call	_sprintf	;wreg free
  3498  001D0C                     
  3499                           ;Controlador.c: 295:     LCD_String(value);
  3500  001D0C  0EE6               	movlw	low _value
  3501  001D0E  6E08               	movwf	LCD_String@msg^0,c
  3502  001D10  0E01               	movlw	high _value
  3503  001D12  6E09               	movwf	(LCD_String@msg+1)^0,c
  3504  001D14  ECB4  F011         	call	_LCD_String	;wreg free
  3505  001D18                     
  3506                           ;Controlador.c: 296:     LCD_Char(0xdf);
  3507  001D18  0EDF               	movlw	223
  3508  001D1A  EC1B  F014         	call	_LCD_Char
  3509  001D1E                     
  3510                           ;Controlador.c: 297:     LCD_Char('C');
  3511  001D1E  0E43               	movlw	67
  3512  001D20  EC1B  F014         	call	_LCD_Char
  3513  001D24                     
  3514                           ;Controlador.c: 299:     LCD_String_xy(0, 8, "Hum");
  3515  001D24  0E08               	movlw	8
  3516  001D26  6E0A               	movwf	LCD_String_xy@pos^0,c
  3517  001D28  0E47               	movlw	low STR_7
  3518  001D2A  6E0B               	movwf	LCD_String_xy@msg^0,c
  3519  001D2C  0E08               	movlw	high STR_7
  3520  001D2E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3521  001D30  0E00               	movlw	0
  3522  001D32  ECF1  F012         	call	_LCD_String_xy
  3523  001D36                     
  3524                           ;Controlador.c: 300:     LCD_String_xy(1, 8, "Temp");
  3525  001D36  0E08               	movlw	8
  3526  001D38  6E0A               	movwf	LCD_String_xy@pos^0,c
  3527  001D3A  0E2E               	movlw	low STR_8
  3528  001D3C  6E0B               	movwf	LCD_String_xy@msg^0,c
  3529  001D3E  0E08               	movlw	high STR_8
  3530  001D40  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3531  001D42  0E01               	movlw	1
  3532  001D44  ECF1  F012         	call	_LCD_String_xy
  3533  001D48  0012               	return		;funcret
  3534  001D4A                     __end_of_imprimirTemHum:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _sprintf *****************
  3538 ;; Defined at:
  3539 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  s               2    6[BANK0 ] PTR unsigned char 
  3542 ;;		 -> year(10), month(10), date(10), hours(10), 
  3543 ;;		 -> mins(10), secs(10), value(10), 
  3544 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3545 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3546 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3547 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3548 ;;		 -> STR_3(3), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  f               6   16[BANK0 ] struct _IO_FILE
  3551 ;;  ap              2   14[BANK0 ] PTR void [1]
  3552 ;;		 -> ?_sprintf(2), 
  3553 ;;  ret             2    0        int 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2    6[BANK0 ] int 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3563 ;;      Params:         0       6       0       0       0       0       0       0       0
  3564 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3566 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3567 ;;Total ram usage:       16 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    7
  3570 ;; This function calls:
  3571 ;;		_vfprintf
  3572 ;; This function is called by:
  3573 ;;		_imprimirTemHum
  3574 ;;		_mostrarFechaHora
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text17
  3579  00247C                     __ptext17:
  3580                           	callstack 0
  3581  00247C                     _sprintf:
  3582                           	callstack 22
  3583  00247C  0E6A               	movlw	low (?_sprintf+4)
  3584  00247E  0100               	movlb	0	; () banked
  3585  002480  6F6E               	movwf	sprintf@ap& (0+255),b
  3586  002482  0E00               	movlw	high (?_sprintf+4)
  3587  002484  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  3588  002486  C066  F070         	movff	sprintf@s,sprintf@f
  3589  00248A  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  3590  00248E                     
  3591                           ; BSR set to: 0
  3592  00248E  0E00               	movlw	0
  3593  002490  6F73               	movwf	(sprintf@f+3)& (0+255),b
  3594  002492  0E00               	movlw	0
  3595  002494  6F72               	movwf	(sprintf@f+2)& (0+255),b
  3596  002496                     
  3597                           ; BSR set to: 0
  3598  002496  0E00               	movlw	0
  3599  002498  6F75               	movwf	(sprintf@f+5)& (0+255),b
  3600  00249A  0E00               	movlw	0
  3601  00249C  6F74               	movwf	(sprintf@f+4)& (0+255),b
  3602  00249E                     
  3603                           ; BSR set to: 0
  3604  00249E  0E70               	movlw	low sprintf@f
  3605  0024A0  6F60               	movwf	vfprintf@fp& (0+255),b
  3606  0024A2  0E00               	movlw	high sprintf@f
  3607  0024A4  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3608  0024A6  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  3609  0024AA  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3610  0024AE  0E6E               	movlw	low sprintf@ap
  3611  0024B0  6F64               	movwf	vfprintf@ap& (0+255),b
  3612  0024B2  0E00               	movlw	high sprintf@ap
  3613  0024B4  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3614  0024B6  ECF5  F010         	call	_vfprintf	;wreg free
  3615  0024BA  0100               	movlb	0	; () banked
  3616  0024BC  5172               	movf	(sprintf@f+2)& (0+255),w,b
  3617  0024BE  2566               	addwf	sprintf@s& (0+255),w,b
  3618  0024C0  6ED9               	movwf	fsr2l,c
  3619  0024C2  5173               	movf	(sprintf@f+3)& (0+255),w,b
  3620  0024C4  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  3621  0024C6  6EDA               	movwf	fsr2h,c
  3622  0024C8  0E00               	movlw	0
  3623  0024CA  6EDF               	movwf	indf2,c
  3624  0024CC                     
  3625                           ; BSR set to: 0
  3626  0024CC  0012               	return		;funcret
  3627  0024CE                     __end_of_sprintf:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _vfprintf *****************
  3631 ;; Defined at:
  3632 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3635 ;;		 -> sprintf@f(6), 
  3636 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3637 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3638 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3639 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3640 ;;		 -> STR_3(3), 
  3641 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3642 ;;		 -> sprintf@ap(2), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3645 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3646 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3647 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3648 ;;		 -> STR_3(3), 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2    0[BANK0 ] int 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3658 ;;      Params:         0       6       0       0       0       0       0       0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3661 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3662 ;;Total ram usage:        8 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    6
  3665 ;; This function calls:
  3666 ;;		_vfpfcnvrt
  3667 ;; This function is called by:
  3668 ;;		_sprintf
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text18
  3673  0021EA                     __ptext18:
  3674                           	callstack 0
  3675  0021EA                     _vfprintf:
  3676                           	callstack 22
  3677  0021EA                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3679  0021EA  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  3680  0021EE  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3681  0021F2                     
  3682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3683  0021F2  0E00               	movlw	0
  3684  0021F4  0101               	movlb	1	; () banked
  3685  0021F6  6FA7               	movwf	(_nout+1)& (0+255),b
  3686  0021F8  0E00               	movlw	0
  3687  0021FA  6FA6               	movwf	_nout& (0+255),b
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3690  0021FC  EF13  F011         	goto	l2791
  3691  002200                     l2789:
  3692                           
  3693                           ; BSR set to: 1
  3694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3695  002200  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3696  002204  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3697  002208  0E5E               	movlw	low vfprintf@cfmt
  3698  00220A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3699  00220C  0E00               	movlw	high vfprintf@cfmt
  3700  00220E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3701  002210  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3702  002214  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3703  002218  EC70  F00A         	call	_vfpfcnvrt	;wreg free
  3704  00221C  5043               	movf	?_vfpfcnvrt^0,w,c
  3705  00221E  0101               	movlb	1	; () banked
  3706  002220  27A6               	addwf	_nout& (0+255),f,b
  3707  002222  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3708  002224  23A7               	addwfc	(_nout+1)& (0+255),f,b
  3709  002226                     l2791:
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3713  002226  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3714  00222A  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3715  00222E                     	if	0	;tblptru may be non-zero
  3716  00222E                     	endif
  3717  00222E                     	if	0	;tblptru may be non-zero
  3718  00222E                     	endif
  3719  00222E  0008               	tblrd		*
  3720  002230  50F5               	movf	tablat,w,c
  3721  002232  0900               	iorlw	0
  3722  002234  A4D8               	btfss	status,2,c
  3723  002236  EF1F  F011         	goto	u2441
  3724  00223A  EF21  F011         	goto	u2440
  3725  00223E                     u2441:
  3726  00223E  EF00  F011         	goto	l2789
  3727  002242                     u2440:
  3728  002242                     
  3729                           ; BSR set to: 1
  3730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3731  002242  C1A6  F060         	movff	_nout,?_vfprintf
  3732  002246  C1A7  F061         	movff	_nout+1,?_vfprintf+1
  3733  00224A                     
  3734                           ; BSR set to: 1
  3735  00224A  0012               	return		;funcret
  3736  00224C                     __end_of_vfprintf:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function _vfpfcnvrt *****************
  3740 ;; Defined at:
  3741 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3744 ;;		 -> sprintf@f(6), 
  3745 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3746 ;;		 -> vfprintf@cfmt(2), 
  3747 ;;  ap              2   70[COMRAM] PTR PTR void 
  3748 ;;		 -> sprintf@ap(2), 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  llu             8   84[COMRAM] unsigned long long 
  3751 ;;  ll              8   76[COMRAM] long long 
  3752 ;;  f               4    0        long long 
  3753 ;;  vp              3    0        PTR void 
  3754 ;;  ct              3    0        unsigned char [3]
  3755 ;;  cp              3    0        PTR unsigned char 
  3756 ;;  i               2    0        int 
  3757 ;;  done            2    0        int 
  3758 ;;  c               1   92[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   66[COMRAM] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         6       0       0       0       0       0       0       0       0
  3769 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3771 ;;      Totals:        27       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:       27 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    5
  3775 ;; This function calls:
  3776 ;;		_dtoa
  3777 ;;		_fputc
  3778 ;;		_xtoa
  3779 ;; This function is called by:
  3780 ;;		_vfprintf
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text19
  3785  0014E0                     __ptext19:
  3786                           	callstack 0
  3787  0014E0                     _vfpfcnvrt:
  3788                           	callstack 22
  3789  0014E0                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3791  0014E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3792  0014E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3793  0014E8  CFDE FFF6          	movff	postinc2,tblptrl
  3794  0014EC  CFDD FFF7          	movff	postdec2,tblptrh
  3795  0014F0                     	if	0	;tblptru may be non-zero
  3796  0014F0                     	endif
  3797  0014F0                     	if	0	;tblptru may be non-zero
  3798  0014F0                     	endif
  3799  0014F0  0008               	tblrd		*
  3800  0014F2  50F5               	movf	tablat,w,c
  3801  0014F4  0A25               	xorlw	37
  3802  0014F6  A4D8               	btfss	status,2,c
  3803  0014F8  EF80  F00A         	goto	u2281
  3804  0014FC  EF82  F00A         	goto	u2280
  3805  001500                     u2281:
  3806  001500  EFA0  F00B         	goto	l2723
  3807  001504                     u2280:
  3808  001504                     
  3809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3810  001504  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3811  001508  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3812  00150C  2ADE               	incf	postinc2,f,c
  3813  00150E  0E00               	movlw	0
  3814  001510  22DD               	addwfc	postdec2,f,c
  3815  001512                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3817  001512  0E00               	movlw	0
  3818  001514  0100               	movlb	0	; () banked
  3819  001516  6FE3               	movwf	(_width+1)& (0+255),b
  3820  001518  0E00               	movlw	0
  3821  00151A  6FE2               	movwf	_width& (0+255),b
  3822  00151C  C0E2  F0E6         	movff	_width,_flags
  3823  001520  C0E3  F0E7         	movff	_width+1,_flags+1
  3824  001524                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3827  001524  69E4               	setf	_prec& (0+255),b
  3828  001526  69E5               	setf	(_prec+1)& (0+255),b
  3829  001528                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3832  001528  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  00152C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  001530  CFDE FFF6          	movff	postinc2,tblptrl
  3835  001534  CFDD FFF7          	movff	postdec2,tblptrh
  3836  001538                     	if	0	;tblptru may be non-zero
  3837  001538                     	endif
  3838  001538                     	if	0	;tblptru may be non-zero
  3839  001538                     	endif
  3840  001538  0008               	tblrd		*
  3841  00153A  50F5               	movf	tablat,w,c
  3842  00153C  0A64               	xorlw	100
  3843  00153E  B4D8               	btfsc	status,2,c
  3844  001540  EFA4  F00A         	goto	u2291
  3845  001544  EFA6  F00A         	goto	u2290
  3846  001548                     u2291:
  3847  001548  EFB8  F00A         	goto	l2687
  3848  00154C                     u2290:
  3849  00154C                     
  3850                           ; BSR set to: 0
  3851  00154C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3852  001550  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3853  001554  CFDE FFF6          	movff	postinc2,tblptrl
  3854  001558  CFDD FFF7          	movff	postdec2,tblptrh
  3855  00155C                     	if	0	;tblptru may be non-zero
  3856  00155C                     	endif
  3857  00155C                     	if	0	;tblptru may be non-zero
  3858  00155C                     	endif
  3859  00155C  0008               	tblrd		*
  3860  00155E  50F5               	movf	tablat,w,c
  3861  001560  0A69               	xorlw	105
  3862  001562  A4D8               	btfss	status,2,c
  3863  001564  EFB6  F00A         	goto	u2301
  3864  001568  EFB8  F00A         	goto	u2300
  3865  00156C                     u2301:
  3866  00156C  EFF8  F00A         	goto	l2693
  3867  001570                     u2300:
  3868  001570                     l2687:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3872  001570  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3873  001574  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3874  001578  2ADE               	incf	postinc2,f,c
  3875  00157A  0E00               	movlw	0
  3876  00157C  22DD               	addwfc	postdec2,f,c
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3879  00157E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3880  001582  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3881  001586  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3882  00158A  0E02               	movlw	2
  3883  00158C  26DE               	addwf	postinc2,f,c
  3884  00158E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3885  001592  0E00               	movlw	0
  3886  001594  22DD               	addwfc	postdec2,f,c
  3887  001596  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3888  00159A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3889  00159E  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  3890  0015A2  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  3891  0015A6  0E00               	movlw	0
  3892  0015A8  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3893  0015AA  0EFF               	movlw	-1
  3894  0015AC  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  3895  0015AE  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  3896  0015B0  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  3897  0015B2  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  3898  0015B4  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  3899  0015B6  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  3900  0015B8                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3903  0015B8  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3904  0015BC  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3905  0015C0  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3906  0015C4  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3907  0015C8  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3908  0015CC  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3909  0015D0  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3910  0015D4  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3911  0015D8  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3912  0015DC  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3913  0015E0  EC91  F007         	call	_dtoa	;wreg free
  3914  0015E4  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3915  0015E8  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3916  0015EC  EFBB  F00B         	goto	l1232
  3917  0015F0                     l2693:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3921  0015F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3922  0015F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3923  0015F8  CFDE FFF6          	movff	postinc2,tblptrl
  3924  0015FC  CFDD FFF7          	movff	postdec2,tblptrh
  3925  001600                     	if	0	;tblptru may be non-zero
  3926  001600                     	endif
  3927  001600                     	if	0	;tblptru may be non-zero
  3928  001600                     	endif
  3929  001600  0008               	tblrd		*
  3930  001602  50F5               	movf	tablat,w,c
  3931  001604  0A78               	xorlw	120
  3932  001606  B4D8               	btfsc	status,2,c
  3933  001608  EF08  F00B         	goto	u2311
  3934  00160C  EF0A  F00B         	goto	u2310
  3935  001610                     u2311:
  3936  001610  EF1C  F00B         	goto	l2697
  3937  001614                     u2310:
  3938  001614                     
  3939                           ; BSR set to: 0
  3940  001614  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3941  001618  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3942  00161C  CFDE FFF6          	movff	postinc2,tblptrl
  3943  001620  CFDD FFF7          	movff	postdec2,tblptrh
  3944  001624                     	if	0	;tblptru may be non-zero
  3945  001624                     	endif
  3946  001624                     	if	0	;tblptru may be non-zero
  3947  001624                     	endif
  3948  001624  0008               	tblrd		*
  3949  001626  50F5               	movf	tablat,w,c
  3950  001628  0A58               	xorlw	88
  3951  00162A  A4D8               	btfss	status,2,c
  3952  00162C  EF1A  F00B         	goto	u2321
  3953  001630  EF1C  F00B         	goto	u2320
  3954  001634                     u2321:
  3955  001634  EF6A  F00B         	goto	l2707
  3956  001638                     u2320:
  3957  001638                     l2697:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3961  001638  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3962  00163C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3963  001640  CFDE FFF6          	movff	postinc2,tblptrl
  3964  001644  CFDD FFF7          	movff	postdec2,tblptrh
  3965  001648                     	if	0	;tblptru may be non-zero
  3966  001648                     	endif
  3967  001648                     	if	0	;tblptru may be non-zero
  3968  001648                     	endif
  3969  001648  0008               	tblrd		*
  3970  00164A  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  3971  00164E                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3974  00164E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3975  001652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3976  001656  2ADE               	incf	postinc2,f,c
  3977  001658  0E00               	movlw	0
  3978  00165A  22DD               	addwfc	postdec2,f,c
  3979  00165C                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3982  00165C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3983  001660  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3984  001664  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3985  001668  0E02               	movlw	2
  3986  00166A  26DE               	addwf	postinc2,f,c
  3987  00166C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3988  001670  0E00               	movlw	0
  3989  001672  22DD               	addwfc	postdec2,f,c
  3990  001674  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3991  001678  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3992  00167C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3993  001680  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3994  001684  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3995  001688  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3996  00168C  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  3997  00168E  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  3998  001690  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  3999  001692  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  4000  001694  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  4001  001696  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  4002  001698                     
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  4005  001698  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4006  00169C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4007  0016A0  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4008  0016A4  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4009  0016A8  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4010  0016AC  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4011  0016B0  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4012  0016B4  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4013  0016B8  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4014  0016BC  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4015  0016C0  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  4016  0016C4  EC03  F009         	call	_xtoa	;wreg free
  4017  0016C8  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4018  0016CC  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4019  0016D0  EFBB  F00B         	goto	l1232
  4020  0016D4                     l2707:
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4024  0016D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4025  0016D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4026  0016DC  CFDE FFF6          	movff	postinc2,tblptrl
  4027  0016E0  CFDD FFF7          	movff	postdec2,tblptrh
  4028  0016E4                     	if	0	;tblptru may be non-zero
  4029  0016E4                     	endif
  4030  0016E4                     	if	0	;tblptru may be non-zero
  4031  0016E4                     	endif
  4032  0016E4  0008               	tblrd		*
  4033  0016E6  50F5               	movf	tablat,w,c
  4034  0016E8  0A25               	xorlw	37
  4035  0016EA  A4D8               	btfss	status,2,c
  4036  0016EC  EF7A  F00B         	goto	u2331
  4037  0016F0  EF7C  F00B         	goto	u2330
  4038  0016F4                     u2331:
  4039  0016F4  EF93  F00B         	goto	l2717
  4040  0016F8                     u2330:
  4041  0016F8                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4044  0016F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4045  0016FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4046  001700  2ADE               	incf	postinc2,f,c
  4047  001702  0E00               	movlw	0
  4048  001704  22DD               	addwfc	postdec2,f,c
  4049  001706                     
  4050                           ; BSR set to: 0
  4051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4052  001706  0E00               	movlw	0
  4053  001708  6E02               	movwf	(fputc@c+1)^0,c
  4054  00170A  0E25               	movlw	37
  4055  00170C  6E01               	movwf	fputc@c^0,c
  4056  00170E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4057  001712  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4058  001716  EC75  F00F         	call	_fputc	;wreg free
  4059  00171A                     l2713:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4062  00171A  0E00               	movlw	0
  4063  00171C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4064  00171E  0E01               	movlw	1
  4065  001720  6E43               	movwf	?_vfpfcnvrt^0,c
  4066  001722  EFBB  F00B         	goto	l1232
  4067  001726                     l2717:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4071  001726  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4072  00172A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4073  00172E  2ADE               	incf	postinc2,f,c
  4074  001730  0E00               	movlw	0
  4075  001732  22DD               	addwfc	postdec2,f,c
  4076  001734                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4079  001734  0E00               	movlw	0
  4080  001736  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4081  001738  0E00               	movlw	0
  4082  00173A  6E43               	movwf	?_vfpfcnvrt^0,c
  4083  00173C  EFBB  F00B         	goto	l1232
  4084  001740                     l2723:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4087  001740  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4088  001744  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4089  001748  CFDE FFF6          	movff	postinc2,tblptrl
  4090  00174C  CFDD FFF7          	movff	postdec2,tblptrh
  4091  001750                     	if	0	;tblptru may be non-zero
  4092  001750                     	endif
  4093  001750                     	if	0	;tblptru may be non-zero
  4094  001750                     	endif
  4095  001750  0008               	tblrd		*
  4096  001752  50F5               	movf	tablat,w,c
  4097  001754  6E01               	movwf	fputc@c^0,c
  4098  001756  6A02               	clrf	(fputc@c+1)^0,c
  4099  001758  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4100  00175C  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4101  001760  EC75  F00F         	call	_fputc	;wreg free
  4102  001764                     
  4103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4104  001764  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4105  001768  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4106  00176C  2ADE               	incf	postinc2,f,c
  4107  00176E  0E00               	movlw	0
  4108  001770  22DD               	addwfc	postdec2,f,c
  4109  001772  EF8D  F00B         	goto	l2713
  4110  001776                     l1232:
  4111  001776  0012               	return		;funcret
  4112  001778                     __end_of_vfpfcnvrt:
  4113                           	callstack 0
  4114                           
  4115 ;; *************** function _xtoa *****************
  4116 ;; Defined at:
  4117 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4120 ;;		 -> sprintf@f(6), 
  4121 ;;  d               8   29[COMRAM] unsigned long long 
  4122 ;;  x               1   37[COMRAM] unsigned char 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  n               8   54[COMRAM] unsigned long long 
  4125 ;;  c               2   64[COMRAM] int 
  4126 ;;  i               2   62[COMRAM] int 
  4127 ;;  w               2   52[COMRAM] int 
  4128 ;;  p               2   50[COMRAM] int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  2   27[COMRAM] int 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:        11       0       0       0       0       0       0       0       0
  4139 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4141 ;;      Totals:        39       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:       39 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		_isalpha
  4147 ;;		_isupper
  4148 ;;		_pad
  4149 ;;		_toupper
  4150 ;; This function is called by:
  4151 ;;		_vfpfcnvrt
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text20
  4156  001206                     __ptext20:
  4157                           	callstack 0
  4158  001206                     _xtoa:
  4159                           	callstack 22
  4160  001206                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4162  001206  0100               	movlb	0	; () banked
  4163  001208  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4164  00120A  EF09  F009         	goto	u2081
  4165  00120E  EF0B  F009         	goto	u2080
  4166  001212                     u2081:
  4167  001212  EF0C  F009         	goto	l2581
  4168  001216                     u2080:
  4169  001216                     
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4172  001216  93E6               	bcf	_flags& (0+255),1,b
  4173  001218                     l2581:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4177  001218  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4178  00121A  EF19  F009         	goto	u2090
  4179  00121E  51E5               	movf	(_prec+1)& (0+255),w,b
  4180  001220  E106               	bnz	u2091
  4181  001222  05E4               	decf	_prec& (0+255),w,b
  4182  001224  B0D8               	btfsc	status,0,c
  4183  001226  EF17  F009         	goto	u2091
  4184  00122A  EF19  F009         	goto	u2090
  4185  00122E                     u2091:
  4186  00122E  EF1F  F009         	goto	l1200
  4187  001232                     u2090:
  4188  001232                     
  4189                           ; BSR set to: 0
  4190  001232  0E00               	movlw	0
  4191  001234  6E34               	movwf	(xtoa@p+1)^0,c
  4192  001236  0E01               	movlw	1
  4193  001238  6E33               	movwf	xtoa@p^0,c
  4194  00123A  EF23  F009         	goto	l1202
  4195  00123E                     l1200:
  4196                           
  4197                           ; BSR set to: 0
  4198  00123E  C0E4  F033         	movff	_prec,xtoa@p
  4199  001242  C0E5  F034         	movff	_prec+1,xtoa@p+1
  4200  001246                     l1202:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4204  001246  C0E2  F035         	movff	_width,xtoa@w
  4205  00124A  C0E3  F036         	movff	_width+1,xtoa@w+1
  4206                           
  4207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4208  00124E  A9E6               	btfss	_flags& (0+255),4,b
  4209  001250  EF2C  F009         	goto	u2101
  4210  001254  EF2E  F009         	goto	u2100
  4211  001258                     u2101:
  4212  001258  EF32  F009         	goto	l2587
  4213  00125C                     u2100:
  4214  00125C                     
  4215                           ; BSR set to: 0
  4216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4217  00125C  0EFE               	movlw	254
  4218  00125E  2635               	addwf	xtoa@w^0,f,c
  4219  001260  0EFF               	movlw	255
  4220  001262  2236               	addwfc	(xtoa@w+1)^0,f,c
  4221  001264                     l2587:
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4225  001264  C01E  F037         	movff	xtoa@d,xtoa@n
  4226  001268  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4227  00126C  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4228  001270  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4229  001274  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4230  001278  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4231  00127C  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4232  001280  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4233  001284                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4236  001284  0E00               	movlw	0
  4237  001286  6E40               	movwf	(xtoa@i+1)^0,c
  4238  001288  0E1F               	movlw	31
  4239  00128A  6E3F               	movwf	xtoa@i^0,c
  4240  00128C                     
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4243  00128C  0E00               	movlw	0
  4244  00128E  0102               	movlb	2	; () banked
  4245  001290  6FEF               	movwf	(_dbuf+31)& (0+255),b
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4248  001292  EFFE  F009         	goto	l2623
  4249  001296                     l2593:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  4252  001296  063F               	decf	xtoa@i^0,f,c
  4253  001298  A0D8               	btfss	status,0,c
  4254  00129A  0640               	decf	(xtoa@i+1)^0,f,c
  4255  00129C                     
  4256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4257  00129C  0E0F               	movlw	15
  4258  00129E  1437               	andwf	xtoa@n^0,w,c
  4259  0012A0  6E41               	movwf	xtoa@c^0,c
  4260  0012A2  6A42               	clrf	(xtoa@c+1)^0,c
  4261  0012A4                     
  4262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4263  0012A4  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4264  0012A6  EF5E  F009         	goto	u2111
  4265  0012AA  5042               	movf	(xtoa@c+1)^0,w,c
  4266  0012AC  E109               	bnz	u2110
  4267  0012AE  0E0A               	movlw	10
  4268  0012B0  5C41               	subwf	xtoa@c^0,w,c
  4269  0012B2  A0D8               	btfss	status,0,c
  4270  0012B4  EF5E  F009         	goto	u2111
  4271  0012B8  EF60  F009         	goto	u2110
  4272  0012BC                     u2111:
  4273  0012BC  EF68  F009         	goto	l2601
  4274  0012C0                     u2110:
  4275  0012C0  0E57               	movlw	87
  4276  0012C2  2441               	addwf	xtoa@c^0,w,c
  4277  0012C4  6E41               	movwf	xtoa@c^0,c
  4278  0012C6  0E00               	movlw	0
  4279  0012C8  2042               	addwfc	(xtoa@c+1)^0,w,c
  4280  0012CA  6E42               	movwf	(xtoa@c+1)^0,c
  4281  0012CC  EF6E  F009         	goto	l1209
  4282  0012D0                     l2601:
  4283  0012D0  0E30               	movlw	48
  4284  0012D2  2441               	addwf	xtoa@c^0,w,c
  4285  0012D4  6E41               	movwf	xtoa@c^0,c
  4286  0012D6  0E00               	movlw	0
  4287  0012D8  2042               	addwfc	(xtoa@c+1)^0,w,c
  4288  0012DA  6E42               	movwf	(xtoa@c+1)^0,c
  4289  0012DC                     l1209:
  4290  0012DC  0EBF               	movlw	191
  4291  0012DE  6E27               	movwf	??_xtoa^0,c
  4292  0012E0  0EFF               	movlw	255
  4293  0012E2  6E28               	movwf	(??_xtoa+1)^0,c
  4294  0012E4  5026               	movf	xtoa@x^0,w,c
  4295  0012E6  6E29               	movwf	(??_xtoa+2)^0,c
  4296  0012E8  6A2A               	clrf	(??_xtoa+3)^0,c
  4297  0012EA  5027               	movf	??_xtoa^0,w,c
  4298  0012EC  2629               	addwf	(??_xtoa+2)^0,f,c
  4299  0012EE  5028               	movf	(??_xtoa+1)^0,w,c
  4300  0012F0  222A               	addwfc	(??_xtoa+3)^0,f,c
  4301  0012F2  502A               	movf	(??_xtoa+3)^0,w,c
  4302  0012F4  E10A               	bnz	u2120
  4303  0012F6  0E1A               	movlw	26
  4304  0012F8  5C29               	subwf	(??_xtoa+2)^0,w,c
  4305  0012FA  A0D8               	btfss	status,0,c
  4306  0012FC  EF82  F009         	goto	u2121
  4307  001300  EF85  F009         	goto	u2120
  4308  001304                     u2121:
  4309  001304  0E01               	movlw	1
  4310  001306  EF86  F009         	goto	u2130
  4311  00130A                     u2120:
  4312  00130A  0E00               	movlw	0
  4313  00130C                     u2130:
  4314  00130C  6E2F               	movwf	_xtoa$1364^0,c
  4315  00130E  6A30               	clrf	(_xtoa$1364+1)^0,c
  4316  001310  502F               	movf	_xtoa$1364^0,w,c
  4317  001312  1030               	iorwf	(_xtoa$1364+1)^0,w,c
  4318  001314  B4D8               	btfsc	status,2,c
  4319  001316  EF8F  F009         	goto	u2141
  4320  00131A  EF91  F009         	goto	u2140
  4321  00131E                     u2141:
  4322  00131E  EFC1  F009         	goto	l2615
  4323  001322                     u2140:
  4324  001322  0E9F               	movlw	159
  4325  001324  6E27               	movwf	??_xtoa^0,c
  4326  001326  0EFF               	movlw	255
  4327  001328  6E28               	movwf	(??_xtoa+1)^0,c
  4328  00132A  0E20               	movlw	32
  4329  00132C  1041               	iorwf	xtoa@c^0,w,c
  4330  00132E  6E29               	movwf	(??_xtoa+2)^0,c
  4331  001330  0E00               	movlw	0
  4332  001332  1042               	iorwf	(xtoa@c+1)^0,w,c
  4333  001334  6E2A               	movwf	(??_xtoa+3)^0,c
  4334  001336  5027               	movf	??_xtoa^0,w,c
  4335  001338  2629               	addwf	(??_xtoa+2)^0,f,c
  4336  00133A  5028               	movf	(??_xtoa+1)^0,w,c
  4337  00133C  222A               	addwfc	(??_xtoa+3)^0,f,c
  4338  00133E  502A               	movf	(??_xtoa+3)^0,w,c
  4339  001340  E10A               	bnz	u2150
  4340  001342  0E1A               	movlw	26
  4341  001344  5C29               	subwf	(??_xtoa+2)^0,w,c
  4342  001346  A0D8               	btfss	status,0,c
  4343  001348  EFA8  F009         	goto	u2151
  4344  00134C  EFAB  F009         	goto	u2150
  4345  001350                     u2151:
  4346  001350  0E01               	movlw	1
  4347  001352  EFAC  F009         	goto	u2160
  4348  001356                     u2150:
  4349  001356  0E00               	movlw	0
  4350  001358                     u2160:
  4351  001358  6E31               	movwf	_xtoa$1365^0,c
  4352  00135A  6A32               	clrf	(_xtoa$1365+1)^0,c
  4353  00135C  5031               	movf	_xtoa$1365^0,w,c
  4354  00135E  1032               	iorwf	(_xtoa$1365+1)^0,w,c
  4355  001360  B4D8               	btfsc	status,2,c
  4356  001362  EFB5  F009         	goto	u2171
  4357  001366  EFB7  F009         	goto	u2170
  4358  00136A                     u2171:
  4359  00136A  EFC1  F009         	goto	l2615
  4360  00136E                     u2170:
  4361  00136E                     
  4362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4363  00136E  C041  F007         	movff	xtoa@c,toupper@c
  4364  001372  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4365  001376  EC85  F011         	call	_toupper	;wreg free
  4366  00137A  C007  F041         	movff	?_toupper,xtoa@c
  4367  00137E  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4368  001382                     l2615:
  4369                           
  4370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4371  001382  0ED0               	movlw	low _dbuf
  4372  001384  243F               	addwf	xtoa@i^0,w,c
  4373  001386  6ED9               	movwf	fsr2l,c
  4374  001388  0E02               	movlw	high _dbuf
  4375  00138A  2040               	addwfc	(xtoa@i+1)^0,w,c
  4376  00138C  6EDA               	movwf	fsr2h,c
  4377  00138E  C041  FFDF         	movff	xtoa@c,indf2
  4378  001392                     
  4379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  4380  001392  0633               	decf	xtoa@p^0,f,c
  4381  001394  A0D8               	btfss	status,0,c
  4382  001396  0634               	decf	(xtoa@p+1)^0,f,c
  4383  001398                     
  4384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  4385  001398  0635               	decf	xtoa@w^0,f,c
  4386  00139A  A0D8               	btfss	status,0,c
  4387  00139C  0636               	decf	(xtoa@w+1)^0,f,c
  4388  00139E                     
  4389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4390  00139E  C037  F027         	movff	xtoa@n,??_xtoa
  4391  0013A2  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4392  0013A6  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4393  0013AA  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4394  0013AE  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4395  0013B2  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4396  0013B6  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4397  0013BA  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4398  0013BE  0E05               	movlw	5
  4399  0013C0  EFEB  F009         	goto	u2180
  4400  0013C4                     u2185:
  4401  0013C4  90D8               	bcf	status,0,c
  4402  0013C6  322E               	rrcf	(??_xtoa+7)^0,f,c
  4403  0013C8  322D               	rrcf	(??_xtoa+6)^0,f,c
  4404  0013CA  322C               	rrcf	(??_xtoa+5)^0,f,c
  4405  0013CC  322B               	rrcf	(??_xtoa+4)^0,f,c
  4406  0013CE  322A               	rrcf	(??_xtoa+3)^0,f,c
  4407  0013D0  3229               	rrcf	(??_xtoa+2)^0,f,c
  4408  0013D2  3228               	rrcf	(??_xtoa+1)^0,f,c
  4409  0013D4  3227               	rrcf	??_xtoa^0,f,c
  4410  0013D6                     u2180:
  4411  0013D6  2EE8               	decfsz	wreg,f,c
  4412  0013D8  EFE2  F009         	goto	u2185
  4413  0013DC  C027  F037         	movff	??_xtoa,xtoa@n
  4414  0013E0  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4415  0013E4  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4416  0013E8  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4417  0013EC  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4418  0013F0  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4419  0013F4  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4420  0013F8  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4421  0013FC                     l2623:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4424  0013FC  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4425  0013FE  EF0A  F00A         	goto	u2191
  4426  001402  5040               	movf	(xtoa@i+1)^0,w,c
  4427  001404  E109               	bnz	u2190
  4428  001406  0E02               	movlw	2
  4429  001408  5C3F               	subwf	xtoa@i^0,w,c
  4430  00140A  A0D8               	btfss	status,0,c
  4431  00140C  EF0A  F00A         	goto	u2191
  4432  001410  EF0C  F00A         	goto	u2190
  4433  001414                     u2191:
  4434  001414  EF3D  F00A         	goto	l1223
  4435  001418                     u2190:
  4436  001418  5037               	movf	xtoa@n^0,w,c
  4437  00141A  1038               	iorwf	(xtoa@n+1)^0,w,c
  4438  00141C  1039               	iorwf	(xtoa@n+2)^0,w,c
  4439  00141E  103A               	iorwf	(xtoa@n+3)^0,w,c
  4440  001420  103B               	iorwf	(xtoa@n+4)^0,w,c
  4441  001422  103C               	iorwf	(xtoa@n+5)^0,w,c
  4442  001424  103D               	iorwf	(xtoa@n+6)^0,w,c
  4443  001426  103E               	iorwf	(xtoa@n+7)^0,w,c
  4444  001428  A4D8               	btfss	status,2,c
  4445  00142A  EF19  F00A         	goto	u2201
  4446  00142E  EF1B  F00A         	goto	u2200
  4447  001432                     u2201:
  4448  001432  EF4B  F009         	goto	l2593
  4449  001436                     u2200:
  4450  001436  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4451  001438  EF28  F00A         	goto	u2210
  4452  00143C  5034               	movf	(xtoa@p+1)^0,w,c
  4453  00143E  E106               	bnz	u2211
  4454  001440  0433               	decf	xtoa@p^0,w,c
  4455  001442  B0D8               	btfsc	status,0,c
  4456  001444  EF26  F00A         	goto	u2211
  4457  001448  EF28  F00A         	goto	u2210
  4458  00144C                     u2211:
  4459  00144C  EF4B  F009         	goto	l2593
  4460  001450                     u2210:
  4461  001450  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4462  001452  EF33  F00A         	goto	u2221
  4463  001456  5036               	movf	(xtoa@w+1)^0,w,c
  4464  001458  E108               	bnz	u2220
  4465  00145A  0435               	decf	xtoa@w^0,w,c
  4466  00145C  A0D8               	btfss	status,0,c
  4467  00145E  EF33  F00A         	goto	u2221
  4468  001462  EF35  F00A         	goto	u2220
  4469  001466                     u2221:
  4470  001466  EF3D  F00A         	goto	l1223
  4471  00146A                     u2220:
  4472  00146A  0100               	movlb	0	; () banked
  4473  00146C  B3E6               	btfsc	_flags& (0+255),1,b
  4474  00146E  EF3B  F00A         	goto	u2231
  4475  001472  EF3D  F00A         	goto	u2230
  4476  001476                     u2231:
  4477  001476  EF4B  F009         	goto	l2593
  4478  00147A                     u2230:
  4479  00147A                     l1223:
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4482  00147A  0100               	movlb	0	; () banked
  4483  00147C  A9E6               	btfss	_flags& (0+255),4,b
  4484  00147E  EF43  F00A         	goto	u2241
  4485  001482  EF45  F00A         	goto	u2240
  4486  001486                     u2241:
  4487  001486  EF5B  F00A         	goto	l2639
  4488  00148A                     u2240:
  4489  00148A                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  4492  00148A  063F               	decf	xtoa@i^0,f,c
  4493  00148C  A0D8               	btfss	status,0,c
  4494  00148E  0640               	decf	(xtoa@i+1)^0,f,c
  4495  001490                     
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4498  001490  0ED0               	movlw	low _dbuf
  4499  001492  243F               	addwf	xtoa@i^0,w,c
  4500  001494  6ED9               	movwf	fsr2l,c
  4501  001496  0E02               	movlw	high _dbuf
  4502  001498  2040               	addwfc	(xtoa@i+1)^0,w,c
  4503  00149A  6EDA               	movwf	fsr2h,c
  4504  00149C  C026  FFDF         	movff	xtoa@x,indf2
  4505  0014A0                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  4508  0014A0  063F               	decf	xtoa@i^0,f,c
  4509  0014A2  A0D8               	btfss	status,0,c
  4510  0014A4  0640               	decf	(xtoa@i+1)^0,f,c
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4513  0014A6  0ED0               	movlw	low _dbuf
  4514  0014A8  243F               	addwf	xtoa@i^0,w,c
  4515  0014AA  6ED9               	movwf	fsr2l,c
  4516  0014AC  0E02               	movlw	high _dbuf
  4517  0014AE  2040               	addwfc	(xtoa@i+1)^0,w,c
  4518  0014B0  6EDA               	movwf	fsr2h,c
  4519  0014B2  0E30               	movlw	48
  4520  0014B4  6EDF               	movwf	indf2,c
  4521  0014B6                     l2639:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4525  0014B6  C01C  F011         	movff	xtoa@fp,pad@fp
  4526  0014BA  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4527  0014BE  0ED0               	movlw	low _dbuf
  4528  0014C0  243F               	addwf	xtoa@i^0,w,c
  4529  0014C2  6E13               	movwf	pad@buf^0,c
  4530  0014C4  0E02               	movlw	high _dbuf
  4531  0014C6  2040               	addwfc	(xtoa@i+1)^0,w,c
  4532  0014C8  6E14               	movwf	(pad@buf+1)^0,c
  4533  0014CA  C035  F015         	movff	xtoa@w,pad@p
  4534  0014CE  C036  F016         	movff	xtoa@w+1,pad@p+1
  4535  0014D2  ECDA  F00F         	call	_pad	;wreg free
  4536  0014D6  C011  F01C         	movff	?_pad,?_xtoa
  4537  0014DA  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4538  0014DE  0012               	return		;funcret
  4539  0014E0                     __end_of_xtoa:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _toupper *****************
  4543 ;; Defined at:
  4544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  c               2    6[COMRAM] int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    6[COMRAM] int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4558 ;;      Params:         2       0       0       0       0       0       0       0       0
  4559 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4560 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4561 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4562 ;;Total ram usage:        8 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    1
  4565 ;; This function calls:
  4566 ;;		_islower
  4567 ;; This function is called by:
  4568 ;;		_xtoa
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text21
  4573  00230A                     __ptext21:
  4574                           	callstack 0
  4575  00230A                     _toupper:
  4576                           	callstack 24
  4577  00230A  0E9F               	movlw	159
  4578  00230C  6E09               	movwf	??_toupper^0,c
  4579  00230E  0EFF               	movlw	255
  4580  002310  6E0A               	movwf	(??_toupper+1)^0,c
  4581  002312  C007  F00B         	movff	toupper@c,??_toupper+2
  4582  002316  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4583  00231A  5009               	movf	??_toupper^0,w,c
  4584  00231C  260B               	addwf	(??_toupper+2)^0,f,c
  4585  00231E  500A               	movf	(??_toupper+1)^0,w,c
  4586  002320  220C               	addwfc	(??_toupper+3)^0,f,c
  4587  002322  500C               	movf	(??_toupper+3)^0,w,c
  4588  002324  E10A               	bnz	u1870
  4589  002326  0E1A               	movlw	26
  4590  002328  5C0B               	subwf	(??_toupper+2)^0,w,c
  4591  00232A  A0D8               	btfss	status,0,c
  4592  00232C  EF9A  F011         	goto	u1871
  4593  002330  EF9D  F011         	goto	u1870
  4594  002334                     u1871:
  4595  002334  0E01               	movlw	1
  4596  002336  EF9E  F011         	goto	u1880
  4597  00233A                     u1870:
  4598  00233A  0E00               	movlw	0
  4599  00233C                     u1880:
  4600  00233C  6E0D               	movwf	_toupper$1449^0,c
  4601  00233E  6A0E               	clrf	(_toupper$1449+1)^0,c
  4602  002340  500D               	movf	_toupper$1449^0,w,c
  4603  002342  100E               	iorwf	(_toupper$1449+1)^0,w,c
  4604  002344  B4D8               	btfsc	status,2,c
  4605  002346  EFA7  F011         	goto	u1891
  4606  00234A  EFA9  F011         	goto	u1890
  4607  00234E                     u1891:
  4608  00234E  EFAF  F011         	goto	l1295
  4609  002352                     u1890:
  4610  002352  0E5F               	movlw	95
  4611  002354  1407               	andwf	toupper@c^0,w,c
  4612  002356  6E07               	movwf	?_toupper^0,c
  4613  002358  6A08               	clrf	(?_toupper+1)^0,c
  4614  00235A  EFB3  F011         	goto	l1300
  4615  00235E                     l1295:
  4616  00235E  C007  F007         	movff	toupper@c,?_toupper
  4617  002362  C008  F008         	movff	toupper@c+1,?_toupper+1
  4618  002366                     l1300:
  4619  002366  0012               	return		;funcret
  4620  002368                     __end_of_toupper:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _islower *****************
  4624 ;; Defined at:
  4625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  c               2    0[COMRAM] int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2    0[COMRAM] int 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4639 ;;      Params:         2       0       0       0       0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4641 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4642 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4643 ;;Total ram usage:        6 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_toupper
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text22
  4653  002698                     __ptext22:
  4654                           	callstack 0
  4655  002698                     _islower:
  4656                           	callstack 24
  4657  002698  0E9F               	movlw	159
  4658  00269A  6E03               	movwf	??_islower^0,c
  4659  00269C  0EFF               	movlw	255
  4660  00269E  6E04               	movwf	(??_islower+1)^0,c
  4661  0026A0  C001  F005         	movff	islower@c,??_islower+2
  4662  0026A4  C002  F006         	movff	islower@c+1,??_islower+3
  4663  0026A8  5003               	movf	??_islower^0,w,c
  4664  0026AA  2605               	addwf	(??_islower+2)^0,f,c
  4665  0026AC  5004               	movf	(??_islower+1)^0,w,c
  4666  0026AE  2206               	addwfc	(??_islower+3)^0,f,c
  4667  0026B0  5006               	movf	(??_islower+3)^0,w,c
  4668  0026B2  E10A               	bnz	u1630
  4669  0026B4  0E1A               	movlw	26
  4670  0026B6  5C05               	subwf	(??_islower+2)^0,w,c
  4671  0026B8  A0D8               	btfss	status,0,c
  4672  0026BA  EF61  F013         	goto	u1631
  4673  0026BE  EF64  F013         	goto	u1630
  4674  0026C2                     u1631:
  4675  0026C2  0E01               	movlw	1
  4676  0026C4  EF65  F013         	goto	u1640
  4677  0026C8                     u1630:
  4678  0026C8  0E00               	movlw	0
  4679  0026CA                     u1640:
  4680  0026CA  6E01               	movwf	?_islower^0,c
  4681  0026CC  6A02               	clrf	(?_islower+1)^0,c
  4682  0026CE  0012               	return		;funcret
  4683  0026D0                     __end_of_islower:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _isupper *****************
  4687 ;; Defined at:
  4688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  c               2    0[COMRAM] int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2    0[COMRAM] int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4702 ;;      Params:         2       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4705 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_xtoa
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text23
  4716  0026D0                     __ptext23:
  4717                           	callstack 0
  4718  0026D0                     _isupper:
  4719                           	callstack 25
  4720  0026D0  0EBF               	movlw	191
  4721  0026D2  6E03               	movwf	??_isupper^0,c
  4722  0026D4  0EFF               	movlw	255
  4723  0026D6  6E04               	movwf	(??_isupper+1)^0,c
  4724  0026D8  C001  F005         	movff	isupper@c,??_isupper+2
  4725  0026DC  C002  F006         	movff	isupper@c+1,??_isupper+3
  4726  0026E0  5003               	movf	??_isupper^0,w,c
  4727  0026E2  2605               	addwf	(??_isupper+2)^0,f,c
  4728  0026E4  5004               	movf	(??_isupper+1)^0,w,c
  4729  0026E6  2206               	addwfc	(??_isupper+3)^0,f,c
  4730  0026E8  5006               	movf	(??_isupper+3)^0,w,c
  4731  0026EA  E10A               	bnz	u1830
  4732  0026EC  0E1A               	movlw	26
  4733  0026EE  5C05               	subwf	(??_isupper+2)^0,w,c
  4734  0026F0  A0D8               	btfss	status,0,c
  4735  0026F2  EF7D  F013         	goto	u1831
  4736  0026F6  EF80  F013         	goto	u1830
  4737  0026FA                     u1831:
  4738  0026FA  0E01               	movlw	1
  4739  0026FC  EF81  F013         	goto	u1840
  4740  002700                     u1830:
  4741  002700  0E00               	movlw	0
  4742  002702                     u1840:
  4743  002702  6E01               	movwf	?_isupper^0,c
  4744  002704  6A02               	clrf	(?_isupper+1)^0,c
  4745  002706  0012               	return		;funcret
  4746  002708                     __end_of_isupper:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _isalpha *****************
  4750 ;; Defined at:
  4751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  c               2    0[COMRAM] int 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  2    0[COMRAM] int 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         2       0       0       0       0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4767 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4768 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        6 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_xtoa
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text24
  4779  002622                     __ptext24:
  4780                           	callstack 0
  4781  002622                     _isalpha:
  4782                           	callstack 25
  4783  002622  0E9F               	movlw	159
  4784  002624  6E03               	movwf	??_isalpha^0,c
  4785  002626  0EFF               	movlw	255
  4786  002628  6E04               	movwf	(??_isalpha+1)^0,c
  4787  00262A  0E20               	movlw	32
  4788  00262C  1001               	iorwf	isalpha@c^0,w,c
  4789  00262E  6E05               	movwf	(??_isalpha+2)^0,c
  4790  002630  0E00               	movlw	0
  4791  002632  1002               	iorwf	(isalpha@c+1)^0,w,c
  4792  002634  6E06               	movwf	(??_isalpha+3)^0,c
  4793  002636  5003               	movf	??_isalpha^0,w,c
  4794  002638  2605               	addwf	(??_isalpha+2)^0,f,c
  4795  00263A  5004               	movf	(??_isalpha+1)^0,w,c
  4796  00263C  2206               	addwfc	(??_isalpha+3)^0,f,c
  4797  00263E  5006               	movf	(??_isalpha+3)^0,w,c
  4798  002640  E10A               	bnz	u1850
  4799  002642  0E1A               	movlw	26
  4800  002644  5C05               	subwf	(??_isalpha+2)^0,w,c
  4801  002646  A0D8               	btfss	status,0,c
  4802  002648  EF28  F013         	goto	u1851
  4803  00264C  EF2B  F013         	goto	u1850
  4804  002650                     u1851:
  4805  002650  0E01               	movlw	1
  4806  002652  EF2C  F013         	goto	u1860
  4807  002656                     u1850:
  4808  002656  0E00               	movlw	0
  4809  002658                     u1860:
  4810  002658  6E01               	movwf	?_isalpha^0,c
  4811  00265A  6A02               	clrf	(?_isalpha+1)^0,c
  4812  00265C  0012               	return		;funcret
  4813  00265E                     __end_of_isalpha:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _dtoa *****************
  4817 ;; Defined at:
  4818 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4821 ;;		 -> sprintf@f(6), 
  4822 ;;  d               8   29[COMRAM] long long 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  n               8   53[COMRAM] long long 
  4825 ;;  i               2   61[COMRAM] int 
  4826 ;;  s               2   51[COMRAM] int 
  4827 ;;  w               2   49[COMRAM] int 
  4828 ;;  p               2   47[COMRAM] int 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  2   27[COMRAM] int 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4838 ;;      Params:        10       0       0       0       0       0       0       0       0
  4839 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4840 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4841 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4842 ;;Total ram usage:       36 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    4
  4845 ;; This function calls:
  4846 ;;		___aodiv
  4847 ;;		___aomod
  4848 ;;		_abs
  4849 ;;		_pad
  4850 ;; This function is called by:
  4851 ;;		_vfpfcnvrt
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text25
  4856  000F22                     __ptext25:
  4857                           	callstack 0
  4858  000F22                     _dtoa:
  4859                           	callstack 22
  4860  000F22                     
  4861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4862  000F22  C01E  F036         	movff	dtoa@d,dtoa@n
  4863  000F26  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4864  000F2A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4865  000F2E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4866  000F32  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4867  000F36  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4868  000F3A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4869  000F3E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4870  000F42                     
  4871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4872  000F42  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4873  000F44  EFA6  F007         	goto	u1931
  4874  000F48  EFA9  F007         	goto	u1930
  4875  000F4C                     u1931:
  4876  000F4C  0E01               	movlw	1
  4877  000F4E  EFAA  F007         	goto	u1940
  4878  000F52                     u1930:
  4879  000F52  0E00               	movlw	0
  4880  000F54                     u1940:
  4881  000F54  6E34               	movwf	dtoa@s^0,c
  4882  000F56  6A35               	clrf	(dtoa@s+1)^0,c
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4885  000F58  5034               	movf	dtoa@s^0,w,c
  4886  000F5A  1035               	iorwf	(dtoa@s+1)^0,w,c
  4887  000F5C  B4D8               	btfsc	status,2,c
  4888  000F5E  EFB3  F007         	goto	u1951
  4889  000F62  EFB5  F007         	goto	u1950
  4890  000F66                     u1951:
  4891  000F66  EFC5  F007         	goto	l2521
  4892  000F6A                     u1950:
  4893  000F6A                     
  4894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4895  000F6A  1E3D               	comf	(dtoa@n+7)^0,f,c
  4896  000F6C  1E3C               	comf	(dtoa@n+6)^0,f,c
  4897  000F6E  1E3B               	comf	(dtoa@n+5)^0,f,c
  4898  000F70  1E3A               	comf	(dtoa@n+4)^0,f,c
  4899  000F72  1E39               	comf	(dtoa@n+3)^0,f,c
  4900  000F74  1E38               	comf	(dtoa@n+2)^0,f,c
  4901  000F76  1E37               	comf	(dtoa@n+1)^0,f,c
  4902  000F78  6C36               	negf	dtoa@n^0,c
  4903  000F7A  0E00               	movlw	0
  4904  000F7C  2237               	addwfc	(dtoa@n+1)^0,f,c
  4905  000F7E  2238               	addwfc	(dtoa@n+2)^0,f,c
  4906  000F80  2239               	addwfc	(dtoa@n+3)^0,f,c
  4907  000F82  223A               	addwfc	(dtoa@n+4)^0,f,c
  4908  000F84  223B               	addwfc	(dtoa@n+5)^0,f,c
  4909  000F86  223C               	addwfc	(dtoa@n+6)^0,f,c
  4910  000F88  223D               	addwfc	(dtoa@n+7)^0,f,c
  4911  000F8A                     l2521:
  4912                           
  4913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4914  000F8A  0100               	movlb	0	; () banked
  4915  000F8C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4916  000F8E  EFCB  F007         	goto	u1961
  4917  000F92  EFCD  F007         	goto	u1960
  4918  000F96                     u1961:
  4919  000F96  EFCE  F007         	goto	l2525
  4920  000F9A                     u1960:
  4921  000F9A                     
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4924  000F9A  93E6               	bcf	_flags& (0+255),1,b
  4925  000F9C                     l2525:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4929  000F9C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4930  000F9E  EFDB  F007         	goto	u1970
  4931  000FA2  51E5               	movf	(_prec+1)& (0+255),w,b
  4932  000FA4  E106               	bnz	u1971
  4933  000FA6  05E4               	decf	_prec& (0+255),w,b
  4934  000FA8  B0D8               	btfsc	status,0,c
  4935  000FAA  EFD9  F007         	goto	u1971
  4936  000FAE  EFDB  F007         	goto	u1970
  4937  000FB2                     u1971:
  4938  000FB2  EFE1  F007         	goto	l1175
  4939  000FB6                     u1970:
  4940  000FB6                     
  4941                           ; BSR set to: 0
  4942  000FB6  0E00               	movlw	0
  4943  000FB8  6E31               	movwf	(dtoa@p+1)^0,c
  4944  000FBA  0E01               	movlw	1
  4945  000FBC  6E30               	movwf	dtoa@p^0,c
  4946  000FBE  EFE5  F007         	goto	l1177
  4947  000FC2                     l1175:
  4948                           
  4949                           ; BSR set to: 0
  4950  000FC2  C0E4  F030         	movff	_prec,dtoa@p
  4951  000FC6  C0E5  F031         	movff	_prec+1,dtoa@p+1
  4952  000FCA                     l1177:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4956  000FCA  C0E2  F032         	movff	_width,dtoa@w
  4957  000FCE  C0E3  F033         	movff	_width+1,dtoa@w+1
  4958  000FD2                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4961  000FD2  5034               	movf	dtoa@s^0,w,c
  4962  000FD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  4963  000FD6  A4D8               	btfss	status,2,c
  4964  000FD8  EFF0  F007         	goto	u1981
  4965  000FDC  EFF2  F007         	goto	u1980
  4966  000FE0                     u1981:
  4967  000FE0  EFF9  F007         	goto	l2533
  4968  000FE4                     u1980:
  4969  000FE4                     
  4970                           ; BSR set to: 0
  4971  000FE4  A5E6               	btfss	_flags& (0+255),2,b
  4972  000FE6  EFF7  F007         	goto	u1991
  4973  000FEA  EFF9  F007         	goto	u1990
  4974  000FEE                     u1991:
  4975  000FEE  EFFC  F007         	goto	l2535
  4976  000FF2                     u1990:
  4977  000FF2                     l2533:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  4981  000FF2  0632               	decf	dtoa@w^0,f,c
  4982  000FF4  A0D8               	btfss	status,0,c
  4983  000FF6  0633               	decf	(dtoa@w+1)^0,f,c
  4984  000FF8                     l2535:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4988  000FF8  0E00               	movlw	0
  4989  000FFA  6E3F               	movwf	(dtoa@i+1)^0,c
  4990  000FFC  0E1F               	movlw	31
  4991  000FFE  6E3E               	movwf	dtoa@i^0,c
  4992  001000                     
  4993                           ; BSR set to: 0
  4994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4995  001000  0E00               	movlw	0
  4996  001002  0102               	movlb	2	; () banked
  4997  001004  6FEF               	movwf	(_dbuf+31)& (0+255),b
  4998                           
  4999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5000  001006  EF81  F008         	goto	l2549
  5001  00100A                     l2539:
  5002                           
  5003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5004  00100A  063E               	decf	dtoa@i^0,f,c
  5005  00100C  A0D8               	btfss	status,0,c
  5006  00100E  063F               	decf	(dtoa@i+1)^0,f,c
  5007  001010                     
  5008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5009  001010  0ED0               	movlw	low _dbuf
  5010  001012  243E               	addwf	dtoa@i^0,w,c
  5011  001014  6ED9               	movwf	fsr2l,c
  5012  001016  0E02               	movlw	high _dbuf
  5013  001018  203F               	addwfc	(dtoa@i+1)^0,w,c
  5014  00101A  6EDA               	movwf	fsr2h,c
  5015  00101C  C036  F001         	movff	dtoa@n,___aomod@dividend
  5016  001020  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5017  001024  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5018  001028  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5019  00102C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5020  001030  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5021  001034  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5022  001038  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5023  00103C  0E0A               	movlw	10
  5024  00103E  6E09               	movwf	___aomod@divisor^0,c
  5025  001040  0E00               	movlw	0
  5026  001042  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5027  001044  0E00               	movlw	0
  5028  001046  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5029  001048  0E00               	movlw	0
  5030  00104A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5031  00104C  0E00               	movlw	0
  5032  00104E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5033  001050  0E00               	movlw	0
  5034  001052  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5035  001054  0E00               	movlw	0
  5036  001056  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5037  001058  0E00               	movlw	0
  5038  00105A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5039  00105C  EC81  F00D         	call	___aomod	;wreg free
  5040  001060  C001  F026         	movff	?___aomod,??_dtoa
  5041  001064  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5042  001068  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5043  00106C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5044  001070  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5045  001074  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5046  001078  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5047  00107C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5048  001080  C026  F013         	movff	??_dtoa,abs@a
  5049  001084  C028  F014         	movff	??_dtoa+2,abs@a+1
  5050  001088  ECD1  F012         	call	_abs	;wreg free
  5051  00108C  5013               	movf	?_abs^0,w,c
  5052  00108E  0F30               	addlw	48
  5053  001090  6EDF               	movwf	indf2,c
  5054  001092                     
  5055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5056  001092  0630               	decf	dtoa@p^0,f,c
  5057  001094  A0D8               	btfss	status,0,c
  5058  001096  0631               	decf	(dtoa@p+1)^0,f,c
  5059  001098                     
  5060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5061  001098  0632               	decf	dtoa@w^0,f,c
  5062  00109A  A0D8               	btfss	status,0,c
  5063  00109C  0633               	decf	(dtoa@w+1)^0,f,c
  5064  00109E                     
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5066  00109E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5067  0010A2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5068  0010A6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5069  0010AA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5070  0010AE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5071  0010B2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5072  0010B6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5073  0010BA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5074  0010BE  0E0A               	movlw	10
  5075  0010C0  6E09               	movwf	___aodiv@divisor^0,c
  5076  0010C2  0E00               	movlw	0
  5077  0010C4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5078  0010C6  0E00               	movlw	0
  5079  0010C8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5080  0010CA  0E00               	movlw	0
  5081  0010CC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5082  0010CE  0E00               	movlw	0
  5083  0010D0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5084  0010D2  0E00               	movlw	0
  5085  0010D4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5086  0010D6  0E00               	movlw	0
  5087  0010D8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5088  0010DA  0E00               	movlw	0
  5089  0010DC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5090  0010DE  ECBD  F00C         	call	___aodiv	;wreg free
  5091  0010E2  C001  F036         	movff	?___aodiv,dtoa@n
  5092  0010E6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5093  0010EA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5094  0010EE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5095  0010F2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5096  0010F6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5097  0010FA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5098  0010FE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5099  001102                     l2549:
  5100                           
  5101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5102  001102  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5103  001104  EF8C  F008         	goto	u2001
  5104  001108  503F               	movf	(dtoa@i+1)^0,w,c
  5105  00110A  E108               	bnz	u2000
  5106  00110C  043E               	decf	dtoa@i^0,w,c
  5107  00110E  A0D8               	btfss	status,0,c
  5108  001110  EF8C  F008         	goto	u2001
  5109  001114  EF8E  F008         	goto	u2000
  5110  001118                     u2001:
  5111  001118  EFBF  F008         	goto	l2559
  5112  00111C                     u2000:
  5113  00111C  5036               	movf	dtoa@n^0,w,c
  5114  00111E  1037               	iorwf	(dtoa@n+1)^0,w,c
  5115  001120  1038               	iorwf	(dtoa@n+2)^0,w,c
  5116  001122  1039               	iorwf	(dtoa@n+3)^0,w,c
  5117  001124  103A               	iorwf	(dtoa@n+4)^0,w,c
  5118  001126  103B               	iorwf	(dtoa@n+5)^0,w,c
  5119  001128  103C               	iorwf	(dtoa@n+6)^0,w,c
  5120  00112A  103D               	iorwf	(dtoa@n+7)^0,w,c
  5121  00112C  A4D8               	btfss	status,2,c
  5122  00112E  EF9B  F008         	goto	u2011
  5123  001132  EF9D  F008         	goto	u2010
  5124  001136                     u2011:
  5125  001136  EF05  F008         	goto	l2539
  5126  00113A                     u2010:
  5127  00113A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5128  00113C  EFAA  F008         	goto	u2020
  5129  001140  5031               	movf	(dtoa@p+1)^0,w,c
  5130  001142  E106               	bnz	u2021
  5131  001144  0430               	decf	dtoa@p^0,w,c
  5132  001146  B0D8               	btfsc	status,0,c
  5133  001148  EFA8  F008         	goto	u2021
  5134  00114C  EFAA  F008         	goto	u2020
  5135  001150                     u2021:
  5136  001150  EF05  F008         	goto	l2539
  5137  001154                     u2020:
  5138  001154  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5139  001156  EFB5  F008         	goto	u2031
  5140  00115A  5033               	movf	(dtoa@w+1)^0,w,c
  5141  00115C  E108               	bnz	u2030
  5142  00115E  0432               	decf	dtoa@w^0,w,c
  5143  001160  A0D8               	btfss	status,0,c
  5144  001162  EFB5  F008         	goto	u2031
  5145  001166  EFB7  F008         	goto	u2030
  5146  00116A                     u2031:
  5147  00116A  EFBF  F008         	goto	l2559
  5148  00116E                     u2030:
  5149  00116E  0100               	movlb	0	; () banked
  5150  001170  B3E6               	btfsc	_flags& (0+255),1,b
  5151  001172  EFBD  F008         	goto	u2041
  5152  001176  EFBF  F008         	goto	u2040
  5153  00117A                     u2041:
  5154  00117A  EF05  F008         	goto	l2539
  5155  00117E                     u2040:
  5156  00117E                     l2559:
  5157                           
  5158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5159  00117E  5034               	movf	dtoa@s^0,w,c
  5160  001180  1035               	iorwf	(dtoa@s+1)^0,w,c
  5161  001182  A4D8               	btfss	status,2,c
  5162  001184  EFC6  F008         	goto	u2051
  5163  001188  EFC8  F008         	goto	u2050
  5164  00118C                     u2051:
  5165  00118C  EFD0  F008         	goto	l2563
  5166  001190                     u2050:
  5167  001190  0100               	movlb	0	; () banked
  5168  001192  A5E6               	btfss	_flags& (0+255),2,b
  5169  001194  EFCE  F008         	goto	u2061
  5170  001198  EFD0  F008         	goto	u2060
  5171  00119C                     u2061:
  5172  00119C  EFEE  F008         	goto	l2573
  5173  0011A0                     u2060:
  5174  0011A0                     l2563:
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5177  0011A0  063E               	decf	dtoa@i^0,f,c
  5178  0011A2  A0D8               	btfss	status,0,c
  5179  0011A4  063F               	decf	(dtoa@i+1)^0,f,c
  5180  0011A6                     
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5182  0011A6  5034               	movf	dtoa@s^0,w,c
  5183  0011A8  1035               	iorwf	(dtoa@s+1)^0,w,c
  5184  0011AA  A4D8               	btfss	status,2,c
  5185  0011AC  EFDA  F008         	goto	u2071
  5186  0011B0  EFDC  F008         	goto	u2070
  5187  0011B4                     u2071:
  5188  0011B4  EFE2  F008         	goto	l2569
  5189  0011B8                     u2070:
  5190  0011B8  0E00               	movlw	0
  5191  0011BA  6E2F               	movwf	(_dtoa$1353+1)^0,c
  5192  0011BC  0E2B               	movlw	43
  5193  0011BE  6E2E               	movwf	_dtoa$1353^0,c
  5194  0011C0  EFE6  F008         	goto	l2571
  5195  0011C4                     l2569:
  5196  0011C4  0E00               	movlw	0
  5197  0011C6  6E2F               	movwf	(_dtoa$1353+1)^0,c
  5198  0011C8  0E2D               	movlw	45
  5199  0011CA  6E2E               	movwf	_dtoa$1353^0,c
  5200  0011CC                     l2571:
  5201  0011CC  0ED0               	movlw	low _dbuf
  5202  0011CE  243E               	addwf	dtoa@i^0,w,c
  5203  0011D0  6ED9               	movwf	fsr2l,c
  5204  0011D2  0E02               	movlw	high _dbuf
  5205  0011D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  5206  0011D6  6EDA               	movwf	fsr2h,c
  5207  0011D8  C02E  FFDF         	movff	_dtoa$1353,indf2
  5208  0011DC                     l2573:
  5209                           
  5210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5211  0011DC  C01C  F011         	movff	dtoa@fp,pad@fp
  5212  0011E0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5213  0011E4  0ED0               	movlw	low _dbuf
  5214  0011E6  243E               	addwf	dtoa@i^0,w,c
  5215  0011E8  6E13               	movwf	pad@buf^0,c
  5216  0011EA  0E02               	movlw	high _dbuf
  5217  0011EC  203F               	addwfc	(dtoa@i+1)^0,w,c
  5218  0011EE  6E14               	movwf	(pad@buf+1)^0,c
  5219  0011F0  C032  F015         	movff	dtoa@w,pad@p
  5220  0011F4  C033  F016         	movff	dtoa@w+1,pad@p+1
  5221  0011F8  ECDA  F00F         	call	_pad	;wreg free
  5222  0011FC  C011  F01C         	movff	?_pad,?_dtoa
  5223  001200  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5224  001204  0012               	return		;funcret
  5225  001206                     __end_of_dtoa:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function _pad *****************
  5229 ;; Defined at:
  5230 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5233 ;;		 -> sprintf@f(6), 
  5234 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5235 ;;		 -> dbuf(32), 
  5236 ;;  p               2   20[COMRAM] int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  w               2   25[COMRAM] int 
  5239 ;;  i               2   23[COMRAM] int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  2   16[COMRAM] int 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5249 ;;      Params:         6       0       0       0       0       0       0       0       0
  5250 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5251 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5252 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5253 ;;Total ram usage:       11 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    3
  5256 ;; This function calls:
  5257 ;;		_fputc
  5258 ;;		_fputs
  5259 ;;		_strlen
  5260 ;; This function is called by:
  5261 ;;		_dtoa
  5262 ;;		_xtoa
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text26
  5267  001FB4                     __ptext26:
  5268                           	callstack 0
  5269  001FB4                     _pad:
  5270                           	callstack 22
  5271  001FB4                     
  5272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5273  001FB4  0100               	movlb	0	; () banked
  5274  001FB6  A1E6               	btfss	_flags& (0+255),0,b
  5275  001FB8  EFE0  F00F         	goto	u1781
  5276  001FBC  EFE2  F00F         	goto	u1780
  5277  001FC0                     u1781:
  5278  001FC0  EFEC  F00F         	goto	l2457
  5279  001FC4                     u1780:
  5280  001FC4                     
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5283  001FC4  C013  F00A         	movff	pad@buf,fputs@s
  5284  001FC8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5285  001FCC  C011  F00C         	movff	pad@fp,fputs@fp
  5286  001FD0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5287  001FD4  ECAF  F012         	call	_fputs	;wreg free
  5288  001FD8                     l2457:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5291  001FD8  BE16               	btfsc	(pad@p+1)^0,7,c
  5292  001FDA  EFF1  F00F         	goto	u1791
  5293  001FDE  EFF3  F00F         	goto	u1790
  5294  001FE2                     u1791:
  5295  001FE2  EFF9  F00F         	goto	l2461
  5296  001FE6                     u1790:
  5297  001FE6  C015  F01A         	movff	pad@p,pad@w
  5298  001FEA  C016  F01B         	movff	pad@p+1,pad@w+1
  5299  001FEE  EFFD  F00F         	goto	l1164
  5300  001FF2                     l2461:
  5301  001FF2  0E00               	movlw	0
  5302  001FF4  6E1B               	movwf	(pad@w+1)^0,c
  5303  001FF6  0E00               	movlw	0
  5304  001FF8  6E1A               	movwf	pad@w^0,c
  5305  001FFA                     l1164:
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5308  001FFA  0E00               	movlw	0
  5309  001FFC  6E19               	movwf	(pad@i+1)^0,c
  5310  001FFE  0E00               	movlw	0
  5311  002000  6E18               	movwf	pad@i^0,c
  5312                           
  5313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5314  002002  EF0F  F010         	goto	l2467
  5315  002006                     l2463:
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5318  002006  0E00               	movlw	0
  5319  002008  6E02               	movwf	(fputc@c+1)^0,c
  5320  00200A  0E20               	movlw	32
  5321  00200C  6E01               	movwf	fputc@c^0,c
  5322  00200E  C011  F003         	movff	pad@fp,fputc@fp
  5323  002012  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5324  002016  EC75  F00F         	call	_fputc	;wreg free
  5325  00201A                     
  5326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5327  00201A  4A18               	infsnz	pad@i^0,f,c
  5328  00201C  2A19               	incf	(pad@i+1)^0,f,c
  5329  00201E                     l2467:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5332  00201E  501A               	movf	pad@w^0,w,c
  5333  002020  5C18               	subwf	pad@i^0,w,c
  5334  002022  5019               	movf	(pad@i+1)^0,w,c
  5335  002024  0A80               	xorlw	128
  5336  002026  6E17               	movwf	??_pad^0,c
  5337  002028  501B               	movf	(pad@w+1)^0,w,c
  5338  00202A  0A80               	xorlw	128
  5339  00202C  5817               	subwfb	??_pad^0,w,c
  5340  00202E  A0D8               	btfss	status,0,c
  5341  002030  EF1C  F010         	goto	u1801
  5342  002034  EF1E  F010         	goto	u1800
  5343  002038                     u1801:
  5344  002038  EF03  F010         	goto	l2463
  5345  00203C                     u1800:
  5346  00203C                     
  5347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5348  00203C  0100               	movlb	0	; () banked
  5349  00203E  B1E6               	btfsc	_flags& (0+255),0,b
  5350  002040  EF24  F010         	goto	u1811
  5351  002044  EF26  F010         	goto	u1810
  5352  002048                     u1811:
  5353  002048  EF30  F010         	goto	l2471
  5354  00204C                     u1810:
  5355  00204C                     
  5356                           ; BSR set to: 0
  5357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5358  00204C  C013  F00A         	movff	pad@buf,fputs@s
  5359  002050  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5360  002054  C011  F00C         	movff	pad@fp,fputs@fp
  5361  002058  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5362  00205C  ECAF  F012         	call	_fputs	;wreg free
  5363  002060                     l2471:
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5366  002060  C013  F001         	movff	pad@buf,strlen@s
  5367  002064  C014  F002         	movff	pad@buf+1,strlen@s+1
  5368  002068  EC84  F013         	call	_strlen	;wreg free
  5369  00206C  501A               	movf	pad@w^0,w,c
  5370  00206E  2401               	addwf	?_strlen^0,w,c
  5371  002070  6E11               	movwf	?_pad^0,c
  5372  002072  501B               	movf	(pad@w+1)^0,w,c
  5373  002074  2002               	addwfc	(?_strlen+1)^0,w,c
  5374  002076  6E12               	movwf	(?_pad+1)^0,c
  5375  002078  0012               	return		;funcret
  5376  00207A                     __end_of_pad:
  5377                           	callstack 0
  5378                           
  5379 ;; *************** function _strlen *****************
  5380 ;; Defined at:
  5381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5384 ;;		 -> dbuf(32), 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5387 ;;		 -> dbuf(32), 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2    0[COMRAM] unsigned int 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5397 ;;      Params:         2       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5401 ;;Total ram usage:        4 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_pad
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text27
  5411  002708                     __ptext27:
  5412                           	callstack 0
  5413  002708                     _strlen:
  5414                           	callstack 24
  5415  002708  C001  F003         	movff	strlen@s,strlen@a
  5416  00270C  C002  F004         	movff	strlen@s+1,strlen@a+1
  5417  002710  EF8C  F013         	goto	l2363
  5418  002714                     l2361:
  5419  002714  4A01               	infsnz	strlen@s^0,f,c
  5420  002716  2A02               	incf	(strlen@s+1)^0,f,c
  5421  002718                     l2363:
  5422  002718  C001  FFD9         	movff	strlen@s,fsr2l
  5423  00271C  C002  FFDA         	movff	strlen@s+1,fsr2h
  5424  002720  50DF               	movf	indf2,w,c
  5425  002722  A4D8               	btfss	status,2,c
  5426  002724  EF96  F013         	goto	u1621
  5427  002728  EF98  F013         	goto	u1620
  5428  00272C                     u1621:
  5429  00272C  EF8A  F013         	goto	l2361
  5430  002730                     u1620:
  5431  002730  5003               	movf	strlen@a^0,w,c
  5432  002732  5C01               	subwf	strlen@s^0,w,c
  5433  002734  6E01               	movwf	?_strlen^0,c
  5434  002736  5004               	movf	(strlen@a+1)^0,w,c
  5435  002738  5802               	subwfb	(strlen@s+1)^0,w,c
  5436  00273A  6E02               	movwf	(?_strlen+1)^0,c
  5437  00273C  0012               	return		;funcret
  5438  00273E                     __end_of_strlen:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _fputs *****************
  5442 ;; Defined at:
  5443 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5446 ;;		 -> dbuf(32), 
  5447 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5448 ;;		 -> sprintf@f(6), 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  i               2   14[COMRAM] int 
  5451 ;;  c               1   13[COMRAM] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    9[COMRAM] int 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5461 ;;      Params:         4       0       0       0       0       0       0       0       0
  5462 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5464 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5465 ;;Total ram usage:        7 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    2
  5468 ;; This function calls:
  5469 ;;		_fputc
  5470 ;; This function is called by:
  5471 ;;		_pad
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text28
  5476  00255E                     __ptext28:
  5477                           	callstack 0
  5478  00255E                     _fputs:
  5479                           	callstack 22
  5480  00255E  0E00               	movlw	0
  5481  002560  6E10               	movwf	(fputs@i+1)^0,c
  5482  002562  0E00               	movlw	0
  5483  002564  6E0F               	movwf	fputs@i^0,c
  5484  002566  EFC0  F012         	goto	l2357
  5485  00256A                     l2353:
  5486  00256A  C00E  F001         	movff	fputs@c,fputc@c
  5487  00256E  6A02               	clrf	(fputc@c+1)^0,c
  5488  002570  C00C  F003         	movff	fputs@fp,fputc@fp
  5489  002574  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5490  002578  EC75  F00F         	call	_fputc	;wreg free
  5491  00257C  4A0F               	infsnz	fputs@i^0,f,c
  5492  00257E  2A10               	incf	(fputs@i+1)^0,f,c
  5493  002580                     l2357:
  5494  002580  500F               	movf	fputs@i^0,w,c
  5495  002582  240A               	addwf	fputs@s^0,w,c
  5496  002584  6ED9               	movwf	fsr2l,c
  5497  002586  5010               	movf	(fputs@i+1)^0,w,c
  5498  002588  200B               	addwfc	(fputs@s+1)^0,w,c
  5499  00258A  6EDA               	movwf	fsr2h,c
  5500  00258C  50DF               	movf	indf2,w,c
  5501  00258E  6E0E               	movwf	fputs@c^0,c
  5502  002590  500E               	movf	fputs@c^0,w,c
  5503  002592  A4D8               	btfss	status,2,c
  5504  002594  EFCE  F012         	goto	u1611
  5505  002598  EFD0  F012         	goto	u1610
  5506  00259C                     u1611:
  5507  00259C  EFB5  F012         	goto	l2353
  5508  0025A0                     u1610:
  5509  0025A0  0012               	return		;funcret
  5510  0025A2                     __end_of_fputs:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _fputc *****************
  5514 ;; Defined at:
  5515 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  c               2    0[COMRAM] int 
  5518 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5519 ;;		 -> sprintf@f(6), 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  2    0[COMRAM] int 
  5524 ;; Registers used:
  5525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5531 ;;      Params:         4       0       0       0       0       0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5533 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5534 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5535 ;;Total ram usage:        9 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		_putch
  5540 ;; This function is called by:
  5541 ;;		_pad
  5542 ;;		_vfpfcnvrt
  5543 ;;		_fputs
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text29
  5548  001EEA                     __ptext29:
  5549                           	callstack 0
  5550  001EEA                     _fputc:
  5551                           	callstack 22
  5552  001EEA  5003               	movf	fputc@fp^0,w,c
  5553  001EEC  1004               	iorwf	(fputc@fp+1)^0,w,c
  5554  001EEE  B4D8               	btfsc	status,2,c
  5555  001EF0  EF7C  F00F         	goto	u1571
  5556  001EF4  EF7E  F00F         	goto	u1570
  5557  001EF8                     u1571:
  5558  001EF8  EF87  F00F         	goto	l2341
  5559  001EFC                     u1570:
  5560  001EFC  5003               	movf	fputc@fp^0,w,c
  5561  001EFE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5562  001F00  A4D8               	btfss	status,2,c
  5563  001F02  EF85  F00F         	goto	u1581
  5564  001F06  EF87  F00F         	goto	u1580
  5565  001F0A                     u1581:
  5566  001F0A  EF8C  F00F         	goto	l2343
  5567  001F0E                     u1580:
  5568  001F0E                     l2341:
  5569  001F0E  5001               	movf	fputc@c^0,w,c
  5570  001F10  EC70  F014         	call	_putch
  5571  001F14  EFD9  F00F         	goto	l1273
  5572  001F18                     l2343:
  5573  001F18  EE20 F004          	lfsr	2,4
  5574  001F1C  5003               	movf	fputc@fp^0,w,c
  5575  001F1E  26D9               	addwf	fsr2l,f,c
  5576  001F20  5004               	movf	(fputc@fp+1)^0,w,c
  5577  001F22  22DA               	addwfc	fsr2h,f,c
  5578  001F24  50DE               	movf	postinc2,w,c
  5579  001F26  10DE               	iorwf	postinc2,w,c
  5580  001F28  B4D8               	btfsc	status,2,c
  5581  001F2A  EF99  F00F         	goto	u1591
  5582  001F2E  EF9B  F00F         	goto	u1590
  5583  001F32                     u1591:
  5584  001F32  EFB6  F00F         	goto	l2347
  5585  001F36                     u1590:
  5586  001F36  EE20 F004          	lfsr	2,4
  5587  001F3A  5003               	movf	fputc@fp^0,w,c
  5588  001F3C  26D9               	addwf	fsr2l,f,c
  5589  001F3E  5004               	movf	(fputc@fp+1)^0,w,c
  5590  001F40  22DA               	addwfc	fsr2h,f,c
  5591  001F42  EE10 F002          	lfsr	1,2
  5592  001F46  5003               	movf	fputc@fp^0,w,c
  5593  001F48  26E1               	addwf	fsr1l,f,c
  5594  001F4A  5004               	movf	(fputc@fp+1)^0,w,c
  5595  001F4C  22E2               	addwfc	fsr1h,f,c
  5596  001F4E  50DE               	movf	postinc2,w,c
  5597  001F50  5CE6               	subwf	postinc1,w,c
  5598  001F52  50E6               	movf	postinc1,w,c
  5599  001F54  0A80               	xorlw	128
  5600  001F56  6E09               	movwf	(??_fputc+4)^0,c
  5601  001F58  50DE               	movf	postinc2,w,c
  5602  001F5A  0A80               	xorlw	128
  5603  001F5C  5809               	subwfb	(??_fputc+4)^0,w,c
  5604  001F5E  B0D8               	btfsc	status,0,c
  5605  001F60  EFB4  F00F         	goto	u1601
  5606  001F64  EFB6  F00F         	goto	u1600
  5607  001F68                     u1601:
  5608  001F68  EFD9  F00F         	goto	l1273
  5609  001F6C                     u1600:
  5610  001F6C                     l2347:
  5611  001F6C  EE20 F002          	lfsr	2,2
  5612  001F70  5003               	movf	fputc@fp^0,w,c
  5613  001F72  26D9               	addwf	fsr2l,f,c
  5614  001F74  5004               	movf	(fputc@fp+1)^0,w,c
  5615  001F76  22DA               	addwfc	fsr2h,f,c
  5616  001F78  CFDE F005          	movff	postinc2,??_fputc
  5617  001F7C  CFDD F006          	movff	postdec2,??_fputc+1
  5618  001F80  C003  FFD9         	movff	fputc@fp,fsr2l
  5619  001F84  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5620  001F88  CFDE F007          	movff	postinc2,??_fputc+2
  5621  001F8C  CFDD F008          	movff	postdec2,??_fputc+3
  5622  001F90  5005               	movf	??_fputc^0,w,c
  5623  001F92  2407               	addwf	(??_fputc+2)^0,w,c
  5624  001F94  6ED9               	movwf	fsr2l,c
  5625  001F96  5006               	movf	(??_fputc+1)^0,w,c
  5626  001F98  2008               	addwfc	(??_fputc+3)^0,w,c
  5627  001F9A  6EDA               	movwf	fsr2h,c
  5628  001F9C  C001  FFDF         	movff	fputc@c,indf2
  5629  001FA0  EE20 F002          	lfsr	2,2
  5630  001FA4  5003               	movf	fputc@fp^0,w,c
  5631  001FA6  26D9               	addwf	fsr2l,f,c
  5632  001FA8  5004               	movf	(fputc@fp+1)^0,w,c
  5633  001FAA  22DA               	addwfc	fsr2h,f,c
  5634  001FAC  2ADE               	incf	postinc2,f,c
  5635  001FAE  0E00               	movlw	0
  5636  001FB0  22DD               	addwfc	postdec2,f,c
  5637  001FB2                     l1273:
  5638  001FB2  0012               	return		;funcret
  5639  001FB4                     __end_of_fputc:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function _putch *****************
  5643 ;; Defined at:
  5644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  c               1    wreg     unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  c               1    0[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_fputc
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text30
  5672  0028E0                     __ptext30:
  5673                           	callstack 0
  5674  0028E0                     _putch:
  5675                           	callstack 22
  5676  0028E0  0012               	return		;funcret
  5677  0028E2                     __end_of_putch:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function _abs *****************
  5681 ;; Defined at:
  5682 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  a               2   18[COMRAM] int 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  2   18[COMRAM] int 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5696 ;;      Params:         2       0       0       0       0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5698 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5699 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5700 ;;Total ram usage:        4 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_dtoa
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text31
  5710  0025A2                     __ptext31:
  5711                           	callstack 0
  5712  0025A2                     _abs:
  5713                           	callstack 25
  5714  0025A2  BE14               	btfsc	(abs@a+1)^0,7,c
  5715  0025A4  EFDE  F012         	goto	u1820
  5716  0025A8  5014               	movf	(abs@a+1)^0,w,c
  5717  0025AA  E106               	bnz	u1821
  5718  0025AC  0413               	decf	abs@a^0,w,c
  5719  0025AE  B0D8               	btfsc	status,0,c
  5720  0025B0  EFDC  F012         	goto	u1821
  5721  0025B4  EFDE  F012         	goto	u1820
  5722  0025B8                     u1821:
  5723  0025B8  EFEC  F012         	goto	l1246
  5724  0025BC                     u1820:
  5725  0025BC  C013  F015         	movff	abs@a,??_abs
  5726  0025C0  C014  F016         	movff	abs@a+1,??_abs+1
  5727  0025C4  1E15               	comf	??_abs^0,f,c
  5728  0025C6  1E16               	comf	(??_abs+1)^0,f,c
  5729  0025C8  4A15               	infsnz	??_abs^0,f,c
  5730  0025CA  2A16               	incf	(??_abs+1)^0,f,c
  5731  0025CC  C015  F013         	movff	??_abs,?_abs
  5732  0025D0  C016  F014         	movff	??_abs+1,?_abs+1
  5733  0025D4  EFF0  F012         	goto	l1249
  5734  0025D8                     l1246:
  5735  0025D8  C013  F013         	movff	abs@a,?_abs
  5736  0025DC  C014  F014         	movff	abs@a+1,?_abs+1
  5737  0025E0                     l1249:
  5738  0025E0  0012               	return		;funcret
  5739  0025E2                     __end_of_abs:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function ___aomod *****************
  5743 ;; Defined at:
  5744 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  dividend        8    0[COMRAM] long long 
  5747 ;;  divisor         8    8[COMRAM] long long 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  sign            1   17[COMRAM] unsigned char 
  5750 ;;  counter         1   16[COMRAM] unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  8    0[COMRAM] long long 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5760 ;;      Params:        16       0       0       0       0       0       0       0       0
  5761 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5763 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5764 ;;Total ram usage:       18 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_dtoa
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text32
  5774  001B02                     __ptext32:
  5775                           	callstack 0
  5776  001B02                     ___aomod:
  5777                           	callstack 25
  5778  001B02  0E00               	movlw	0
  5779  001B04  6E12               	movwf	___aomod@sign^0,c
  5780  001B06  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5781  001B08  EF8A  F00D         	goto	u1720
  5782  001B0C  EF88  F00D         	goto	u1721
  5783  001B10                     u1721:
  5784  001B10  EF9C  F00D         	goto	l2425
  5785  001B14                     u1720:
  5786  001B14  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5787  001B16  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5788  001B18  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5789  001B1A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5790  001B1C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5791  001B1E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5792  001B20  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5793  001B22  6C01               	negf	___aomod@dividend^0,c
  5794  001B24  0E00               	movlw	0
  5795  001B26  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5796  001B28  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5797  001B2A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5798  001B2C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5799  001B2E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5800  001B30  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5801  001B32  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5802  001B34  0E01               	movlw	1
  5803  001B36  6E12               	movwf	___aomod@sign^0,c
  5804  001B38                     l2425:
  5805  001B38  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5806  001B3A  EFA3  F00D         	goto	u1730
  5807  001B3E  EFA1  F00D         	goto	u1731
  5808  001B42                     u1731:
  5809  001B42  EFB3  F00D         	goto	l2429
  5810  001B46                     u1730:
  5811  001B46  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5812  001B48  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5813  001B4A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5814  001B4C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5815  001B4E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5816  001B50  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5817  001B52  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5818  001B54  6C09               	negf	___aomod@divisor^0,c
  5819  001B56  0E00               	movlw	0
  5820  001B58  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5821  001B5A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5822  001B5C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5823  001B5E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5824  001B60  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5825  001B62  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5826  001B64  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5827  001B66                     l2429:
  5828  001B66  5009               	movf	___aomod@divisor^0,w,c
  5829  001B68  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5830  001B6A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5831  001B6C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5832  001B6E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5833  001B70  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5834  001B72  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5835  001B74  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5836  001B76  B4D8               	btfsc	status,2,c
  5837  001B78  EFC0  F00D         	goto	u1741
  5838  001B7C  EFC2  F00D         	goto	u1740
  5839  001B80                     u1741:
  5840  001B80  EF0A  F00E         	goto	l2445
  5841  001B84                     u1740:
  5842  001B84  0E01               	movlw	1
  5843  001B86  6E11               	movwf	___aomod@counter^0,c
  5844  001B88  EFD0  F00D         	goto	l2435
  5845  001B8C                     l2433:
  5846  001B8C  90D8               	bcf	status,0,c
  5847  001B8E  3609               	rlcf	___aomod@divisor^0,f,c
  5848  001B90  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5849  001B92  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5850  001B94  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5851  001B96  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5852  001B98  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5853  001B9A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5854  001B9C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5855  001B9E  2A11               	incf	___aomod@counter^0,f,c
  5856  001BA0                     l2435:
  5857  001BA0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5858  001BA2  EFD5  F00D         	goto	u1751
  5859  001BA6  EFD7  F00D         	goto	u1750
  5860  001BAA                     u1751:
  5861  001BAA  EFC6  F00D         	goto	l2433
  5862  001BAE                     u1750:
  5863  001BAE                     l2437:
  5864  001BAE  5009               	movf	___aomod@divisor^0,w,c
  5865  001BB0  5C01               	subwf	___aomod@dividend^0,w,c
  5866  001BB2  500A               	movf	(___aomod@divisor+1)^0,w,c
  5867  001BB4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5868  001BB6  500B               	movf	(___aomod@divisor+2)^0,w,c
  5869  001BB8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5870  001BBA  500C               	movf	(___aomod@divisor+3)^0,w,c
  5871  001BBC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5872  001BBE  500D               	movf	(___aomod@divisor+4)^0,w,c
  5873  001BC0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5874  001BC2  500E               	movf	(___aomod@divisor+5)^0,w,c
  5875  001BC4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5876  001BC6  500F               	movf	(___aomod@divisor+6)^0,w,c
  5877  001BC8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5878  001BCA  5010               	movf	(___aomod@divisor+7)^0,w,c
  5879  001BCC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5880  001BCE  A0D8               	btfss	status,0,c
  5881  001BD0  EFEC  F00D         	goto	u1761
  5882  001BD4  EFEE  F00D         	goto	u1760
  5883  001BD8                     u1761:
  5884  001BD8  EFFE  F00D         	goto	l2441
  5885  001BDC                     u1760:
  5886  001BDC  5009               	movf	___aomod@divisor^0,w,c
  5887  001BDE  5E01               	subwf	___aomod@dividend^0,f,c
  5888  001BE0  500A               	movf	(___aomod@divisor+1)^0,w,c
  5889  001BE2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5890  001BE4  500B               	movf	(___aomod@divisor+2)^0,w,c
  5891  001BE6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5892  001BE8  500C               	movf	(___aomod@divisor+3)^0,w,c
  5893  001BEA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5894  001BEC  500D               	movf	(___aomod@divisor+4)^0,w,c
  5895  001BEE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5896  001BF0  500E               	movf	(___aomod@divisor+5)^0,w,c
  5897  001BF2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5898  001BF4  500F               	movf	(___aomod@divisor+6)^0,w,c
  5899  001BF6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5900  001BF8  5010               	movf	(___aomod@divisor+7)^0,w,c
  5901  001BFA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5902  001BFC                     l2441:
  5903  001BFC  90D8               	bcf	status,0,c
  5904  001BFE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5905  001C00  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5906  001C02  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5907  001C04  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5908  001C06  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5909  001C08  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5910  001C0A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5911  001C0C  3209               	rrcf	___aomod@divisor^0,f,c
  5912  001C0E  2E11               	decfsz	___aomod@counter^0,f,c
  5913  001C10  EFD7  F00D         	goto	l2437
  5914  001C14                     l2445:
  5915  001C14  5012               	movf	___aomod@sign^0,w,c
  5916  001C16  B4D8               	btfsc	status,2,c
  5917  001C18  EF10  F00E         	goto	u1771
  5918  001C1C  EF12  F00E         	goto	u1770
  5919  001C20                     u1771:
  5920  001C20  EF22  F00E         	goto	l2449
  5921  001C24                     u1770:
  5922  001C24  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5923  001C26  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5924  001C28  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5925  001C2A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5926  001C2C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5927  001C2E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5928  001C30  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5929  001C32  6C01               	negf	___aomod@dividend^0,c
  5930  001C34  0E00               	movlw	0
  5931  001C36  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5932  001C38  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5933  001C3A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5934  001C3C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5935  001C3E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5936  001C40  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5937  001C42  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5938  001C44                     l2449:
  5939  001C44  C001  F001         	movff	___aomod@dividend,?___aomod
  5940  001C48  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5941  001C4C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5942  001C50  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5943  001C54  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5944  001C58  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5945  001C5C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5946  001C60  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5947  001C64  0012               	return		;funcret
  5948  001C66                     __end_of___aomod:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function ___aodiv *****************
  5952 ;; Defined at:
  5953 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  dividend        8    0[COMRAM] long long 
  5956 ;;  divisor         8    8[COMRAM] long long 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  quotient        8   18[COMRAM] long long 
  5959 ;;  sign            1   17[COMRAM] unsigned char 
  5960 ;;  counter         1   16[COMRAM] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  8    0[COMRAM] long long 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5970 ;;      Params:        16       0       0       0       0       0       0       0       0
  5971 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5973 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5974 ;;Total ram usage:       26 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_dtoa
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text33
  5984  00197A                     __ptext33:
  5985                           	callstack 0
  5986  00197A                     ___aodiv:
  5987                           	callstack 25
  5988  00197A  0E00               	movlw	0
  5989  00197C  6E12               	movwf	___aodiv@sign^0,c
  5990  00197E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5991  001980  EFC6  F00C         	goto	u1650
  5992  001984  EFC4  F00C         	goto	u1651
  5993  001988                     u1651:
  5994  001988  EFD8  F00C         	goto	l2381
  5995  00198C                     u1650:
  5996  00198C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5997  00198E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5998  001990  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5999  001992  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6000  001994  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6001  001996  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6002  001998  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6003  00199A  6C09               	negf	___aodiv@divisor^0,c
  6004  00199C  0E00               	movlw	0
  6005  00199E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6006  0019A0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6007  0019A2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6008  0019A4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6009  0019A6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6010  0019A8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6011  0019AA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6012  0019AC  0E01               	movlw	1
  6013  0019AE  6E12               	movwf	___aodiv@sign^0,c
  6014  0019B0                     l2381:
  6015  0019B0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6016  0019B2  EFDF  F00C         	goto	u1660
  6017  0019B6  EFDD  F00C         	goto	u1661
  6018  0019BA                     u1661:
  6019  0019BA  EFF1  F00C         	goto	l2387
  6020  0019BE                     u1660:
  6021  0019BE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6022  0019C0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6023  0019C2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6024  0019C4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6025  0019C6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6026  0019C8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6027  0019CA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6028  0019CC  6C01               	negf	___aodiv@dividend^0,c
  6029  0019CE  0E00               	movlw	0
  6030  0019D0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6031  0019D2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6032  0019D4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6033  0019D6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6034  0019D8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6035  0019DA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6036  0019DC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6037  0019DE  0E01               	movlw	1
  6038  0019E0  1A12               	xorwf	___aodiv@sign^0,f,c
  6039  0019E2                     l2387:
  6040  0019E2  EE20  F013         	lfsr	2,___aodiv@quotient
  6041  0019E6  0E07               	movlw	7
  6042  0019E8                     u1671:
  6043  0019E8  6ADE               	clrf	postinc2,c
  6044  0019EA  06E8               	decf	wreg,f,c
  6045  0019EC  E2FD               	bc	u1671
  6046  0019EE  5009               	movf	___aodiv@divisor^0,w,c
  6047  0019F0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6048  0019F2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6049  0019F4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6050  0019F6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6051  0019F8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6052  0019FA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6053  0019FC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6054  0019FE  B4D8               	btfsc	status,2,c
  6055  001A00  EF04  F00D         	goto	u1681
  6056  001A04  EF06  F00D         	goto	u1680
  6057  001A08                     u1681:
  6058  001A08  EF58  F00D         	goto	l2409
  6059  001A0C                     u1680:
  6060  001A0C  0E01               	movlw	1
  6061  001A0E  6E11               	movwf	___aodiv@counter^0,c
  6062  001A10  EF14  F00D         	goto	l2395
  6063  001A14                     l2393:
  6064  001A14  90D8               	bcf	status,0,c
  6065  001A16  3609               	rlcf	___aodiv@divisor^0,f,c
  6066  001A18  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6067  001A1A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6068  001A1C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6069  001A1E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6070  001A20  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6071  001A22  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6072  001A24  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6073  001A26  2A11               	incf	___aodiv@counter^0,f,c
  6074  001A28                     l2395:
  6075  001A28  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6076  001A2A  EF19  F00D         	goto	u1691
  6077  001A2E  EF1B  F00D         	goto	u1690
  6078  001A32                     u1691:
  6079  001A32  EF0A  F00D         	goto	l2393
  6080  001A36                     u1690:
  6081  001A36                     l2397:
  6082  001A36  90D8               	bcf	status,0,c
  6083  001A38  3613               	rlcf	___aodiv@quotient^0,f,c
  6084  001A3A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6085  001A3C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6086  001A3E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6087  001A40  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6088  001A42  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6089  001A44  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6090  001A46  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6091  001A48  5009               	movf	___aodiv@divisor^0,w,c
  6092  001A4A  5C01               	subwf	___aodiv@dividend^0,w,c
  6093  001A4C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6094  001A4E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6095  001A50  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6096  001A52  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6097  001A54  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6098  001A56  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6099  001A58  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6100  001A5A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6101  001A5C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6102  001A5E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6103  001A60  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6104  001A62  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6105  001A64  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6106  001A66  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6107  001A68  A0D8               	btfss	status,0,c
  6108  001A6A  EF39  F00D         	goto	u1701
  6109  001A6E  EF3B  F00D         	goto	u1700
  6110  001A72                     u1701:
  6111  001A72  EF4C  F00D         	goto	l2405
  6112  001A76                     u1700:
  6113  001A76  5009               	movf	___aodiv@divisor^0,w,c
  6114  001A78  5E01               	subwf	___aodiv@dividend^0,f,c
  6115  001A7A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6116  001A7C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6117  001A7E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6118  001A80  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6119  001A82  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6120  001A84  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6121  001A86  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6122  001A88  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6123  001A8A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6124  001A8C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6125  001A8E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6126  001A90  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6127  001A92  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6128  001A94  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6129  001A96  8013               	bsf	___aodiv@quotient^0,0,c
  6130  001A98                     l2405:
  6131  001A98  90D8               	bcf	status,0,c
  6132  001A9A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6133  001A9C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6134  001A9E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6135  001AA0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6136  001AA2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6137  001AA4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6138  001AA6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6139  001AA8  3209               	rrcf	___aodiv@divisor^0,f,c
  6140  001AAA  2E11               	decfsz	___aodiv@counter^0,f,c
  6141  001AAC  EF1B  F00D         	goto	l2397
  6142  001AB0                     l2409:
  6143  001AB0  5012               	movf	___aodiv@sign^0,w,c
  6144  001AB2  B4D8               	btfsc	status,2,c
  6145  001AB4  EF5E  F00D         	goto	u1711
  6146  001AB8  EF60  F00D         	goto	u1710
  6147  001ABC                     u1711:
  6148  001ABC  EF70  F00D         	goto	l2413
  6149  001AC0                     u1710:
  6150  001AC0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6151  001AC2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6152  001AC4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6153  001AC6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6154  001AC8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6155  001ACA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6156  001ACC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6157  001ACE  6C13               	negf	___aodiv@quotient^0,c
  6158  001AD0  0E00               	movlw	0
  6159  001AD2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6160  001AD4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6161  001AD6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6162  001AD8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6163  001ADA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6164  001ADC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6165  001ADE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6166  001AE0                     l2413:
  6167  001AE0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6168  001AE4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6169  001AE8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6170  001AEC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6171  001AF0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6172  001AF4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6173  001AF8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6174  001AFC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6175  001B00  0012               	return		;funcret
  6176  001B02                     __end_of___aodiv:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _LCD_String_xy *****************
  6180 ;; Defined at:
  6181 ;;		line 86 in file "LCD_16x2.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  row             1    wreg     unsigned char 
  6184 ;;  pos             1    9[COMRAM] unsigned char 
  6185 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  6186 ;;		 -> STR_28(3), STR_27(3), date(10), hours(10), 
  6187 ;;		 -> STR_10(3), STR_9(3), STR_8(5), STR_7(4), 
  6188 ;;		 -> value(10), STR_2(12), STR_1(12), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  row             1   12[COMRAM] unsigned char 
  6191 ;;  location        1   13[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6201 ;;      Params:         3       0       0       0       0       0       0       0       0
  6202 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6204 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6205 ;;Total ram usage:        5 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    3
  6208 ;; This function calls:
  6209 ;;		_LCD_Command
  6210 ;;		_LCD_String
  6211 ;; This function is called by:
  6212 ;;		_main
  6213 ;;		_imprimirTemHum
  6214 ;;		_mostrarFechaHora
  6215 ;;		_verificarHora
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text34
  6220  0025E2                     __ptext34:
  6221                           	callstack 0
  6222  0025E2                     _LCD_String_xy:
  6223                           	callstack 26
  6224                           
  6225                           ;incstack = 0
  6226                           ;LCD_String_xy@row stored from wreg
  6227  0025E2  6E0D               	movwf	LCD_String_xy@row^0,c
  6228  0025E4                     
  6229                           ;LCD_16x2.c: 89:     if(row<1)
  6230  0025E4  500D               	movf	LCD_String_xy@row^0,w,c
  6231  0025E6  A4D8               	btfss	status,2,c
  6232  0025E8  EFF8  F012         	goto	u2451
  6233  0025EC  EFFA  F012         	goto	u2450
  6234  0025F0                     u2451:
  6235  0025F0  EF03  F013         	goto	l2813
  6236  0025F4                     u2450:
  6237  0025F4                     
  6238                           ;LCD_16x2.c: 90:     {;LCD_16x2.c: 91:         location=(0x80) | ((pos) & 0x0f);
  6239  0025F4  500A               	movf	LCD_String_xy@pos^0,w,c
  6240  0025F6  0B0F               	andlw	15
  6241  0025F8  0980               	iorlw	128
  6242  0025FA  6E0E               	movwf	LCD_String_xy@location^0,c
  6243  0025FC                     
  6244                           ;LCD_16x2.c: 92:         LCD_Command(location);
  6245  0025FC  500E               	movf	LCD_String_xy@location^0,w,c
  6246  0025FE  EC29  F014         	call	_LCD_Command
  6247                           
  6248                           ;LCD_16x2.c: 93:     }
  6249  002602  EF0A  F013         	goto	l2817
  6250  002606                     l2813:
  6251                           
  6252                           ;LCD_16x2.c: 95:     {;LCD_16x2.c: 96:         location=(0xC0) | ((pos) & 0x0f);
  6253  002606  500A               	movf	LCD_String_xy@pos^0,w,c
  6254  002608  0B0F               	andlw	15
  6255  00260A  09C0               	iorlw	192
  6256  00260C  6E0E               	movwf	LCD_String_xy@location^0,c
  6257  00260E                     
  6258                           ;LCD_16x2.c: 97:         LCD_Command(location);
  6259  00260E  500E               	movf	LCD_String_xy@location^0,w,c
  6260  002610  EC29  F014         	call	_LCD_Command
  6261  002614                     l2817:
  6262                           
  6263                           ;LCD_16x2.c: 101:     LCD_String(msg);
  6264  002614  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  6265  002618  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  6266  00261C  ECB4  F011         	call	_LCD_String	;wreg free
  6267  002620  0012               	return		;funcret
  6268  002622                     __end_of_LCD_String_xy:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _LCD_String *****************
  6272 ;; Defined at:
  6273 ;;		line 76 in file "LCD_16x2.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  6276 ;;		 -> STR_28(3), STR_27(3), STR_26(4), STR_25(4), 
  6277 ;;		 -> STR_24(4), STR_23(4), STR_22(4), STR_21(4), 
  6278 ;;		 -> STR_20(4), year(10), month(10), date(10), 
  6279 ;;		 -> hours(10), mins(10), secs(10), STR_10(3), 
  6280 ;;		 -> STR_9(3), STR_8(5), STR_7(4), value(10), 
  6281 ;;		 -> STR_2(12), STR_1(12), 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6293 ;;      Params:         2       0       0       0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6296 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6297 ;;Total ram usage:        2 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    2
  6300 ;; This function calls:
  6301 ;;		_LCD_Char
  6302 ;; This function is called by:
  6303 ;;		_LCD_String_xy
  6304 ;;		_imprimirTemHum
  6305 ;;		_mostrarFechaHora
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text35
  6310  002368                     __ptext35:
  6311                           	callstack 0
  6312  002368                     _LCD_String:
  6313                           	callstack 26
  6314  002368                     
  6315                           ;LCD_16x2.c: 76: void LCD_String(const char *msg);LCD_16x2.c: 77: {;LCD_16x2.c: 78:  whi
      +                          le((*msg)!=0)
  6316  002368  EFCA  F011         	goto	l2749
  6317  00236C                     l2745:
  6318                           
  6319                           ;LCD_16x2.c: 79:  {;LCD_16x2.c: 80:    LCD_Char(*msg);
  6320  00236C  C008  FFF6         	movff	LCD_String@msg,tblptrl
  6321  002370  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  6322  002374  6AF8               	clrf	tblptru,c
  6323  002376  0E07               	movlw	(high __ramtop+-1)
  6324  002378  64F7               	cpfsgt	tblptrh,c
  6325  00237A  D003               	bra	u2347
  6326  00237C  0008               	tblrd		*
  6327  00237E  50F5               	movf	tablat,w,c
  6328  002380  D005               	bra	u2340
  6329  002382                     u2347:
  6330  002382  CFF6 FFE1          	movff	tblptrl,fsr1l
  6331  002386  CFF7 FFE2          	movff	tblptrh,fsr1h
  6332  00238A  50E7               	movf	indf1,w,c
  6333  00238C                     u2340:
  6334  00238C  EC1B  F014         	call	_LCD_Char
  6335  002390                     
  6336                           ;LCD_16x2.c: 81:    msg++;
  6337  002390  4A08               	infsnz	LCD_String@msg^0,f,c
  6338  002392  2A09               	incf	(LCD_String@msg+1)^0,f,c
  6339  002394                     l2749:
  6340                           
  6341                           ;LCD_16x2.c: 78:  while((*msg)!=0)
  6342  002394  C008  FFF6         	movff	LCD_String@msg,tblptrl
  6343  002398  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  6344  00239C  6AF8               	clrf	tblptru,c
  6345  00239E  0E07               	movlw	(high __ramtop+-1)
  6346  0023A0  64F7               	cpfsgt	tblptrh,c
  6347  0023A2  D003               	bra	u2357
  6348  0023A4  0008               	tblrd		*
  6349  0023A6  50F5               	movf	tablat,w,c
  6350  0023A8  D005               	bra	u2350
  6351  0023AA                     u2357:
  6352  0023AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  6353  0023AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  6354  0023B2  50E7               	movf	indf1,w,c
  6355  0023B4                     u2350:
  6356  0023B4  0900               	iorlw	0
  6357  0023B6  A4D8               	btfss	status,2,c
  6358  0023B8  EFE0  F011         	goto	u2361
  6359  0023BC  EFE2  F011         	goto	u2360
  6360  0023C0                     u2361:
  6361  0023C0  EFB6  F011         	goto	l2745
  6362  0023C4                     u2360:
  6363  0023C4  0012               	return		;funcret
  6364  0023C6                     __end_of_LCD_String:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _LCD_Char *****************
  6368 ;; Defined at:
  6369 ;;		line 65 in file "LCD_16x2.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  dat             1    wreg     unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  dat             1    6[COMRAM] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0
  6384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6386 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6387 ;;Total ram usage:        1 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    1
  6390 ;; This function calls:
  6391 ;;		_MSdelay
  6392 ;; This function is called by:
  6393 ;;		_LCD_String
  6394 ;;		_imprimirTemHum
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text36
  6399  002836                     __ptext36:
  6400                           	callstack 0
  6401  002836                     _LCD_Char:
  6402                           	callstack 26
  6403                           
  6404                           ;incstack = 0
  6405                           ;LCD_Char@dat stored from wreg
  6406  002836  6E07               	movwf	LCD_Char@dat^0,c
  6407  002838                     
  6408                           ;LCD_16x2.c: 65: void LCD_Char(char dat);LCD_16x2.c: 66: {;LCD_16x2.c: 67:  LATD= dat;
  6409  002838  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  6410  00283C                     
  6411                           ;LCD_16x2.c: 68:  LATC0 = 1;
  6412  00283C  808B               	bsf	3979,0,c	;volatile
  6413  00283E                     
  6414                           ;LCD_16x2.c: 69:  LATC1=1;
  6415  00283E  828B               	bsf	3979,1,c	;volatile
  6416  002840                     
  6417                           ;LCD_16x2.c: 70:  __nop();
  6418  002840  F000               	nop	
  6419  002842                     
  6420                           ;LCD_16x2.c: 71:  LATC1=0;
  6421  002842  928B               	bcf	3979,1,c	;volatile
  6422  002844                     
  6423                           ;LCD_16x2.c: 72:     MSdelay(1);
  6424  002844  0E00               	movlw	0
  6425  002846  6E02               	movwf	(MSdelay@val+1)^0,c
  6426  002848  0E01               	movlw	1
  6427  00284A  6E01               	movwf	MSdelay@val^0,c
  6428  00284C  EC67  F012         	call	_MSdelay	;wreg free
  6429  002850  0012               	return		;funcret
  6430  002852                     __end_of_LCD_Char:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _LCD_Command *****************
  6434 ;; Defined at:
  6435 ;;		line 54 in file "LCD_16x2.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  cmd             1    wreg     unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  cmd             1    6[COMRAM] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6452 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        1 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    1
  6456 ;; This function calls:
  6457 ;;		_MSdelay
  6458 ;; This function is called by:
  6459 ;;		_LCD_Init
  6460 ;;		_LCD_String_xy
  6461 ;;		_LCD_Clear
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text37
  6466  002852                     __ptext37:
  6467                           	callstack 0
  6468  002852                     _LCD_Command:
  6469                           	callstack 27
  6470                           
  6471                           ;incstack = 0
  6472                           ;LCD_Command@cmd stored from wreg
  6473  002852  6E07               	movwf	LCD_Command@cmd^0,c
  6474  002854                     
  6475                           ;LCD_16x2.c: 54: void LCD_Command(char cmd );LCD_16x2.c: 55: {;LCD_16x2.c: 56:  LATD= cm
      +                          d;
  6476  002854  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  6477  002858                     
  6478                           ;LCD_16x2.c: 57:  LATC0 = 0;
  6479  002858  908B               	bcf	3979,0,c	;volatile
  6480  00285A                     
  6481                           ;LCD_16x2.c: 58:  LATC1 = 1;
  6482  00285A  828B               	bsf	3979,1,c	;volatile
  6483  00285C                     
  6484                           ;LCD_16x2.c: 59:  __nop();
  6485  00285C  F000               	nop	
  6486  00285E                     
  6487                           ;LCD_16x2.c: 60:  LATC1 = 0;
  6488  00285E  928B               	bcf	3979,1,c	;volatile
  6489  002860                     
  6490                           ;LCD_16x2.c: 61:     MSdelay(3);
  6491  002860  0E00               	movlw	0
  6492  002862  6E02               	movwf	(MSdelay@val+1)^0,c
  6493  002864  0E03               	movlw	3
  6494  002866  6E01               	movwf	MSdelay@val^0,c
  6495  002868  EC67  F012         	call	_MSdelay	;wreg free
  6496  00286C  0012               	return		;funcret
  6497  00286E                     __end_of_LCD_Command:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _encenderBombillas *****************
  6501 ;; Defined at:
  6502 ;;		line 303 in file "Controlador.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  i               2  164[BANK1 ] int 
  6507 ;;  i               2  162[BANK1 ] int 
  6508 ;;  i               2  160[BANK1 ] int 
  6509 ;;  i               2  158[BANK1 ] int 
  6510 ;;  i               2  156[BANK1 ] int 
  6511 ;;  i               2  154[BANK1 ] int 
  6512 ;;  buffer_TX      19  135[BANK1 ] unsigned char [19]
  6513 ;;  buffer_TX      27  108[BANK1 ] unsigned char [27]
  6514 ;;  buffer_TX      27   81[BANK1 ] unsigned char [27]
  6515 ;;  buffer_TX      27   54[BANK1 ] unsigned char [27]
  6516 ;;  buffer_TX      27   27[BANK1 ] unsigned char [27]
  6517 ;;  buffer_TX      27    0[BANK1 ] unsigned char [27]
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0
  6528 ;;      Locals:         0       0     166       0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6530 ;;      Totals:         0       0     166       0       0       0       0       0       0
  6531 ;;Total ram usage:      166 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    1
  6534 ;; This function calls:
  6535 ;;		_MSdelay
  6536 ;;		_onLEDS
  6537 ;; This function is called by:
  6538 ;;		_main
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text38
  6543  000862                     __ptext38:
  6544                           	callstack 0
  6545  000862                     _encenderBombillas:
  6546                           	callstack 29
  6547  000862                     
  6548                           ;Controlador.c: 304:     onLEDS(T_Integral);
  6549  000862  0100               	movlb	0	; () banked
  6550  000864  51F9               	movf	_T_Integral& (0+255),w,b
  6551  000866  EC0D  F00F         	call	_onLEDS
  6552  00086A                     
  6553                           ;Controlador.c: 305:     if (T_Integral < 30 && acum == 0) {
  6554  00086A  0E1E               	movlw	30
  6555  00086C  0100               	movlb	0	; () banked
  6556  00086E  61F9               	cpfslt	_T_Integral& (0+255),b
  6557  000870  EF3C  F004         	goto	u2611
  6558  000874  EF3E  F004         	goto	u2610
  6559  000878                     u2611:
  6560  000878  EF81  F004         	goto	l2981
  6561  00087C                     u2610:
  6562  00087C                     
  6563                           ; BSR set to: 0
  6564  00087C  0101               	movlb	1	; () banked
  6565  00087E  51A8               	movf	_acum& (0+255),w,b
  6566  000880  11A9               	iorwf	(_acum+1)& (0+255),w,b
  6567  000882  A4D8               	btfss	status,2,c
  6568  000884  EF46  F004         	goto	u2621
  6569  000888  EF48  F004         	goto	u2620
  6570  00088C                     u2621:
  6571  00088C  EF81  F004         	goto	l2981
  6572  000890                     u2620:
  6573  000890                     
  6574                           ; BSR set to: 1
  6575                           ;Controlador.c: 306:         PORTAbits.RA0 = 1;
  6576  000890  8080               	bsf	128,0,c	;volatile
  6577  000892                     
  6578                           ; BSR set to: 1
  6579                           ;Controlador.c: 307:         char buffer_TX[] = "Se encendio la bombilla 1\r";
  6580  000892  EE22  F051         	lfsr	2,encenderBombillas@F3589
  6581  000896  EE11  F000         	lfsr	1,encenderBombillas@buffer_TX
  6582  00089A  0E1A               	movlw	26
  6583  00089C                     u2631:
  6584  00089C  CFDB FFE3          	movff	plusw2,plusw1
  6585  0008A0  06E8               	decf	wreg,f,c
  6586  0008A2  E2FC               	bc	u2631
  6587  0008A4                     
  6588                           ; BSR set to: 1
  6589                           ;Controlador.c: 308:         for (int i = 0; i < 27; i++) {
  6590  0008A4  0E00               	movlw	0
  6591  0008A6  6F9B               	movwf	(encenderBombillas@i+1)& (0+255),b
  6592  0008A8  0E00               	movlw	0
  6593  0008AA  6F9A               	movwf	encenderBombillas@i& (0+255),b
  6594  0008AC                     l371:
  6595                           
  6596                           ;Controlador.c: 310:             while (!TXSTAbits.TRMT) {
  6597  0008AC  A2AC               	btfss	172,1,c	;volatile
  6598  0008AE  EF5B  F004         	goto	u2641
  6599  0008B2  EF5D  F004         	goto	u2640
  6600  0008B6                     u2641:
  6601  0008B6  EF56  F004         	goto	l371
  6602  0008BA                     u2640:
  6603  0008BA                     
  6604                           ;Controlador.c: 313:             TXREG = buffer_TX[i];
  6605  0008BA  0E00               	movlw	low encenderBombillas@buffer_TX
  6606  0008BC  0101               	movlb	1	; () banked
  6607  0008BE  259A               	addwf	encenderBombillas@i& (0+255),w,b
  6608  0008C0  6ED9               	movwf	fsr2l,c
  6609  0008C2  0E01               	movlw	high encenderBombillas@buffer_TX
  6610  0008C4  219B               	addwfc	(encenderBombillas@i+1)& (0+255),w,b
  6611  0008C6  6EDA               	movwf	fsr2h,c
  6612  0008C8  50DF               	movf	indf2,w,c
  6613  0008CA  6EAD               	movwf	173,c	;volatile
  6614  0008CC                     
  6615                           ; BSR set to: 1
  6616                           ;Controlador.c: 314:         }
  6617  0008CC  4B9A               	infsnz	encenderBombillas@i& (0+255),f,b
  6618  0008CE  2B9B               	incf	(encenderBombillas@i+1)& (0+255),f,b
  6619  0008D0                     
  6620                           ; BSR set to: 1
  6621  0008D0  BF9B               	btfsc	(encenderBombillas@i+1)& (0+255),7,b
  6622  0008D2  EF74  F004         	goto	u2651
  6623  0008D6  519B               	movf	(encenderBombillas@i+1)& (0+255),w,b
  6624  0008D8  E109               	bnz	u2650
  6625  0008DA  0E1B               	movlw	27
  6626  0008DC  5D9A               	subwf	encenderBombillas@i& (0+255),w,b
  6627  0008DE  A0D8               	btfss	status,0,c
  6628  0008E0  EF74  F004         	goto	u2651
  6629  0008E4  EF76  F004         	goto	u2650
  6630  0008E8                     u2651:
  6631  0008E8  EF56  F004         	goto	l371
  6632  0008EC                     u2650:
  6633  0008EC                     
  6634                           ; BSR set to: 1
  6635                           ;Controlador.c: 315:         T_Integral = T_Integral + 6;
  6636  0008EC  0100               	movlb	0	; () banked
  6637  0008EE  51F9               	movf	_T_Integral& (0+255),w,b
  6638  0008F0  0F06               	addlw	6
  6639  0008F2  6FF9               	movwf	_T_Integral& (0+255),b
  6640  0008F4                     
  6641                           ; BSR set to: 0
  6642                           ;Controlador.c: 316:         acum = 6;
  6643  0008F4  0E00               	movlw	0
  6644  0008F6  0101               	movlb	1	; () banked
  6645  0008F8  6FA9               	movwf	(_acum+1)& (0+255),b
  6646  0008FA  0E06               	movlw	6
  6647  0008FC  6FA8               	movwf	_acum& (0+255),b
  6648                           
  6649                           ;Controlador.c: 318:     } else if (T_Integral < 30 && acum == 6) {
  6650  0008FE  EFF7  F005         	goto	l3097
  6651  000902                     l2981:
  6652  000902  0E1E               	movlw	30
  6653  000904  0100               	movlb	0	; () banked
  6654  000906  61F9               	cpfslt	_T_Integral& (0+255),b
  6655  000908  EF88  F004         	goto	u2661
  6656  00090C  EF8A  F004         	goto	u2660
  6657  000910                     u2661:
  6658  000910  EFCE  F004         	goto	l3005
  6659  000914                     u2660:
  6660  000914                     
  6661                           ; BSR set to: 0
  6662  000914  0E06               	movlw	6
  6663  000916  0101               	movlb	1	; () banked
  6664  000918  19A8               	xorwf	_acum& (0+255),w,b
  6665  00091A  11A9               	iorwf	(_acum+1)& (0+255),w,b
  6666  00091C  A4D8               	btfss	status,2,c
  6667  00091E  EF93  F004         	goto	u2671
  6668  000922  EF95  F004         	goto	u2670
  6669  000926                     u2671:
  6670  000926  EFCE  F004         	goto	l3005
  6671  00092A                     u2670:
  6672  00092A                     
  6673                           ; BSR set to: 1
  6674                           ;Controlador.c: 319:         PORTAbits.RA1 = 1;
  6675  00092A  8280               	bsf	128,1,c	;volatile
  6676  00092C                     
  6677                           ; BSR set to: 1
  6678                           ;Controlador.c: 321:         char buffer_TX[] = "Se encendio la bombilla 2\r";
  6679  00092C  EE22  F036         	lfsr	2,encenderBombillas@F3592
  6680  000930  EE11  F01B         	lfsr	1,encenderBombillas@buffer_TX_787
  6681  000934  0E1A               	movlw	26
  6682  000936                     u2681:
  6683  000936  CFDB FFE3          	movff	plusw2,plusw1
  6684  00093A  06E8               	decf	wreg,f,c
  6685  00093C  E2FC               	bc	u2681
  6686  00093E                     
  6687                           ; BSR set to: 1
  6688                           ;Controlador.c: 322:         for (int i = 0; i < 27; i++) {
  6689  00093E  0E00               	movlw	0
  6690  000940  6F9D               	movwf	(encenderBombillas@i_788+1)& (0+255),b
  6691  000942  0E00               	movlw	0
  6692  000944  6F9C               	movwf	encenderBombillas@i_788& (0+255),b
  6693  000946                     l380:
  6694                           
  6695                           ;Controlador.c: 324:             while (!TXSTAbits.TRMT) {
  6696  000946  A2AC               	btfss	172,1,c	;volatile
  6697  000948  EFA8  F004         	goto	u2691
  6698  00094C  EFAA  F004         	goto	u2690
  6699  000950                     u2691:
  6700  000950  EFA3  F004         	goto	l380
  6701  000954                     u2690:
  6702  000954                     
  6703                           ;Controlador.c: 327:             TXREG = buffer_TX[i];
  6704  000954  0E1B               	movlw	low encenderBombillas@buffer_TX_787
  6705  000956  0101               	movlb	1	; () banked
  6706  000958  259C               	addwf	encenderBombillas@i_788& (0+255),w,b
  6707  00095A  6ED9               	movwf	fsr2l,c
  6708  00095C  0E01               	movlw	high encenderBombillas@buffer_TX_787
  6709  00095E  219D               	addwfc	(encenderBombillas@i_788+1)& (0+255),w,b
  6710  000960  6EDA               	movwf	fsr2h,c
  6711  000962  50DF               	movf	indf2,w,c
  6712  000964  6EAD               	movwf	173,c	;volatile
  6713  000966                     
  6714                           ; BSR set to: 1
  6715                           ;Controlador.c: 328:         }
  6716  000966  4B9C               	infsnz	encenderBombillas@i_788& (0+255),f,b
  6717  000968  2B9D               	incf	(encenderBombillas@i_788+1)& (0+255),f,b
  6718  00096A                     
  6719                           ; BSR set to: 1
  6720  00096A  BF9D               	btfsc	(encenderBombillas@i_788+1)& (0+255),7,b
  6721  00096C  EFC1  F004         	goto	u2701
  6722  000970  519D               	movf	(encenderBombillas@i_788+1)& (0+255),w,b
  6723  000972  E109               	bnz	u2700
  6724  000974  0E1B               	movlw	27
  6725  000976  5D9C               	subwf	encenderBombillas@i_788& (0+255),w,b
  6726  000978  A0D8               	btfss	status,0,c
  6727  00097A  EFC1  F004         	goto	u2701
  6728  00097E  EFC3  F004         	goto	u2700
  6729  000982                     u2701:
  6730  000982  EFA3  F004         	goto	l380
  6731  000986                     u2700:
  6732  000986                     
  6733                           ; BSR set to: 1
  6734                           ;Controlador.c: 330:         T_Integral = T_Integral + 6;
  6735  000986  0100               	movlb	0	; () banked
  6736  000988  51F9               	movf	_T_Integral& (0+255),w,b
  6737  00098A  0F06               	addlw	6
  6738  00098C  6FF9               	movwf	_T_Integral& (0+255),b
  6739  00098E                     
  6740                           ; BSR set to: 0
  6741                           ;Controlador.c: 331:         acum = 12;
  6742  00098E  0E00               	movlw	0
  6743  000990  0101               	movlb	1	; () banked
  6744  000992  6FA9               	movwf	(_acum+1)& (0+255),b
  6745  000994  0E0C               	movlw	12
  6746  000996  6FA8               	movwf	_acum& (0+255),b
  6747                           
  6748                           ;Controlador.c: 332:     } else if (T_Integral < 30 && acum == 12) {
  6749  000998  EFF7  F005         	goto	l3097
  6750  00099C                     l3005:
  6751  00099C  0E1E               	movlw	30
  6752  00099E  0100               	movlb	0	; () banked
  6753  0009A0  61F9               	cpfslt	_T_Integral& (0+255),b
  6754  0009A2  EFD5  F004         	goto	u2711
  6755  0009A6  EFD7  F004         	goto	u2710
  6756  0009AA                     u2711:
  6757  0009AA  EF1B  F005         	goto	l3029
  6758  0009AE                     u2710:
  6759  0009AE                     
  6760                           ; BSR set to: 0
  6761  0009AE  0E0C               	movlw	12
  6762  0009B0  0101               	movlb	1	; () banked
  6763  0009B2  19A8               	xorwf	_acum& (0+255),w,b
  6764  0009B4  11A9               	iorwf	(_acum+1)& (0+255),w,b
  6765  0009B6  A4D8               	btfss	status,2,c
  6766  0009B8  EFE0  F004         	goto	u2721
  6767  0009BC  EFE2  F004         	goto	u2720
  6768  0009C0                     u2721:
  6769  0009C0  EF1B  F005         	goto	l3029
  6770  0009C4                     u2720:
  6771  0009C4                     
  6772                           ; BSR set to: 1
  6773                           ;Controlador.c: 333:         PORTAbits.RA2 = 1;
  6774  0009C4  8480               	bsf	128,2,c	;volatile
  6775  0009C6                     
  6776                           ; BSR set to: 1
  6777                           ;Controlador.c: 335:         char buffer_TX[] = "Se encendio la bombilla 3\r";
  6778  0009C6  EE22  F01B         	lfsr	2,encenderBombillas@F3595
  6779  0009CA  EE11  F036         	lfsr	1,encenderBombillas@buffer_TX_790
  6780  0009CE  0E1A               	movlw	26
  6781  0009D0                     u2731:
  6782  0009D0  CFDB FFE3          	movff	plusw2,plusw1
  6783  0009D4  06E8               	decf	wreg,f,c
  6784  0009D6  E2FC               	bc	u2731
  6785  0009D8                     
  6786                           ; BSR set to: 1
  6787                           ;Controlador.c: 336:         for (int i = 0; i < 27; i++) {
  6788  0009D8  0E00               	movlw	0
  6789  0009DA  6F9F               	movwf	(encenderBombillas@i_791+1)& (0+255),b
  6790  0009DC  0E00               	movlw	0
  6791  0009DE  6F9E               	movwf	encenderBombillas@i_791& (0+255),b
  6792  0009E0                     l389:
  6793                           
  6794                           ;Controlador.c: 338:             while (!TXSTAbits.TRMT) {
  6795  0009E0  A2AC               	btfss	172,1,c	;volatile
  6796  0009E2  EFF5  F004         	goto	u2741
  6797  0009E6  EFF7  F004         	goto	u2740
  6798  0009EA                     u2741:
  6799  0009EA  EFF0  F004         	goto	l389
  6800  0009EE                     u2740:
  6801  0009EE                     
  6802                           ;Controlador.c: 341:             TXREG = buffer_TX[i];
  6803  0009EE  0E36               	movlw	low encenderBombillas@buffer_TX_790
  6804  0009F0  0101               	movlb	1	; () banked
  6805  0009F2  259E               	addwf	encenderBombillas@i_791& (0+255),w,b
  6806  0009F4  6ED9               	movwf	fsr2l,c
  6807  0009F6  0E01               	movlw	high encenderBombillas@buffer_TX_790
  6808  0009F8  219F               	addwfc	(encenderBombillas@i_791+1)& (0+255),w,b
  6809  0009FA  6EDA               	movwf	fsr2h,c
  6810  0009FC  50DF               	movf	indf2,w,c
  6811  0009FE  6EAD               	movwf	173,c	;volatile
  6812  000A00                     
  6813                           ; BSR set to: 1
  6814                           ;Controlador.c: 342:         }
  6815  000A00  4B9E               	infsnz	encenderBombillas@i_791& (0+255),f,b
  6816  000A02  2B9F               	incf	(encenderBombillas@i_791+1)& (0+255),f,b
  6817  000A04                     
  6818                           ; BSR set to: 1
  6819  000A04  BF9F               	btfsc	(encenderBombillas@i_791+1)& (0+255),7,b
  6820  000A06  EF0E  F005         	goto	u2751
  6821  000A0A  519F               	movf	(encenderBombillas@i_791+1)& (0+255),w,b
  6822  000A0C  E109               	bnz	u2750
  6823  000A0E  0E1B               	movlw	27
  6824  000A10  5D9E               	subwf	encenderBombillas@i_791& (0+255),w,b
  6825  000A12  A0D8               	btfss	status,0,c
  6826  000A14  EF0E  F005         	goto	u2751
  6827  000A18  EF10  F005         	goto	u2750
  6828  000A1C                     u2751:
  6829  000A1C  EFF0  F004         	goto	l389
  6830  000A20                     u2750:
  6831  000A20                     
  6832                           ; BSR set to: 1
  6833                           ;Controlador.c: 344:         T_Integral = T_Integral + 6;
  6834  000A20  0100               	movlb	0	; () banked
  6835  000A22  51F9               	movf	_T_Integral& (0+255),w,b
  6836  000A24  0F06               	addlw	6
  6837  000A26  6FF9               	movwf	_T_Integral& (0+255),b
  6838  000A28                     
  6839                           ; BSR set to: 0
  6840                           ;Controlador.c: 345:         acum = 18;
  6841  000A28  0E00               	movlw	0
  6842  000A2A  0101               	movlb	1	; () banked
  6843  000A2C  6FA9               	movwf	(_acum+1)& (0+255),b
  6844  000A2E  0E12               	movlw	18
  6845  000A30  6FA8               	movwf	_acum& (0+255),b
  6846                           
  6847                           ;Controlador.c: 346:     } else if (T_Integral < 30 && acum == 18) {
  6848  000A32  EFF7  F005         	goto	l3097
  6849  000A36                     l3029:
  6850  000A36  0E1E               	movlw	30
  6851  000A38  0100               	movlb	0	; () banked
  6852  000A3A  61F9               	cpfslt	_T_Integral& (0+255),b
  6853  000A3C  EF22  F005         	goto	u2761
  6854  000A40  EF24  F005         	goto	u2760
  6855  000A44                     u2761:
  6856  000A44  EF68  F005         	goto	l3053
  6857  000A48                     u2760:
  6858  000A48                     
  6859                           ; BSR set to: 0
  6860  000A48  0E12               	movlw	18
  6861  000A4A  0101               	movlb	1	; () banked
  6862  000A4C  19A8               	xorwf	_acum& (0+255),w,b
  6863  000A4E  11A9               	iorwf	(_acum+1)& (0+255),w,b
  6864  000A50  A4D8               	btfss	status,2,c
  6865  000A52  EF2D  F005         	goto	u2771
  6866  000A56  EF2F  F005         	goto	u2770
  6867  000A5A                     u2771:
  6868  000A5A  EF68  F005         	goto	l3053
  6869  000A5E                     u2770:
  6870  000A5E                     
  6871                           ; BSR set to: 1
  6872                           ;Controlador.c: 347:         PORTAbits.RA3 = 1;
  6873  000A5E  8680               	bsf	128,3,c	;volatile
  6874  000A60                     
  6875                           ; BSR set to: 1
  6876                           ;Controlador.c: 349:         char buffer_TX[] = "Se encendio la bombilla 4\r";
  6877  000A60  EE22  F000         	lfsr	2,encenderBombillas@F3598
  6878  000A64  EE11  F051         	lfsr	1,encenderBombillas@buffer_TX_793
  6879  000A68  0E1A               	movlw	26
  6880  000A6A                     u2781:
  6881  000A6A  CFDB FFE3          	movff	plusw2,plusw1
  6882  000A6E  06E8               	decf	wreg,f,c
  6883  000A70  E2FC               	bc	u2781
  6884  000A72                     
  6885                           ; BSR set to: 1
  6886                           ;Controlador.c: 350:         for (int i = 0; i < 27; i++) {
  6887  000A72  0E00               	movlw	0
  6888  000A74  6FA1               	movwf	(encenderBombillas@i_794+1)& (0+255),b
  6889  000A76  0E00               	movlw	0
  6890  000A78  6FA0               	movwf	encenderBombillas@i_794& (0+255),b
  6891  000A7A                     l398:
  6892                           
  6893                           ;Controlador.c: 352:             while (!TXSTAbits.TRMT) {
  6894  000A7A  A2AC               	btfss	172,1,c	;volatile
  6895  000A7C  EF42  F005         	goto	u2791
  6896  000A80  EF44  F005         	goto	u2790
  6897  000A84                     u2791:
  6898  000A84  EF3D  F005         	goto	l398
  6899  000A88                     u2790:
  6900  000A88                     
  6901                           ;Controlador.c: 355:             TXREG = buffer_TX[i];
  6902  000A88  0E51               	movlw	low encenderBombillas@buffer_TX_793
  6903  000A8A  0101               	movlb	1	; () banked
  6904  000A8C  25A0               	addwf	encenderBombillas@i_794& (0+255),w,b
  6905  000A8E  6ED9               	movwf	fsr2l,c
  6906  000A90  0E01               	movlw	high encenderBombillas@buffer_TX_793
  6907  000A92  21A1               	addwfc	(encenderBombillas@i_794+1)& (0+255),w,b
  6908  000A94  6EDA               	movwf	fsr2h,c
  6909  000A96  50DF               	movf	indf2,w,c
  6910  000A98  6EAD               	movwf	173,c	;volatile
  6911  000A9A                     
  6912                           ; BSR set to: 1
  6913                           ;Controlador.c: 356:         }
  6914  000A9A  4BA0               	infsnz	encenderBombillas@i_794& (0+255),f,b
  6915  000A9C  2BA1               	incf	(encenderBombillas@i_794+1)& (0+255),f,b
  6916  000A9E                     
  6917                           ; BSR set to: 1
  6918  000A9E  BFA1               	btfsc	(encenderBombillas@i_794+1)& (0+255),7,b
  6919  000AA0  EF5B  F005         	goto	u2801
  6920  000AA4  51A1               	movf	(encenderBombillas@i_794+1)& (0+255),w,b
  6921  000AA6  E109               	bnz	u2800
  6922  000AA8  0E1B               	movlw	27
  6923  000AAA  5DA0               	subwf	encenderBombillas@i_794& (0+255),w,b
  6924  000AAC  A0D8               	btfss	status,0,c
  6925  000AAE  EF5B  F005         	goto	u2801
  6926  000AB2  EF5D  F005         	goto	u2800
  6927  000AB6                     u2801:
  6928  000AB6  EF3D  F005         	goto	l398
  6929  000ABA                     u2800:
  6930  000ABA                     
  6931                           ; BSR set to: 1
  6932                           ;Controlador.c: 358:         T_Integral = T_Integral + 6;
  6933  000ABA  0100               	movlb	0	; () banked
  6934  000ABC  51F9               	movf	_T_Integral& (0+255),w,b
  6935  000ABE  0F06               	addlw	6
  6936  000AC0  6FF9               	movwf	_T_Integral& (0+255),b
  6937  000AC2                     
  6938                           ; BSR set to: 0
  6939                           ;Controlador.c: 359:         acum = 24;
  6940  000AC2  0E00               	movlw	0
  6941  000AC4  0101               	movlb	1	; () banked
  6942  000AC6  6FA9               	movwf	(_acum+1)& (0+255),b
  6943  000AC8  0E18               	movlw	24
  6944  000ACA  6FA8               	movwf	_acum& (0+255),b
  6945                           
  6946                           ;Controlador.c: 360:     } else if (T_Integral < 30 && acum == 24) {
  6947  000ACC  EFF7  F005         	goto	l3097
  6948  000AD0                     l3053:
  6949  000AD0  0E1E               	movlw	30
  6950  000AD2  0100               	movlb	0	; () banked
  6951  000AD4  61F9               	cpfslt	_T_Integral& (0+255),b
  6952  000AD6  EF6F  F005         	goto	u2811
  6953  000ADA  EF71  F005         	goto	u2810
  6954  000ADE                     u2811:
  6955  000ADE  EFB0  F005         	goto	l3075
  6956  000AE2                     u2810:
  6957  000AE2                     
  6958                           ; BSR set to: 0
  6959  000AE2  0E18               	movlw	24
  6960  000AE4  0101               	movlb	1	; () banked
  6961  000AE6  19A8               	xorwf	_acum& (0+255),w,b
  6962  000AE8  11A9               	iorwf	(_acum+1)& (0+255),w,b
  6963  000AEA  A4D8               	btfss	status,2,c
  6964  000AEC  EF7A  F005         	goto	u2821
  6965  000AF0  EF7C  F005         	goto	u2820
  6966  000AF4                     u2821:
  6967  000AF4  EFB0  F005         	goto	l3075
  6968  000AF8                     u2820:
  6969  000AF8                     
  6970                           ; BSR set to: 1
  6971                           ;Controlador.c: 361:         PORTAbits.RA4 = 1;
  6972  000AF8  8880               	bsf	128,4,c	;volatile
  6973  000AFA                     
  6974                           ; BSR set to: 1
  6975                           ;Controlador.c: 363:         char buffer_TX[] = "Se encendio la bombilla 5\r";
  6976  000AFA  EE23  F04A         	lfsr	2,encenderBombillas@F3601
  6977  000AFE  EE11  F06C         	lfsr	1,encenderBombillas@buffer_TX_796
  6978  000B02  0E1A               	movlw	26
  6979  000B04                     u2831:
  6980  000B04  CFDB FFE3          	movff	plusw2,plusw1
  6981  000B08  06E8               	decf	wreg,f,c
  6982  000B0A  E2FC               	bc	u2831
  6983  000B0C                     
  6984                           ; BSR set to: 1
  6985                           ;Controlador.c: 364:         for (int i = 0; i < 27; i++) {
  6986  000B0C  0E00               	movlw	0
  6987  000B0E  6FA3               	movwf	(encenderBombillas@i_797+1)& (0+255),b
  6988  000B10  0E00               	movlw	0
  6989  000B12  6FA2               	movwf	encenderBombillas@i_797& (0+255),b
  6990  000B14                     l407:
  6991                           
  6992                           ;Controlador.c: 366:             while (!TXSTAbits.TRMT) {
  6993  000B14  A2AC               	btfss	172,1,c	;volatile
  6994  000B16  EF8F  F005         	goto	u2841
  6995  000B1A  EF91  F005         	goto	u2840
  6996  000B1E                     u2841:
  6997  000B1E  EF8A  F005         	goto	l407
  6998  000B22                     u2840:
  6999  000B22                     
  7000                           ;Controlador.c: 369:             TXREG = buffer_TX[i];
  7001  000B22  0E6C               	movlw	low encenderBombillas@buffer_TX_796
  7002  000B24  0101               	movlb	1	; () banked
  7003  000B26  25A2               	addwf	encenderBombillas@i_797& (0+255),w,b
  7004  000B28  6ED9               	movwf	fsr2l,c
  7005  000B2A  0E01               	movlw	high encenderBombillas@buffer_TX_796
  7006  000B2C  21A3               	addwfc	(encenderBombillas@i_797+1)& (0+255),w,b
  7007  000B2E  6EDA               	movwf	fsr2h,c
  7008  000B30  50DF               	movf	indf2,w,c
  7009  000B32  6EAD               	movwf	173,c	;volatile
  7010  000B34                     
  7011                           ; BSR set to: 1
  7012                           ;Controlador.c: 370:         }
  7013  000B34  4BA2               	infsnz	encenderBombillas@i_797& (0+255),f,b
  7014  000B36  2BA3               	incf	(encenderBombillas@i_797+1)& (0+255),f,b
  7015  000B38                     
  7016                           ; BSR set to: 1
  7017  000B38  BFA3               	btfsc	(encenderBombillas@i_797+1)& (0+255),7,b
  7018  000B3A  EFA8  F005         	goto	u2851
  7019  000B3E  51A3               	movf	(encenderBombillas@i_797+1)& (0+255),w,b
  7020  000B40  E109               	bnz	u2850
  7021  000B42  0E1B               	movlw	27
  7022  000B44  5DA2               	subwf	encenderBombillas@i_797& (0+255),w,b
  7023  000B46  A0D8               	btfss	status,0,c
  7024  000B48  EFA8  F005         	goto	u2851
  7025  000B4C  EFAA  F005         	goto	u2850
  7026  000B50                     u2851:
  7027  000B50  EF8A  F005         	goto	l407
  7028  000B54                     u2850:
  7029  000B54                     
  7030                           ; BSR set to: 1
  7031                           ;Controlador.c: 372:         T_Integral = T_Integral + 6;
  7032  000B54  0100               	movlb	0	; () banked
  7033  000B56  51F9               	movf	_T_Integral& (0+255),w,b
  7034  000B58  0F06               	addlw	6
  7035  000B5A  6FF9               	movwf	_T_Integral& (0+255),b
  7036                           
  7037                           ;Controlador.c: 373:     }
  7038  000B5C  EFF7  F005         	goto	l3097
  7039  000B60                     l3075:
  7040  000B60  0E23               	movlw	35
  7041  000B62  0100               	movlb	0	; () banked
  7042  000B64  65F9               	cpfsgt	_T_Integral& (0+255),b
  7043  000B66  EFB7  F005         	goto	u2861
  7044  000B6A  EFB9  F005         	goto	u2860
  7045  000B6E                     u2861:
  7046  000B6E  EFF3  F005         	goto	l3095
  7047  000B72                     u2860:
  7048  000B72                     
  7049                           ; BSR set to: 0
  7050                           ;Controlador.c: 375:         agr = 1;
  7051  000B72  0E00               	movlw	0
  7052  000B74  6FF7               	movwf	(_agr+1)& (0+255),b
  7053  000B76  0E01               	movlw	1
  7054  000B78  6FF6               	movwf	_agr& (0+255),b
  7055  000B7A                     
  7056                           ; BSR set to: 0
  7057                           ;Controlador.c: 376:         char buffer_TX[] = "Temperatura Alta \r";
  7058  000B7A  EE22  F09B         	lfsr	2,encenderBombillas@F3604
  7059  000B7E  EE11  F087         	lfsr	1,encenderBombillas@buffer_TX_799
  7060  000B82  0E12               	movlw	18
  7061  000B84                     u2871:
  7062  000B84  CFDB FFE3          	movff	plusw2,plusw1
  7063  000B88  06E8               	decf	wreg,f,c
  7064  000B8A  E2FC               	bc	u2871
  7065  000B8C                     
  7066                           ; BSR set to: 0
  7067                           ;Controlador.c: 377:         for (int i = 0; i < 19; i++) {
  7068  000B8C  0E00               	movlw	0
  7069  000B8E  0101               	movlb	1	; () banked
  7070  000B90  6FA5               	movwf	(encenderBombillas@i_800+1)& (0+255),b
  7071  000B92  0E00               	movlw	0
  7072  000B94  6FA4               	movwf	encenderBombillas@i_800& (0+255),b
  7073  000B96                     l416:
  7074                           
  7075                           ;Controlador.c: 379:             while (!TXSTAbits.TRMT) {
  7076  000B96  A2AC               	btfss	172,1,c	;volatile
  7077  000B98  EFD0  F005         	goto	u2881
  7078  000B9C  EFD2  F005         	goto	u2880
  7079  000BA0                     u2881:
  7080  000BA0  EFCB  F005         	goto	l416
  7081  000BA4                     u2880:
  7082  000BA4                     
  7083                           ;Controlador.c: 382:             TXREG = buffer_TX[i];
  7084  000BA4  0E87               	movlw	low encenderBombillas@buffer_TX_799
  7085  000BA6  0101               	movlb	1	; () banked
  7086  000BA8  25A4               	addwf	encenderBombillas@i_800& (0+255),w,b
  7087  000BAA  6ED9               	movwf	fsr2l,c
  7088  000BAC  0E01               	movlw	high encenderBombillas@buffer_TX_799
  7089  000BAE  21A5               	addwfc	(encenderBombillas@i_800+1)& (0+255),w,b
  7090  000BB0  6EDA               	movwf	fsr2h,c
  7091  000BB2  50DF               	movf	indf2,w,c
  7092  000BB4  6EAD               	movwf	173,c	;volatile
  7093  000BB6                     
  7094                           ; BSR set to: 1
  7095                           ;Controlador.c: 383:         }
  7096  000BB6  4BA4               	infsnz	encenderBombillas@i_800& (0+255),f,b
  7097  000BB8  2BA5               	incf	(encenderBombillas@i_800+1)& (0+255),f,b
  7098  000BBA                     
  7099                           ; BSR set to: 1
  7100  000BBA  BFA5               	btfsc	(encenderBombillas@i_800+1)& (0+255),7,b
  7101  000BBC  EFE9  F005         	goto	u2891
  7102  000BC0  51A5               	movf	(encenderBombillas@i_800+1)& (0+255),w,b
  7103  000BC2  E109               	bnz	u2890
  7104  000BC4  0E13               	movlw	19
  7105  000BC6  5DA4               	subwf	encenderBombillas@i_800& (0+255),w,b
  7106  000BC8  A0D8               	btfss	status,0,c
  7107  000BCA  EFE9  F005         	goto	u2891
  7108  000BCE  EFEB  F005         	goto	u2890
  7109  000BD2                     u2891:
  7110  000BD2  EFCB  F005         	goto	l416
  7111  000BD6                     u2890:
  7112  000BD6                     
  7113                           ; BSR set to: 1
  7114                           ;Controlador.c: 384:         MSdelay(100);
  7115  000BD6  0E00               	movlw	0
  7116  000BD8  6E02               	movwf	(MSdelay@val+1)^0,c
  7117  000BDA  0E64               	movlw	100
  7118  000BDC  6E01               	movwf	MSdelay@val^0,c
  7119  000BDE  EC67  F012         	call	_MSdelay	;wreg free
  7120                           
  7121                           ;Controlador.c: 385:     } else
  7122  000BE2  EFF7  F005         	goto	l3097
  7123  000BE6                     l3095:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;Controlador.c: 386:         agr = 1;
  7127  000BE6  0E00               	movlw	0
  7128  000BE8  6FF7               	movwf	(_agr+1)& (0+255),b
  7129  000BEA  0E01               	movlw	1
  7130  000BEC  6FF6               	movwf	_agr& (0+255),b
  7131  000BEE                     l3097:
  7132                           
  7133                           ;Controlador.c: 387:     MSdelay(1000);
  7134  000BEE  0E03               	movlw	3
  7135  000BF0  6E02               	movwf	(MSdelay@val+1)^0,c
  7136  000BF2  0EE8               	movlw	232
  7137  000BF4  6E01               	movwf	MSdelay@val^0,c
  7138  000BF6  EC67  F012         	call	_MSdelay	;wreg free
  7139  000BFA  0012               	return		;funcret
  7140  000BFC                     __end_of_encenderBombillas:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function _onLEDS *****************
  7144 ;; Defined at:
  7145 ;;		line 239 in file "Controlador.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  T_Integral      1    wreg     unsigned char 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  T_Integral      1   19[COMRAM] unsigned char 
  7150 ;;  i               2   22[COMRAM] int 
  7151 ;;  buffer_TX      19    0[COMRAM] unsigned char [19]
  7152 ;;  valor           2   20[COMRAM] int 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0
  7163 ;;      Locals:        24       0       0       0       0       0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7165 ;;      Totals:        24       0       0       0       0       0       0       0       0
  7166 ;;Total ram usage:       24 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_encenderBombillas
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text39
  7176  001E1A                     __ptext39:
  7177                           	callstack 0
  7178  001E1A                     _onLEDS:
  7179                           	callstack 29
  7180                           
  7181                           ;incstack = 0
  7182                           ;onLEDS@T_Integral stored from wreg
  7183  001E1A  6E14               	movwf	onLEDS@T_Integral^0,c
  7184  001E1C                     
  7185                           ;Controlador.c: 240:     int valor = T_Integral;
  7186  001E1C  C014  F015         	movff	onLEDS@T_Integral,onLEDS@valor
  7187  001E20  6A16               	clrf	(onLEDS@valor+1)^0,c
  7188  001E22                     
  7189                           ;Controlador.c: 241:     if (valor < 30)
  7190  001E22  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7191  001E24  EF1F  F00F         	goto	u2460
  7192  001E28  5016               	movf	(onLEDS@valor+1)^0,w,c
  7193  001E2A  E107               	bnz	u2461
  7194  001E2C  0E1E               	movlw	30
  7195  001E2E  5C15               	subwf	onLEDS@valor^0,w,c
  7196  001E30  B0D8               	btfsc	status,0,c
  7197  001E32  EF1D  F00F         	goto	u2461
  7198  001E36  EF1F  F00F         	goto	u2460
  7199  001E3A                     u2461:
  7200  001E3A  EF24  F00F         	goto	l2845
  7201  001E3E                     u2460:
  7202  001E3E                     
  7203                           ;Controlador.c: 242:     {;Controlador.c: 243:         PORTCbits.RC5 = 1;
  7204  001E3E  8A82               	bsf	130,5,c	;volatile
  7205                           
  7206                           ;Controlador.c: 244:         PORTCbits.RC4 = 0;
  7207  001E40  9882               	bcf	130,4,c	;volatile
  7208                           
  7209                           ;Controlador.c: 245:         PORTAbits.RA5 = 0;
  7210  001E42  9A80               	bcf	128,5,c	;volatile
  7211                           
  7212                           ;Controlador.c: 246:     } else if (valor >= 30 && valor <= 35) {
  7213  001E44  EF74  F00F         	goto	l350
  7214  001E48                     l2845:
  7215  001E48  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7216  001E4A  EF30  F00F         	goto	u2471
  7217  001E4E  5016               	movf	(onLEDS@valor+1)^0,w,c
  7218  001E50  E109               	bnz	u2470
  7219  001E52  0E1E               	movlw	30
  7220  001E54  5C15               	subwf	onLEDS@valor^0,w,c
  7221  001E56  A0D8               	btfss	status,0,c
  7222  001E58  EF30  F00F         	goto	u2471
  7223  001E5C  EF32  F00F         	goto	u2470
  7224  001E60                     u2471:
  7225  001E60  EF71  F00F         	goto	l341
  7226  001E64                     u2470:
  7227  001E64  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7228  001E66  EF40  F00F         	goto	u2480
  7229  001E6A  5016               	movf	(onLEDS@valor+1)^0,w,c
  7230  001E6C  E107               	bnz	u2481
  7231  001E6E  0E24               	movlw	36
  7232  001E70  5C15               	subwf	onLEDS@valor^0,w,c
  7233  001E72  B0D8               	btfsc	status,0,c
  7234  001E74  EF3E  F00F         	goto	u2481
  7235  001E78  EF40  F00F         	goto	u2480
  7236  001E7C                     u2481:
  7237  001E7C  EF71  F00F         	goto	l341
  7238  001E80                     u2480:
  7239  001E80                     
  7240                           ;Controlador.c: 247:         PORTCbits.RC5 = 0;
  7241  001E80  9A82               	bcf	130,5,c	;volatile
  7242                           
  7243                           ;Controlador.c: 248:         PORTCbits.RC4 = 1;
  7244  001E82  8882               	bsf	130,4,c	;volatile
  7245                           
  7246                           ;Controlador.c: 249:         PORTAbits.RA5 = 0;
  7247  001E84  9A80               	bcf	128,5,c	;volatile
  7248  001E86                     
  7249                           ;Controlador.c: 250:         char buffer_TX[] = "Temperatura Ideal\r";
  7250  001E86  EE22  F0AE         	lfsr	2,onLEDS@F3580
  7251  001E8A  EE10  F001         	lfsr	1,onLEDS@buffer_TX
  7252  001E8E  0E12               	movlw	18
  7253  001E90                     u2491:
  7254  001E90  CFDB FFE3          	movff	plusw2,plusw1
  7255  001E94  06E8               	decf	wreg,f,c
  7256  001E96  E2FC               	bc	u2491
  7257  001E98                     
  7258                           ;Controlador.c: 251:         for (int i = 0; i < 19; i++) {
  7259  001E98  0E00               	movlw	0
  7260  001E9A  6E18               	movwf	(onLEDS@i+1)^0,c
  7261  001E9C  0E00               	movlw	0
  7262  001E9E  6E17               	movwf	onLEDS@i^0,c
  7263  001EA0                     l346:
  7264                           
  7265                           ;Controlador.c: 253:             while (!TXSTAbits.TRMT) {
  7266  001EA0  A2AC               	btfss	172,1,c	;volatile
  7267  001EA2  EF55  F00F         	goto	u2501
  7268  001EA6  EF57  F00F         	goto	u2500
  7269  001EAA                     u2501:
  7270  001EAA  EF50  F00F         	goto	l346
  7271  001EAE                     u2500:
  7272  001EAE                     
  7273                           ;Controlador.c: 256:             TXREG = buffer_TX[i];
  7274  001EAE  0E01               	movlw	low onLEDS@buffer_TX
  7275  001EB0  2417               	addwf	onLEDS@i^0,w,c
  7276  001EB2  6ED9               	movwf	fsr2l,c
  7277  001EB4  0E00               	movlw	high onLEDS@buffer_TX
  7278  001EB6  2018               	addwfc	(onLEDS@i+1)^0,w,c
  7279  001EB8  6EDA               	movwf	fsr2h,c
  7280  001EBA  50DF               	movf	indf2,w,c
  7281  001EBC  6EAD               	movwf	173,c	;volatile
  7282  001EBE                     
  7283                           ;Controlador.c: 257:         }
  7284  001EBE  4A17               	infsnz	onLEDS@i^0,f,c
  7285  001EC0  2A18               	incf	(onLEDS@i+1)^0,f,c
  7286  001EC2  BE18               	btfsc	(onLEDS@i+1)^0,7,c
  7287  001EC4  EF6D  F00F         	goto	u2511
  7288  001EC8  5018               	movf	(onLEDS@i+1)^0,w,c
  7289  001ECA  E109               	bnz	u2510
  7290  001ECC  0E13               	movlw	19
  7291  001ECE  5C17               	subwf	onLEDS@i^0,w,c
  7292  001ED0  A0D8               	btfss	status,0,c
  7293  001ED2  EF6D  F00F         	goto	u2511
  7294  001ED6  EF6F  F00F         	goto	u2510
  7295  001EDA                     u2511:
  7296  001EDA  EF50  F00F         	goto	l346
  7297  001EDE                     u2510:
  7298  001EDE  EF74  F00F         	goto	l350
  7299  001EE2                     l341:
  7300                           
  7301                           ;Controlador.c: 259:         PORTCbits.RC5 = 0;
  7302  001EE2  9A82               	bcf	130,5,c	;volatile
  7303                           
  7304                           ;Controlador.c: 260:         PORTCbits.RC4 = 0;
  7305  001EE4  9882               	bcf	130,4,c	;volatile
  7306                           
  7307                           ;Controlador.c: 261:         PORTAbits.RA5 = 1;
  7308  001EE6  8A80               	bsf	128,5,c	;volatile
  7309  001EE8                     l350:
  7310  001EE8  0012               	return		;funcret
  7311  001EEA                     __end_of_onLEDS:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _MSdelay *****************
  7315 ;; Defined at:
  7316 ;;		line 105 in file "LCD_16x2.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  val             2    0[COMRAM] unsigned int 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  j               2    4[COMRAM] unsigned int 
  7321 ;;  i               2    2[COMRAM] unsigned int 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7331 ;;      Params:         2       0       0       0       0       0       0       0       0
  7332 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7334 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7335 ;;Total ram usage:        6 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_LCD_Init
  7341 ;;		_LCD_Command
  7342 ;;		_LCD_Char
  7343 ;;		_main
  7344 ;;		_encenderBombillas
  7345 ;;		_mostrarFechaHora
  7346 ;;		_verificarHora
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text40
  7351  0024CE                     __ptext40:
  7352                           	callstack 0
  7353  0024CE                     _MSdelay:
  7354                           	callstack 29
  7355  0024CE                     
  7356                           ;LCD_16x2.c: 105: void MSdelay(unsigned int val);LCD_16x2.c: 106: {;LCD_16x2.c: 107:    
      +                            unsigned int i,j;;LCD_16x2.c: 108:         for(i=0;i<=val;i++)
  7357  0024CE  0E00               	movlw	0
  7358  0024D0  6E04               	movwf	(MSdelay@i+1)^0,c
  7359  0024D2  0E00               	movlw	0
  7360  0024D4  6E03               	movwf	MSdelay@i^0,c
  7361  0024D6  EF80  F012         	goto	l2511
  7362  0024DA                     l2499:
  7363                           
  7364                           ;LCD_16x2.c: 109:             for(j=0;j<81;j++);
  7365  0024DA  0E00               	movlw	0
  7366  0024DC  6E06               	movwf	(MSdelay@j+1)^0,c
  7367  0024DE  0E00               	movlw	0
  7368  0024E0  6E05               	movwf	MSdelay@j^0,c
  7369  0024E2                     l2505:
  7370  0024E2  4A05               	infsnz	MSdelay@j^0,f,c
  7371  0024E4  2A06               	incf	(MSdelay@j+1)^0,f,c
  7372  0024E6  5006               	movf	(MSdelay@j+1)^0,w,c
  7373  0024E8  E109               	bnz	u1900
  7374  0024EA  0E51               	movlw	81
  7375  0024EC  5C05               	subwf	MSdelay@j^0,w,c
  7376  0024EE  A0D8               	btfss	status,0,c
  7377  0024F0  EF7C  F012         	goto	u1901
  7378  0024F4  EF7E  F012         	goto	u1900
  7379  0024F8                     u1901:
  7380  0024F8  EF71  F012         	goto	l2505
  7381  0024FC                     u1900:
  7382  0024FC  4A03               	infsnz	MSdelay@i^0,f,c
  7383  0024FE  2A04               	incf	(MSdelay@i+1)^0,f,c
  7384  002500                     l2511:
  7385  002500  5003               	movf	MSdelay@i^0,w,c
  7386  002502  5C01               	subwf	MSdelay@val^0,w,c
  7387  002504  5004               	movf	(MSdelay@i+1)^0,w,c
  7388  002506  5802               	subwfb	(MSdelay@val+1)^0,w,c
  7389  002508  B0D8               	btfsc	status,0,c
  7390  00250A  EF89  F012         	goto	u1911
  7391  00250E  EF8B  F012         	goto	u1910
  7392  002512                     u1911:
  7393  002512  EF6D  F012         	goto	l2499
  7394  002516                     u1910:
  7395  002516  0012               	return		;funcret
  7396  002518                     __end_of_MSdelay:
  7397                           	callstack 0
  7398                           
  7399 ;; *************** function _I2C_Init *****************
  7400 ;; Defined at:
  7401 ;;		line 76 in file "./I2C_Master_File.h"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7419 ;;Total ram usage:        0 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text41
  7429  00286E                     __ptext41:
  7430                           	callstack 0
  7431  00286E                     _I2C_Init:
  7432                           	callstack 30
  7433  00286E                     
  7434                           ;./I2C_Master_File.h: 78:     TRISB0=1;
  7435  00286E  8093               	bsf	3987,0,c	;volatile
  7436                           
  7437                           ;./I2C_Master_File.h: 79:  TRISB1=1;
  7438  002870  8293               	bsf	3987,1,c	;volatile
  7439  002872                     
  7440                           ;./I2C_Master_File.h: 80:  SSPSTAT=80;
  7441  002872  0E50               	movlw	80
  7442  002874  6EC7               	movwf	199,c	;volatile
  7443                           
  7444                           ;./I2C_Master_File.h: 81:     SSPCON1=0x28;
  7445  002876  0E28               	movlw	40
  7446  002878  6EC6               	movwf	198,c	;volatile
  7447                           
  7448                           ;./I2C_Master_File.h: 83:  SSPCON2=0;
  7449  00287A  0E00               	movlw	0
  7450  00287C  6EC5               	movwf	197,c	;volatile
  7451                           
  7452                           ;./I2C_Master_File.h: 84:     SSPADD=((8000000/(4*100000))-1);
  7453  00287E  0E13               	movlw	19
  7454  002880  6EC8               	movwf	200,c	;volatile
  7455  002882                     
  7456                           ;./I2C_Master_File.h: 85:     SSPIE=1;
  7457  002882  869D               	bsf	3997,3,c	;volatile
  7458  002884                     
  7459                           ;./I2C_Master_File.h: 86:     SSPIF=0;
  7460  002884  969E               	bcf	3998,3,c	;volatile
  7461  002886  0012               	return		;funcret
  7462  002888                     __end_of_I2C_Init:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function _DHT11_Start *****************
  7466 ;; Defined at:
  7467 ;;		line 208 in file "Controlador.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7481 ;;      Params:         0       0       0       0       0       0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7483 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7484 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7485 ;;Total ram usage:        1 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_main
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text42
  7495  002816                     __ptext42:
  7496                           	callstack 0
  7497  002816                     _DHT11_Start:
  7498                           	callstack 30
  7499  002816                     
  7500                           ;Controlador.c: 209:     TRISCbits.RC2 = 0;
  7501  002816  9494               	bcf	148,2,c	;volatile
  7502                           
  7503                           ;Controlador.c: 210:     LATC2 = 0;
  7504  002818  948B               	bcf	3979,2,c	;volatile
  7505  00281A                     
  7506                           ;Controlador.c: 211:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  7507  00281A  0E2F               	movlw	47
  7508  00281C  6E01               	movwf	??_DHT11_Start^0,c
  7509  00281E  0EC0               	movlw	192
  7510  002820                     u3137:
  7511  002820  2EE8               	decfsz	wreg,f,c
  7512  002822  D7FE               	bra	u3137
  7513  002824  2E01               	decfsz	??_DHT11_Start^0,f,c
  7514  002826  D7FC               	bra	u3137
  7515  002828                     
  7516                           ;Controlador.c: 212:     LATC2 = 1;
  7517  002828  848B               	bsf	3979,2,c	;volatile
  7518                           
  7519                           ;Controlador.c: 213:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  7520  00282A  0E0D               	movlw	13
  7521  00282C                     u3147:
  7522  00282C  2EE8               	decfsz	wreg,f,c
  7523  00282E  D7FE               	bra	u3147
  7524  002830  F000               	nop	
  7525  002832                     
  7526                           ;Controlador.c: 214:     TRISCbits.RC2 = 1;
  7527  002832  8494               	bsf	148,2,c	;volatile
  7528  002834  0012               	return		;funcret
  7529  002836                     __end_of_DHT11_Start:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function _DHT11_ReadData *****************
  7533 ;; Defined at:
  7534 ;;		line 193 in file "Controlador.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  data            1    1[COMRAM] unsigned char 
  7539 ;;  i               1    0[COMRAM] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      unsigned char 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0
  7550 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7552 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7553 ;;Total ram usage:        2 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_main
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text43
  7563  0023C6                     __ptext43:
  7564                           	callstack 0
  7565  0023C6                     _DHT11_ReadData:
  7566                           	callstack 30
  7567  0023C6                     
  7568                           ;Controlador.c: 194:     char i, data = 0;
  7569  0023C6  0E00               	movlw	0
  7570  0023C8  6E02               	movwf	DHT11_ReadData@data^0,c
  7571                           
  7572                           ;Controlador.c: 195:     for (i = 0; i < 8; i++) {
  7573  0023CA  0E00               	movlw	0
  7574  0023CC  6E01               	movwf	DHT11_ReadData@i^0,c
  7575  0023CE                     l303:
  7576  0023CE  A482               	btfss	130,2,c	;volatile
  7577  0023D0  EFEC  F011         	goto	u2571
  7578  0023D4  EFEE  F011         	goto	u2570
  7579  0023D8                     u2571:
  7580  0023D8  EFE7  F011         	goto	l303
  7581  0023DC                     u2570:
  7582  0023DC                     
  7583                           ;Controlador.c: 197:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  7584  0023DC  0E14               	movlw	20
  7585  0023DE                     u3157:
  7586  0023DE  2EE8               	decfsz	wreg,f,c
  7587  0023E0  D7FE               	bra	u3157
  7588  0023E2                     
  7589                           ;Controlador.c: 198:         if (PORTCbits.RC2 & 1)
  7590  0023E2  A482               	btfss	130,2,c	;volatile
  7591  0023E4  EFF6  F011         	goto	u2581
  7592  0023E8  EFF8  F011         	goto	u2580
  7593  0023EC                     u2581:
  7594  0023EC  EFFC  F011         	goto	l2921
  7595  0023F0                     u2580:
  7596  0023F0                     
  7597                           ;Controlador.c: 199:             data = ((data << 1) | 1);
  7598  0023F0  80D8               	bsf	status,0,c
  7599  0023F2  3602               	rlcf	DHT11_ReadData@data^0,f,c
  7600  0023F4  EFFF  F011         	goto	l308
  7601  0023F8                     l2921:
  7602                           
  7603                           ;Controlador.c: 201:             data = (data << 1);
  7604  0023F8  5002               	movf	DHT11_ReadData@data^0,w,c
  7605  0023FA  2402               	addwf	DHT11_ReadData@data^0,w,c
  7606  0023FC  6E02               	movwf	DHT11_ReadData@data^0,c
  7607  0023FE                     l308:
  7608  0023FE  B482               	btfsc	130,2,c	;volatile
  7609  002400  EF04  F012         	goto	u2591
  7610  002404  EF06  F012         	goto	u2590
  7611  002408                     u2591:
  7612  002408  EFFF  F011         	goto	l308
  7613  00240C                     u2590:
  7614  00240C                     
  7615                           ;Controlador.c: 204:     }
  7616  00240C  2A01               	incf	DHT11_ReadData@i^0,f,c
  7617  00240E  0E07               	movlw	7
  7618  002410  6401               	cpfsgt	DHT11_ReadData@i^0,c
  7619  002412  EF0D  F012         	goto	u2601
  7620  002416  EF0F  F012         	goto	u2600
  7621  00241A                     u2601:
  7622  00241A  EFE7  F011         	goto	l303
  7623  00241E                     u2600:
  7624  00241E                     
  7625                           ;Controlador.c: 205:     return data;
  7626  00241E  5002               	movf	DHT11_ReadData@data^0,w,c
  7627  002420  0012               	return		;funcret
  7628  002422                     __end_of_DHT11_ReadData:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _DHT11_CheckResponse *****************
  7632 ;; Defined at:
  7633 ;;		line 218 in file "Controlador.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		None
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0
  7648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7651 ;;Total ram usage:        0 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_main
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text44
  7661  0027C8                     __ptext44:
  7662                           	callstack 0
  7663  0027C8                     _DHT11_CheckResponse:
  7664                           	callstack 30
  7665  0027C8                     l317:
  7666  0027C8  B482               	btfsc	130,2,c	;volatile
  7667  0027CA  EFE9  F013         	goto	u2541
  7668  0027CE  EFEB  F013         	goto	u2540
  7669  0027D2                     u2541:
  7670  0027D2  EFE4  F013         	goto	l317
  7671  0027D6                     u2540:
  7672  0027D6                     l320:
  7673  0027D6  A482               	btfss	130,2,c	;volatile
  7674  0027D8  EFF0  F013         	goto	u2551
  7675  0027DC  EFF2  F013         	goto	u2550
  7676  0027E0                     u2551:
  7677  0027E0  EFEB  F013         	goto	l320
  7678  0027E4                     u2550:
  7679  0027E4                     l323:
  7680  0027E4  B482               	btfsc	130,2,c	;volatile
  7681  0027E6  EFF7  F013         	goto	u2561
  7682  0027EA  EFF9  F013         	goto	u2560
  7683  0027EE                     u2561:
  7684  0027EE  EFF2  F013         	goto	l323
  7685  0027F2                     u2560:
  7686  0027F2  0012               	return		;funcret
  7687  0027F4                     __end_of_DHT11_CheckResponse:
  7688                           	callstack 0
  7689                           
  7690                           	psect	rparam
  7691  0000                     
  7692                           	psect	idloc
  7693                           
  7694                           ;Config register IDLOC0 @ 0x200000
  7695                           ;	unspecified, using default values
  7696  200000                     	org	2097152
  7697  200000  FF                 	db	255
  7698                           
  7699                           ;Config register IDLOC1 @ 0x200001
  7700                           ;	unspecified, using default values
  7701  200001                     	org	2097153
  7702  200001  FF                 	db	255
  7703                           
  7704                           ;Config register IDLOC2 @ 0x200002
  7705                           ;	unspecified, using default values
  7706  200002                     	org	2097154
  7707  200002  FF                 	db	255
  7708                           
  7709                           ;Config register IDLOC3 @ 0x200003
  7710                           ;	unspecified, using default values
  7711  200003                     	org	2097155
  7712  200003  FF                 	db	255
  7713                           
  7714                           ;Config register IDLOC4 @ 0x200004
  7715                           ;	unspecified, using default values
  7716  200004                     	org	2097156
  7717  200004  FF                 	db	255
  7718                           
  7719                           ;Config register IDLOC5 @ 0x200005
  7720                           ;	unspecified, using default values
  7721  200005                     	org	2097157
  7722  200005  FF                 	db	255
  7723                           
  7724                           ;Config register IDLOC6 @ 0x200006
  7725                           ;	unspecified, using default values
  7726  200006                     	org	2097158
  7727  200006  FF                 	db	255
  7728                           
  7729                           ;Config register IDLOC7 @ 0x200007
  7730                           ;	unspecified, using default values
  7731  200007                     	org	2097159
  7732  200007  FF                 	db	255
  7733                           
  7734                           	psect	config
  7735                           
  7736                           ;Config register CONFIG1L @ 0x300000
  7737                           ;	PLL Prescaler Selection bits
  7738                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7739                           ;	System Clock Postscaler Selection bits
  7740                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7741                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7742                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7743  300000                     	org	3145728
  7744  300000  00                 	db	0
  7745                           
  7746                           ;Config register CONFIG1H @ 0x300001
  7747                           ;	Oscillator Selection bits
  7748                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7749                           ;	Fail-Safe Clock Monitor Enable bit
  7750                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7751                           ;	Internal/External Oscillator Switchover bit
  7752                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7753  300001                     	org	3145729
  7754  300001  09                 	db	9
  7755                           
  7756                           ;Config register CONFIG2L @ 0x300002
  7757                           ;	Power-up Timer Enable bit
  7758                           ;	PWRT = OFF, PWRT disabled
  7759                           ;	Brown-out Reset Enable bits
  7760                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7761                           ;	Brown-out Reset Voltage bits
  7762                           ;	BORV = 3, Minimum setting 2.05V
  7763                           ;	USB Voltage Regulator Enable bit
  7764                           ;	VREGEN = OFF, USB voltage regulator disabled
  7765  300002                     	org	3145730
  7766  300002  1F                 	db	31
  7767                           
  7768                           ;Config register CONFIG2H @ 0x300003
  7769                           ;	Watchdog Timer Enable bit
  7770                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7771                           ;	Watchdog Timer Postscale Select bits
  7772                           ;	WDTPS = 32768, 1:32768
  7773  300003                     	org	3145731
  7774  300003  1E                 	db	30
  7775                           
  7776                           ; Padding undefined space
  7777  300004                     	org	3145732
  7778  300004  FF                 	db	255
  7779                           
  7780                           ;Config register CONFIG3H @ 0x300005
  7781                           ;	CCP2 MUX bit
  7782                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  7783                           ;	PORTB A/D Enable bit
  7784                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7785                           ;	Low-Power Timer 1 Oscillator Enable bit
  7786                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7787                           ;	MCLR Pin Enable bit
  7788                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7789  300005                     	org	3145733
  7790  300005  00                 	db	0
  7791                           
  7792                           ;Config register CONFIG4L @ 0x300006
  7793                           ;	Stack Full/Underflow Reset Enable bit
  7794                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7795                           ;	Single-Supply ICSP Enable bit
  7796                           ;	LVP = OFF, Single-Supply ICSP disabled
  7797                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7798                           ;	ICPRT = OFF, ICPORT disabled
  7799                           ;	Extended Instruction Set Enable bit
  7800                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7801                           ;	Background Debugger Enable bit
  7802                           ;	DEBUG = 0x1, unprogrammed default
  7803  300006                     	org	3145734
  7804  300006  81                 	db	129
  7805                           
  7806                           ; Padding undefined space
  7807  300007                     	org	3145735
  7808  300007  FF                 	db	255
  7809                           
  7810                           ;Config register CONFIG5L @ 0x300008
  7811                           ;	Code Protection bit
  7812                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7813                           ;	Code Protection bit
  7814                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7815                           ;	Code Protection bit
  7816                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7817                           ;	Code Protection bit
  7818                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7819  300008                     	org	3145736
  7820  300008  0F                 	db	15
  7821                           
  7822                           ;Config register CONFIG5H @ 0x300009
  7823                           ;	Boot Block Code Protection bit
  7824                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7825                           ;	Data EEPROM Code Protection bit
  7826                           ;	CPD = OFF, Data EEPROM is not code-protected
  7827  300009                     	org	3145737
  7828  300009  C0                 	db	192
  7829                           
  7830                           ;Config register CONFIG6L @ 0x30000A
  7831                           ;	Write Protection bit
  7832                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7833                           ;	Write Protection bit
  7834                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7835                           ;	Write Protection bit
  7836                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7837                           ;	Write Protection bit
  7838                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7839  30000A                     	org	3145738
  7840  30000A  0F                 	db	15
  7841                           
  7842                           ;Config register CONFIG6H @ 0x30000B
  7843                           ;	Configuration Register Write Protection bit
  7844                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7845                           ;	Boot Block Write Protection bit
  7846                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7847                           ;	Data EEPROM Write Protection bit
  7848                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7849  30000B                     	org	3145739
  7850  30000B  E0                 	db	224
  7851                           
  7852                           ;Config register CONFIG7L @ 0x30000C
  7853                           ;	Table Read Protection bit
  7854                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7855                           ;	Table Read Protection bit
  7856                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7857                           ;	Table Read Protection bit
  7858                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7859                           ;	Table Read Protection bit
  7860                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7861  30000C                     	org	3145740
  7862  30000C  0F                 	db	15
  7863                           
  7864                           ;Config register CONFIG7H @ 0x30000D
  7865                           ;	Boot Block Table Read Protection bit
  7866                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7867  30000D                     	org	3145741
  7868  30000D  40                 	db	64
  7869                           tosu	equ	0xFFF
  7870                           tosh	equ	0xFFE
  7871                           tosl	equ	0xFFD
  7872                           stkptr	equ	0xFFC
  7873                           pclatu	equ	0xFFB
  7874                           pclath	equ	0xFFA
  7875                           pcl	equ	0xFF9
  7876                           tblptru	equ	0xFF8
  7877                           tblptrh	equ	0xFF7
  7878                           tblptrl	equ	0xFF6
  7879                           tablat	equ	0xFF5
  7880                           prodh	equ	0xFF4
  7881                           prodl	equ	0xFF3
  7882                           indf0	equ	0xFEF
  7883                           postinc0	equ	0xFEE
  7884                           postdec0	equ	0xFED
  7885                           preinc0	equ	0xFEC
  7886                           plusw0	equ	0xFEB
  7887                           fsr0h	equ	0xFEA
  7888                           fsr0l	equ	0xFE9
  7889                           wreg	equ	0xFE8
  7890                           indf1	equ	0xFE7
  7891                           postinc1	equ	0xFE6
  7892                           postdec1	equ	0xFE5
  7893                           preinc1	equ	0xFE4
  7894                           plusw1	equ	0xFE3
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           bsr	equ	0xFE0
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           postdec2	equ	0xFDD
  7901                           preinc2	equ	0xFDC
  7902                           plusw2	equ	0xFDB
  7903                           fsr2h	equ	0xFDA
  7904                           fsr2l	equ	0xFD9
  7905                           status	equ	0xFD8

Data Sizes:
    Strings     96
    Constant    0
    Data        318
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    130     159
    BANK1           256    166     247
    BANK2           256      0     240
    BANK3           256      0     101
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), value(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), value(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1265_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), value(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), value(BANK1[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[3]), STR_27(CODE[3]), date(BANK1[10]), hours(BANK1[10]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
		 -> value(BANK1[10]), STR_2(CODE[12]), STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), 
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), value(BANK1[10]), 
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _verificarHora->_LCD_String_xy
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Command->_MSdelay
    _encenderBombillas->_onLEDS

Critical Paths under _main in BANK0

    _main->_mostrarFechaHora
    _mostrarFechaHora->_sprintf
    _imprimirTemHum->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    _main->_encenderBombillas

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   65023
                                             52 BANK0     78    78      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                  _encenderBombillas
                     _imprimirTemHum
                   _mostrarFechaHora
                       _offBombillas
                            _offLEDS
                      _verificarHora
 ---------------------------------------------------------------------------------
 (1) _verificarHora                                        0     0      0    6833
                           _I2C_Stop
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
 ---------------------------------------------------------------------------------
 (1) _offLEDS                                             17    17      0      92
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _offBombillas                                        23    23      0      92
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _mostrarFechaHora                                    30    30      0   24831
                                             22 BANK0     30    30      0
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2182
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _imprimirTemHum                                       0     0      0   22225
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   13184
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5576
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2363
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _encenderBombillas                                  166   166      0    1813
                                              0 BANK1    166   166      0
                            _MSdelay
                             _onLEDS
 ---------------------------------------------------------------------------------
 (2) _onLEDS                                              24    24      0     181
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2    1080
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _encenderBombillas
     _MSdelay
     _onLEDS
   _imprimirTemHum
     _LCD_Char
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _mostrarFechaHora
     _I2C_Stop
     _LCD_Init
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _offBombillas
   _offLEDS
   _verificarHora
     _I2C_Stop
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      65      11       39.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A6      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34A      20        0.0%
DATA                 0      0     34A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 13:09:17 2020

                           _RH_Integral 00FB                      __size_of_I2C_Ready 0012  
                    __size_of_I2C_Start 002E                         onLEDS@buffer_TX 0001  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l25 286C  
                                    l34 23C4                                      l19 27C6  
                                    l28 2850                                      l47 2516  
                                    l39 2620                             ?_LCD_String 0008  
RTC_Read_Calendar@read_calendar_address 0004                          ?_verificarHora 0001  
                                   l202 2814                                     l212 28A0  
                                   l206 28B4                                     l150 2662  
                                   l311 2420                                     l303 23CE  
                                   l215 28AE                                     l320 27D6  
                                   l152 2670                                     l209 28C2  
                                   l161 28C4                                     l314 2834  
                                   l154 2690                                     l323 27E4  
                                   l163 28D2                                     l155 2696  
                                   l308 23FE                                     l420 0BFA  
                                   l164 28D4                                     l180 2750  
                                   l317 27C8                                     l341 1EE2  
                                   l333 226C                                     l326 27F2  
                                   l158 2886                                     l350 1EE8  
                                   l182 276A                                     l407 0B14  
                                   l416 0B96                                     l360 21E8  
                                   l336 22AA                                     l185 2770  
                                   l441 0EE0                                     l346 1EA0  
                                   l178 2742                                     l194 288A  
                                   l266 255C                                     l450 2308  
                                   l282 183A                                     l371 08AC  
                                   l363 1D48                                     l187 277E  
                                   l380 0946                                     l196 2898  
                                   l444 0F20                                     l189 2798  
                                   l269 247A                                     l357 21AA  
                                   l293 1926                                     l198 289A  
                                   l580 1C64                                     l389 09E0  
                                   l398 0A7A                                     l567 1B00  
                                   _PEN 007E2A                                     _Day 00EE  
                                   _abs 25A2                                     _agr 00F6  
                       __end_of_I2C_Ack 28C4                                     _pad 1FB4  
                                   _min 00F2                                     _sec 00F4  
                                   wreg 000FE8                             LCD_Char@dat 0007  
                                  l1200 123E                                    l1202 1246  
                                  l1131 24CC                                    ?_abs 0013  
                                  l1300 2366                                    l1223 147A  
                                  l1232 1776                                    l3001 0986  
                                  l1225 14DE                                    l1209 12DC  
                                  l1241 2242                                    l1306 26CE  
                                  l1242 224A                                    l3011 09C6  
                                  l3003 098E                                    l1164 1FFA  
                                  l1252 265C                                    l3021 0A00  
                                  l3013 09D8                                    l3005 099C  
                                  l3101 0C06                                    l1246 25D8  
                                  l3031 0A48                                    l3023 0A04  
                                  l3007 09AE                                    l1167 203C  
                                  l1175 0FC2                                    l3111 0C4A  
                                  l3103 0C0A                                    l3033 0A5E  
                                  l3025 0A20                                    l3009 09C4  
                                  l2401 1A76                                    l1249 25E0  
                                  l1273 1FB2                                    l1281 25A0  
                                  l1169 2078                                    l1177 0FCA  
                                  l3121 0CBE                                    l3113 0C5C  
                                  l3105 0C16                                    l1290 273C  
                                  l1258 2706                                    l3051 0AC2  
                                  l3043 0A88                                    l3035 0A60  
                                  l3027 0A28                                    l3019 09EE  
                                  l2411 1AC0                                    l2403 1A96  
                                  l1195 1204                                    l3131 0D10  
                                  l3123 0CD0                                    l3115 0C66  
                                  l3107 0C26                                    l3203 21B8  
                                  l3211 2252                                    l1284 28E0  
                                  l3061 0B0C                                    l3045 0A9A  
                                  l3037 0A72                                    l3053 0AD0  
                                  l3029 0A36                                    l2413 1AE0  
                                  l2405 1A98                                    l2421 1B14  
                                  l2341 1F0E                                    l3133 0D2E  
                                  l3141 0D62                                    l3125 0CDC  
                                  l3117 0C82                                    l3109 0C34  
                                  l3205 21C8                                    l3221 228A  
                                  l3213 2264                                    l3301 187A  
                                  l2511 2500                                    l3071 0B38  
                                  l3055 0AE2                                    l3047 0A9E  
                                  l2407 1AAA                                    l2431 1B84  
                                  l2423 1B34                                    l2343 1F18  
                                  l2351 255E                                    l1295 235E  
                                  l3151 0DC6                                    l3143 0D68  
                                  l3135 0D4C                                    l3119 0CA0  
                                  l3127 0CEC                                    l3207 21CC  
                                  l3223 228E                                    l3311 18AA  
                                  l3303 188A                                    l2505 24E2  
                                  l3081 0B8C                                    l3073 0B54  
                                  l3057 0AF8                                    l3049 0ABA  
                                  l2409 1AB0                                    l2441 1BFC  
                                  l2433 1B8C                                    l2425 1B38  
                                  l2417 1B02                                    l2345 1F36  
                                  l2337 1EEA                                    l2353 256A  
                                  l2361 2714                                    l2521 0F8A  
                                  l2601 12D0                                    l2513 28C4  
                                  l3161 0E14                                    l3153 0DD8  
                                  l3145 0D6C                                    l3129 0CF4  
                                  l3209 224C                                    l3321 18D2  
                                  l3313 18AE                                    l3305 188E  
                                  l3241 1780                                    l2507 24E6  
                                  l3091 0BBA                                    l3067 0B22  
                                  l3059 0AFA                                    l3075 0B60  
                                  l2443 1C0E                                    l2435 1BA0  
                                  l2427 1B46                                    l2419 1B06  
                                  l2347 1F6C                                    l2339 1EFC  
                                  l2355 257C                                    l2363 2718  
                                  l2531 0FE4                                    l2523 0F9A  
                                  l2515 0F22                                    l2611 135C  
                                  l3163 0E24                                    l3155 0DE4  
                                  l3147 0D8A                                    l3219 227A  
                                  l3323 18D6                                    l3315 18BA  
                                  l3251 178A                                    l3243 1782  
                                  l3235 1778                                    l2509 24FC  
                                  l3093 0BD6                                    l3077 0B72  
                                  l3069 0B34                                    l2381 19B0  
                                  l2373 197A                                    l2437 1BAE  
                                  l2445 1C14                                    l2429 1B66  
                                  l2357 2580                                    l2365 2730  
                                  l2461 1FF2                                    l2453 1FB4  
                                  l2541 1010                                    l2533 0FF2  
                                  l2525 0F9C                                    l2517 0F42  
                                  l2621 139E                                    l2613 136E  
                                  l2605 1310                                    l2701 165C  
                                  l3165 0E34                                    l3157 0DF4  
                                  l3173 0E64                                    l3149 0DA8  
                                  l3341 1966                                    l3317 18C4  
                                  l3309 1896                                    l3325 18E6  
                                  l3261 17A0                                    l3253 178C  
                                  l3245 1784                                    l3237 177C  
                                  l3087 0BA4                                    l3079 0B7A  
                                  l3095 0BE6                                    l2391 1A0C  
                                  l2383 19BE                                    l2375 197E  
                                  l2447 1C24                                    l2439 1BDC  
                                  l2359 2708                                    l2471 2060  
                                  l2463 2006                                    l2455 1FC4  
                                  l2551 111C                                    l2543 1092  
                                  l2535 0FF8                                    l2527 0FB6  
                                  l2519 0F6A                                    l2631 146A  
                                  l2607 1322                                    l2615 1382  
                                  l2623 13FC                                    l2711 1706  
                                  l2703 1698                                    l3183 0EEE  
                                  l3167 0E44                                    l3159 0E04  
                                  l3175 0EC4                                    l3335 1934  
                                  l3327 190A                                    l3319 18CE  
                                  l3271 17D6                                    l3263 17A4  
                                  l3255 178E                                    l3247 1786  
                                  l3239 177E                                    l3089 0BB6  
                                  l3097 0BEE                                    l2393 1A14  
                                  l2385 19DE                                    l2377 198C  
                                  l2449 1C44                                    l2465 201A  
                                  l2457 1FD8                                    l2561 1190  
                                  l2553 113A                                    l2545 1098  
                                  l2537 1000                                    l2529 0FD2  
                                  l2369 2698                                    l2633 148A  
                                  l2625 1418                                    l2617 1392  
                                  l2713 171A                                    l2801 27BA  
                                  l3185 0F00                                    l3177 0ED6  
                                  l3169 0E54                                    l3193 2186  
                                  l3337 1946                                    l3329 191C  
                                  l3281 180A                                    l3273 17F2  
                                  l3265 17A8                                    l3257 1790  
                                  l3249 1788                                    l2731 2854  
                                  l2651 2842                                    l2643 2838  
                                  l2811 25FC                                    l2395 1A28  
                                  l2387 19E2                                    l2379 19AC  
                                  l2475 25A2                                    l2467 201E  
                                  l2459 1FE6                                    l2571 11CC  
                                  l2563 11A0                                    l2555 1154  
                                  l2547 109E                                    l2539 100A  
                                  l2483 2622                                    l2491 2340  
                                  l2635 1490                                    l2627 1436  
                                  l2619 1398                                    l2707 16D4  
                                  l2723 1740                                    l2803 27C0  
                                  l3187 0F04                                    l3363 0E86  
                                  l3099 0BFC                                    l3195 2190  
                                  l3339 194A                                    l3283 1812  
                                  l3275 17F6                                    l3267 17B4  
                                  l3259 1792                                    l2901 281A  
                                  l2741 2860                                    l2733 2858  
                                  l2653 2844                                    l2645 283C  
                                  l2813 2606                                    l2805 25E4  
                                  l2397 1A36                                    l2389 19EE  
                                  l2477 25BC                                    l2469 204C  
                                  l2565 11A6                                    l2573 11DC  
                                  l2557 116E                                    l2549 1102  
                                  l2493 2352                                    l2637 14A0  
                                  l2629 1450                                    l2581 1218  
                                  l2725 1764                                    l2709 16F8  
                                  l2717 1726                                    l2661 27FA  
                                  l2821 252C                                    l3197 21A2  
                                  l3285 181A                                    l3277 17FA  
                                  l3269 17B8                                    l2903 2828  
                                  l2735 285A                                    l2647 283E  
                                  l2743 2368                                    l2815 260E  
                                  l2807 25E4                                    l2399 1A48  
                                  l2567 11B8                                    l2559 117E  
                                  l2479 26D0                                    l2487 230A  
                                  l2639 14B6                                    l2591 128C  
                                  l2583 1232                                    l2719 1734  
                                  l2655 28B0                                    l2751 2660  
                                  l2671 2812                                    l2663 27FE  
                                  l2831 2446                                    l2823 253C  
                                  l3295 1848                                    l3287 181E  
                                  l3279 1802                                    l2921 23F8  
                                  l2905 2832                                    l2497 24CE  
                                  l2841 1E22                                    l2737 285C  
                                  l2649 2840                                    l2745 236C  
                                  l2817 2614                                    l2809 25F4  
                                  l2569 11C4                                    l2593 1296  
                                  l2585 125C                                    l2577 1206  
                                  l2681 1524                                    l2657 289C  
                                  l2753 2674                                    l2665 280C  
                                  l2833 2456                                    l2825 254C  
                                  l3297 185A                                    l3289 1830  
                                  l2907 27C8                                    l2923 240C  
                                  l2915 23DC                                    l2499 24DA  
                                  l2851 1E86                                    l2843 1E3E  
                                  l2739 285E                                    l2747 2390  
                                  l2595 129C                                    l2587 1264  
                                  l2579 1216                                    l2683 1528  
                                  l2675 14E0                                    l2931 1C66  
                                  l2755 2684                                    l2659 27F6  
                                  l2763 2888                                    l2835 2466  
                                  l2827 2424                                    l2819 251A  
                                  l3299 185E                                    l2925 240E  
                                  l2917 23E2                                    l2909 23C6  
                                  l2861 1EBE                                    l2853 1E98  
                                  l2845 1E48                                    l2749 2394  
                                  l2597 12A4                                    l2589 1284  
                                  l2693 15F0                                    l2685 154C  
                                  l2677 1504                                    l2941 1CDE  
                                  l2933 1C82                                    l2757 268C  
                                  l2773 276E                                    l2765 2740  
                                  l2837 2476                                    l2829 2436  
                                  ?_pad 0011                                    l2927 241E  
                                  l2919 23F0                                    l2863 1EC2  
                                  l2847 1E64                                    l2839 1E1C  
                                  l2599 12C0                                    l2695 1614  
                                  l2687 1570                                    l2679 1512  
                                  l2791 2226                                    l2871 249E  
                                  l2951 1D24                                    l2943 1CF0  
                                  l2935 1C94                                    l2759 2694  
                                  l2881 2882                                    l2849 1E80  
                                  l2961 0890                                    l2697 1638  
                                  l2689 15B8                                    l2785 21EA  
                                  l2873 24BA                                    l2865 247C  
                                  l2953 1D36                                    l2945 1D0C  
                                  l2937 1CBC                                    l2793 279A  
                                  l2777 2792                                    l2769 2764  
                                  l2883 2884                                    l2859 1EAE  
                                  l2971 08BA                                    l2963 0892  
                                  l2955 0862                                    l2699 164E  
                                  l2787 21F2                                    l2867 248E  
                                  l2947 1D18                                    l2939 1CC2  
                                  l2795 27A2                                    l2779 2798  
                                  l2891 22C2                                    l2877 286E  
                                  l2973 08CC                                    l2965 08A4  
                                  l2981 0902                                    l2957 086A  
                                  l2789 2200                                    l2869 2496  
                                  l2949 1D1E                                    l2797 27AE  
                                  l2893 22D2                                    l2885 22AC  
                                  l2879 2872                                    l2983 0914  
                                  l2975 08D0                                    l2959 087C  
                                  l2799 27B4                                    l2895 22E0  
                                  l2887 22B2                                    l2985 092A  
                                  l2977 08EC                                    l2897 22F6  
                                  l2889 22B6                                    l2899 2816  
                                  l2995 0954                                    l2987 092C  
                                  l2979 08F4                                    l2997 0966  
                                  l2989 093E                                    l2999 096A  
                                  STR_1 0801                                    STR_2 080D  
                                  STR_3 0838                                    STR_4 0829  
                                  STR_5 0838                                    STR_6 0837  
                                  STR_7 0847                                    STR_8 082E  
                                  STR_9 085E                                    u2000 111C  
                                  u2001 1118                                    u2010 113A  
                                  u2011 1136                                    u2020 1154  
                                  u2100 125C                                    u2021 1150  
                                  u2101 1258                                    u2030 116E  
                                  u2110 12C0                                    u2031 116A  
                                  u2111 12BC                                    u2040 117E  
                                  u2200 1436                                    u2120 130A  
                                  u3000 22AA                                    u2041 117A  
                                  u2201 1432                                    u2121 1304  
                                  u3001 22A6                                    u2050 1190  
                                  u2210 1450                                    u2130 130C  
                                  u2051 118C                                    u2211 144C  
                                  u2060 11A0                                    u2220 146A  
                                  u2140 1322                                    u2300 1570  
                                  u2061 119C                                    u2221 1466  
                                  u2141 131E                                    u2301 156C  
                                  u3101 1914                                    u2070 11B8  
                                  u2230 147A                                    u2150 1356  
                                  u2310 1614                                    u3110 1934  
                                  u2071 11B4                                    u2231 1476  
                                  u2151 1350                                    u2311 1610  
                                  u3111 1930                                    u1600 1F6C  
                                  u2240 148A                                    u2160 1358  
                                  u2080 1216                                    u2320 1638  
                                  u2400 2750                                    u3120 1966  
                                  u3040 17D6                                    _LATD 000F8C  
                                  u1601 1F68                                    u2241 1486  
                                  u2081 1212                                    u2321 1634  
                                  u2401 274C                                    u3121 1962  
                                  u3041 17D2                                    u1610 25A0  
                                  u2170 136E                                    u2090 1232  
                                  u2330 16F8                                    u2250 28C2  
                                  u2410 2760                                    u3050 17F2  
                                  u1611 259C                                    u2171 136A  
                                  u2091 122E                                    u2331 16F4  
                                  u2251 28BE                                    u2411 275C  
                                  u3051 17EE                                    u2500 1EAE  
                                  u2340 238C                                    u1700 1A76  
                                  u1620 2730                                    u2180 13D6  
                                  u2260 28AE                                    u2420 277E  
                                  u2501 1EAA                                    u1701 1A72  
                                  u1621 272C                                    u2261 28AA  
                                  u2421 277A                                    u3061 1828  
                                  u2510 1EDE                                    u2350 23B4  
                                  u1710 1AC0                                    u1630 26C8  
                                  u2190 1418                                    u2270 280C  
                                  u2430 278E                                    u3070 1848  
                                  u2511 1EDA                                    u1711 1ABC  
                                  u1631 26C2                                    u2191 1414  
                                  u2271 2808                                    u2431 278A  
                                  u3071 1844                                    u2600 241E  
                                  u2360 23C4                                    u1720 1B14  
                                  u1800 203C                                    u1640 26CA  
                                  u2280 1504                                    u2440 2242  
                                  u2520 22D2                                    u3080 187A  
                                  u2601 241A                                    u3137 2820  
                                  u2361 23C0                                    u1721 1B10  
                                  u1801 2038                                    u2185 13C4  
                                  u2281 1500                                    u2441 223E  
                                  u2521 22CE                                    u3081 1876  
                                  u2610 087C                                    u2450 25F4  
                                  u1650 198C                                    u1730 1B46  
                                  u1570 1EFC                                    u1810 204C  
                                  u2290 154C                                    u2370 2670  
                                  u2530 22E0                                    u3090 18AA  
                                  u3147 282C                                    u2611 0878  
                                  u2347 2382                                    u2451 25F0  
                                  u1651 1988                                    u1731 1B42  
                                  u1571 1EF8                                    u1811 2048  
                                  u2291 1548                                    u2371 266C  
                                  u2531 22DC                                    u3091 18A6  
                                  u2540 27D6                                    u1900 24FC  
                                  u2460 1E3E                                    u2700 0986  
                                  u2620 0890                                    u1660 19BE  
                                  u1740 1B84                                    u1820 25BC  
                                  u1580 1F0E                                    u2380 2684  
                                  u2541 27D2                                    u3157 23DE  
                                  u1901 24F8                                    u2461 1E3A  
                                  u2701 0982                                    u2621 088C  
                                  u2357 23AA                                    u1661 19BA  
                                  u1741 1B80                                    u1821 25B8  
                                  u1581 1F0A                                    u2381 2680  
                                  u2550 27E4                                    u1910 2516  
                                  u2470 1E64                                    u2710 09AE  
                                  u1750 1BAE                                    u1590 1F36  
                                  u1830 2700                                    u2390 2898  
                                  u2551 27E0                                    u1911 2512  
                                  u2471 1E60                                    u2711 09AA  
                                  u2631 089C                                    u1671 19E8  
                                  u1751 1BAA                                    u1591 1F32  
                                  u1831 26FA                                    u2391 2894  
                                  u2560 27F2                                    u2480 1E80  
                                  u2800 0ABA                                    u2720 09C4  
                                  u2640 08BA                                    u1680 1A0C  
                                  u1760 1BDC                                    u1840 2702  
                                  u1920 28D2                                    u2561 27EE  
                                  u2481 1E7C                                    u2801 0AB6  
                                  u2721 09C0                                    u2641 08B6  
                                  u1681 1A08                                    u1761 1BD8  
                                  u1921 28CE                                    u2570 23DC  
                                  u2810 0AE2                                    u2650 08EC  
                                  u1690 1A36                                    u1770 1C24  
                                  u1930 0F52                                    u1850 2656  
                                  u2571 23D8                                    u2491 1E90  
                                  u2811 0ADE                                    u2731 09D0  
                                  u2651 08E8                                    u1691 1A32  
                                  u1771 1C20                                    u1931 0F4C  
                                  u1851 2650                                    u2580 23F0  
                                  u2820 0AF8                                    u2740 09EE  
                                  u2660 0914                                    u1780 1FC4  
                                  u1940 0F54                                    u1860 2658  
                                  u2900 0C26                                    u2581 23EC  
                                  u2821 0AF4                                    u2741 09EA  
                                  u2661 0910                                    u1781 1FC0  
                                  u2901 0C22                                    u2590 240C  
                                  u2750 0A20                                    u2670 092A  
                                  u1790 1FE6                                    u1950 0F6A  
                                  u1870 233A                                    u2910 0C34  
                                  u2591 2408                                    u2831 0B04  
                                  u2751 0A1C                                    u2671 0926  
                                  u1791 1FE2                                    u1951 0F66  
                                  u1871 2334                                    u2911 0C30  
                                  u2840 0B22                                    u2760 0A48  
                                  u1960 0F9A                                    u1880 233C  
                                  u2841 0B1E                                    u2761 0A44  
                                  u2681 0936                                    u1961 0F96  
                                  u2921 0ECE                                    u2850 0B54  
                                  u2770 0A5E                                    u2690 0954  
                                  u1970 0FB6                                    u1890 2352  
                                  u2930 0EEE                                    u2851 0B50  
                                  u2771 0A5A                                    u2691 0950  
                                  u1971 0FB2                                    u1891 234E  
                                  u2931 0EEA                                    u2860 0B72  
                                  u1980 0FE4                                    u2940 0F20  
                                  u2861 0B6E                                    u2781 0A6A  
                                  u1981 0FE0                                    u2941 0F1C  
                                  u2790 0A88                                    u1990 0FF2  
                                  u2871 0B84                                    u2791 0A84  
                                  u1991 0FEE                                    u2951 219A  
                                  u2880 0BA4                                    u2960 21B8  
                                  u2881 0BA0                                    u2961 21B4  
                                  u2890 0BD6                                    u2970 21E8  
                                  u2891 0BD2                                    u2971 21E4  
                                  _RCEN 007E2B                                    u2981 225C  
                                  u2990 227A                                    u2991 2276  
                                  _RSEN 007E29                                    _Date 00EC  
                 mostrarFechaHora@F3608 026C                           ?_offBombillas 0001  
                                  _Year 00E8                                    abs@a 0013  
                                  _acum 01A8                                    _date 01BE  
                                  _dbuf 02D0                                    _days 01F0  
                                  _main 1778                                    _dtoa 0F22  
                       ?_RTC_Read_Clock 0001                                    _hour 00F0  
                      __end_of_I2C_Nack 28B0                                    _mins 01D2  
                                  _secs 01DC                                    _prec 00E4  
                      __end_of_I2C_Init 2888                        __end_of_I2C_Read 2698  
                                  _nout 01A6                                    _year 01AA  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    _xtoa 1206  
                      __end_of_I2C_Stop 289C                                    start 0000  
                       __end_of_MSdelay 2518                        ??_DHT11_ReadData 0001  
                         _LCD_String_xy 25E2                    __size_of_DHT11_Start 0020  
                          ___param_bank 000000        RTC_Read_Clock@read_clock_address 0004  
                                 ??_abs 0015                                   ??_pad 0017  
                      __end_of_LCD_Char 2852                        __end_of_LCD_Init 27C8  
                            _Clock_type 00FE                         __end_of___aodiv 1B02  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1C66                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                                   STR_10 085B  
                                 STR_11 0833                                   STR_12 0825  
                                 STR_20 084F                                   STR_21 084B  
                                 STR_13 0821                                   STR_14 0833  
                                 STR_22 083F                                   STR_15 0825  
                                 STR_23 083B                                   STR_16 0821  
                                 STR_24 0857                                   STR_25 0843  
                                 STR_17 0819                                   STR_18 081D  
                                 STR_26 0853                                   STR_19 0833  
                                 STR_27 085E                                   STR_28 085B  
                                 ?_xtoa 001C                                   _LATC0 007C58  
                                 _LATC1 007C59                                   _LATC2 007C5A  
                                 _AM_PM 00FD                            vfpfcnvrt@fmt 0045  
                          vfpfcnvrt@llu 0055                                   _SPBRG 000FAF  
                                 _TRISA 000F92                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _SSPIF 007CF3                                   _TXREG 000FAD  
                       __end_of_offLEDS 22AC                                   _Month 00EA  
                                 _flags 00E6                                   _fputc 1EEA  
                       __end_of_isalpha 265E                                   _fputs 255E  
                                 _hours 01C8                              _T_Integral 00F9  
                                 _month 01B4                                   _value 01E6  
                     __end_of_I2C_Ready 28D6                                   pad@fp 0011  
                                 _width 00E2                                   _putch 28E0  
                                 main@i 00DE                                   dtoa@d 001E  
                                 dtoa@i 003E                                   dtoa@n 0036  
                                 dtoa@p 0030                                   dtoa@s 0034  
                                 dtoa@w 0032                         __end_of_islower 26D0  
                     __end_of_I2C_Start 276C                          ??_offBombillas 0001  
                     __end_of_I2C_Write 2816                         __end_of_isupper 2708  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 24CE  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_toupper 2368  
                        ?_LCD_String_xy 000A                            _toupper$1449 000D  
                       __initialization 207A                            __end_of_main 197A  
                          __end_of_dtoa 1206                            __end_of_xtoa 14E0  
                     ?_mostrarFechaHora 0001                         ??_verificarHora 000F  
                             ??_I2C_Ack 0001                      ??_mostrarFechaHora 0076  
                                ??_main 0060                                  ??_dtoa 0026  
                                ??_xtoa 0027                           __activetblptr 000002  
                         main@buffer_TX 00BA                                  _ADCON1 000FC1  
                                ?_fputc 0001                                  ?_fputs 000A  
                                ?_putch 0001                     _DHT11_CheckResponse 27C8  
                      LCD_String_xy@msg 000B                        LCD_String_xy@pos 000A  
                      LCD_String_xy@row 000D                               ??_MSdelay 0003  
                                _OSCCON 000FD3                                  _SSPADD 000FC8  
                                _TRISB0 007C98                                  _TRISB1 007C99  
                                _SSPBUF 000FC9                            vfprintf@cfmt 005E  
                             ??___aodiv 0011                               ??___aomod 0011  
                                _onLEDS 1E1A                    ?_DHT11_CheckResponse 0001  
                                clear_0 20F8                                  clear_1 2104  
                                clear_2 2110                                  _valor2 00F8  
                    _I2C_Repeated_Start 276C                                  pad@buf 0013  
                             ??_offLEDS 0001                        ??_imprimirTemHum 0060  
                  __size_of_LCD_Command 001C                                  dtoa@fp 001C  
                                _strlen 2708                        offLEDS@buffer_TX 0001  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 224C  
                             ??_sprintf 0060                                  xtoa@fp 001C  
                             ??_toupper 0009                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 2116  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000D  
                         ___rparam_used 000001                    ??_I2C_Repeated_Start 0002  
                        __pcstackCOMRAM 0001                            __pidataBANK0 28DD  
                          __pidataBANK1 28D6                            __pidataBANK2 1D4A  
                          __pidataBANK3 2120                   ??_DHT11_CheckResponse 0001  
                         __end_of_fputc 1FB4                           __end_of_fputs 25A2  
                         __end_of_putch 28E2                            ??_LCD_String 000A  
                  __end_of_offBombillas 21EA                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 01A6                              __pbssBANK2 02D0  
                            ??_LCD_Char 0007                              ??_LCD_Init 0008  
                    __end_of_LCD_String 23C6                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                           offBombillas@i 0016  
                               ?_onLEDS 0001                                 _I2C_Ack 28B0  
                               _ACKSTAT 007E2E                                 ?_strlen 0001  
                    __size_of_vfpfcnvrt 0298                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 24CE                           ??_DHT11_Start 0001  
                             _I2C_Ready 28C4                               _I2C_Start 273E  
                             _I2C_Write 27F4                           LCD_String@msg 0008  
                               __Hparam 0000                  encenderBombillas@F3601 034A  
                               __Lparam 0000                  encenderBombillas@F3604 029B  
                encenderBombillas@F3592 0236                  encenderBombillas@F3595 021B  
                encenderBombillas@F3589 0251                  encenderBombillas@F3598 0200  
                               ___aodiv 197A                       _RTC_Read_Calendar 2422  
                               ___aomod 1B02                       offBombillas@F3584 0286  
                       __size_of_onLEDS 00D0                               ?_vfprintf 0060  
                          __psmallconst 0800                  encenderBombillas@i_800 01A4  
                encenderBombillas@i_791 019E                  encenderBombillas@i_794 01A0  
                encenderBombillas@i_788 019C                  encenderBombillas@i_797 01A2  
                    ?_RTC_Read_Calendar 0001                                 __pcinit 207A  
                               __ramtop 0800                                 __ptext0 1778  
                               __ptext1 22AC                                 __ptext2 224C  
                               __ptext3 2186                                 __ptext4 0BFC  
                               __ptext5 2518                                 __ptext6 2422  
                               __ptext7 2888                                 __ptext8 273E  
                               __ptext9 276C                                 _offLEDS 224C  
                       __size_of_strlen 0036                            __size_of_abs 0040  
                          __size_of_pad 00C6                                 _isalpha 2622  
                               onLEDS@i 0017                     ??_RTC_Read_Calendar 0003  
                               _islower 2698                                 _isupper 26D0  
                               _sprintf 247C               __size_of_mostrarFechaHora 0326  
                               _toupper 230A                    end_of_initialization 2116  
                               fputc@fp 0003                          LCD_Command@cmd 0007  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 247C  
                     __end_of_vfpfcnvrt 1778                   __size_of_offBombillas 0064  
                             _RCSTAbits 000FAB                     __end_of_DHT11_Start 2836  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005E  
                               strlen@a 0003                                 strlen@s 0001  
                             _PORTAbits 000F80                   __end_of_verificarHora 230A  
                             _PORTCbits 000F82                 __size_of_DHT11_ReadData 005C  
            encenderBombillas@buffer_TX 0100                               _TRISCbits 000F94  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                       __size_of_I2C_Stop 0014  
                          _offBombillas 2186                               _TXSTAbits 000FAC  
                     __size_of_LCD_Char 001C                       __size_of_LCD_Init 002E  
                    DHT11_ReadData@data 0002                               _T_Decimal 00FA  
                         ??_LCD_Command 0007                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@fp 0043                             vfpfcnvrt@ll 004D  
                           _BAUDCONbits 000FB8                          __end_of_onLEDS 1EEA  
                        __end_of_strlen 273E                     start_initialization 207A  
                           __end_of_abs 25E2                             __end_of_pad 207A  
  I2C_Repeated_Start@slave_read_address 0002                       _encenderBombillas 0862  
                           ??_I2C_Ready 0001                      ?_encenderBombillas 0001  
                           _DHT11_Start 2816                             ??_I2C_Start 0002  
           __end_of_DHT11_CheckResponse 27F4                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 2622              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 0062             __size_of_I2C_Repeated_Start 002E  
                   ??_encenderBombillas 0019                                ??_onLEDS 0001  
                           __pdataBANK0 00FD                             __pdataBANK1 01F0  
                           __pdataBANK2 0200                             __pdataBANK3 0300  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
                   __end_of_LCD_Command 286E                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0001  
             __end_of_encenderBombillas 0BFC                        _mostrarFechaHora 0BFC  
                     main@buffer_TX_745 0094                 __size_of_imprimirTemHum 00E4  
                              ?_MSdelay 0001                               _dtoa$1353 002E  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013                          _DHT11_ReadData 23C6  
                              ?_offLEDS 0001                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 289C  
                              ?_isalpha 0001                                _I2C_Init 286E  
                              _I2C_Read 265E                                _I2C_Stop 2888  
                              ?_islower 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000E                                ?_sprintf 0066  
        encenderBombillas@buffer_TX_790 0136          encenderBombillas@buffer_TX_793 0151  
                        __size_of_fputc 00CA          encenderBombillas@buffer_TX_787 011B  
        encenderBombillas@buffer_TX_796 016C          encenderBombillas@buffer_TX_799 0187  
                        __size_of_fputs 0044                                ?_toupper 0007  
                        __size_of_putch 0002                                MSdelay@i 0003  
                              MSdelay@j 0005               mostrarFechaHora@buffer_TX 0078  
                              _LCD_Char 2836                                _LCD_Init 279A  
               __size_of_RTC_Read_Clock 0046                               main@F3562 0326  
                             main@F3565 0300                  __end_of_DHT11_ReadData 2422  
                           _LCD_Command 2852                               _vfpfcnvrt 14E0  
                             _xtoa$1364 002F                               _xtoa$1365 0031  
                      __size_of_I2C_Ack 0014                               main@i_746 00E0  
                      onLEDS@T_Integral 0014              __size_of_encenderBombillas 039A  
                            vfpfcnvrt@c 005D                               copy_data0 208E  
                             copy_data1 20AE                               copy_data2 20CE  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 004A  
                              __Hrparam 0000                              vfprintf@ap 0064  
                              __Lrparam 0000                              vfprintf@fp 0060  
                         I2C_Write@data 0001                         ?_DHT11_ReadData 0001  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                            ?_vfpfcnvrt 0043                         DHT11_ReadData@i 0001  
                       ___aodiv@divisor 0009                         ___aodiv@counter 0011  
                      __size_of_offLEDS 0060                              sprintf@fmt 0068  
                      __size_of_isalpha 003C                        __size_of_islower 0038  
                              __ptext10 27F4                                __ptext11 265E  
                              __ptext20 1206                                __ptext12 28C4  
                              __ptext21 230A                                __ptext13 289C  
                              __ptext30 28E0                                __ptext22 2698  
                              __ptext14 28B0                                __ptext31 25A2  
                              __ptext23 26D0                                __ptext15 279A  
                              __ptext40 24CE                                __ptext32 1B02  
                              __ptext24 2622                                __ptext16 1C66  
                              __ptext41 286E                                __ptext33 197A  
                              __ptext25 0F22                                __ptext17 247C  
                              __ptext42 2816                                __ptext34 25E2  
                              __ptext26 1FB4                                __ptext18 21EA  
                              __ptext43 23C6                                __ptext35 2368  
                              __ptext27 2708                                __ptext19 14E0  
                              __ptext44 27C8                                __ptext36 2836  
                              __ptext28 255E                                __ptext37 2852  
                              __ptext29 1EEA                                __ptext38 0862  
                              __ptext39 1E1A                        __size_of_isupper 0038  
                        _imprimirTemHum 1C66                        __size_of_sprintf 0052  
                      __size_of_toupper 005E                           __size_of_main 0202  
                         __size_of_dtoa 02E4                             onLEDS@F3580 02AE  
                          ?_DHT11_Start 0001                           __size_of_xtoa 02DA  
                __size_of_verificarHora 005E                              MSdelay@val 0001  
                              offLEDS@i 0010                __end_of_mostrarFechaHora 0F22  
                              _vfprintf 21EA                             onLEDS@valor 0015  
                     mostrarFechaHora@i 0092                              _LCD_String 2368  
                      ___aomod@dividend 0001                  __end_of_imprimirTemHum 1D4A  
                              isalpha@c 0001                   offBombillas@buffer_TX 0001  
                             sprintf@ap 006E                                islower@c 0001  
            __end_of_I2C_Repeated_Start 279A                                isupper@c 0001  
                        _RTC_Read_Clock 2518                            offLEDS@F3574 02C1  
          __size_of_DHT11_CheckResponse 002C                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0049                         ___aomod@counter 0011  
                              sprintf@f 0070                           _verificarHora 22AC  
                              sprintf@s 0066                      encenderBombillas@i 019A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                       ?_imprimirTemHum 0001                             _SSPCON2bits 000FC5  
                          ___aodiv@sign 0012                  __end_of_RTC_Read_Clock 255E  
                            _RH_Decimal 00FC                            ___aomod@sign 0012  
