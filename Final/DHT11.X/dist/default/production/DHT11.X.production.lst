

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 10 23:49:21 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _LATD	set	3980
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISCbits	set	3988
    77  0000                     _PORTCbits	set	3970
    78  0000                     _PORTAbits	set	3968
    79  0000                     _ADCON1	set	4033
    80  0000                     _OSCCON	set	4051
    81  0000                     _TRISA	set	3986
    82  0000                     _LATC1	set	31833
    83  0000                     _LATC0	set	31832
    84  0000                     _LATC2	set	31834
    85                           
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     STR_6:
    91  000801  48                 	db	72	;'H'
    92  000802  75                 	db	117	;'u'
    93  000803  6D                 	db	109	;'m'
    94  000804  65                 	db	101	;'e'
    95  000805  64                 	db	100	;'d'
    96  000806  61                 	db	97	;'a'
    97  000807  64                 	db	100	;'d'
    98  000808  00                 	db	0
    99  000809                     STR_5:
   100  000809  25                 	db	37
   101  00080A  64                 	db	100	;'d'
   102  00080B  20                 	db	32
   103  00080C  20                 	db	32
   104  00080D  00                 	db	0
   105  00080E                     STR_2:
   106  00080E  2E                 	db	46
   107  00080F  25                 	db	37
   108  000810  64                 	db	100	;'d'
   109  000811  20                 	db	32
   110  000812  00                 	db	0
   111  000813                     STR_7:
   112  000813  54                 	db	84	;'T'
   113  000814  65                 	db	101	;'e'
   114  000815  6D                 	db	109	;'m'
   115  000816  70                 	db	112	;'p'
   116  000817  00                 	db	0
   117  000818                     STR_4:
   118  000818  2E                 	db	46
   119  000819  25                 	db	37
   120  00081A  64                 	db	100	;'d'
   121  00081B  00                 	db	0
   122  00081C  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127  0017A0                     __pcinit:
   128                           	callstack 0
   129  0017A0                     start_initialization:
   130                           	callstack 0
   131  0017A0                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Clear objects allocated to BANK0 (38 bytes)
   135  0017A0  EE00  F060         	lfsr	0,__pbssBANK0
   136  0017A4  0E26               	movlw	38
   137  0017A6                     clear_0:
   138  0017A6  6AEE               	clrf	postinc0,c
   139  0017A8  06E8               	decf	wreg,f,c
   140  0017AA  E1FD               	bnz	clear_0
   141                           
   142                           ; Clear objects allocated to COMRAM (2 bytes)
   143  0017AC  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   144  0017AE  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   145  0017B0                     end_of_initialization:
   146                           	callstack 0
   147  0017B0                     __end_of__initialization:
   148                           	callstack 0
   149  0017B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  0017B2  6EF8               	movwf	tblptru,c
   151  0017B4  0100               	movlb	0
   152  0017B6  EF7E  F005         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155  00005E                     __pbssCOMRAM:
   156                           	callstack 0
   157  00005E                     _flags:
   158                           	callstack 0
   159  00005E                     	ds	2
   160                           
   161                           	psect	bssBANK0
   162  000060                     __pbssBANK0:
   163                           	callstack 0
   164  000060                     _nout:
   165                           	callstack 0
   166  000060                     	ds	2
   167  000062                     _width:
   168                           	callstack 0
   169  000062                     	ds	2
   170  000064                     _prec:
   171                           	callstack 0
   172  000064                     	ds	2
   173  000066                     _dbuf:
   174                           	callstack 0
   175  000066                     	ds	32
   176                           
   177                           	psect	cstackBANK0
   178  000086                     __pcstackBANK0:
   179                           	callstack 0
   180  000086                     	ds	2
   181  000088                     sprintf@ap:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x2
   185  000088                     	ds	2
   186  00008A                     sprintf@f:
   187                           	callstack 0
   188                           
   189                           ; 6 bytes @ 0x4
   190  00008A                     	ds	6
   191  000090                     main@value:
   192                           	callstack 0
   193                           
   194                           ; 10 bytes @ 0xA
   195  000090                     	ds	10
   196  00009A                     main@agr:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x14
   200  00009A                     	ds	2
   201  00009C                     main@RH_Decimal:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x16
   205  00009C                     	ds	1
   206  00009D                     main@RH_Integral:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x17
   210  00009D                     	ds	1
   211  00009E                     main@T_Decimal:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x18
   215  00009E                     	ds	1
   216  00009F                     main@Checksum:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x19
   220  00009F                     	ds	1
   221  0000A0                     main@acum:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x1A
   225  0000A0                     	ds	2
   226  0000A2                     main@T_Integral:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1C
   230  0000A2                     	ds	1
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	callstack 0
   235  000001                     ??_DHT11_Start:
   236  000001                     ?_strlen:
   237                           	callstack 0
   238  000001                     ?___aodiv:
   239                           	callstack 0
   240  000001                     ?___aomod:
   241                           	callstack 0
   242  000001                     DHT11_ReadData@i:
   243                           	callstack 0
   244  000001                     onLEDS@T_Integral:
   245                           	callstack 0
   246  000001                     MSdelay@val:
   247                           	callstack 0
   248  000001                     fputc@c:
   249                           	callstack 0
   250  000001                     strlen@s:
   251                           	callstack 0
   252  000001                     ___aodiv@dividend:
   253                           	callstack 0
   254  000001                     ___aomod@dividend:
   255                           	callstack 0
   256                           
   257                           ; 8 bytes @ 0x0
   258  000001                     	ds	1
   259  000002                     DHT11_ReadData@data:
   260                           	callstack 0
   261  000002                     onLEDS@valor:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x1
   265  000002                     	ds	1
   266  000003                     MSdelay@i:
   267                           	callstack 0
   268  000003                     fputc@fp:
   269                           	callstack 0
   270  000003                     strlen@a:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274  000003                     	ds	2
   275  000005                     ??_fputc:
   276  000005                     MSdelay@j:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x4
   280  000005                     	ds	2
   281  000007                     LCD_Command@cmd:
   282                           	callstack 0
   283  000007                     LCD_Char@dat:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x6
   287  000007                     	ds	1
   288  000008                     LCD_String@msg:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x7
   292  000008                     	ds	1
   293  000009                     ___aodiv@divisor:
   294                           	callstack 0
   295  000009                     ___aomod@divisor:
   296                           	callstack 0
   297                           
   298                           ; 8 bytes @ 0x8
   299  000009                     	ds	1
   300  00000A                     LCD_String_xy@pos:
   301                           	callstack 0
   302  00000A                     fputs@s:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x9
   306  00000A                     	ds	1
   307  00000B                     LCD_String_xy@msg:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xA
   311  00000B                     	ds	1
   312  00000C                     fputs@fp:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xB
   316  00000C                     	ds	1
   317  00000D                     LCD_String_xy@row:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xC
   321  00000D                     	ds	1
   322  00000E                     LCD_String_xy@location:
   323                           	callstack 0
   324  00000E                     fputs@c:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xD
   328  00000E                     	ds	1
   329  00000F                     fputs@i:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0xE
   333  00000F                     	ds	2
   334  000011                     ?_pad:
   335                           	callstack 0
   336  000011                     ___aodiv@counter:
   337                           	callstack 0
   338  000011                     ___aomod@counter:
   339                           	callstack 0
   340  000011                     pad@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x10
   344  000011                     	ds	1
   345  000012                     ___aodiv@sign:
   346                           	callstack 0
   347  000012                     ___aomod@sign:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     ?_abs:
   353                           	callstack 0
   354  000013                     pad@buf:
   355                           	callstack 0
   356  000013                     abs@a:
   357                           	callstack 0
   358  000013                     ___aodiv@quotient:
   359                           	callstack 0
   360                           
   361                           ; 8 bytes @ 0x12
   362  000013                     	ds	2
   363  000015                     ??_abs:
   364  000015                     pad@p:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x14
   368  000015                     	ds	2
   369  000017                     ??_pad:
   370                           
   371                           ; 1 bytes @ 0x16
   372  000017                     	ds	1
   373  000018                     pad@i:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x17
   377  000018                     	ds	2
   378  00001A                     pad@w:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x19
   382  00001A                     	ds	2
   383  00001C                     ?_dtoa:
   384                           	callstack 0
   385  00001C                     dtoa@fp:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x1B
   389  00001C                     	ds	2
   390  00001E                     dtoa@d:
   391                           	callstack 0
   392                           
   393                           ; 8 bytes @ 0x1D
   394  00001E                     	ds	8
   395  000026                     ??_dtoa:
   396                           
   397                           ; 1 bytes @ 0x25
   398  000026                     	ds	8
   399  00002E                     _dtoa$834:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2D
   403  00002E                     	ds	2
   404  000030                     dtoa@p:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2F
   408  000030                     	ds	2
   409  000032                     dtoa@w:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x31
   413  000032                     	ds	2
   414  000034                     dtoa@s:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x33
   418  000034                     	ds	2
   419  000036                     dtoa@n:
   420                           	callstack 0
   421                           
   422                           ; 8 bytes @ 0x35
   423  000036                     	ds	8
   424  00003E                     dtoa@i:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x3D
   428  00003E                     	ds	2
   429  000040                     ?_vfpfcnvrt:
   430                           	callstack 0
   431  000040                     vfpfcnvrt@fp:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x3F
   435  000040                     	ds	2
   436  000042                     vfpfcnvrt@fmt:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x41
   440  000042                     	ds	2
   441  000044                     vfpfcnvrt@ap:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x43
   445  000044                     	ds	2
   446  000046                     ??_vfpfcnvrt:
   447                           
   448                           ; 1 bytes @ 0x45
   449  000046                     	ds	2
   450  000048                     vfpfcnvrt@ll:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x47
   454  000048                     	ds	8
   455  000050                     ?_vfprintf:
   456                           	callstack 0
   457  000050                     vfprintf@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x4F
   461  000050                     	ds	2
   462  000052                     vfprintf@fmt:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x51
   466  000052                     	ds	2
   467  000054                     vfprintf@ap:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x53
   471  000054                     	ds	2
   472  000056                     vfprintf@cfmt:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x55
   476  000056                     	ds	2
   477  000058                     ?_sprintf:
   478                           	callstack 0
   479  000058                     sprintf@s:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x57
   483  000058                     	ds	2
   484  00005A                     sprintf@fmt:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x59
   488  00005A                     	ds	4
   489  00005E                     
   490                           ; 1 bytes @ 0x5D
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 30 in file "humidity_Temp.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  value          10   10[BANK0 ] unsigned char [10]
   501 ;;  acum            2   26[BANK0 ] int 
   502 ;;  agr             2   20[BANK0 ] int 
   503 ;;  T_Integral      1   28[BANK0 ] unsigned char 
   504 ;;  Checksum        1   25[BANK0 ] unsigned char 
   505 ;;  T_Decimal       1   24[BANK0 ] unsigned char 
   506 ;;  RH_Integral     1   23[BANK0 ] unsigned char 
   507 ;;  RH_Decimal      1   22[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         0       0       0       0       0       0       0       0       0
   518 ;;      Locals:         0      19       0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0       0
   520 ;;      Totals:         0      19       0       0       0       0       0       0       0
   521 ;;Total ram usage:       19 bytes
   522 ;; Hardware stack levels required when called:    8
   523 ;; This function calls:
   524 ;;		_DHT11_CheckResponse
   525 ;;		_DHT11_ReadData
   526 ;;		_DHT11_Start
   527 ;;		_LCD_Char
   528 ;;		_LCD_Init
   529 ;;		_LCD_String
   530 ;;		_LCD_String_xy
   531 ;;		_MSdelay
   532 ;;		_onLEDS
   533 ;;		_sprintf
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  000AFC                     __ptext0:
   541                           	callstack 0
   542  000AFC                     _main:
   543                           	callstack 23
   544  000AFC                     
   545                           ;humidity_Temp.c: 32:     int agr= 0;
   546  000AFC  0E00               	movlw	0
   547  000AFE  0100               	movlb	0	; () banked
   548  000B00  6F9B               	movwf	(main@agr+1)& (0+255),b
   549  000B02  0E00               	movlw	0
   550  000B04  6F9A               	movwf	main@agr& (0+255),b
   551                           
   552                           ;humidity_Temp.c: 33:     int acum=0;
   553  000B06  0E00               	movlw	0
   554  000B08  6FA1               	movwf	(main@acum+1)& (0+255),b
   555  000B0A  0E00               	movlw	0
   556  000B0C  6FA0               	movwf	main@acum& (0+255),b
   557                           
   558                           ;humidity_Temp.c: 34:     TRISA = 0;
   559  000B0E  0E00               	movlw	0
   560  000B10  6E92               	movwf	146,c	;volatile
   561                           
   562                           ;humidity_Temp.c: 35:     char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;humidity_Tem
      +                          p.c: 36:     char Checksum;;humidity_Temp.c: 37:     char value[10];;humidity_Temp.c: 38
      +                          :     OSCCON = 0x72;
   563  000B12  0E72               	movlw	114
   564  000B14  6ED3               	movwf	211,c	;volatile
   565  000B16                     
   566                           ; BSR set to: 0
   567                           ;humidity_Temp.c: 41:     LCD_Init();
   568  000B16  EC77  F00B         	call	_LCD_Init	;wreg free
   569  000B1A                     
   570                           ;humidity_Temp.c: 42:     ADCON1=0x0F;
   571  000B1A  0E0F               	movlw	15
   572  000B1C  6EC1               	movwf	193,c	;volatile
   573  000B1E                     l1804:
   574                           
   575                           ;humidity_Temp.c: 45: {;humidity_Temp.c: 46:     DHT11_Start();
   576  000B1E  ECA4  F00B         	call	_DHT11_Start	;wreg free
   577  000B22                     
   578                           ;humidity_Temp.c: 47:     DHT11_CheckResponse();
   579  000B22  EC8E  F00B         	call	_DHT11_CheckResponse	;wreg free
   580  000B26                     
   581                           ;humidity_Temp.c: 50:     RH_Integral = DHT11_ReadData();
   582  000B26  EC7E  F00A         	call	_DHT11_ReadData	;wreg free
   583  000B2A  0100               	movlb	0	; () banked
   584  000B2C  6F9D               	movwf	main@RH_Integral& (0+255),b
   585  000B2E                     
   586                           ; BSR set to: 0
   587                           ;humidity_Temp.c: 51:     RH_Decimal = DHT11_ReadData();
   588  000B2E  EC7E  F00A         	call	_DHT11_ReadData	;wreg free
   589  000B32  0100               	movlb	0	; () banked
   590  000B34  6F9C               	movwf	main@RH_Decimal& (0+255),b
   591  000B36                     
   592                           ; BSR set to: 0
   593                           ;humidity_Temp.c: 52:     T_Integral = DHT11_ReadData();
   594  000B36  EC7E  F00A         	call	_DHT11_ReadData	;wreg free
   595  000B3A  0100               	movlb	0	; () banked
   596  000B3C  6FA2               	movwf	main@T_Integral& (0+255),b
   597  000B3E                     
   598                           ; BSR set to: 0
   599                           ;humidity_Temp.c: 53:     T_Decimal = DHT11_ReadData();
   600  000B3E  EC7E  F00A         	call	_DHT11_ReadData	;wreg free
   601  000B42  0100               	movlb	0	; () banked
   602  000B44  6F9E               	movwf	main@T_Decimal& (0+255),b
   603  000B46                     
   604                           ; BSR set to: 0
   605                           ;humidity_Temp.c: 54:     Checksum = DHT11_ReadData();
   606  000B46  EC7E  F00A         	call	_DHT11_ReadData	;wreg free
   607  000B4A  0100               	movlb	0	; () banked
   608  000B4C  6F9F               	movwf	main@Checksum& (0+255),b
   609                           
   610                           ;humidity_Temp.c: 57:     while ( agr == 0){
   611  000B4E  EFB8  F006         	goto	l1900
   612  000B52                     l1818:
   613                           
   614                           ; BSR set to: 0
   615                           ;humidity_Temp.c: 58:         onLEDS(T_Integral);
   616  000B52  51A2               	movf	main@T_Integral& (0+255),w,b
   617  000B54  ECE2  F009         	call	_onLEDS
   618  000B58                     
   619                           ;humidity_Temp.c: 59:         if(T_Integral <30 && acum == 0 ){
   620  000B58  0E1E               	movlw	30
   621  000B5A  0100               	movlb	0	; () banked
   622  000B5C  61A2               	cpfslt	main@T_Integral& (0+255),b
   623  000B5E  EFB3  F005         	goto	u1321
   624  000B62  EFB5  F005         	goto	u1320
   625  000B66                     u1321:
   626  000B66  EFC8  F005         	goto	l1830
   627  000B6A                     u1320:
   628  000B6A                     
   629                           ; BSR set to: 0
   630  000B6A  51A0               	movf	main@acum& (0+255),w,b
   631  000B6C  11A1               	iorwf	(main@acum+1)& (0+255),w,b
   632  000B6E  A4D8               	btfss	status,2,c
   633  000B70  EFBC  F005         	goto	u1331
   634  000B74  EFBE  F005         	goto	u1330
   635  000B78                     u1331:
   636  000B78  EFC8  F005         	goto	l1830
   637  000B7C                     u1330:
   638  000B7C                     
   639                           ; BSR set to: 0
   640                           ;humidity_Temp.c: 60:             PORTAbits.RA0 = 1;
   641  000B7C  8080               	bsf	128,0,c	;volatile
   642  000B7E                     
   643                           ; BSR set to: 0
   644                           ;humidity_Temp.c: 61:             T_Integral = T_Integral + 6;
   645  000B7E  51A2               	movf	main@T_Integral& (0+255),w,b
   646  000B80  0F06               	addlw	6
   647  000B82  6FA2               	movwf	main@T_Integral& (0+255),b
   648  000B84                     
   649                           ; BSR set to: 0
   650                           ;humidity_Temp.c: 62:             acum = 6;
   651  000B84  0E00               	movlw	0
   652  000B86  6FA1               	movwf	(main@acum+1)& (0+255),b
   653  000B88  0E06               	movlw	6
   654  000B8A  6FA0               	movwf	main@acum& (0+255),b
   655                           
   656                           ;humidity_Temp.c: 63:         } else if (T_Integral <30 && acum == 6){
   657  000B8C  EF38  F006         	goto	l1870
   658  000B90                     l1830:
   659                           
   660                           ; BSR set to: 0
   661  000B90  0E1E               	movlw	30
   662  000B92  61A2               	cpfslt	main@T_Integral& (0+255),b
   663  000B94  EFCE  F005         	goto	u1341
   664  000B98  EFD0  F005         	goto	u1340
   665  000B9C                     u1341:
   666  000B9C  EFE4  F005         	goto	l1840
   667  000BA0                     u1340:
   668  000BA0                     
   669                           ; BSR set to: 0
   670  000BA0  0E06               	movlw	6
   671  000BA2  19A0               	xorwf	main@acum& (0+255),w,b
   672  000BA4  11A1               	iorwf	(main@acum+1)& (0+255),w,b
   673  000BA6  A4D8               	btfss	status,2,c
   674  000BA8  EFD8  F005         	goto	u1351
   675  000BAC  EFDA  F005         	goto	u1350
   676  000BB0                     u1351:
   677  000BB0  EFE4  F005         	goto	l1840
   678  000BB4                     u1350:
   679  000BB4                     
   680                           ; BSR set to: 0
   681                           ;humidity_Temp.c: 64:             PORTAbits.RA1 = 1;
   682  000BB4  8280               	bsf	128,1,c	;volatile
   683  000BB6                     
   684                           ; BSR set to: 0
   685                           ;humidity_Temp.c: 65:             T_Integral = T_Integral + 6;
   686  000BB6  51A2               	movf	main@T_Integral& (0+255),w,b
   687  000BB8  0F06               	addlw	6
   688  000BBA  6FA2               	movwf	main@T_Integral& (0+255),b
   689  000BBC                     
   690                           ; BSR set to: 0
   691                           ;humidity_Temp.c: 66:             acum = 12;
   692  000BBC  0E00               	movlw	0
   693  000BBE  6FA1               	movwf	(main@acum+1)& (0+255),b
   694  000BC0  0E0C               	movlw	12
   695  000BC2  6FA0               	movwf	main@acum& (0+255),b
   696                           
   697                           ;humidity_Temp.c: 67:         }else if (T_Integral <30 && acum == 12){
   698  000BC4  EF38  F006         	goto	l1870
   699  000BC8                     l1840:
   700                           
   701                           ; BSR set to: 0
   702  000BC8  0E1E               	movlw	30
   703  000BCA  61A2               	cpfslt	main@T_Integral& (0+255),b
   704  000BCC  EFEA  F005         	goto	u1361
   705  000BD0  EFEC  F005         	goto	u1360
   706  000BD4                     u1361:
   707  000BD4  EF00  F006         	goto	l1850
   708  000BD8                     u1360:
   709  000BD8                     
   710                           ; BSR set to: 0
   711  000BD8  0E0C               	movlw	12
   712  000BDA  19A0               	xorwf	main@acum& (0+255),w,b
   713  000BDC  11A1               	iorwf	(main@acum+1)& (0+255),w,b
   714  000BDE  A4D8               	btfss	status,2,c
   715  000BE0  EFF4  F005         	goto	u1371
   716  000BE4  EFF6  F005         	goto	u1370
   717  000BE8                     u1371:
   718  000BE8  EF00  F006         	goto	l1850
   719  000BEC                     u1370:
   720  000BEC                     
   721                           ; BSR set to: 0
   722                           ;humidity_Temp.c: 68:             PORTAbits.RA2 = 1;
   723  000BEC  8480               	bsf	128,2,c	;volatile
   724  000BEE                     
   725                           ; BSR set to: 0
   726                           ;humidity_Temp.c: 69:             T_Integral = T_Integral + 6;
   727  000BEE  51A2               	movf	main@T_Integral& (0+255),w,b
   728  000BF0  0F06               	addlw	6
   729  000BF2  6FA2               	movwf	main@T_Integral& (0+255),b
   730  000BF4                     
   731                           ; BSR set to: 0
   732                           ;humidity_Temp.c: 70:             acum = 18;
   733  000BF4  0E00               	movlw	0
   734  000BF6  6FA1               	movwf	(main@acum+1)& (0+255),b
   735  000BF8  0E12               	movlw	18
   736  000BFA  6FA0               	movwf	main@acum& (0+255),b
   737                           
   738                           ;humidity_Temp.c: 71:         }else if (T_Integral <30 && acum == 18){
   739  000BFC  EF38  F006         	goto	l1870
   740  000C00                     l1850:
   741                           
   742                           ; BSR set to: 0
   743  000C00  0E1E               	movlw	30
   744  000C02  61A2               	cpfslt	main@T_Integral& (0+255),b
   745  000C04  EF06  F006         	goto	u1381
   746  000C08  EF08  F006         	goto	u1380
   747  000C0C                     u1381:
   748  000C0C  EF1C  F006         	goto	l1860
   749  000C10                     u1380:
   750  000C10                     
   751                           ; BSR set to: 0
   752  000C10  0E12               	movlw	18
   753  000C12  19A0               	xorwf	main@acum& (0+255),w,b
   754  000C14  11A1               	iorwf	(main@acum+1)& (0+255),w,b
   755  000C16  A4D8               	btfss	status,2,c
   756  000C18  EF10  F006         	goto	u1391
   757  000C1C  EF12  F006         	goto	u1390
   758  000C20                     u1391:
   759  000C20  EF1C  F006         	goto	l1860
   760  000C24                     u1390:
   761  000C24                     
   762                           ; BSR set to: 0
   763                           ;humidity_Temp.c: 72:             PORTAbits.RA3 = 1;
   764  000C24  8680               	bsf	128,3,c	;volatile
   765  000C26                     
   766                           ; BSR set to: 0
   767                           ;humidity_Temp.c: 73:             T_Integral = T_Integral + 6;
   768  000C26  51A2               	movf	main@T_Integral& (0+255),w,b
   769  000C28  0F06               	addlw	6
   770  000C2A  6FA2               	movwf	main@T_Integral& (0+255),b
   771  000C2C                     
   772                           ; BSR set to: 0
   773                           ;humidity_Temp.c: 74:             acum = 24;
   774  000C2C  0E00               	movlw	0
   775  000C2E  6FA1               	movwf	(main@acum+1)& (0+255),b
   776  000C30  0E18               	movlw	24
   777  000C32  6FA0               	movwf	main@acum& (0+255),b
   778                           
   779                           ;humidity_Temp.c: 75:         }else if (T_Integral <30 && acum == 24){
   780  000C34  EF38  F006         	goto	l1870
   781  000C38                     l1860:
   782                           
   783                           ; BSR set to: 0
   784  000C38  0E1E               	movlw	30
   785  000C3A  61A2               	cpfslt	main@T_Integral& (0+255),b
   786  000C3C  EF22  F006         	goto	u1401
   787  000C40  EF24  F006         	goto	u1400
   788  000C44                     u1401:
   789  000C44  EF34  F006         	goto	l1868
   790  000C48                     u1400:
   791  000C48                     
   792                           ; BSR set to: 0
   793  000C48  0E18               	movlw	24
   794  000C4A  19A0               	xorwf	main@acum& (0+255),w,b
   795  000C4C  11A1               	iorwf	(main@acum+1)& (0+255),w,b
   796  000C4E  A4D8               	btfss	status,2,c
   797  000C50  EF2C  F006         	goto	u1411
   798  000C54  EF2E  F006         	goto	u1410
   799  000C58                     u1411:
   800  000C58  EF34  F006         	goto	l1868
   801  000C5C                     u1410:
   802  000C5C                     
   803                           ; BSR set to: 0
   804                           ;humidity_Temp.c: 76:             PORTAbits.RA4 = 1;
   805  000C5C  8880               	bsf	128,4,c	;volatile
   806  000C5E                     
   807                           ; BSR set to: 0
   808                           ;humidity_Temp.c: 77:             T_Integral = T_Integral + 6;
   809  000C5E  51A2               	movf	main@T_Integral& (0+255),w,b
   810  000C60  0F06               	addlw	6
   811  000C62  6FA2               	movwf	main@T_Integral& (0+255),b
   812                           
   813                           ;humidity_Temp.c: 78:         } else
   814  000C64  EF38  F006         	goto	l1870
   815  000C68                     l1868:
   816                           
   817                           ; BSR set to: 0
   818                           ;humidity_Temp.c: 79:             agr=1;
   819  000C68  0E00               	movlw	0
   820  000C6A  6F9B               	movwf	(main@agr+1)& (0+255),b
   821  000C6C  0E01               	movlw	1
   822  000C6E  6F9A               	movwf	main@agr& (0+255),b
   823  000C70                     l1870:
   824                           
   825                           ; BSR set to: 0
   826                           ;humidity_Temp.c: 81:         sprintf(value,"%d",RH_Integral);
   827  000C70  0E90               	movlw	low main@value
   828  000C72  6E58               	movwf	sprintf@s^0,c
   829  000C74  0E00               	movlw	high main@value
   830  000C76  6E59               	movwf	(sprintf@s+1)^0,c
   831  000C78  0E19               	movlw	low (STR_4+1)
   832  000C7A  6E5A               	movwf	sprintf@fmt^0,c
   833  000C7C  0E08               	movlw	high (STR_4+1)
   834  000C7E  6E5B               	movwf	(sprintf@fmt+1)^0,c
   835  000C80  C09D  F05C         	movff	main@RH_Integral,?_sprintf+4
   836  000C84  6A5D               	clrf	(?_sprintf+5)^0,c
   837  000C86  ECAC  F00A         	call	_sprintf	;wreg free
   838  000C8A                     
   839                           ;humidity_Temp.c: 82:         LCD_String_xy(0,0,value);
   840  000C8A  0E00               	movlw	0
   841  000C8C  6E0A               	movwf	LCD_String_xy@pos^0,c
   842  000C8E  0E90               	movlw	low main@value
   843  000C90  6E0B               	movwf	LCD_String_xy@msg^0,c
   844  000C92  0E00               	movlw	high main@value
   845  000C94  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   846  000C96  0E00               	movlw	0
   847  000C98  EC3C  F00B         	call	_LCD_String_xy
   848  000C9C                     
   849                           ;humidity_Temp.c: 83:         sprintf(value,".%d ",RH_Decimal);
   850  000C9C  0E90               	movlw	low main@value
   851  000C9E  6E58               	movwf	sprintf@s^0,c
   852  000CA0  0E00               	movlw	high main@value
   853  000CA2  6E59               	movwf	(sprintf@s+1)^0,c
   854  000CA4  0E0E               	movlw	low STR_2
   855  000CA6  6E5A               	movwf	sprintf@fmt^0,c
   856  000CA8  0E08               	movlw	high STR_2
   857  000CAA  6E5B               	movwf	(sprintf@fmt+1)^0,c
   858  000CAC  C09C  F05C         	movff	main@RH_Decimal,?_sprintf+4
   859  000CB0  6A5D               	clrf	(?_sprintf+5)^0,c
   860  000CB2  ECAC  F00A         	call	_sprintf	;wreg free
   861  000CB6                     
   862                           ;humidity_Temp.c: 84:         LCD_String(value);
   863  000CB6  0E90               	movlw	low main@value
   864  000CB8  6E08               	movwf	LCD_String@msg^0,c
   865  000CBA  0E00               	movlw	high main@value
   866  000CBC  6E09               	movwf	(LCD_String@msg+1)^0,c
   867  000CBE  EC4F  F00A         	call	_LCD_String	;wreg free
   868  000CC2                     
   869                           ;humidity_Temp.c: 85:         LCD_Char('%');
   870  000CC2  0E25               	movlw	37
   871  000CC4  ECB4  F00B         	call	_LCD_Char
   872  000CC8                     
   873                           ;humidity_Temp.c: 88:         sprintf(value,"%d",T_Integral);
   874  000CC8  0E90               	movlw	low main@value
   875  000CCA  6E58               	movwf	sprintf@s^0,c
   876  000CCC  0E00               	movlw	high main@value
   877  000CCE  6E59               	movwf	(sprintf@s+1)^0,c
   878  000CD0  0E19               	movlw	low (STR_4+1)
   879  000CD2  6E5A               	movwf	sprintf@fmt^0,c
   880  000CD4  0E08               	movlw	high (STR_4+1)
   881  000CD6  6E5B               	movwf	(sprintf@fmt+1)^0,c
   882  000CD8  C0A2  F05C         	movff	main@T_Integral,?_sprintf+4
   883  000CDC  6A5D               	clrf	(?_sprintf+5)^0,c
   884  000CDE  ECAC  F00A         	call	_sprintf	;wreg free
   885  000CE2                     
   886                           ;humidity_Temp.c: 89:         LCD_String_xy(1,0,value);
   887  000CE2  0E00               	movlw	0
   888  000CE4  6E0A               	movwf	LCD_String_xy@pos^0,c
   889  000CE6  0E90               	movlw	low main@value
   890  000CE8  6E0B               	movwf	LCD_String_xy@msg^0,c
   891  000CEA  0E00               	movlw	high main@value
   892  000CEC  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   893  000CEE  0E01               	movlw	1
   894  000CF0  EC3C  F00B         	call	_LCD_String_xy
   895  000CF4                     
   896                           ;humidity_Temp.c: 90:         sprintf(value,".%d",T_Decimal);
   897  000CF4  0E90               	movlw	low main@value
   898  000CF6  6E58               	movwf	sprintf@s^0,c
   899  000CF8  0E00               	movlw	high main@value
   900  000CFA  6E59               	movwf	(sprintf@s+1)^0,c
   901  000CFC  0E18               	movlw	low STR_4
   902  000CFE  6E5A               	movwf	sprintf@fmt^0,c
   903  000D00  0E08               	movlw	high STR_4
   904  000D02  6E5B               	movwf	(sprintf@fmt+1)^0,c
   905  000D04  C09E  F05C         	movff	main@T_Decimal,?_sprintf+4
   906  000D08  6A5D               	clrf	(?_sprintf+5)^0,c
   907  000D0A  ECAC  F00A         	call	_sprintf	;wreg free
   908  000D0E                     
   909                           ;humidity_Temp.c: 91:         LCD_String(value);
   910  000D0E  0E90               	movlw	low main@value
   911  000D10  6E08               	movwf	LCD_String@msg^0,c
   912  000D12  0E00               	movlw	high main@value
   913  000D14  6E09               	movwf	(LCD_String@msg+1)^0,c
   914  000D16  EC4F  F00A         	call	_LCD_String	;wreg free
   915  000D1A                     
   916                           ;humidity_Temp.c: 92:         LCD_Char(0xdf);
   917  000D1A  0EDF               	movlw	223
   918  000D1C  ECB4  F00B         	call	_LCD_Char
   919  000D20                     
   920                           ;humidity_Temp.c: 93:         LCD_Char('C');
   921  000D20  0E43               	movlw	67
   922  000D22  ECB4  F00B         	call	_LCD_Char
   923  000D26                     
   924                           ;humidity_Temp.c: 95:         sprintf(value,"%d  ",Checksum);
   925  000D26  0E90               	movlw	low main@value
   926  000D28  6E58               	movwf	sprintf@s^0,c
   927  000D2A  0E00               	movlw	high main@value
   928  000D2C  6E59               	movwf	(sprintf@s+1)^0,c
   929  000D2E  0E09               	movlw	low STR_5
   930  000D30  6E5A               	movwf	sprintf@fmt^0,c
   931  000D32  0E08               	movlw	high STR_5
   932  000D34  6E5B               	movwf	(sprintf@fmt+1)^0,c
   933  000D36  C09F  F05C         	movff	main@Checksum,?_sprintf+4
   934  000D3A  6A5D               	clrf	(?_sprintf+5)^0,c
   935  000D3C  ECAC  F00A         	call	_sprintf	;wreg free
   936  000D40                     
   937                           ;humidity_Temp.c: 96:         LCD_String_xy(0,8,"Humedad");
   938  000D40  0E08               	movlw	8
   939  000D42  6E0A               	movwf	LCD_String_xy@pos^0,c
   940  000D44  0E01               	movlw	low STR_6
   941  000D46  6E0B               	movwf	LCD_String_xy@msg^0,c
   942  000D48  0E08               	movlw	high STR_6
   943  000D4A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   944  000D4C  0E00               	movlw	0
   945  000D4E  EC3C  F00B         	call	_LCD_String_xy
   946  000D52                     
   947                           ;humidity_Temp.c: 97:         LCD_String_xy(1,8,"Temp");
   948  000D52  0E08               	movlw	8
   949  000D54  6E0A               	movwf	LCD_String_xy@pos^0,c
   950  000D56  0E13               	movlw	low STR_7
   951  000D58  6E0B               	movwf	LCD_String_xy@msg^0,c
   952  000D5A  0E08               	movlw	high STR_7
   953  000D5C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   954  000D5E  0E01               	movlw	1
   955  000D60  EC3C  F00B         	call	_LCD_String_xy
   956  000D64                     
   957                           ;humidity_Temp.c: 109:         MSdelay(500);
   958  000D64  0E01               	movlw	1
   959  000D66  6E02               	movwf	(MSdelay@val+1)^0,c
   960  000D68  0EF4               	movlw	244
   961  000D6A  6E01               	movwf	MSdelay@val^0,c
   962  000D6C  ECD5  F00A         	call	_MSdelay	;wreg free
   963  000D70                     l1900:
   964                           
   965                           ;humidity_Temp.c: 57:     while ( agr == 0){
   966  000D70  0100               	movlb	0	; () banked
   967  000D72  519A               	movf	main@agr& (0+255),w,b
   968  000D74  119B               	iorwf	(main@agr+1)& (0+255),w,b
   969  000D76  B4D8               	btfsc	status,2,c
   970  000D78  EFC0  F006         	goto	u1421
   971  000D7C  EFC2  F006         	goto	u1420
   972  000D80                     u1421:
   973  000D80  EFA9  F005         	goto	l1818
   974  000D84                     u1420:
   975  000D84                     
   976                           ; BSR set to: 0
   977                           ;humidity_Temp.c: 111:         MSdelay(500);
   978  000D84  0E01               	movlw	1
   979  000D86  6E02               	movwf	(MSdelay@val+1)^0,c
   980  000D88  0EF4               	movlw	244
   981  000D8A  6E01               	movwf	MSdelay@val^0,c
   982  000D8C  ECD5  F00A         	call	_MSdelay	;wreg free
   983  000D90  EF8F  F005         	goto	l1804
   984  000D94  EF00  F000         	goto	start
   985  000D98                     __end_of_main:
   986                           	callstack 0
   987                           
   988 ;; *************** function _sprintf *****************
   989 ;; Defined at:
   990 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  s               2   87[COMRAM] PTR unsigned char 
   993 ;;		 -> main@value(10), 
   994 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   995 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
   996 ;;		 -> STR_1(3), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  f               6    4[BANK0 ] struct _IO_FILE
   999 ;;  ap              2    2[BANK0 ] PTR void [1]
  1000 ;;		 -> ?_sprintf(2), 
  1001 ;;  ret             2    0        int 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2   87[COMRAM] int 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         6       0       0       0       0       0       0       0       0
  1012 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1014 ;;      Totals:         6      10       0       0       0       0       0       0       0
  1015 ;;Total ram usage:       16 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    7
  1018 ;; This function calls:
  1019 ;;		_vfprintf
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text1
  1026  001558                     __ptext1:
  1027                           	callstack 0
  1028  001558                     _sprintf:
  1029                           	callstack 23
  1030  001558  0E5C               	movlw	low (?_sprintf+4)
  1031  00155A  0100               	movlb	0	; () banked
  1032  00155C  6F88               	movwf	sprintf@ap& (0+255),b
  1033  00155E  0E00               	movlw	high (?_sprintf+4)
  1034  001560  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  1035  001562  C058  F08A         	movff	sprintf@s,sprintf@f
  1036  001566  C059  F08B         	movff	sprintf@s+1,sprintf@f+1
  1037  00156A                     
  1038                           ; BSR set to: 0
  1039  00156A  0E00               	movlw	0
  1040  00156C  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  1041  00156E  0E00               	movlw	0
  1042  001570  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  1043  001572                     
  1044                           ; BSR set to: 0
  1045  001572  0E00               	movlw	0
  1046  001574  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  1047  001576  0E00               	movlw	0
  1048  001578  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  1049  00157A                     
  1050                           ; BSR set to: 0
  1051  00157A  0E8A               	movlw	low sprintf@f
  1052  00157C  6E50               	movwf	vfprintf@fp^0,c
  1053  00157E  0E00               	movlw	high sprintf@f
  1054  001580  6E51               	movwf	(vfprintf@fp+1)^0,c
  1055  001582  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1056  001586  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1057  00158A  0E88               	movlw	low sprintf@ap
  1058  00158C  6E54               	movwf	vfprintf@ap^0,c
  1059  00158E  0E00               	movlw	high sprintf@ap
  1060  001590  6E55               	movwf	(vfprintf@ap+1)^0,c
  1061  001592  EC1E  F00A         	call	_vfprintf	;wreg free
  1062  001596  0100               	movlb	0	; () banked
  1063  001598  518C               	movf	(sprintf@f+2)& (0+255),w,b
  1064  00159A  2458               	addwf	sprintf@s^0,w,c
  1065  00159C  6ED9               	movwf	fsr2l,c
  1066  00159E  518D               	movf	(sprintf@f+3)& (0+255),w,b
  1067  0015A0  2059               	addwfc	(sprintf@s+1)^0,w,c
  1068  0015A2  6EDA               	movwf	fsr2h,c
  1069  0015A4  0E00               	movlw	0
  1070  0015A6  6EDF               	movwf	indf2,c
  1071  0015A8                     
  1072                           ; BSR set to: 0
  1073  0015A8  0012               	return		;funcret
  1074  0015AA                     __end_of_sprintf:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _vfprintf *****************
  1078 ;; Defined at:
  1079 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1082 ;;		 -> sprintf@f(6), 
  1083 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1084 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
  1085 ;;		 -> STR_1(3), 
  1086 ;;  ap              2   83[COMRAM] PTR PTR void 
  1087 ;;		 -> sprintf@ap(2), 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1090 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
  1091 ;;		 -> STR_1(3), 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2   79[COMRAM] int 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1101 ;;      Params:         6       0       0       0       0       0       0       0       0
  1102 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1104 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    6
  1108 ;; This function calls:
  1109 ;;		_vfpfcnvrt
  1110 ;; This function is called by:
  1111 ;;		_sprintf
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text2
  1116  00143C                     __ptext2:
  1117                           	callstack 0
  1118  00143C                     _vfprintf:
  1119                           	callstack 23
  1120  00143C                     
  1121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1122  00143C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1123  001440  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1124  001444                     
  1125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1126  001444  0E00               	movlw	0
  1127  001446  0100               	movlb	0	; () banked
  1128  001448  6F61               	movwf	(_nout+1)& (0+255),b
  1129  00144A  0E00               	movlw	0
  1130  00144C  6F60               	movwf	_nout& (0+255),b
  1131                           
  1132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1133  00144E  EF3C  F00A         	goto	l1714
  1134  001452                     l1712:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1138  001452  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1139  001456  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1140  00145A  0E56               	movlw	low vfprintf@cfmt
  1141  00145C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1142  00145E  0E00               	movlw	high vfprintf@cfmt
  1143  001460  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1144  001462  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1145  001466  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1146  00146A  ECCC  F006         	call	_vfpfcnvrt	;wreg free
  1147  00146E  5040               	movf	?_vfpfcnvrt^0,w,c
  1148  001470  0100               	movlb	0	; () banked
  1149  001472  2760               	addwf	_nout& (0+255),f,b
  1150  001474  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1151  001476  2361               	addwfc	(_nout+1)& (0+255),f,b
  1152  001478                     l1714:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1156  001478  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1157  00147C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1158  001480                     	if	0	;tblptru may be non-zero
  1159  001480                     	endif
  1160  001480                     	if	0	;tblptru may be non-zero
  1161  001480                     	endif
  1162  001480  0008               	tblrd		*
  1163  001482  50F5               	movf	tablat,w,c
  1164  001484  0900               	iorlw	0
  1165  001486  A4D8               	btfss	status,2,c
  1166  001488  EF48  F00A         	goto	u1201
  1167  00148C  EF4A  F00A         	goto	u1200
  1168  001490                     u1201:
  1169  001490  EF29  F00A         	goto	l1712
  1170  001494                     u1200:
  1171  001494                     
  1172                           ; BSR set to: 0
  1173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1174  001494  C060  F050         	movff	_nout,?_vfprintf
  1175  001498  C061  F051         	movff	_nout+1,?_vfprintf+1
  1176  00149C                     
  1177                           ; BSR set to: 0
  1178  00149C  0012               	return		;funcret
  1179  00149E                     __end_of_vfprintf:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _vfpfcnvrt *****************
  1183 ;; Defined at:
  1184 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1187 ;;		 -> sprintf@f(6), 
  1188 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1189 ;;		 -> vfprintf@cfmt(2), 
  1190 ;;  ap              2   67[COMRAM] PTR PTR void 
  1191 ;;		 -> sprintf@ap(2), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  ll              8   71[COMRAM] long long 
  1194 ;;  llu             8    0        unsigned long long 
  1195 ;;  f               4    0        unsigned long long 
  1196 ;;  vp              3    0        PTR void 
  1197 ;;  ct              3    0        unsigned char [3]
  1198 ;;  cp              3    0        PTR unsigned char 
  1199 ;;  i               2    0        int 
  1200 ;;  done            2    0        int 
  1201 ;;  c               1    0        unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2   63[COMRAM] int 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         6       0       0       0       0       0       0       0       0
  1212 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1214 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:       16 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    5
  1218 ;; This function calls:
  1219 ;;		_dtoa
  1220 ;;		_fputc
  1221 ;; This function is called by:
  1222 ;;		_vfprintf
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text3
  1227  000D98                     __ptext3:
  1228                           	callstack 0
  1229  000D98                     _vfpfcnvrt:
  1230                           	callstack 23
  1231  000D98                     
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1233  000D98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1234  000D9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1235  000DA0  CFDE FFF6          	movff	postinc2,tblptrl
  1236  000DA4  CFDD FFF7          	movff	postdec2,tblptrh
  1237  000DA8                     	if	0	;tblptru may be non-zero
  1238  000DA8                     	endif
  1239  000DA8                     	if	0	;tblptru may be non-zero
  1240  000DA8                     	endif
  1241  000DA8  0008               	tblrd		*
  1242  000DAA  50F5               	movf	tablat,w,c
  1243  000DAC  0A25               	xorlw	37
  1244  000DAE  A4D8               	btfss	status,2,c
  1245  000DB0  EFDC  F006         	goto	u1131
  1246  000DB4  EFDE  F006         	goto	u1130
  1247  000DB8                     u1131:
  1248  000DB8  EF8A  F007         	goto	l1680
  1249  000DBC                     u1130:
  1250  000DBC                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1252  000DBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1253  000DC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1254  000DC4  2ADE               	incf	postinc2,f,c
  1255  000DC6  0E00               	movlw	0
  1256  000DC8  22DD               	addwfc	postdec2,f,c
  1257  000DCA                     
  1258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1259  000DCA  0E00               	movlw	0
  1260  000DCC  0100               	movlb	0	; () banked
  1261  000DCE  6F63               	movwf	(_width+1)& (0+255),b
  1262  000DD0  0E00               	movlw	0
  1263  000DD2  6F62               	movwf	_width& (0+255),b
  1264  000DD4  C062  F05E         	movff	_width,_flags
  1265  000DD8  C063  F05F         	movff	_width+1,_flags+1
  1266  000DDC                     
  1267                           ; BSR set to: 0
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1269  000DDC  6964               	setf	_prec& (0+255),b
  1270  000DDE  6965               	setf	(_prec+1)& (0+255),b
  1271  000DE0                     
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1274  000DE0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1275  000DE4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1276  000DE8  CFDE FFF6          	movff	postinc2,tblptrl
  1277  000DEC  CFDD FFF7          	movff	postdec2,tblptrh
  1278  000DF0                     	if	0	;tblptru may be non-zero
  1279  000DF0                     	endif
  1280  000DF0                     	if	0	;tblptru may be non-zero
  1281  000DF0                     	endif
  1282  000DF0  0008               	tblrd		*
  1283  000DF2  50F5               	movf	tablat,w,c
  1284  000DF4  0A64               	xorlw	100
  1285  000DF6  B4D8               	btfsc	status,2,c
  1286  000DF8  EF00  F007         	goto	u1141
  1287  000DFC  EF02  F007         	goto	u1140
  1288  000E00                     u1141:
  1289  000E00  EF14  F007         	goto	l1658
  1290  000E04                     u1140:
  1291  000E04                     
  1292                           ; BSR set to: 0
  1293  000E04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1294  000E08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1295  000E0C  CFDE FFF6          	movff	postinc2,tblptrl
  1296  000E10  CFDD FFF7          	movff	postdec2,tblptrh
  1297  000E14                     	if	0	;tblptru may be non-zero
  1298  000E14                     	endif
  1299  000E14                     	if	0	;tblptru may be non-zero
  1300  000E14                     	endif
  1301  000E14  0008               	tblrd		*
  1302  000E16  50F5               	movf	tablat,w,c
  1303  000E18  0A69               	xorlw	105
  1304  000E1A  A4D8               	btfss	status,2,c
  1305  000E1C  EF12  F007         	goto	u1151
  1306  000E20  EF14  F007         	goto	u1150
  1307  000E24                     u1151:
  1308  000E24  EF54  F007         	goto	l1664
  1309  000E28                     u1150:
  1310  000E28                     l1658:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1314  000E28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315  000E2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316  000E30  2ADE               	incf	postinc2,f,c
  1317  000E32  0E00               	movlw	0
  1318  000E34  22DD               	addwfc	postdec2,f,c
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1321  000E36  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1322  000E3A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1323  000E3E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1324  000E42  0E02               	movlw	2
  1325  000E44  26DE               	addwf	postinc2,f,c
  1326  000E46  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1327  000E4A  0E00               	movlw	0
  1328  000E4C  22DD               	addwfc	postdec2,f,c
  1329  000E4E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1330  000E52  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1331  000E56  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1332  000E5A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1333  000E5E  0E00               	movlw	0
  1334  000E60  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1335  000E62  0EFF               	movlw	-1
  1336  000E64  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1337  000E66  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1338  000E68  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1339  000E6A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1340  000E6C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1341  000E6E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1342  000E70                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1345  000E70  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1346  000E74  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1347  000E78  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1348  000E7C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1349  000E80  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1350  000E84  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1351  000E88  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1352  000E8C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1353  000E90  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1354  000E94  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1355  000E98  EC0F  F004         	call	_dtoa	;wreg free
  1356  000E9C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1357  000EA0  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1358  000EA4  EFA5  F007         	goto	l885
  1359  000EA8                     l1664:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1363  000EA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1364  000EAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1365  000EB0  CFDE FFF6          	movff	postinc2,tblptrl
  1366  000EB4  CFDD FFF7          	movff	postdec2,tblptrh
  1367  000EB8                     	if	0	;tblptru may be non-zero
  1368  000EB8                     	endif
  1369  000EB8                     	if	0	;tblptru may be non-zero
  1370  000EB8                     	endif
  1371  000EB8  0008               	tblrd		*
  1372  000EBA  50F5               	movf	tablat,w,c
  1373  000EBC  0A25               	xorlw	37
  1374  000EBE  A4D8               	btfss	status,2,c
  1375  000EC0  EF64  F007         	goto	u1161
  1376  000EC4  EF66  F007         	goto	u1160
  1377  000EC8                     u1161:
  1378  000EC8  EF7D  F007         	goto	l1674
  1379  000ECC                     u1160:
  1380  000ECC                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1383  000ECC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  000ED0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  000ED4  2ADE               	incf	postinc2,f,c
  1386  000ED6  0E00               	movlw	0
  1387  000ED8  22DD               	addwfc	postdec2,f,c
  1388  000EDA                     
  1389                           ; BSR set to: 0
  1390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1391  000EDA  0E00               	movlw	0
  1392  000EDC  6E02               	movwf	(fputc@c+1)^0,c
  1393  000EDE  0E25               	movlw	37
  1394  000EE0  6E01               	movwf	fputc@c^0,c
  1395  000EE2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1396  000EE6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1397  000EEA  EC1C  F009         	call	_fputc	;wreg free
  1398  000EEE                     l1670:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1401  000EEE  0E00               	movlw	0
  1402  000EF0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1403  000EF2  0E01               	movlw	1
  1404  000EF4  6E40               	movwf	?_vfpfcnvrt^0,c
  1405  000EF6  EFA5  F007         	goto	l885
  1406  000EFA                     l1674:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1410  000EFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1411  000EFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1412  000F02  2ADE               	incf	postinc2,f,c
  1413  000F04  0E00               	movlw	0
  1414  000F06  22DD               	addwfc	postdec2,f,c
  1415  000F08                     
  1416                           ; BSR set to: 0
  1417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1418  000F08  0E00               	movlw	0
  1419  000F0A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1420  000F0C  0E00               	movlw	0
  1421  000F0E  6E40               	movwf	?_vfpfcnvrt^0,c
  1422  000F10  EFA5  F007         	goto	l885
  1423  000F14                     l1680:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1426  000F14  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  000F18  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  000F1C  CFDE FFF6          	movff	postinc2,tblptrl
  1429  000F20  CFDD FFF7          	movff	postdec2,tblptrh
  1430  000F24                     	if	0	;tblptru may be non-zero
  1431  000F24                     	endif
  1432  000F24                     	if	0	;tblptru may be non-zero
  1433  000F24                     	endif
  1434  000F24  0008               	tblrd		*
  1435  000F26  50F5               	movf	tablat,w,c
  1436  000F28  6E01               	movwf	fputc@c^0,c
  1437  000F2A  6A02               	clrf	(fputc@c+1)^0,c
  1438  000F2C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1439  000F30  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1440  000F34  EC1C  F009         	call	_fputc	;wreg free
  1441  000F38                     
  1442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1443  000F38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1444  000F3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1445  000F40  2ADE               	incf	postinc2,f,c
  1446  000F42  0E00               	movlw	0
  1447  000F44  22DD               	addwfc	postdec2,f,c
  1448  000F46  EF77  F007         	goto	l1670
  1449  000F4A                     l885:
  1450  000F4A  0012               	return		;funcret
  1451  000F4C                     __end_of_vfpfcnvrt:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _dtoa *****************
  1455 ;; Defined at:
  1456 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1459 ;;		 -> sprintf@f(6), 
  1460 ;;  d               8   29[COMRAM] long long 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  n               8   53[COMRAM] long long 
  1463 ;;  i               2   61[COMRAM] int 
  1464 ;;  s               2   51[COMRAM] int 
  1465 ;;  w               2   49[COMRAM] int 
  1466 ;;  p               2   47[COMRAM] int 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   27[COMRAM] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:        10       0       0       0       0       0       0       0       0
  1477 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1479 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:       36 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    4
  1483 ;; This function calls:
  1484 ;;		___aodiv
  1485 ;;		___aomod
  1486 ;;		_abs
  1487 ;;		_pad
  1488 ;; This function is called by:
  1489 ;;		_vfpfcnvrt
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text4
  1494  00081E                     __ptext4:
  1495                           	callstack 0
  1496  00081E                     _dtoa:
  1497                           	callstack 23
  1498  00081E                     
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1500  00081E  C01E  F036         	movff	dtoa@d,dtoa@n
  1501  000822  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1502  000826  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1503  00082A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1504  00082E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1505  000832  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1506  000836  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1507  00083A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1508  00083E                     
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1510  00083E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1511  000840  EF24  F004         	goto	u981
  1512  000844  EF27  F004         	goto	u980
  1513  000848                     u981:
  1514  000848  0E01               	movlw	1
  1515  00084A  EF28  F004         	goto	u990
  1516  00084E                     u980:
  1517  00084E  0E00               	movlw	0
  1518  000850                     u990:
  1519  000850  6E34               	movwf	dtoa@s^0,c
  1520  000852  6A35               	clrf	(dtoa@s+1)^0,c
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1523  000854  5034               	movf	dtoa@s^0,w,c
  1524  000856  1035               	iorwf	(dtoa@s+1)^0,w,c
  1525  000858  B4D8               	btfsc	status,2,c
  1526  00085A  EF31  F004         	goto	u1001
  1527  00085E  EF33  F004         	goto	u1000
  1528  000862                     u1001:
  1529  000862  EF43  F004         	goto	l1578
  1530  000866                     u1000:
  1531  000866                     
  1532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1533  000866  1E3D               	comf	(dtoa@n+7)^0,f,c
  1534  000868  1E3C               	comf	(dtoa@n+6)^0,f,c
  1535  00086A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1536  00086C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1537  00086E  1E39               	comf	(dtoa@n+3)^0,f,c
  1538  000870  1E38               	comf	(dtoa@n+2)^0,f,c
  1539  000872  1E37               	comf	(dtoa@n+1)^0,f,c
  1540  000874  6C36               	negf	dtoa@n^0,c
  1541  000876  0E00               	movlw	0
  1542  000878  2237               	addwfc	(dtoa@n+1)^0,f,c
  1543  00087A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1544  00087C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1545  00087E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1546  000880  223B               	addwfc	(dtoa@n+5)^0,f,c
  1547  000882  223C               	addwfc	(dtoa@n+6)^0,f,c
  1548  000884  223D               	addwfc	(dtoa@n+7)^0,f,c
  1549  000886                     l1578:
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1552  000886  0100               	movlb	0	; () banked
  1553  000888  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1554  00088A  EF49  F004         	goto	u1011
  1555  00088E  EF4B  F004         	goto	u1010
  1556  000892                     u1011:
  1557  000892  EF4C  F004         	goto	l1582
  1558  000896                     u1010:
  1559  000896                     
  1560                           ; BSR set to: 0
  1561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1562  000896  925E               	bcf	_flags^0,1,c
  1563  000898                     l1582:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1567  000898  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1568  00089A  EF59  F004         	goto	u1020
  1569  00089E  5165               	movf	(_prec+1)& (0+255),w,b
  1570  0008A0  E106               	bnz	u1021
  1571  0008A2  0564               	decf	_prec& (0+255),w,b
  1572  0008A4  B0D8               	btfsc	status,0,c
  1573  0008A6  EF57  F004         	goto	u1021
  1574  0008AA  EF59  F004         	goto	u1020
  1575  0008AE                     u1021:
  1576  0008AE  EF5F  F004         	goto	l858
  1577  0008B2                     u1020:
  1578  0008B2                     
  1579                           ; BSR set to: 0
  1580  0008B2  0E00               	movlw	0
  1581  0008B4  6E31               	movwf	(dtoa@p+1)^0,c
  1582  0008B6  0E01               	movlw	1
  1583  0008B8  6E30               	movwf	dtoa@p^0,c
  1584  0008BA  EF63  F004         	goto	l860
  1585  0008BE                     l858:
  1586                           
  1587                           ; BSR set to: 0
  1588  0008BE  C064  F030         	movff	_prec,dtoa@p
  1589  0008C2  C065  F031         	movff	_prec+1,dtoa@p+1
  1590  0008C6                     l860:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1594  0008C6  C062  F032         	movff	_width,dtoa@w
  1595  0008CA  C063  F033         	movff	_width+1,dtoa@w+1
  1596  0008CE                     
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1599  0008CE  5034               	movf	dtoa@s^0,w,c
  1600  0008D0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1601  0008D2  A4D8               	btfss	status,2,c
  1602  0008D4  EF6E  F004         	goto	u1031
  1603  0008D8  EF70  F004         	goto	u1030
  1604  0008DC                     u1031:
  1605  0008DC  EF77  F004         	goto	l1590
  1606  0008E0                     u1030:
  1607  0008E0                     
  1608                           ; BSR set to: 0
  1609  0008E0  A45E               	btfss	_flags^0,2,c
  1610  0008E2  EF75  F004         	goto	u1041
  1611  0008E6  EF77  F004         	goto	u1040
  1612  0008EA                     u1041:
  1613  0008EA  EF7A  F004         	goto	l1592
  1614  0008EE                     u1040:
  1615  0008EE                     l1590:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1619  0008EE  0632               	decf	dtoa@w^0,f,c
  1620  0008F0  A0D8               	btfss	status,0,c
  1621  0008F2  0633               	decf	(dtoa@w+1)^0,f,c
  1622  0008F4                     l1592:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1626  0008F4  0E00               	movlw	0
  1627  0008F6  6E3F               	movwf	(dtoa@i+1)^0,c
  1628  0008F8  0E1F               	movlw	31
  1629  0008FA  6E3E               	movwf	dtoa@i^0,c
  1630  0008FC                     
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1633  0008FC  0E00               	movlw	0
  1634  0008FE  6F85               	movwf	(_dbuf+31)& (0+255),b
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1637  000900  EFFE  F004         	goto	l1606
  1638  000904                     l1596:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1641  000904  063E               	decf	dtoa@i^0,f,c
  1642  000906  A0D8               	btfss	status,0,c
  1643  000908  063F               	decf	(dtoa@i+1)^0,f,c
  1644  00090A                     
  1645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1646  00090A  0E66               	movlw	low _dbuf
  1647  00090C  243E               	addwf	dtoa@i^0,w,c
  1648  00090E  6ED9               	movwf	fsr2l,c
  1649  000910  0E00               	movlw	high _dbuf
  1650  000912  203F               	addwfc	(dtoa@i+1)^0,w,c
  1651  000914  6EDA               	movwf	fsr2h,c
  1652  000916  C036  F001         	movff	dtoa@n,___aomod@dividend
  1653  00091A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1654  00091E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1655  000922  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1656  000926  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1657  00092A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1658  00092E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1659  000932  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1660  000936  0E0A               	movlw	10
  1661  000938  6E09               	movwf	___aomod@divisor^0,c
  1662  00093A  0E00               	movlw	0
  1663  00093C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1664  00093E  0E00               	movlw	0
  1665  000940  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1666  000942  0E00               	movlw	0
  1667  000944  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1668  000946  0E00               	movlw	0
  1669  000948  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1670  00094A  0E00               	movlw	0
  1671  00094C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1672  00094E  0E00               	movlw	0
  1673  000950  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1674  000952  0E00               	movlw	0
  1675  000954  6E10               	movwf	(___aomod@divisor+7)^0,c
  1676  000956  EC6A  F008         	call	___aomod	;wreg free
  1677  00095A  C001  F026         	movff	?___aomod,??_dtoa
  1678  00095E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1679  000962  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1680  000966  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1681  00096A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1682  00096E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1683  000972  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1684  000976  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1685  00097A  C026  F013         	movff	??_dtoa,abs@a
  1686  00097E  C028  F014         	movff	??_dtoa+2,abs@a+1
  1687  000982  EC1C  F00B         	call	_abs	;wreg free
  1688  000986  5013               	movf	?_abs^0,w,c
  1689  000988  0F30               	addlw	48
  1690  00098A  6EDF               	movwf	indf2,c
  1691  00098C                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1693  00098C  0630               	decf	dtoa@p^0,f,c
  1694  00098E  A0D8               	btfss	status,0,c
  1695  000990  0631               	decf	(dtoa@p+1)^0,f,c
  1696  000992                     
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1698  000992  0632               	decf	dtoa@w^0,f,c
  1699  000994  A0D8               	btfss	status,0,c
  1700  000996  0633               	decf	(dtoa@w+1)^0,f,c
  1701  000998                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1703  000998  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1704  00099C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1705  0009A0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1706  0009A4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1707  0009A8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1708  0009AC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1709  0009B0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1710  0009B4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1711  0009B8  0E0A               	movlw	10
  1712  0009BA  6E09               	movwf	___aodiv@divisor^0,c
  1713  0009BC  0E00               	movlw	0
  1714  0009BE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1715  0009C0  0E00               	movlw	0
  1716  0009C2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1717  0009C4  0E00               	movlw	0
  1718  0009C6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1719  0009C8  0E00               	movlw	0
  1720  0009CA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1721  0009CC  0E00               	movlw	0
  1722  0009CE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1723  0009D0  0E00               	movlw	0
  1724  0009D2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1725  0009D4  0E00               	movlw	0
  1726  0009D6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1727  0009D8  ECA6  F007         	call	___aodiv	;wreg free
  1728  0009DC  C001  F036         	movff	?___aodiv,dtoa@n
  1729  0009E0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1730  0009E4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1731  0009E8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1732  0009EC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1733  0009F0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1734  0009F4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1735  0009F8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1736  0009FC                     l1606:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1739  0009FC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1740  0009FE  EF09  F005         	goto	u1051
  1741  000A02  503F               	movf	(dtoa@i+1)^0,w,c
  1742  000A04  E108               	bnz	u1050
  1743  000A06  043E               	decf	dtoa@i^0,w,c
  1744  000A08  A0D8               	btfss	status,0,c
  1745  000A0A  EF09  F005         	goto	u1051
  1746  000A0E  EF0B  F005         	goto	u1050
  1747  000A12                     u1051:
  1748  000A12  EF3B  F005         	goto	l1616
  1749  000A16                     u1050:
  1750  000A16  5036               	movf	dtoa@n^0,w,c
  1751  000A18  1037               	iorwf	(dtoa@n+1)^0,w,c
  1752  000A1A  1038               	iorwf	(dtoa@n+2)^0,w,c
  1753  000A1C  1039               	iorwf	(dtoa@n+3)^0,w,c
  1754  000A1E  103A               	iorwf	(dtoa@n+4)^0,w,c
  1755  000A20  103B               	iorwf	(dtoa@n+5)^0,w,c
  1756  000A22  103C               	iorwf	(dtoa@n+6)^0,w,c
  1757  000A24  103D               	iorwf	(dtoa@n+7)^0,w,c
  1758  000A26  A4D8               	btfss	status,2,c
  1759  000A28  EF18  F005         	goto	u1061
  1760  000A2C  EF1A  F005         	goto	u1060
  1761  000A30                     u1061:
  1762  000A30  EF82  F004         	goto	l1596
  1763  000A34                     u1060:
  1764  000A34  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1765  000A36  EF27  F005         	goto	u1070
  1766  000A3A  5031               	movf	(dtoa@p+1)^0,w,c
  1767  000A3C  E106               	bnz	u1071
  1768  000A3E  0430               	decf	dtoa@p^0,w,c
  1769  000A40  B0D8               	btfsc	status,0,c
  1770  000A42  EF25  F005         	goto	u1071
  1771  000A46  EF27  F005         	goto	u1070
  1772  000A4A                     u1071:
  1773  000A4A  EF82  F004         	goto	l1596
  1774  000A4E                     u1070:
  1775  000A4E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1776  000A50  EF32  F005         	goto	u1081
  1777  000A54  5033               	movf	(dtoa@w+1)^0,w,c
  1778  000A56  E108               	bnz	u1080
  1779  000A58  0432               	decf	dtoa@w^0,w,c
  1780  000A5A  A0D8               	btfss	status,0,c
  1781  000A5C  EF32  F005         	goto	u1081
  1782  000A60  EF34  F005         	goto	u1080
  1783  000A64                     u1081:
  1784  000A64  EF3B  F005         	goto	l1616
  1785  000A68                     u1080:
  1786  000A68  B25E               	btfsc	_flags^0,1,c
  1787  000A6A  EF39  F005         	goto	u1091
  1788  000A6E  EF3B  F005         	goto	u1090
  1789  000A72                     u1091:
  1790  000A72  EF82  F004         	goto	l1596
  1791  000A76                     u1090:
  1792  000A76                     l1616:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1795  000A76  5034               	movf	dtoa@s^0,w,c
  1796  000A78  1035               	iorwf	(dtoa@s+1)^0,w,c
  1797  000A7A  A4D8               	btfss	status,2,c
  1798  000A7C  EF42  F005         	goto	u1101
  1799  000A80  EF44  F005         	goto	u1100
  1800  000A84                     u1101:
  1801  000A84  EF4B  F005         	goto	l1620
  1802  000A88                     u1100:
  1803  000A88  A45E               	btfss	_flags^0,2,c
  1804  000A8A  EF49  F005         	goto	u1111
  1805  000A8E  EF4B  F005         	goto	u1110
  1806  000A92                     u1111:
  1807  000A92  EF69  F005         	goto	l1630
  1808  000A96                     u1110:
  1809  000A96                     l1620:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1812  000A96  063E               	decf	dtoa@i^0,f,c
  1813  000A98  A0D8               	btfss	status,0,c
  1814  000A9A  063F               	decf	(dtoa@i+1)^0,f,c
  1815  000A9C                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1817  000A9C  5034               	movf	dtoa@s^0,w,c
  1818  000A9E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1819  000AA0  A4D8               	btfss	status,2,c
  1820  000AA2  EF55  F005         	goto	u1121
  1821  000AA6  EF57  F005         	goto	u1120
  1822  000AAA                     u1121:
  1823  000AAA  EF5D  F005         	goto	l1626
  1824  000AAE                     u1120:
  1825  000AAE  0E00               	movlw	0
  1826  000AB0  6E2F               	movwf	(_dtoa$834+1)^0,c
  1827  000AB2  0E2B               	movlw	43
  1828  000AB4  6E2E               	movwf	_dtoa$834^0,c
  1829  000AB6  EF61  F005         	goto	l1628
  1830  000ABA                     l1626:
  1831  000ABA  0E00               	movlw	0
  1832  000ABC  6E2F               	movwf	(_dtoa$834+1)^0,c
  1833  000ABE  0E2D               	movlw	45
  1834  000AC0  6E2E               	movwf	_dtoa$834^0,c
  1835  000AC2                     l1628:
  1836  000AC2  0E66               	movlw	low _dbuf
  1837  000AC4  243E               	addwf	dtoa@i^0,w,c
  1838  000AC6  6ED9               	movwf	fsr2l,c
  1839  000AC8  0E00               	movlw	high _dbuf
  1840  000ACA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1841  000ACC  6EDA               	movwf	fsr2h,c
  1842  000ACE  C02E  FFDF         	movff	_dtoa$834,indf2
  1843  000AD2                     l1630:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1846  000AD2  C01C  F011         	movff	dtoa@fp,pad@fp
  1847  000AD6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1848  000ADA  0E66               	movlw	low _dbuf
  1849  000ADC  243E               	addwf	dtoa@i^0,w,c
  1850  000ADE  6E13               	movwf	pad@buf^0,c
  1851  000AE0  0E00               	movlw	high _dbuf
  1852  000AE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1853  000AE4  6E14               	movwf	(pad@buf+1)^0,c
  1854  000AE6  C032  F015         	movff	dtoa@w,pad@p
  1855  000AEA  C033  F016         	movff	dtoa@w+1,pad@p+1
  1856  000AEE  EC81  F009         	call	_pad	;wreg free
  1857  000AF2  C011  F01C         	movff	?_pad,?_dtoa
  1858  000AF6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1859  000AFA  0012               	return		;funcret
  1860  000AFC                     __end_of_dtoa:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _pad *****************
  1864 ;; Defined at:
  1865 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1868 ;;		 -> sprintf@f(6), 
  1869 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1870 ;;		 -> dbuf(32), 
  1871 ;;  p               2   20[COMRAM] int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  w               2   25[COMRAM] int 
  1874 ;;  i               2   23[COMRAM] int 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2   16[COMRAM] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         6       0       0       0       0       0       0       0       0
  1885 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1887 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1888 ;;Total ram usage:       11 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    3
  1891 ;; This function calls:
  1892 ;;		_fputc
  1893 ;;		_fputs
  1894 ;;		_strlen
  1895 ;; This function is called by:
  1896 ;;		_dtoa
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text5
  1901  001302                     __ptext5:
  1902                           	callstack 0
  1903  001302                     _pad:
  1904                           	callstack 23
  1905  001302                     
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1907  001302  A05E               	btfss	_flags^0,0,c
  1908  001304  EF86  F009         	goto	u911
  1909  001308  EF88  F009         	goto	u910
  1910  00130C                     u911:
  1911  00130C  EF92  F009         	goto	l1534
  1912  001310                     u910:
  1913  001310                     
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1915  001310  C013  F00A         	movff	pad@buf,fputs@s
  1916  001314  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1917  001318  C011  F00C         	movff	pad@fp,fputs@fp
  1918  00131C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1919  001320  ECFA  F00A         	call	_fputs	;wreg free
  1920  001324                     l1534:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1923  001324  BE16               	btfsc	(pad@p+1)^0,7,c
  1924  001326  EF97  F009         	goto	u921
  1925  00132A  EF99  F009         	goto	u920
  1926  00132E                     u921:
  1927  00132E  EF9F  F009         	goto	l1538
  1928  001332                     u920:
  1929  001332  C015  F01A         	movff	pad@p,pad@w
  1930  001336  C016  F01B         	movff	pad@p+1,pad@w+1
  1931  00133A  EFA3  F009         	goto	l847
  1932  00133E                     l1538:
  1933  00133E  0E00               	movlw	0
  1934  001340  6E1B               	movwf	(pad@w+1)^0,c
  1935  001342  0E00               	movlw	0
  1936  001344  6E1A               	movwf	pad@w^0,c
  1937  001346                     l847:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1940  001346  0E00               	movlw	0
  1941  001348  6E19               	movwf	(pad@i+1)^0,c
  1942  00134A  0E00               	movlw	0
  1943  00134C  6E18               	movwf	pad@i^0,c
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1946  00134E  EFB5  F009         	goto	l1544
  1947  001352                     l1540:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1950  001352  0E00               	movlw	0
  1951  001354  6E02               	movwf	(fputc@c+1)^0,c
  1952  001356  0E20               	movlw	32
  1953  001358  6E01               	movwf	fputc@c^0,c
  1954  00135A  C011  F003         	movff	pad@fp,fputc@fp
  1955  00135E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1956  001362  EC1C  F009         	call	_fputc	;wreg free
  1957  001366                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1959  001366  4A18               	infsnz	pad@i^0,f,c
  1960  001368  2A19               	incf	(pad@i+1)^0,f,c
  1961  00136A                     l1544:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1964  00136A  501A               	movf	pad@w^0,w,c
  1965  00136C  5C18               	subwf	pad@i^0,w,c
  1966  00136E  5019               	movf	(pad@i+1)^0,w,c
  1967  001370  0A80               	xorlw	128
  1968  001372  6E17               	movwf	??_pad^0,c
  1969  001374  501B               	movf	(pad@w+1)^0,w,c
  1970  001376  0A80               	xorlw	128
  1971  001378  5817               	subwfb	??_pad^0,w,c
  1972  00137A  A0D8               	btfss	status,0,c
  1973  00137C  EFC2  F009         	goto	u931
  1974  001380  EFC4  F009         	goto	u930
  1975  001384                     u931:
  1976  001384  EFA9  F009         	goto	l1540
  1977  001388                     u930:
  1978  001388                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1980  001388  B05E               	btfsc	_flags^0,0,c
  1981  00138A  EFC9  F009         	goto	u941
  1982  00138E  EFCB  F009         	goto	u940
  1983  001392                     u941:
  1984  001392  EFD5  F009         	goto	l1548
  1985  001396                     u940:
  1986  001396                     
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1988  001396  C013  F00A         	movff	pad@buf,fputs@s
  1989  00139A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1990  00139E  C011  F00C         	movff	pad@fp,fputs@fp
  1991  0013A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1992  0013A6  ECFA  F00A         	call	_fputs	;wreg free
  1993  0013AA                     l1548:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1996  0013AA  C013  F001         	movff	pad@buf,strlen@s
  1997  0013AE  C014  F002         	movff	pad@buf+1,strlen@s+1
  1998  0013B2  EC5C  F00B         	call	_strlen	;wreg free
  1999  0013B6  501A               	movf	pad@w^0,w,c
  2000  0013B8  2401               	addwf	?_strlen^0,w,c
  2001  0013BA  6E11               	movwf	?_pad^0,c
  2002  0013BC  501B               	movf	(pad@w+1)^0,w,c
  2003  0013BE  2002               	addwfc	(?_strlen+1)^0,w,c
  2004  0013C0  6E12               	movwf	(?_pad+1)^0,c
  2005  0013C2  0012               	return		;funcret
  2006  0013C4                     __end_of_pad:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _strlen *****************
  2010 ;; Defined at:
  2011 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2014 ;;		 -> dbuf(32), 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2017 ;;		 -> dbuf(32), 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  2    0[COMRAM] unsigned int 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2027 ;;      Params:         2       0       0       0       0       0       0       0       0
  2028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2030 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        4 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_pad
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text6
  2041  0016B8                     __ptext6:
  2042                           	callstack 0
  2043  0016B8                     _strlen:
  2044                           	callstack 25
  2045  0016B8  C001  F003         	movff	strlen@s,strlen@a
  2046  0016BC  C002  F004         	movff	strlen@s+1,strlen@a+1
  2047  0016C0  EF64  F00B         	goto	l1444
  2048  0016C4                     l1442:
  2049  0016C4  4A01               	infsnz	strlen@s^0,f,c
  2050  0016C6  2A02               	incf	(strlen@s+1)^0,f,c
  2051  0016C8                     l1444:
  2052  0016C8  C001  FFD9         	movff	strlen@s,fsr2l
  2053  0016CC  C002  FFDA         	movff	strlen@s+1,fsr2h
  2054  0016D0  50DF               	movf	indf2,w,c
  2055  0016D2  A4D8               	btfss	status,2,c
  2056  0016D4  EF6E  F00B         	goto	u771
  2057  0016D8  EF70  F00B         	goto	u770
  2058  0016DC                     u771:
  2059  0016DC  EF62  F00B         	goto	l1442
  2060  0016E0                     u770:
  2061  0016E0  5003               	movf	strlen@a^0,w,c
  2062  0016E2  5C01               	subwf	strlen@s^0,w,c
  2063  0016E4  6E01               	movwf	?_strlen^0,c
  2064  0016E6  5004               	movf	(strlen@a+1)^0,w,c
  2065  0016E8  5802               	subwfb	(strlen@s+1)^0,w,c
  2066  0016EA  6E02               	movwf	(?_strlen+1)^0,c
  2067  0016EC  0012               	return		;funcret
  2068  0016EE                     __end_of_strlen:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _fputs *****************
  2072 ;; Defined at:
  2073 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2076 ;;		 -> dbuf(32), 
  2077 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2078 ;;		 -> sprintf@f(6), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  i               2   14[COMRAM] int 
  2081 ;;  c               1   13[COMRAM] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2    9[COMRAM] int 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         4       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        7 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    2
  2098 ;; This function calls:
  2099 ;;		_fputc
  2100 ;; This function is called by:
  2101 ;;		_pad
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text7
  2106  0015F4                     __ptext7:
  2107                           	callstack 0
  2108  0015F4                     _fputs:
  2109                           	callstack 23
  2110  0015F4  0E00               	movlw	0
  2111  0015F6  6E10               	movwf	(fputs@i+1)^0,c
  2112  0015F8  0E00               	movlw	0
  2113  0015FA  6E0F               	movwf	fputs@i^0,c
  2114  0015FC  EF0B  F00B         	goto	l1438
  2115  001600                     l1434:
  2116  001600  C00E  F001         	movff	fputs@c,fputc@c
  2117  001604  6A02               	clrf	(fputc@c+1)^0,c
  2118  001606  C00C  F003         	movff	fputs@fp,fputc@fp
  2119  00160A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2120  00160E  EC1C  F009         	call	_fputc	;wreg free
  2121  001612  4A0F               	infsnz	fputs@i^0,f,c
  2122  001614  2A10               	incf	(fputs@i+1)^0,f,c
  2123  001616                     l1438:
  2124  001616  500F               	movf	fputs@i^0,w,c
  2125  001618  240A               	addwf	fputs@s^0,w,c
  2126  00161A  6ED9               	movwf	fsr2l,c
  2127  00161C  5010               	movf	(fputs@i+1)^0,w,c
  2128  00161E  200B               	addwfc	(fputs@s+1)^0,w,c
  2129  001620  6EDA               	movwf	fsr2h,c
  2130  001622  50DF               	movf	indf2,w,c
  2131  001624  6E0E               	movwf	fputs@c^0,c
  2132  001626  500E               	movf	fputs@c^0,w,c
  2133  001628  A4D8               	btfss	status,2,c
  2134  00162A  EF19  F00B         	goto	u761
  2135  00162E  EF1B  F00B         	goto	u760
  2136  001632                     u761:
  2137  001632  EF00  F00B         	goto	l1434
  2138  001636                     u760:
  2139  001636  0012               	return		;funcret
  2140  001638                     __end_of_fputs:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _fputc *****************
  2144 ;; Defined at:
  2145 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  c               2    0[COMRAM] int 
  2148 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2149 ;;		 -> sprintf@f(6), 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         4       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2163 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2165 ;;Total ram usage:        9 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    1
  2168 ;; This function calls:
  2169 ;;		_putch
  2170 ;; This function is called by:
  2171 ;;		_pad
  2172 ;;		_vfpfcnvrt
  2173 ;;		_fputs
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text8
  2178  001238                     __ptext8:
  2179                           	callstack 0
  2180  001238                     _fputc:
  2181                           	callstack 26
  2182  001238  5003               	movf	fputc@fp^0,w,c
  2183  00123A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2184  00123C  B4D8               	btfsc	status,2,c
  2185  00123E  EF23  F009         	goto	u721
  2186  001242  EF25  F009         	goto	u720
  2187  001246                     u721:
  2188  001246  EF2E  F009         	goto	l1422
  2189  00124A                     u720:
  2190  00124A  5003               	movf	fputc@fp^0,w,c
  2191  00124C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2192  00124E  A4D8               	btfss	status,2,c
  2193  001250  EF2C  F009         	goto	u731
  2194  001254  EF2E  F009         	goto	u730
  2195  001258                     u731:
  2196  001258  EF33  F009         	goto	l1424
  2197  00125C                     u730:
  2198  00125C                     l1422:
  2199  00125C  5001               	movf	fputc@c^0,w,c
  2200  00125E  ECDD  F00B         	call	_putch
  2201  001262  EF80  F009         	goto	l911
  2202  001266                     l1424:
  2203  001266  EE20 F004          	lfsr	2,4
  2204  00126A  5003               	movf	fputc@fp^0,w,c
  2205  00126C  26D9               	addwf	fsr2l,f,c
  2206  00126E  5004               	movf	(fputc@fp+1)^0,w,c
  2207  001270  22DA               	addwfc	fsr2h,f,c
  2208  001272  50DE               	movf	postinc2,w,c
  2209  001274  10DE               	iorwf	postinc2,w,c
  2210  001276  B4D8               	btfsc	status,2,c
  2211  001278  EF40  F009         	goto	u741
  2212  00127C  EF42  F009         	goto	u740
  2213  001280                     u741:
  2214  001280  EF5D  F009         	goto	l1428
  2215  001284                     u740:
  2216  001284  EE20 F004          	lfsr	2,4
  2217  001288  5003               	movf	fputc@fp^0,w,c
  2218  00128A  26D9               	addwf	fsr2l,f,c
  2219  00128C  5004               	movf	(fputc@fp+1)^0,w,c
  2220  00128E  22DA               	addwfc	fsr2h,f,c
  2221  001290  EE10 F002          	lfsr	1,2
  2222  001294  5003               	movf	fputc@fp^0,w,c
  2223  001296  26E1               	addwf	fsr1l,f,c
  2224  001298  5004               	movf	(fputc@fp+1)^0,w,c
  2225  00129A  22E2               	addwfc	fsr1h,f,c
  2226  00129C  50DE               	movf	postinc2,w,c
  2227  00129E  5CE6               	subwf	postinc1,w,c
  2228  0012A0  50E6               	movf	postinc1,w,c
  2229  0012A2  0A80               	xorlw	128
  2230  0012A4  6E09               	movwf	(??_fputc+4)^0,c
  2231  0012A6  50DE               	movf	postinc2,w,c
  2232  0012A8  0A80               	xorlw	128
  2233  0012AA  5809               	subwfb	(??_fputc+4)^0,w,c
  2234  0012AC  B0D8               	btfsc	status,0,c
  2235  0012AE  EF5B  F009         	goto	u751
  2236  0012B2  EF5D  F009         	goto	u750
  2237  0012B6                     u751:
  2238  0012B6  EF80  F009         	goto	l911
  2239  0012BA                     u750:
  2240  0012BA                     l1428:
  2241  0012BA  EE20 F002          	lfsr	2,2
  2242  0012BE  5003               	movf	fputc@fp^0,w,c
  2243  0012C0  26D9               	addwf	fsr2l,f,c
  2244  0012C2  5004               	movf	(fputc@fp+1)^0,w,c
  2245  0012C4  22DA               	addwfc	fsr2h,f,c
  2246  0012C6  CFDE F005          	movff	postinc2,??_fputc
  2247  0012CA  CFDD F006          	movff	postdec2,??_fputc+1
  2248  0012CE  C003  FFD9         	movff	fputc@fp,fsr2l
  2249  0012D2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2250  0012D6  CFDE F007          	movff	postinc2,??_fputc+2
  2251  0012DA  CFDD F008          	movff	postdec2,??_fputc+3
  2252  0012DE  5005               	movf	??_fputc^0,w,c
  2253  0012E0  2407               	addwf	(??_fputc+2)^0,w,c
  2254  0012E2  6ED9               	movwf	fsr2l,c
  2255  0012E4  5006               	movf	(??_fputc+1)^0,w,c
  2256  0012E6  2008               	addwfc	(??_fputc+3)^0,w,c
  2257  0012E8  6EDA               	movwf	fsr2h,c
  2258  0012EA  C001  FFDF         	movff	fputc@c,indf2
  2259  0012EE  EE20 F002          	lfsr	2,2
  2260  0012F2  5003               	movf	fputc@fp^0,w,c
  2261  0012F4  26D9               	addwf	fsr2l,f,c
  2262  0012F6  5004               	movf	(fputc@fp+1)^0,w,c
  2263  0012F8  22DA               	addwfc	fsr2h,f,c
  2264  0012FA  2ADE               	incf	postinc2,f,c
  2265  0012FC  0E00               	movlw	0
  2266  0012FE  22DD               	addwfc	postdec2,f,c
  2267  001300                     l911:
  2268  001300  0012               	return		;funcret
  2269  001302                     __end_of_fputc:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _putch *****************
  2273 ;; Defined at:
  2274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  c               1    wreg     unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  c               1    0[COMRAM] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_fputc
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text9
  2302  0017BA                     __ptext9:
  2303                           	callstack 0
  2304  0017BA                     _putch:
  2305                           	callstack 26
  2306  0017BA  0012               	return		;funcret
  2307  0017BC                     __end_of_putch:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _abs *****************
  2311 ;; Defined at:
  2312 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  a               2   18[COMRAM] int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  2   18[COMRAM] int 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2326 ;;      Params:         2       0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2328 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2329 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        4 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_dtoa
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text10
  2340  001638                     __ptext10:
  2341                           	callstack 0
  2342  001638                     _abs:
  2343                           	callstack 26
  2344  001638  BE14               	btfsc	(abs@a+1)^0,7,c
  2345  00163A  EF29  F00B         	goto	u950
  2346  00163E  5014               	movf	(abs@a+1)^0,w,c
  2347  001640  E106               	bnz	u951
  2348  001642  0413               	decf	abs@a^0,w,c
  2349  001644  B0D8               	btfsc	status,0,c
  2350  001646  EF27  F00B         	goto	u951
  2351  00164A  EF29  F00B         	goto	u950
  2352  00164E                     u951:
  2353  00164E  EF37  F00B         	goto	l896
  2354  001652                     u950:
  2355  001652  C013  F015         	movff	abs@a,??_abs
  2356  001656  C014  F016         	movff	abs@a+1,??_abs+1
  2357  00165A  1E15               	comf	??_abs^0,f,c
  2358  00165C  1E16               	comf	(??_abs+1)^0,f,c
  2359  00165E  4A15               	infsnz	??_abs^0,f,c
  2360  001660  2A16               	incf	(??_abs+1)^0,f,c
  2361  001662  C015  F013         	movff	??_abs,?_abs
  2362  001666  C016  F014         	movff	??_abs+1,?_abs+1
  2363  00166A  EF3B  F00B         	goto	l899
  2364  00166E                     l896:
  2365  00166E  C013  F013         	movff	abs@a,?_abs
  2366  001672  C014  F014         	movff	abs@a+1,?_abs+1
  2367  001676                     l899:
  2368  001676  0012               	return		;funcret
  2369  001678                     __end_of_abs:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function ___aomod *****************
  2373 ;; Defined at:
  2374 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  dividend        8    0[COMRAM] long long 
  2377 ;;  divisor         8    8[COMRAM] long long 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  sign            1   17[COMRAM] unsigned char 
  2380 ;;  counter         1   16[COMRAM] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  8    0[COMRAM] long long 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2390 ;;      Params:        16       0       0       0       0       0       0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2393 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2394 ;;Total ram usage:       18 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_dtoa
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text11
  2404  0010D4                     __ptext11:
  2405                           	callstack 0
  2406  0010D4                     ___aomod:
  2407                           	callstack 26
  2408  0010D4  0E00               	movlw	0
  2409  0010D6  6E12               	movwf	___aomod@sign^0,c
  2410  0010D8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2411  0010DA  EF73  F008         	goto	u850
  2412  0010DE  EF71  F008         	goto	u851
  2413  0010E2                     u851:
  2414  0010E2  EF85  F008         	goto	l1502
  2415  0010E6                     u850:
  2416  0010E6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2417  0010E8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2418  0010EA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2419  0010EC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2420  0010EE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2421  0010F0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2422  0010F2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2423  0010F4  6C01               	negf	___aomod@dividend^0,c
  2424  0010F6  0E00               	movlw	0
  2425  0010F8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2426  0010FA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2427  0010FC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2428  0010FE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2429  001100  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2430  001102  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2431  001104  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2432  001106  0E01               	movlw	1
  2433  001108  6E12               	movwf	___aomod@sign^0,c
  2434  00110A                     l1502:
  2435  00110A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2436  00110C  EF8C  F008         	goto	u860
  2437  001110  EF8A  F008         	goto	u861
  2438  001114                     u861:
  2439  001114  EF9C  F008         	goto	l1506
  2440  001118                     u860:
  2441  001118  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2442  00111A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2443  00111C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2444  00111E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2445  001120  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2446  001122  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2447  001124  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2448  001126  6C09               	negf	___aomod@divisor^0,c
  2449  001128  0E00               	movlw	0
  2450  00112A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2451  00112C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2452  00112E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2453  001130  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2454  001132  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2455  001134  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2456  001136  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2457  001138                     l1506:
  2458  001138  5009               	movf	___aomod@divisor^0,w,c
  2459  00113A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2460  00113C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2461  00113E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2462  001140  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2463  001142  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2464  001144  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2465  001146  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2466  001148  B4D8               	btfsc	status,2,c
  2467  00114A  EFA9  F008         	goto	u871
  2468  00114E  EFAB  F008         	goto	u870
  2469  001152                     u871:
  2470  001152  EFF3  F008         	goto	l1522
  2471  001156                     u870:
  2472  001156  0E01               	movlw	1
  2473  001158  6E11               	movwf	___aomod@counter^0,c
  2474  00115A  EFB9  F008         	goto	l1512
  2475  00115E                     l1510:
  2476  00115E  90D8               	bcf	status,0,c
  2477  001160  3609               	rlcf	___aomod@divisor^0,f,c
  2478  001162  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2479  001164  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2480  001166  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2481  001168  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2482  00116A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2483  00116C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2484  00116E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2485  001170  2A11               	incf	___aomod@counter^0,f,c
  2486  001172                     l1512:
  2487  001172  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2488  001174  EFBE  F008         	goto	u881
  2489  001178  EFC0  F008         	goto	u880
  2490  00117C                     u881:
  2491  00117C  EFAF  F008         	goto	l1510
  2492  001180                     u880:
  2493  001180                     l1514:
  2494  001180  5009               	movf	___aomod@divisor^0,w,c
  2495  001182  5C01               	subwf	___aomod@dividend^0,w,c
  2496  001184  500A               	movf	(___aomod@divisor+1)^0,w,c
  2497  001186  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2498  001188  500B               	movf	(___aomod@divisor+2)^0,w,c
  2499  00118A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2500  00118C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2501  00118E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2502  001190  500D               	movf	(___aomod@divisor+4)^0,w,c
  2503  001192  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2504  001194  500E               	movf	(___aomod@divisor+5)^0,w,c
  2505  001196  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2506  001198  500F               	movf	(___aomod@divisor+6)^0,w,c
  2507  00119A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2508  00119C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2509  00119E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2510  0011A0  A0D8               	btfss	status,0,c
  2511  0011A2  EFD5  F008         	goto	u891
  2512  0011A6  EFD7  F008         	goto	u890
  2513  0011AA                     u891:
  2514  0011AA  EFE7  F008         	goto	l1518
  2515  0011AE                     u890:
  2516  0011AE  5009               	movf	___aomod@divisor^0,w,c
  2517  0011B0  5E01               	subwf	___aomod@dividend^0,f,c
  2518  0011B2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2519  0011B4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2520  0011B6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2521  0011B8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2522  0011BA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2523  0011BC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2524  0011BE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2525  0011C0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2526  0011C2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2527  0011C4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2528  0011C6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2529  0011C8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2530  0011CA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2531  0011CC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2532  0011CE                     l1518:
  2533  0011CE  90D8               	bcf	status,0,c
  2534  0011D0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2535  0011D2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2536  0011D4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2537  0011D6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2538  0011D8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2539  0011DA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2540  0011DC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2541  0011DE  3209               	rrcf	___aomod@divisor^0,f,c
  2542  0011E0  2E11               	decfsz	___aomod@counter^0,f,c
  2543  0011E2  EFC0  F008         	goto	l1514
  2544  0011E6                     l1522:
  2545  0011E6  5012               	movf	___aomod@sign^0,w,c
  2546  0011E8  B4D8               	btfsc	status,2,c
  2547  0011EA  EFF9  F008         	goto	u901
  2548  0011EE  EFFB  F008         	goto	u900
  2549  0011F2                     u901:
  2550  0011F2  EF0B  F009         	goto	l1526
  2551  0011F6                     u900:
  2552  0011F6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2553  0011F8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2554  0011FA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2555  0011FC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2556  0011FE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2557  001200  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2558  001202  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2559  001204  6C01               	negf	___aomod@dividend^0,c
  2560  001206  0E00               	movlw	0
  2561  001208  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2562  00120A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2563  00120C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2564  00120E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2565  001210  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2566  001212  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2567  001214  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2568  001216                     l1526:
  2569  001216  C001  F001         	movff	___aomod@dividend,?___aomod
  2570  00121A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2571  00121E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2572  001222  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2573  001226  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2574  00122A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2575  00122E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2576  001232  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2577  001236  0012               	return		;funcret
  2578  001238                     __end_of___aomod:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function ___aodiv *****************
  2582 ;; Defined at:
  2583 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  dividend        8    0[COMRAM] long long 
  2586 ;;  divisor         8    8[COMRAM] long long 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  quotient        8   18[COMRAM] long long 
  2589 ;;  sign            1   17[COMRAM] unsigned char 
  2590 ;;  counter         1   16[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  8    0[COMRAM] long long 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2600 ;;      Params:        16       0       0       0       0       0       0       0       0
  2601 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2603 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2604 ;;Total ram usage:       26 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_dtoa
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text12
  2614  000F4C                     __ptext12:
  2615                           	callstack 0
  2616  000F4C                     ___aodiv:
  2617                           	callstack 26
  2618  000F4C  0E00               	movlw	0
  2619  000F4E  6E12               	movwf	___aodiv@sign^0,c
  2620  000F50  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2621  000F52  EFAF  F007         	goto	u780
  2622  000F56  EFAD  F007         	goto	u781
  2623  000F5A                     u781:
  2624  000F5A  EFC1  F007         	goto	l1458
  2625  000F5E                     u780:
  2626  000F5E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2627  000F60  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2628  000F62  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2629  000F64  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2630  000F66  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2631  000F68  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2632  000F6A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2633  000F6C  6C09               	negf	___aodiv@divisor^0,c
  2634  000F6E  0E00               	movlw	0
  2635  000F70  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2636  000F72  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2637  000F74  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2638  000F76  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2639  000F78  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2640  000F7A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2641  000F7C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2642  000F7E  0E01               	movlw	1
  2643  000F80  6E12               	movwf	___aodiv@sign^0,c
  2644  000F82                     l1458:
  2645  000F82  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2646  000F84  EFC8  F007         	goto	u790
  2647  000F88  EFC6  F007         	goto	u791
  2648  000F8C                     u791:
  2649  000F8C  EFDA  F007         	goto	l1464
  2650  000F90                     u790:
  2651  000F90  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2652  000F92  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2653  000F94  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2654  000F96  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2655  000F98  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2656  000F9A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2657  000F9C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2658  000F9E  6C01               	negf	___aodiv@dividend^0,c
  2659  000FA0  0E00               	movlw	0
  2660  000FA2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2661  000FA4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2662  000FA6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2663  000FA8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2664  000FAA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2665  000FAC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2666  000FAE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2667  000FB0  0E01               	movlw	1
  2668  000FB2  1A12               	xorwf	___aodiv@sign^0,f,c
  2669  000FB4                     l1464:
  2670  000FB4  EE20  F013         	lfsr	2,___aodiv@quotient
  2671  000FB8  0E07               	movlw	7
  2672  000FBA                     u801:
  2673  000FBA  6ADE               	clrf	postinc2,c
  2674  000FBC  06E8               	decf	wreg,f,c
  2675  000FBE  E2FD               	bc	u801
  2676  000FC0  5009               	movf	___aodiv@divisor^0,w,c
  2677  000FC2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2678  000FC4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2679  000FC6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2680  000FC8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2681  000FCA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2682  000FCC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2683  000FCE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2684  000FD0  B4D8               	btfsc	status,2,c
  2685  000FD2  EFED  F007         	goto	u811
  2686  000FD6  EFEF  F007         	goto	u810
  2687  000FDA                     u811:
  2688  000FDA  EF41  F008         	goto	l1486
  2689  000FDE                     u810:
  2690  000FDE  0E01               	movlw	1
  2691  000FE0  6E11               	movwf	___aodiv@counter^0,c
  2692  000FE2  EFFD  F007         	goto	l1472
  2693  000FE6                     l1470:
  2694  000FE6  90D8               	bcf	status,0,c
  2695  000FE8  3609               	rlcf	___aodiv@divisor^0,f,c
  2696  000FEA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2697  000FEC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2698  000FEE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2699  000FF0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2700  000FF2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2701  000FF4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2702  000FF6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2703  000FF8  2A11               	incf	___aodiv@counter^0,f,c
  2704  000FFA                     l1472:
  2705  000FFA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2706  000FFC  EF02  F008         	goto	u821
  2707  001000  EF04  F008         	goto	u820
  2708  001004                     u821:
  2709  001004  EFF3  F007         	goto	l1470
  2710  001008                     u820:
  2711  001008                     l1474:
  2712  001008  90D8               	bcf	status,0,c
  2713  00100A  3613               	rlcf	___aodiv@quotient^0,f,c
  2714  00100C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2715  00100E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2716  001010  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2717  001012  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2718  001014  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2719  001016  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2720  001018  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2721  00101A  5009               	movf	___aodiv@divisor^0,w,c
  2722  00101C  5C01               	subwf	___aodiv@dividend^0,w,c
  2723  00101E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2724  001020  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2725  001022  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2726  001024  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2727  001026  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2728  001028  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2729  00102A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2730  00102C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2731  00102E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2732  001030  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2733  001032  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2734  001034  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2735  001036  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2736  001038  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2737  00103A  A0D8               	btfss	status,0,c
  2738  00103C  EF22  F008         	goto	u831
  2739  001040  EF24  F008         	goto	u830
  2740  001044                     u831:
  2741  001044  EF35  F008         	goto	l1482
  2742  001048                     u830:
  2743  001048  5009               	movf	___aodiv@divisor^0,w,c
  2744  00104A  5E01               	subwf	___aodiv@dividend^0,f,c
  2745  00104C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2746  00104E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2747  001050  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2748  001052  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2749  001054  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2750  001056  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2751  001058  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2752  00105A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2753  00105C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2754  00105E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2755  001060  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2756  001062  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2757  001064  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2758  001066  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2759  001068  8013               	bsf	___aodiv@quotient^0,0,c
  2760  00106A                     l1482:
  2761  00106A  90D8               	bcf	status,0,c
  2762  00106C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2763  00106E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2764  001070  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2765  001072  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2766  001074  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2767  001076  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2768  001078  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2769  00107A  3209               	rrcf	___aodiv@divisor^0,f,c
  2770  00107C  2E11               	decfsz	___aodiv@counter^0,f,c
  2771  00107E  EF04  F008         	goto	l1474
  2772  001082                     l1486:
  2773  001082  5012               	movf	___aodiv@sign^0,w,c
  2774  001084  B4D8               	btfsc	status,2,c
  2775  001086  EF47  F008         	goto	u841
  2776  00108A  EF49  F008         	goto	u840
  2777  00108E                     u841:
  2778  00108E  EF59  F008         	goto	l1490
  2779  001092                     u840:
  2780  001092  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2781  001094  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2782  001096  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2783  001098  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2784  00109A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2785  00109C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2786  00109E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2787  0010A0  6C13               	negf	___aodiv@quotient^0,c
  2788  0010A2  0E00               	movlw	0
  2789  0010A4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2790  0010A6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2791  0010A8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2792  0010AA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2793  0010AC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2794  0010AE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2795  0010B0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2796  0010B2                     l1490:
  2797  0010B2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2798  0010B6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2799  0010BA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2800  0010BE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2801  0010C2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2802  0010C6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2803  0010CA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2804  0010CE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2805  0010D2  0012               	return		;funcret
  2806  0010D4                     __end_of___aodiv:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _onLEDS *****************
  2810 ;; Defined at:
  2811 ;;		line 155 in file "humidity_Temp.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  T_Integral      1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  T_Integral      1    0[COMRAM] unsigned char 
  2816 ;;  valor           2    1[COMRAM] int 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        3 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text13
  2840  0013C4                     __ptext13:
  2841                           	callstack 0
  2842  0013C4                     _onLEDS:
  2843                           	callstack 30
  2844                           
  2845                           ;incstack = 0
  2846                           ;onLEDS@T_Integral stored from wreg
  2847  0013C4  6E01               	movwf	onLEDS@T_Integral^0,c
  2848  0013C6                     
  2849                           ;humidity_Temp.c: 155: void onLEDS( char T_Integral);humidity_Temp.c: 156: {;humidity_Te
      +                          mp.c: 157:     int valor =T_Integral ;
  2850  0013C6  C001  F002         	movff	onLEDS@T_Integral,onLEDS@valor
  2851  0013CA  6A03               	clrf	(onLEDS@valor+1)^0,c
  2852  0013CC                     
  2853                           ;humidity_Temp.c: 158:     if(valor < 30)
  2854  0013CC  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  2855  0013CE  EFF4  F009         	goto	u1280
  2856  0013D2  5003               	movf	(onLEDS@valor+1)^0,w,c
  2857  0013D4  E107               	bnz	u1281
  2858  0013D6  0E1E               	movlw	30
  2859  0013D8  5C02               	subwf	onLEDS@valor^0,w,c
  2860  0013DA  B0D8               	btfsc	status,0,c
  2861  0013DC  EFF2  F009         	goto	u1281
  2862  0013E0  EFF4  F009         	goto	u1280
  2863  0013E4                     u1281:
  2864  0013E4  EFF9  F009         	goto	l1766
  2865  0013E8                     u1280:
  2866  0013E8                     
  2867                           ;humidity_Temp.c: 159:     {;humidity_Temp.c: 160:         PORTCbits.RC5 = 1;
  2868  0013E8  8A82               	bsf	130,5,c	;volatile
  2869                           
  2870                           ;humidity_Temp.c: 161:         PORTCbits.RC4 = 0;
  2871  0013EA  9882               	bcf	130,4,c	;volatile
  2872                           
  2873                           ;humidity_Temp.c: 162:         PORTCbits.RC6 = 0;
  2874  0013EC  9C82               	bcf	130,6,c	;volatile
  2875                           
  2876                           ;humidity_Temp.c: 163:     }
  2877  0013EE  EF1D  F00A         	goto	l92
  2878  0013F2                     l1766:
  2879  0013F2  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  2880  0013F4  EF05  F00A         	goto	u1291
  2881  0013F8  5003               	movf	(onLEDS@valor+1)^0,w,c
  2882  0013FA  E109               	bnz	u1290
  2883  0013FC  0E1E               	movlw	30
  2884  0013FE  5C02               	subwf	onLEDS@valor^0,w,c
  2885  001400  A0D8               	btfss	status,0,c
  2886  001402  EF05  F00A         	goto	u1291
  2887  001406  EF07  F00A         	goto	u1290
  2888  00140A                     u1291:
  2889  00140A  EF1A  F00A         	goto	l90
  2890  00140E                     u1290:
  2891  00140E  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  2892  001410  EF15  F00A         	goto	u1300
  2893  001414  5003               	movf	(onLEDS@valor+1)^0,w,c
  2894  001416  E107               	bnz	u1301
  2895  001418  0E24               	movlw	36
  2896  00141A  5C02               	subwf	onLEDS@valor^0,w,c
  2897  00141C  B0D8               	btfsc	status,0,c
  2898  00141E  EF13  F00A         	goto	u1301
  2899  001422  EF15  F00A         	goto	u1300
  2900  001426                     u1301:
  2901  001426  EF1A  F00A         	goto	l90
  2902  00142A                     u1300:
  2903  00142A                     
  2904                           ;humidity_Temp.c: 165:         PORTCbits.RC5 = 0;
  2905  00142A  9A82               	bcf	130,5,c	;volatile
  2906                           
  2907                           ;humidity_Temp.c: 166:         PORTCbits.RC4 = 1;
  2908  00142C  8882               	bsf	130,4,c	;volatile
  2909                           
  2910                           ;humidity_Temp.c: 167:         PORTCbits.RC6 = 0;
  2911  00142E  9C82               	bcf	130,6,c	;volatile
  2912                           
  2913                           ;humidity_Temp.c: 168:     }
  2914  001430  EF1D  F00A         	goto	l92
  2915  001434                     l90:
  2916                           
  2917                           ;humidity_Temp.c: 170:         PORTCbits.RC5 = 0;
  2918  001434  9A82               	bcf	130,5,c	;volatile
  2919                           
  2920                           ;humidity_Temp.c: 171:         PORTCbits.RC4 = 0;
  2921  001436  9882               	bcf	130,4,c	;volatile
  2922                           
  2923                           ;humidity_Temp.c: 172:         PORTCbits.RC6 = 1;
  2924  001438  8C82               	bsf	130,6,c	;volatile
  2925  00143A                     l92:
  2926  00143A  0012               	return		;funcret
  2927  00143C                     __end_of_onLEDS:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _LCD_String_xy *****************
  2931 ;; Defined at:
  2932 ;;		line 58 in file "LCD_16x2.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  row             1    wreg     unsigned char 
  2935 ;;  pos             1    9[COMRAM] unsigned char 
  2936 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  2937 ;;		 -> STR_7(5), STR_6(8), main@value(10), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  row             1   12[COMRAM] unsigned char 
  2940 ;;  location        1   13[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         3       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2953 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        5 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    3
  2957 ;; This function calls:
  2958 ;;		_LCD_Command
  2959 ;;		_LCD_String
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text14
  2966  001678                     __ptext14:
  2967                           	callstack 0
  2968  001678                     _LCD_String_xy:
  2969                           	callstack 27
  2970                           
  2971                           ;incstack = 0
  2972                           ;LCD_String_xy@row stored from wreg
  2973  001678  6E0D               	movwf	LCD_String_xy@row^0,c
  2974  00167A                     
  2975                           ;LCD_16x2.c: 61:     if(row<1)
  2976  00167A  500D               	movf	LCD_String_xy@row^0,w,c
  2977  00167C  A4D8               	btfss	status,2,c
  2978  00167E  EF43  F00B         	goto	u1311
  2979  001682  EF45  F00B         	goto	u1310
  2980  001686                     u1311:
  2981  001686  EF4E  F00B         	goto	l1792
  2982  00168A                     u1310:
  2983  00168A                     
  2984                           ;LCD_16x2.c: 62:     {;LCD_16x2.c: 63:         location=(0x80) | ((pos) & 0x0f);
  2985  00168A  500A               	movf	LCD_String_xy@pos^0,w,c
  2986  00168C  0B0F               	andlw	15
  2987  00168E  0980               	iorlw	128
  2988  001690  6E0E               	movwf	LCD_String_xy@location^0,c
  2989  001692                     
  2990                           ;LCD_16x2.c: 64:         LCD_Command(location);
  2991  001692  500E               	movf	LCD_String_xy@location^0,w,c
  2992  001694  ECC2  F00B         	call	_LCD_Command
  2993                           
  2994                           ;LCD_16x2.c: 65:     }
  2995  001698  EF55  F00B         	goto	l1796
  2996  00169C                     l1792:
  2997                           
  2998                           ;LCD_16x2.c: 67:     {;LCD_16x2.c: 68:         location=(0xC0) | ((pos) & 0x0f);
  2999  00169C  500A               	movf	LCD_String_xy@pos^0,w,c
  3000  00169E  0B0F               	andlw	15
  3001  0016A0  09C0               	iorlw	192
  3002  0016A2  6E0E               	movwf	LCD_String_xy@location^0,c
  3003  0016A4                     
  3004                           ;LCD_16x2.c: 69:         LCD_Command(location);
  3005  0016A4  500E               	movf	LCD_String_xy@location^0,w,c
  3006  0016A6  ECC2  F00B         	call	_LCD_Command
  3007  0016AA                     l1796:
  3008                           
  3009                           ;LCD_16x2.c: 73:     LCD_String(msg);
  3010  0016AA  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  3011  0016AE  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3012  0016B2  EC4F  F00A         	call	_LCD_String	;wreg free
  3013  0016B6  0012               	return		;funcret
  3014  0016B8                     __end_of_LCD_String_xy:
  3015                           	callstack 0
  3016                           
  3017 ;; *************** function _LCD_String *****************
  3018 ;; Defined at:
  3019 ;;		line 48 in file "LCD_16x2.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  3022 ;;		 -> STR_7(5), STR_6(8), main@value(10), 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3034 ;;      Params:         2       0       0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:        2 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    2
  3041 ;; This function calls:
  3042 ;;		_LCD_Char
  3043 ;; This function is called by:
  3044 ;;		_main
  3045 ;;		_LCD_String_xy
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text15
  3050  00149E                     __ptext15:
  3051                           	callstack 0
  3052  00149E                     _LCD_String:
  3053                           	callstack 27
  3054  00149E                     
  3055                           ;LCD_16x2.c: 48: void LCD_String(const char *msg);LCD_16x2.c: 49: {;LCD_16x2.c: 50:  whi
      +                          le((*msg)!=0)
  3056  00149E  EF65  F00A         	goto	l1694
  3057  0014A2                     l1690:
  3058                           
  3059                           ;LCD_16x2.c: 51:  {;LCD_16x2.c: 52:    LCD_Char(*msg);
  3060  0014A2  C008  FFF6         	movff	LCD_String@msg,tblptrl
  3061  0014A6  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  3062  0014AA  6AF8               	clrf	tblptru,c
  3063  0014AC  0E07               	movlw	(high __ramtop+-1)
  3064  0014AE  64F7               	cpfsgt	tblptrh,c
  3065  0014B0  D003               	bra	u1177
  3066  0014B2  0008               	tblrd		*
  3067  0014B4  50F5               	movf	tablat,w,c
  3068  0014B6  D005               	bra	u1170
  3069  0014B8                     u1177:
  3070  0014B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3071  0014BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3072  0014C0  50E7               	movf	indf1,w,c
  3073  0014C2                     u1170:
  3074  0014C2  ECB4  F00B         	call	_LCD_Char
  3075  0014C6                     
  3076                           ;LCD_16x2.c: 53:    msg++;
  3077  0014C6  4A08               	infsnz	LCD_String@msg^0,f,c
  3078  0014C8  2A09               	incf	(LCD_String@msg+1)^0,f,c
  3079  0014CA                     l1694:
  3080                           
  3081                           ;LCD_16x2.c: 50:  while((*msg)!=0)
  3082  0014CA  C008  FFF6         	movff	LCD_String@msg,tblptrl
  3083  0014CE  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  3084  0014D2  6AF8               	clrf	tblptru,c
  3085  0014D4  0E07               	movlw	(high __ramtop+-1)
  3086  0014D6  64F7               	cpfsgt	tblptrh,c
  3087  0014D8  D003               	bra	u1187
  3088  0014DA  0008               	tblrd		*
  3089  0014DC  50F5               	movf	tablat,w,c
  3090  0014DE  D005               	bra	u1180
  3091  0014E0                     u1187:
  3092  0014E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3093  0014E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3094  0014E8  50E7               	movf	indf1,w,c
  3095  0014EA                     u1180:
  3096  0014EA  0900               	iorlw	0
  3097  0014EC  A4D8               	btfss	status,2,c
  3098  0014EE  EF7B  F00A         	goto	u1191
  3099  0014F2  EF7D  F00A         	goto	u1190
  3100  0014F6                     u1191:
  3101  0014F6  EF51  F00A         	goto	l1690
  3102  0014FA                     u1190:
  3103  0014FA  0012               	return		;funcret
  3104  0014FC                     __end_of_LCD_String:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _LCD_Char *****************
  3108 ;; Defined at:
  3109 ;;		line 37 in file "LCD_16x2.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  dat             1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  dat             1    6[COMRAM] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0
  3124 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3126 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3127 ;;Total ram usage:        1 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    1
  3130 ;; This function calls:
  3131 ;;		_MSdelay
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;;		_LCD_String
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text16
  3139  001768                     __ptext16:
  3140                           	callstack 0
  3141  001768                     _LCD_Char:
  3142                           	callstack 27
  3143                           
  3144                           ;incstack = 0
  3145                           ;LCD_Char@dat stored from wreg
  3146  001768  6E07               	movwf	LCD_Char@dat^0,c
  3147  00176A                     
  3148                           ;LCD_16x2.c: 37: void LCD_Char(char dat);LCD_16x2.c: 38: {;LCD_16x2.c: 39:  LATD= dat;
  3149  00176A  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  3150  00176E                     
  3151                           ;LCD_16x2.c: 40:  LATC0 = 1;
  3152  00176E  808B               	bsf	3979,0,c	;volatile
  3153  001770                     
  3154                           ;LCD_16x2.c: 41:  LATC1=1;
  3155  001770  828B               	bsf	3979,1,c	;volatile
  3156  001772                     
  3157                           ;LCD_16x2.c: 42:  __nop();
  3158  001772  F000               	nop	
  3159  001774                     
  3160                           ;LCD_16x2.c: 43:  LATC1=0;
  3161  001774  928B               	bcf	3979,1,c	;volatile
  3162  001776                     
  3163                           ;LCD_16x2.c: 44:     MSdelay(1);
  3164  001776  0E00               	movlw	0
  3165  001778  6E02               	movwf	(MSdelay@val+1)^0,c
  3166  00177A  0E01               	movlw	1
  3167  00177C  6E01               	movwf	MSdelay@val^0,c
  3168  00177E  ECD5  F00A         	call	_MSdelay	;wreg free
  3169  001782  0012               	return		;funcret
  3170  001784                     __end_of_LCD_Char:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _LCD_Init *****************
  3174 ;; Defined at:
  3175 ;;		line 9 in file "LCD_16x2.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    2
  3196 ;; This function calls:
  3197 ;;		_LCD_Command
  3198 ;;		_MSdelay
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text17
  3205  0016EE                     __ptext17:
  3206                           	callstack 0
  3207  0016EE                     _LCD_Init:
  3208                           	callstack 28
  3209  0016EE                     
  3210                           ;LCD_16x2.c: 11:     TRISD = 0x00;
  3211  0016EE  0E00               	movlw	0
  3212  0016F0  6E95               	movwf	149,c	;volatile
  3213                           
  3214                           ;LCD_16x2.c: 12:     TRISC = 0x00;
  3215  0016F2  0E00               	movlw	0
  3216  0016F4  6E94               	movwf	148,c	;volatile
  3217  0016F6                     
  3218                           ;LCD_16x2.c: 13:     MSdelay(20);
  3219  0016F6  0E00               	movlw	0
  3220  0016F8  6E02               	movwf	(MSdelay@val+1)^0,c
  3221  0016FA  0E14               	movlw	20
  3222  0016FC  6E01               	movwf	MSdelay@val^0,c
  3223  0016FE  ECD5  F00A         	call	_MSdelay	;wreg free
  3224  001702                     
  3225                           ;LCD_16x2.c: 14:  LCD_Command(0x38);
  3226  001702  0E38               	movlw	56
  3227  001704  ECC2  F00B         	call	_LCD_Command
  3228  001708                     
  3229                           ;LCD_16x2.c: 15:     LCD_Command(0x01);
  3230  001708  0E01               	movlw	1
  3231  00170A  ECC2  F00B         	call	_LCD_Command
  3232  00170E                     
  3233                           ;LCD_16x2.c: 16:     LCD_Command(0x0c);
  3234  00170E  0E0C               	movlw	12
  3235  001710  ECC2  F00B         	call	_LCD_Command
  3236  001714                     
  3237                           ;LCD_16x2.c: 17:     LCD_Command(0x06);
  3238  001714  0E06               	movlw	6
  3239  001716  ECC2  F00B         	call	_LCD_Command
  3240  00171A  0012               	return		;funcret
  3241  00171C                     __end_of_LCD_Init:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function _LCD_Command *****************
  3245 ;; Defined at:
  3246 ;;		line 26 in file "LCD_16x2.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  cmd             1    wreg     unsigned char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  cmd             1    6[COMRAM] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3260 ;;      Params:         0       0       0       0       0       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3263 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3264 ;;Total ram usage:        1 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    1
  3267 ;; This function calls:
  3268 ;;		_MSdelay
  3269 ;; This function is called by:
  3270 ;;		_LCD_Init
  3271 ;;		_LCD_String_xy
  3272 ;;		_LCD_Clear
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text18
  3277  001784                     __ptext18:
  3278                           	callstack 0
  3279  001784                     _LCD_Command:
  3280                           	callstack 28
  3281                           
  3282                           ;incstack = 0
  3283                           ;LCD_Command@cmd stored from wreg
  3284  001784  6E07               	movwf	LCD_Command@cmd^0,c
  3285  001786                     
  3286                           ;LCD_16x2.c: 26: void LCD_Command(char cmd );LCD_16x2.c: 27: {;LCD_16x2.c: 28:  LATD= cm
      +                          d;
  3287  001786  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  3288  00178A                     
  3289                           ;LCD_16x2.c: 29:  LATC0 = 0;
  3290  00178A  908B               	bcf	3979,0,c	;volatile
  3291  00178C                     
  3292                           ;LCD_16x2.c: 30:  LATC1 = 1;
  3293  00178C  828B               	bsf	3979,1,c	;volatile
  3294  00178E                     
  3295                           ;LCD_16x2.c: 31:  __nop();
  3296  00178E  F000               	nop	
  3297  001790                     
  3298                           ;LCD_16x2.c: 32:  LATC1 = 0;
  3299  001790  928B               	bcf	3979,1,c	;volatile
  3300  001792                     
  3301                           ;LCD_16x2.c: 33:     MSdelay(3);
  3302  001792  0E00               	movlw	0
  3303  001794  6E02               	movwf	(MSdelay@val+1)^0,c
  3304  001796  0E03               	movlw	3
  3305  001798  6E01               	movwf	MSdelay@val^0,c
  3306  00179A  ECD5  F00A         	call	_MSdelay	;wreg free
  3307  00179E  0012               	return		;funcret
  3308  0017A0                     __end_of_LCD_Command:
  3309                           	callstack 0
  3310                           
  3311 ;; *************** function _MSdelay *****************
  3312 ;; Defined at:
  3313 ;;		line 77 in file "LCD_16x2.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  val             2    0[COMRAM] unsigned int 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  j               2    4[COMRAM] unsigned int 
  3318 ;;  i               2    2[COMRAM] unsigned int 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         2       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        6 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;;		_LCD_Init
  3339 ;;		_LCD_Command
  3340 ;;		_LCD_Char
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text19
  3345  0015AA                     __ptext19:
  3346                           	callstack 0
  3347  0015AA                     _MSdelay:
  3348                           	callstack 30
  3349  0015AA                     
  3350                           ;LCD_16x2.c: 77: void MSdelay(unsigned int val);LCD_16x2.c: 78: {;LCD_16x2.c: 79:      u
      +                          nsigned int i,j;;LCD_16x2.c: 80:         for(i=0;i<=val;i++)
  3351  0015AA  0E00               	movlw	0
  3352  0015AC  6E04               	movwf	(MSdelay@i+1)^0,c
  3353  0015AE  0E00               	movlw	0
  3354  0015B0  6E03               	movwf	MSdelay@i^0,c
  3355  0015B2  EFEE  F00A         	goto	l1570
  3356  0015B6                     l1558:
  3357                           
  3358                           ;LCD_16x2.c: 81:             for(j=0;j<81;j++);
  3359  0015B6  0E00               	movlw	0
  3360  0015B8  6E06               	movwf	(MSdelay@j+1)^0,c
  3361  0015BA  0E00               	movlw	0
  3362  0015BC  6E05               	movwf	MSdelay@j^0,c
  3363  0015BE                     l1564:
  3364  0015BE  4A05               	infsnz	MSdelay@j^0,f,c
  3365  0015C0  2A06               	incf	(MSdelay@j+1)^0,f,c
  3366  0015C2  5006               	movf	(MSdelay@j+1)^0,w,c
  3367  0015C4  E109               	bnz	u960
  3368  0015C6  0E51               	movlw	81
  3369  0015C8  5C05               	subwf	MSdelay@j^0,w,c
  3370  0015CA  A0D8               	btfss	status,0,c
  3371  0015CC  EFEA  F00A         	goto	u961
  3372  0015D0  EFEC  F00A         	goto	u960
  3373  0015D4                     u961:
  3374  0015D4  EFDF  F00A         	goto	l1564
  3375  0015D8                     u960:
  3376  0015D8  4A03               	infsnz	MSdelay@i^0,f,c
  3377  0015DA  2A04               	incf	(MSdelay@i+1)^0,f,c
  3378  0015DC                     l1570:
  3379  0015DC  5003               	movf	MSdelay@i^0,w,c
  3380  0015DE  5C01               	subwf	MSdelay@val^0,w,c
  3381  0015E0  5004               	movf	(MSdelay@i+1)^0,w,c
  3382  0015E2  5802               	subwfb	(MSdelay@val+1)^0,w,c
  3383  0015E4  B0D8               	btfsc	status,0,c
  3384  0015E6  EFF7  F00A         	goto	u971
  3385  0015EA  EFF9  F00A         	goto	u970
  3386  0015EE                     u971:
  3387  0015EE  EFDB  F00A         	goto	l1558
  3388  0015F2                     u970:
  3389  0015F2  0012               	return		;funcret
  3390  0015F4                     __end_of_MSdelay:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _DHT11_Start *****************
  3394 ;; Defined at:
  3395 ;;		line 137 in file "humidity_Temp.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3412 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text20
  3423  001748                     __ptext20:
  3424                           	callstack 0
  3425  001748                     _DHT11_Start:
  3426                           	callstack 30
  3427  001748                     
  3428                           ;humidity_Temp.c: 139:     TRISCbits.RC2 = 0;
  3429  001748  9494               	bcf	148,2,c	;volatile
  3430                           
  3431                           ;humidity_Temp.c: 140:     LATC2 = 0;
  3432  00174A  948B               	bcf	3979,2,c	;volatile
  3433  00174C                     
  3434                           ;humidity_Temp.c: 141:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3435  00174C  0E2F               	movlw	47
  3436  00174E  6E01               	movwf	??_DHT11_Start^0,c
  3437  001750  0EC0               	movlw	192
  3438  001752                     u1437:
  3439  001752  2EE8               	decfsz	wreg,f,c
  3440  001754  D7FE               	bra	u1437
  3441  001756  2E01               	decfsz	??_DHT11_Start^0,f,c
  3442  001758  D7FC               	bra	u1437
  3443  00175A                     
  3444                           ;humidity_Temp.c: 142:     LATC2 = 1;
  3445  00175A  848B               	bsf	3979,2,c	;volatile
  3446                           
  3447                           ;humidity_Temp.c: 143:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  3448  00175C  0E0D               	movlw	13
  3449  00175E                     u1447:
  3450  00175E  2EE8               	decfsz	wreg,f,c
  3451  001760  D7FE               	bra	u1447
  3452  001762  F000               	nop	
  3453  001764                     
  3454                           ;humidity_Temp.c: 144:     TRISCbits.RC2 = 1;
  3455  001764  8494               	bsf	148,2,c	;volatile
  3456  001766  0012               	return		;funcret
  3457  001768                     __end_of_DHT11_Start:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _DHT11_ReadData *****************
  3461 ;; Defined at:
  3462 ;;		line 120 in file "humidity_Temp.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  data            1    1[COMRAM] unsigned char 
  3467 ;;  i               1    0[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0
  3478 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3480 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        2 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text21
  3491  0014FC                     __ptext21:
  3492                           	callstack 0
  3493  0014FC                     _DHT11_ReadData:
  3494                           	callstack 30
  3495  0014FC                     
  3496                           ;humidity_Temp.c: 122:   char i,data = 0;
  3497  0014FC  0E00               	movlw	0
  3498  0014FE  6E02               	movwf	DHT11_ReadData@data^0,c
  3499                           
  3500                           ;humidity_Temp.c: 123:     for(i=0;i<8;i++)
  3501  001500  0E00               	movlw	0
  3502  001502  6E01               	movwf	DHT11_ReadData@i^0,c
  3503  001504                     l62:
  3504  001504  A482               	btfss	130,2,c	;volatile
  3505  001506  EF87  F00A         	goto	u1241
  3506  00150A  EF89  F00A         	goto	u1240
  3507  00150E                     u1241:
  3508  00150E  EF82  F00A         	goto	l62
  3509  001512                     u1240:
  3510  001512                     
  3511                           ;humidity_Temp.c: 126:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  3512  001512  0E14               	movlw	20
  3513  001514                     u1457:
  3514  001514  2EE8               	decfsz	wreg,f,c
  3515  001516  D7FE               	bra	u1457
  3516  001518                     
  3517                           ;humidity_Temp.c: 127:         if(PORTCbits.RC2 & 1)
  3518  001518  A482               	btfss	130,2,c	;volatile
  3519  00151A  EF91  F00A         	goto	u1251
  3520  00151E  EF93  F00A         	goto	u1250
  3521  001522                     u1251:
  3522  001522  EF97  F00A         	goto	l1750
  3523  001526                     u1250:
  3524  001526                     
  3525                           ;humidity_Temp.c: 128:           data = ((data<<1) | 1);
  3526  001526  80D8               	bsf	status,0,c
  3527  001528  3602               	rlcf	DHT11_ReadData@data^0,f,c
  3528  00152A  EF9A  F00A         	goto	l67
  3529  00152E                     l1750:
  3530                           
  3531                           ;humidity_Temp.c: 130:           data = (data<<1);
  3532  00152E  5002               	movf	DHT11_ReadData@data^0,w,c
  3533  001530  2402               	addwf	DHT11_ReadData@data^0,w,c
  3534  001532  6E02               	movwf	DHT11_ReadData@data^0,c
  3535  001534                     l67:
  3536  001534  B482               	btfsc	130,2,c	;volatile
  3537  001536  EF9F  F00A         	goto	u1261
  3538  00153A  EFA1  F00A         	goto	u1260
  3539  00153E                     u1261:
  3540  00153E  EF9A  F00A         	goto	l67
  3541  001542                     u1260:
  3542  001542                     
  3543                           ;humidity_Temp.c: 133:     }
  3544  001542  2A01               	incf	DHT11_ReadData@i^0,f,c
  3545  001544  0E07               	movlw	7
  3546  001546  6401               	cpfsgt	DHT11_ReadData@i^0,c
  3547  001548  EFA8  F00A         	goto	u1271
  3548  00154C  EFAA  F00A         	goto	u1270
  3549  001550                     u1271:
  3550  001550  EF82  F00A         	goto	l62
  3551  001554                     u1270:
  3552  001554                     
  3553                           ;humidity_Temp.c: 134:   return data;
  3554  001554  5002               	movf	DHT11_ReadData@data^0,w,c
  3555  001556  0012               	return		;funcret
  3556  001558                     __end_of_DHT11_ReadData:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _DHT11_CheckResponse *****************
  3560 ;; Defined at:
  3561 ;;		line 148 in file "humidity_Temp.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		None
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text22
  3589  00171C                     __ptext22:
  3590                           	callstack 0
  3591  00171C                     _DHT11_CheckResponse:
  3592                           	callstack 30
  3593  00171C                     l76:
  3594  00171C  B482               	btfsc	130,2,c	;volatile
  3595  00171E  EF93  F00B         	goto	u1211
  3596  001722  EF95  F00B         	goto	u1210
  3597  001726                     u1211:
  3598  001726  EF8E  F00B         	goto	l76
  3599  00172A                     u1210:
  3600  00172A                     l79:
  3601  00172A  A482               	btfss	130,2,c	;volatile
  3602  00172C  EF9A  F00B         	goto	u1221
  3603  001730  EF9C  F00B         	goto	u1220
  3604  001734                     u1221:
  3605  001734  EF95  F00B         	goto	l79
  3606  001738                     u1220:
  3607  001738                     l82:
  3608  001738  B482               	btfsc	130,2,c	;volatile
  3609  00173A  EFA1  F00B         	goto	u1231
  3610  00173E  EFA3  F00B         	goto	u1230
  3611  001742                     u1231:
  3612  001742  EF9C  F00B         	goto	l82
  3613  001746                     u1230:
  3614  001746  0012               	return		;funcret
  3615  001748                     __end_of_DHT11_CheckResponse:
  3616                           	callstack 0
  3617                           
  3618                           	psect	rparam
  3619  0000                     
  3620                           	psect	idloc
  3621                           
  3622                           ;Config register IDLOC0 @ 0x200000
  3623                           ;	unspecified, using default values
  3624  200000                     	org	2097152
  3625  200000  FF                 	db	255
  3626                           
  3627                           ;Config register IDLOC1 @ 0x200001
  3628                           ;	unspecified, using default values
  3629  200001                     	org	2097153
  3630  200001  FF                 	db	255
  3631                           
  3632                           ;Config register IDLOC2 @ 0x200002
  3633                           ;	unspecified, using default values
  3634  200002                     	org	2097154
  3635  200002  FF                 	db	255
  3636                           
  3637                           ;Config register IDLOC3 @ 0x200003
  3638                           ;	unspecified, using default values
  3639  200003                     	org	2097155
  3640  200003  FF                 	db	255
  3641                           
  3642                           ;Config register IDLOC4 @ 0x200004
  3643                           ;	unspecified, using default values
  3644  200004                     	org	2097156
  3645  200004  FF                 	db	255
  3646                           
  3647                           ;Config register IDLOC5 @ 0x200005
  3648                           ;	unspecified, using default values
  3649  200005                     	org	2097157
  3650  200005  FF                 	db	255
  3651                           
  3652                           ;Config register IDLOC6 @ 0x200006
  3653                           ;	unspecified, using default values
  3654  200006                     	org	2097158
  3655  200006  FF                 	db	255
  3656                           
  3657                           ;Config register IDLOC7 @ 0x200007
  3658                           ;	unspecified, using default values
  3659  200007                     	org	2097159
  3660  200007  FF                 	db	255
  3661                           
  3662                           	psect	config
  3663                           
  3664                           ;Config register CONFIG1L @ 0x300000
  3665                           ;	PLL Prescaler Selection bits
  3666                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3667                           ;	System Clock Postscaler Selection bits
  3668                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3669                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3670                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3671  300000                     	org	3145728
  3672  300000  00                 	db	0
  3673                           
  3674                           ;Config register CONFIG1H @ 0x300001
  3675                           ;	Oscillator Selection bits
  3676                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3677                           ;	Fail-Safe Clock Monitor Enable bit
  3678                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3679                           ;	Internal/External Oscillator Switchover bit
  3680                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3681  300001                     	org	3145729
  3682  300001  09                 	db	9
  3683                           
  3684                           ;Config register CONFIG2L @ 0x300002
  3685                           ;	Power-up Timer Enable bit
  3686                           ;	PWRT = OFF, PWRT disabled
  3687                           ;	Brown-out Reset Enable bits
  3688                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3689                           ;	Brown-out Reset Voltage bits
  3690                           ;	BORV = 3, Minimum setting 2.05V
  3691                           ;	USB Voltage Regulator Enable bit
  3692                           ;	VREGEN = OFF, USB voltage regulator disabled
  3693  300002                     	org	3145730
  3694  300002  1F                 	db	31
  3695                           
  3696                           ;Config register CONFIG2H @ 0x300003
  3697                           ;	Watchdog Timer Enable bit
  3698                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3699                           ;	Watchdog Timer Postscale Select bits
  3700                           ;	WDTPS = 32768, 1:32768
  3701  300003                     	org	3145731
  3702  300003  1E                 	db	30
  3703                           
  3704                           ; Padding undefined space
  3705  300004                     	org	3145732
  3706  300004  FF                 	db	255
  3707                           
  3708                           ;Config register CONFIG3H @ 0x300005
  3709                           ;	CCP2 MUX bit
  3710                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3711                           ;	PORTB A/D Enable bit
  3712                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3713                           ;	Low-Power Timer 1 Oscillator Enable bit
  3714                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3715                           ;	MCLR Pin Enable bit
  3716                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3717  300005                     	org	3145733
  3718  300005  00                 	db	0
  3719                           
  3720                           ;Config register CONFIG4L @ 0x300006
  3721                           ;	Stack Full/Underflow Reset Enable bit
  3722                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3723                           ;	Single-Supply ICSP Enable bit
  3724                           ;	LVP = OFF, Single-Supply ICSP disabled
  3725                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3726                           ;	ICPRT = OFF, ICPORT disabled
  3727                           ;	Extended Instruction Set Enable bit
  3728                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3729                           ;	Background Debugger Enable bit
  3730                           ;	DEBUG = 0x1, unprogrammed default
  3731  300006                     	org	3145734
  3732  300006  81                 	db	129
  3733                           
  3734                           ; Padding undefined space
  3735  300007                     	org	3145735
  3736  300007  FF                 	db	255
  3737                           
  3738                           ;Config register CONFIG5L @ 0x300008
  3739                           ;	Code Protection bit
  3740                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3741                           ;	Code Protection bit
  3742                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3743                           ;	Code Protection bit
  3744                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3745                           ;	Code Protection bit
  3746                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3747  300008                     	org	3145736
  3748  300008  0F                 	db	15
  3749                           
  3750                           ;Config register CONFIG5H @ 0x300009
  3751                           ;	Boot Block Code Protection bit
  3752                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3753                           ;	Data EEPROM Code Protection bit
  3754                           ;	CPD = OFF, Data EEPROM is not code-protected
  3755  300009                     	org	3145737
  3756  300009  C0                 	db	192
  3757                           
  3758                           ;Config register CONFIG6L @ 0x30000A
  3759                           ;	Write Protection bit
  3760                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3761                           ;	Write Protection bit
  3762                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3763                           ;	Write Protection bit
  3764                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3765                           ;	Write Protection bit
  3766                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3767  30000A                     	org	3145738
  3768  30000A  0F                 	db	15
  3769                           
  3770                           ;Config register CONFIG6H @ 0x30000B
  3771                           ;	Configuration Register Write Protection bit
  3772                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3773                           ;	Boot Block Write Protection bit
  3774                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3775                           ;	Data EEPROM Write Protection bit
  3776                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3777  30000B                     	org	3145739
  3778  30000B  E0                 	db	224
  3779                           
  3780                           ;Config register CONFIG7L @ 0x30000C
  3781                           ;	Table Read Protection bit
  3782                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3783                           ;	Table Read Protection bit
  3784                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3785                           ;	Table Read Protection bit
  3786                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3787                           ;	Table Read Protection bit
  3788                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3789  30000C                     	org	3145740
  3790  30000C  0F                 	db	15
  3791                           
  3792                           ;Config register CONFIG7H @ 0x30000D
  3793                           ;	Boot Block Table Read Protection bit
  3794                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3795  30000D                     	org	3145741
  3796  30000D  40                 	db	64
  3797                           tosu	equ	0xFFF
  3798                           tosh	equ	0xFFE
  3799                           tosl	equ	0xFFD
  3800                           stkptr	equ	0xFFC
  3801                           pclatu	equ	0xFFB
  3802                           pclath	equ	0xFFA
  3803                           pcl	equ	0xFF9
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           indf0	equ	0xFEF
  3811                           postinc0	equ	0xFEE
  3812                           postdec0	equ	0xFED
  3813                           preinc0	equ	0xFEC
  3814                           plusw0	equ	0xFEB
  3815                           fsr0h	equ	0xFEA
  3816                           fsr0l	equ	0xFE9
  3817                           wreg	equ	0xFE8
  3818                           indf1	equ	0xFE7
  3819                           postinc1	equ	0xFE6
  3820                           postdec1	equ	0xFE5
  3821                           preinc1	equ	0xFE4
  3822                           plusw1	equ	0xFE3
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           bsr	equ	0xFE0
  3826                           indf2	equ	0xFDF
  3827                           postinc2	equ	0xFDE
  3828                           postdec2	equ	0xFDD
  3829                           preinc2	equ	0xFDC
  3830                           plusw2	equ	0xFDB
  3831                           fsr2h	equ	0xFDA
  3832                           fsr2l	equ	0xFD9
  3833                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     29      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S761_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[5]), STR_6(CODE[8]), main@value(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[5]), STR_6(CODE[8]), main@value(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   12676
                                             10 BANK0     19    19      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                             _onLEDS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7064
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _onLEDS                                               3     3      0      89
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2004
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     767
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     494
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     966
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     494
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     472
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _LCD_Char
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _onLEDS
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2      20        0.0%
DATA                 0      0      A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 10 23:49:21 2020

                main@Checksum 009F                  ?_LCD_Command 0001                            l70 1556  
                          l62 1504                            l73 1766                            l82 1738  
                          l90 1434                            l67 1534                            l76 171C  
                          l92 143A                            l85 1746                            l79 172A  
                 ?_LCD_String 0008                           l111 171A                           l120 1782  
                         l131 16B6                           l117 179E                           l126 14FA  
                         l139 15F2                           l256 10D2                           l269 1236  
                         l820 15A8                           l911 1300                           l922 17BA  
                         l850 1388                           l852 13C2                           l860 08C6  
                         l919 1636                           l847 1346                           l928 16EC  
                         l858 08BE                           l891 1494                           l892 149C  
                         l885 0F4A                           l878 0AFA                           l896 166E  
                         l899 1676                 main@T_Decimal 009E                           u720 124A  
                         u801 0FBA                           u721 1246                           u810 0FDE  
                         u730 125C                           u811 0FDA                           u731 1258  
                         u820 1008                           u900 11F6                           u740 1284  
                         u821 1004                           u901 11F2                           u741 1280  
                         u830 1048                           u750 12BA                           u910 1310  
                         u831 1044                           u751 12B6                           u911 130C  
                         u840 1092                           u760 1636                           u920 1332  
                         u841 108E                           u761 1632                           u921 132E  
                         u850 10E6                           u770 16E0                           u930 1388  
                         u851 10E2                           u771 16DC                           u931 1384  
                         u780 0F5E                           u860 1118                           u940 1396  
                         u781 0F5A                           u861 1114                           u941 1392  
                         u790 0F90                           u870 1156                           u950 1652  
                         u791 0F8C                           u871 1152                           u951 164E  
                         u960 15D8                           u880 1180                           u961 15D4  
                         u881 117C                           u970 15F2                           u890 11AE  
                         u971 15EE                           u891 11AA                           u980 084E  
                         u981 0848                           u990 0850                           _abs 1638  
                         _pad 1302                           wreg 000FE8                   LCD_Char@dat 0007  
                        ?_abs 0013                          l1500 1106                          l1420 124A  
                        l1510 115E                          l1502 110A                          l1422 125C  
                        l1520 11E0                          l1512 1172                          l1504 1118  
                        l1424 1266                          l1432 15F4                          l1440 16B8  
                        l1600 098C                          l1450 0F4C                          l1514 1180  
                        l1522 11E6                          l1506 1138                          l1426 1284  
                        l1418 1238                          l1434 1600                          l1442 16C4  
                        l1530 1302                          l1610 0A34                          l1602 0992  
                        l1700 178C                          l1460 0F90                          l1452 0F50  
                        l1524 11F6                          l1516 11AE                          l1508 1156  
                        l1428 12BA                          l1436 1612                          l1444 16C8  
                        l1540 1352                          l1532 1310                          l1620 0A96  
                        l1612 0A4E                          l1604 0998                          l1702 178E  
                        l1470 0FE6                          l1462 0FB0                          l1454 0F5E  
                        l1526 1216                          l1518 11CE                          l1438 1616  
                        l1446 16E0                          l1542 1366                          l1534 1324  
                        l1622 0A9C                          l1630 0AD2                          l1614 0A68  
                        l1606 09FC                          l1710 1444                          l1704 1790  
                        l1720 1702                          l1640 1772                          l1480 1068  
                        l1472 0FFA                          l1464 0FB4                          l1456 0F7E  
                        l1552 1638                          l1544 136A                          l1536 1332  
                        l1624 0AAE                          l1608 0A16                          l1616 0A76  
                        l1712 1452                          l1800 0B16                          l1730 174C  
                        l1570 15DC                          l1706 1792                          l1722 1708  
                        l1642 1774                          l1634 176A                          l1490 10B2  
                        l1482 106A                          l1474 1008                          l1466 0FC0  
                        l1458 0F82                          l1554 1652                          l1546 1396  
                        l1538 133E                          l1626 0ABA                          l1618 0A88  
                        l1650 0DCA                          l1714 1478                          l1810 0B2E  
                        l1802 0B1A                          l1732 175A                          l1564 15BE  
                        l1556 15AA                          l1724 170E                          l1716 16EE  
                        l1644 1776                          l1636 176E                          l1484 107C  
                        l1476 101A                          l1468 0FDE                          l1548 13AA  
                        l1628 0AC2                          l1580 0896                          l1572 081E  
                        l1660 0E70                          l1652 0DDC                          l1708 143C  
                        l1820 0B58                          l1900 0D70                          l1812 0B36  
                        l1804 0B1E                          l1750 152E                          l1734 1764  
                        l1566 15C2                          l1558 15B6                          l1726 1714  
                        l1718 16F6                          l1638 1770                          l1478 1048  
                        l1486 1082                          l1494 10D4                          l1590 08EE  
                        l1582 0898                          l1574 083E                          l1670 0EEE  
                        l1654 0DE0                          l1646 0D98                          l1902 0D84  
                        l1822 0B6A                          l1830 0B90                          l1814 0B3E  
                        l1806 0B22                          l1736 171C                          l1752 1542  
                        l1744 1512                          l1728 1748                          l1568 15D8  
                        l1760 13C6                          l1488 1092                          l1496 10D8  
                        l1592 08F4                          l1584 08B2                          l1576 0866  
                        l1664 0EA8                          l1656 0E04                          l1648 0DBC  
                        l1680 0F14                          l1832 0BA0                          l1840 0BC8  
                        l1824 0B7C                          l1816 0B46                          l1808 0B26  
                        l1754 1544                          l1746 1518                          l1738 14FC  
                        l1690 14A2                          l1770 142A                          l1762 13CC  
                        l1498 10E6                          l1594 08FC                          l1586 08CE  
                        l1578 0886                          l1682 0F38                          l1666 0ECC  
                        l1674 0EFA                          l1658 0E28                          l1842 0BD8  
                        l1850 0C00                          l1834 0BB4                          l1826 0B7E  
                        l1818 0B52                          l1756 1554                          l1748 1526  
                        l1692 14C6                          l1764 13E8                          l1596 0904  
                        l1588 08E0                          l1676 0F08                          l1668 0EDA  
                        l1780 1596                          l1772 1558                          l1852 0C10  
                        l1860 0C38                          l1844 0BEC                          l1836 0BB6  
                        l1828 0B84                          l1694 14CA                          l1790 1692  
                        l1766 13F2                          l1598 090A                          l1774 156A  
                        l1862 0C48                          l1854 0C24                          l1846 0BEE  
                        l1838 0BBC                          l1870 0C70                          l1696 1786  
                        l1688 149E                          l1792 169C                          l1784 167A  
                        l1768 140E                          l1776 1572                          l1880 0CC8  
                        l1872 0C8A                          l1864 0C5C                          l1856 0C26  
                        l1848 0BF4                          l1698 178A                          l1794 16A4  
                        l1786 167A                          l1778 157A                          l1890 0D20  
                        l1882 0CE2                          l1874 0C9C                          l1866 0C5E  
                        l1858 0C2C                          l1796 16AA                          l1788 168A  
                        l1892 0D26                          l1884 0CF4                          l1876 0CB6  
                        l1868 0C68                          l1894 0D40                          l1886 0D0E  
                        l1878 0CC2                          l1798 0AFC                          ?_pad 0011  
                        l1896 0D52                          l1888 0D1A                          l1898 0D64  
                        STR_1 0819                          STR_2 080E                          STR_3 0819  
                        STR_4 0818                          STR_5 0809                          STR_6 0801  
                        STR_7 0813                          u1000 0866                          u1001 0862  
                        u1010 0896                          u1011 0892                          u1100 0A88  
                        u1020 08B2                          u1101 0A84                          u1021 08AE  
                        u1110 0A96                          u1030 08E0                          u1111 0A92  
                        u1031 08DC                          u1120 0AAE                          u1040 08EE  
                        u1200 1494                          u1121 0AAA                          u1041 08EA  
                        u1201 1490                          u1210 172A                          u1050 0A16  
                        u1130 0DBC                          u1211 1726                          u1051 0A12  
                        u1131 0DB8                          u1220 1738                          u1300 142A  
                        u1060 0A34                          u1140 0E04                          u1221 1734  
                        u1301 1426                          u1061 0A30                          u1141 0E00  
                        u1230 1746                          u1310 168A                          u1070 0A4E  
                        u1150 0E28                          u1231 1742                          u1311 1686  
                        u1071 0A4A                          u1151 0E24                          u1240 1512  
                        u1080 0A68                          u1160 0ECC                          u1400 0C48  
                        u1320 0B6A                          u1241 150E                          u1081 0A64  
                        u1161 0EC8                          u1401 0C44                          u1321 0B66  
                        u1250 1526                          u1170 14C2                          u1090 0A76  
                        u1410 0C5C                          u1330 0B7C                          u1251 1522  
                        u1091 0A72                          u1411 0C58                          u1331 0B78  
                        u1260 1542                          u1180 14EA                          u1420 0D84  
                        u1340 0BA0                          u1261 153E                          u1421 0D80  
                        u1341 0B9C                          u1270 1554                          u1190 14FA  
                        u1350 0BB4                          u1271 1550                          u1191 14F6  
                        u1351 0BB0                          u1280 13E8                          u1360 0BD8  
                        _LATD 000F8C                          u1177 14B8                          u1281 13E4  
                        u1361 0BD4                          u1290 140E                          u1370 0BEC  
                        u1187 14E0                          u1291 140A                          u1371 0BE8  
                        u1380 0C10                          u1437 1752                          u1381 0C0C  
                        u1390 0C24                          u1447 175E                          u1391 0C20  
                        u1457 1514                          abs@a 0013                          _dbuf 0066  
                        _main 0AFC                          _dtoa 081E                          _prec 0064  
                        _nout 0060                          pad@i 0018                          pad@p 0015  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001A  
                        fsr2l 000FD9                          start 0000               __end_of_MSdelay 15F4  
            ??_DHT11_ReadData 0001                 _LCD_String_xy 1678          __size_of_DHT11_Start 0020  
                ___param_bank 000000                main@T_Integral 00A2                         ??_abs 0015  
                       ??_pad 0017              __end_of_LCD_Char 1784              __end_of_LCD_Init 171C  
             __end_of___aodiv 10D4                         ?_main 0001                         ?_dtoa 001C  
             __end_of___aomod 1238                         _LATC0 007C58                         _LATC1 007C59  
                       _LATC2 007C5A                  vfpfcnvrt@fmt 0042                         _TRISA 000F92  
                       _TRISC 000F94                         _TRISD 000F95                         _flags 005E  
                       _fputc 1238                         _fputs 15F4                         pad@fp 0011  
                       _width 0062                         _putch 17BA                         dtoa@d 001E  
                       dtoa@i 003E                         dtoa@n 0036                         dtoa@p 0030  
                       dtoa@s 0034                         dtoa@w 0032                         tablat 000FF5  
                       status 000FD8           __size_of_LCD_String 005E               __end_of_sprintf 15AA  
              ?_LCD_String_xy 000A               __initialization 17A0                  __end_of_main 0D98  
                __end_of_dtoa 0AFC                        ??_main 005E                        ??_dtoa 0026  
               __activetblptr 000002                        _ADCON1 000FC1                        ?_fputc 0001  
                      ?_fputs 000A                        ?_putch 0001           _DHT11_CheckResponse 171C  
            LCD_String_xy@msg 000B              LCD_String_xy@pos 000A              LCD_String_xy@row 000D  
                   ??_MSdelay 0003                        _OSCCON 000FD3                  vfprintf@cfmt 0056  
                   ??___aodiv 0011                     ??___aomod 0011                        _onLEDS 13C4  
        ?_DHT11_CheckResponse 0001                        clear_0 17A6                        pad@buf 0013  
        __size_of_LCD_Command 001C                        dtoa@fp 001C                        _strlen 16B8  
                      fputc@c 0001                        fputs@c 000E                        fputs@i 000F  
                      fputs@s 000A                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 149E                     ??_sprintf 005E                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 17B0                     ?_LCD_Init 0001  
             ??_LCD_String_xy 000D                 ___rparam_used 000001                __pcstackCOMRAM 0001  
       ??_DHT11_CheckResponse 0001                 __end_of_fputc 1302                 __end_of_fputs 1638  
               __end_of_putch 17BC                  ??_LCD_String 000A                       ??_fputc 0005  
                     ??_fputs 000E                       ??_putch 0001                    __pbssBANK0 0060  
                  ??_LCD_Char 0007                    ??_LCD_Init 0008            __end_of_LCD_String 14FC  
                     ?_onLEDS 0001                       ?_strlen 0001            __size_of_vfpfcnvrt 01B4  
                     _MSdelay 15AA                 ??_DHT11_Start 0001                 LCD_String@msg 0008  
                     __Hparam 0000                       __Lparam 0000                       ___aodiv 0F4C  
                     ___aomod 10D4               __size_of_onLEDS 0078                     ?_vfprintf 0050  
                __psmallconst 0800                       __pcinit 17A0                       __ramtop 0800  
                     __ptext0 0AFC                       __ptext1 1558                       __ptext2 143C  
                     __ptext3 0D98                       __ptext4 081E                       __ptext5 1302  
                     __ptext6 16B8                       __ptext7 15F4                       __ptext8 1238  
                     __ptext9 17BA               __size_of_strlen 0036                  __size_of_abs 0040  
                __size_of_pad 00C2                       main@agr 009A                       _sprintf 1558  
        end_of_initialization 17B0                       fputc@fp 0003                LCD_Command@cmd 0007  
               __Lmediumconst 0000                       fputs@fp 000C             __end_of_vfpfcnvrt 0F4C  
         __end_of_DHT11_Start 1768                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 0056  
                     strlen@a 0003                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTCbits 000F82       __size_of_DHT11_ReadData 005C                     _TRISCbits 000F94  
           __size_of_LCD_Char 001C             __size_of_LCD_Init 002E            DHT11_ReadData@data 0002  
               ??_LCD_Command 0007                   vfpfcnvrt@ap 0044                   vfpfcnvrt@fp 0040  
                 vfpfcnvrt@ll 0048                __end_of_onLEDS 143C                __end_of_strlen 16EE  
         start_initialization 17A0                   __end_of_abs 1678                   __end_of_pad 13C4  
                 _DHT11_Start 1748   __end_of_DHT11_CheckResponse 1748         __end_of_LCD_String_xy 16B8  
                 vfprintf@fmt 0052                      ??_onLEDS 0001                      ??_strlen 0003  
         __end_of_LCD_Command 17A0                   __pbssCOMRAM 005E                 __pcstackBANK0 0086  
            ___aodiv@dividend 0001                      ?_MSdelay 0001                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013                _DHT11_ReadData 14FC  
           __size_of_vfprintf 0062                   __smallconst 0800         LCD_String_xy@location 000E  
                    ?_sprintf 0058                __size_of_fputc 00CA                __size_of_fputs 0044  
              __size_of_putch 0002                      MSdelay@i 0003                      MSdelay@j 0005  
                    _LCD_Char 1768                      _LCD_Init 16EE        __end_of_DHT11_ReadData 1558  
                 _LCD_Command 1784                     _vfpfcnvrt 0D98                     main@value 0090  
            onLEDS@T_Integral 0001              __size_of_MSdelay 004A                      __Hrparam 0000  
                  vfprintf@ap 0054                      __Lrparam 0000                    vfprintf@fp 0050  
             ?_DHT11_ReadData 0001              __size_of___aodiv 0188              __size_of___aomod 0164  
                  ?_vfpfcnvrt 0040               DHT11_ReadData@i 0001               ___aodiv@divisor 0009  
             ___aodiv@counter 0011                    sprintf@fmt 005A                      _dtoa$834 002E  
                    __ptext10 1638                      __ptext11 10D4                      __ptext20 1748  
                    __ptext12 0F4C                      __ptext21 14FC                      __ptext13 13C4  
                    __ptext22 171C                      __ptext14 1678                      __ptext15 149E  
                    __ptext16 1768                      __ptext17 16EE                      __ptext18 1784  
                    __ptext19 15AA              __size_of_sprintf 0052                 __size_of_main 029C  
               __size_of_dtoa 02DE                  ?_DHT11_Start 0001                    MSdelay@val 0001  
                    _vfprintf 143C                   onLEDS@valor 0002                      main@acum 00A0  
                  _LCD_String 149E              ___aomod@dividend 0001                     sprintf@ap 0088  
             main@RH_Integral 009D  __size_of_DHT11_CheckResponse 002C               ___aomod@divisor 0009  
                 ??_vfpfcnvrt 0046               ___aomod@counter 0011                main@RH_Decimal 009C  
                    sprintf@f 008A                      sprintf@s 0058        __size_of_LCD_String_xy 0040  
                ___aodiv@sign 0012                  ___aomod@sign 0012  
