

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 13 12:06:55 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  00183E                     __pidataBANK0:
    78                           	callstack 0
    79                           
    80                           ;initializer for main@F3506
    81  00183E  4C                 	db	76
    82  00183F  45                 	db	69
    83  001840  44                 	db	68
    84  001841  20                 	db	32
    85  001842  31                 	db	49
    86  001843  20                 	db	32
    87  001844  45                 	db	69
    88  001845  4E                 	db	78
    89  001846  43                 	db	67
    90  001847  45                 	db	69
    91  001848  4E                 	db	78
    92  001849  44                 	db	68
    93  00184A  49                 	db	73
    94  00184B  44                 	db	68
    95  00184C  4F                 	db	79
    96  00184D  00                 	db	0
    97  0000                     _LATD	set	3980
    98  0000                     _TRISC	set	3988
    99  0000                     _TRISD	set	3989
   100  0000                     _TRISCbits	set	3988
   101  0000                     _PORTCbits	set	3970
   102  0000                     _TXREG	set	4013
   103  0000                     _TXSTAbits	set	4012
   104  0000                     _PORTAbits	set	3968
   105  0000                     _ADCON1	set	4033
   106  0000                     _OSCCON	set	4051
   107  0000                     _PORTBbits	set	3969
   108  0000                     _TRISA	set	3986
   109  0000                     _LATC1	set	31833
   110  0000                     _LATC0	set	31832
   111  0000                     _LATC2	set	31834
   112                           
   113                           	psect	smallconst
   114  000800                     __psmallconst:
   115                           	callstack 0
   116  000800  00                 	db	0
   117  000801                     STR_6:
   118  000801  48                 	db	72	;'H'
   119  000802  75                 	db	117	;'u'
   120  000803  6D                 	db	109	;'m'
   121  000804  65                 	db	101	;'e'
   122  000805  64                 	db	100	;'d'
   123  000806  61                 	db	97	;'a'
   124  000807  64                 	db	100	;'d'
   125  000808  00                 	db	0
   126  000809                     STR_5:
   127  000809  25                 	db	37
   128  00080A  64                 	db	100	;'d'
   129  00080B  20                 	db	32
   130  00080C  20                 	db	32
   131  00080D  00                 	db	0
   132  00080E                     STR_2:
   133  00080E  2E                 	db	46
   134  00080F  25                 	db	37
   135  000810  64                 	db	100	;'d'
   136  000811  20                 	db	32
   137  000812  00                 	db	0
   138  000813                     STR_7:
   139  000813  54                 	db	84	;'T'
   140  000814  65                 	db	101	;'e'
   141  000815  6D                 	db	109	;'m'
   142  000816  70                 	db	112	;'p'
   143  000817  00                 	db	0
   144  000818                     STR_4:
   145  000818  2E                 	db	46
   146  000819  25                 	db	37
   147  00081A  64                 	db	100	;'d'
   148  00081B  00                 	db	0
   149  00081C  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154  00171C                     __pcinit:
   155                           	callstack 0
   156  00171C                     start_initialization:
   157                           	callstack 0
   158  00171C                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to BANK0 (16 bytes)
   162                           ; load TBLPTR registers with __pidataBANK0
   163  00171C  0E3E               	movlw	low __pidataBANK0
   164  00171E  6EF6               	movwf	tblptrl,c
   165  001720  0E18               	movlw	high __pidataBANK0
   166  001722  6EF7               	movwf	tblptrh,c
   167  001724  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   168  001726  6EF8               	movwf	tblptru,c
   169  001728  EE00  F0B6         	lfsr	0,__pdataBANK0
   170  00172C  EE10 F010          	lfsr	1,16
   171  001730                     copy_data0:
   172  001730  0009               	tblrd		*+
   173  001732  CFF5 FFEE          	movff	tablat,postinc0
   174  001736  50E5               	movf	postdec1,w,c
   175  001738  50E1               	movf	fsr1l,w,c
   176  00173A  E1FA               	bnz	copy_data0
   177                           
   178                           ; Clear objects allocated to BANK0 (38 bytes)
   179  00173C  EE00  F090         	lfsr	0,__pbssBANK0
   180  001740  0E26               	movlw	38
   181  001742                     clear_0:
   182  001742  6AEE               	clrf	postinc0,c
   183  001744  06E8               	decf	wreg,f,c
   184  001746  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to COMRAM (2 bytes)
   187  001748  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   188  00174A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   189  00174C                     end_of_initialization:
   190                           	callstack 0
   191  00174C                     __end_of__initialization:
   192                           	callstack 0
   193  00174C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  00174E  6EF8               	movwf	tblptru,c
   195  001750  0100               	movlb	0
   196  001752  EF0F  F004         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199  00005E                     __pbssCOMRAM:
   200                           	callstack 0
   201  00005E                     _flags:
   202                           	callstack 0
   203  00005E                     	ds	2
   204                           
   205                           	psect	bssBANK0
   206  000090                     __pbssBANK0:
   207                           	callstack 0
   208  000090                     _nout:
   209                           	callstack 0
   210  000090                     	ds	2
   211  000092                     _width:
   212                           	callstack 0
   213  000092                     	ds	2
   214  000094                     _prec:
   215                           	callstack 0
   216  000094                     	ds	2
   217  000096                     _dbuf:
   218                           	callstack 0
   219  000096                     	ds	32
   220                           
   221                           	psect	dataBANK0
   222  0000B6                     __pdataBANK0:
   223                           	callstack 0
   224  0000B6                     main@F3506:
   225                           	callstack 0
   226  0000B6                     	ds	16
   227                           
   228                           	psect	cstackBANK0
   229  000060                     __pcstackBANK0:
   230                           	callstack 0
   231  000060                     	ds	2
   232  000062                     sprintf@ap:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x2
   236  000062                     	ds	2
   237  000064                     sprintf@f:
   238                           	callstack 0
   239                           
   240                           ; 6 bytes @ 0x4
   241  000064                     	ds	6
   242  00006A                     main@buffer_TX:
   243                           	callstack 0
   244                           
   245                           ; 16 bytes @ 0xA
   246  00006A                     	ds	17
   247  00007B                     main@value:
   248                           	callstack 0
   249                           
   250                           ; 10 bytes @ 0x1B
   251  00007B                     	ds	10
   252  000085                     main@RH_Decimal:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x25
   256  000085                     	ds	1
   257  000086                     main@RH_Integral:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x26
   261  000086                     	ds	1
   262  000087                     main@Checksum:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x27
   266  000087                     	ds	1
   267  000088                     main@agr:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x28
   271  000088                     	ds	2
   272  00008A                     main@i:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x2A
   276  00008A                     	ds	2
   277  00008C                     main@T_Decimal:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x2C
   281  00008C                     	ds	1
   282  00008D                     main@acum:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x2D
   286  00008D                     	ds	2
   287  00008F                     main@T_Integral:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x2F
   291  00008F                     	ds	1
   292                           
   293                           	psect	cstackCOMRAM
   294  000001                     __pcstackCOMRAM:
   295                           	callstack 0
   296  000001                     ??_DHT11_Start:
   297  000001                     ?_strlen:
   298                           	callstack 0
   299  000001                     ?___aodiv:
   300                           	callstack 0
   301  000001                     ?___aomod:
   302                           	callstack 0
   303  000001                     DHT11_ReadData@i:
   304                           	callstack 0
   305  000001                     onLEDS@T_Integral:
   306                           	callstack 0
   307  000001                     MSdelay@val:
   308                           	callstack 0
   309  000001                     fputc@c:
   310                           	callstack 0
   311  000001                     strlen@s:
   312                           	callstack 0
   313  000001                     ___aodiv@dividend:
   314                           	callstack 0
   315  000001                     ___aomod@dividend:
   316                           	callstack 0
   317                           
   318                           ; 8 bytes @ 0x0
   319  000001                     	ds	1
   320  000002                     DHT11_ReadData@data:
   321                           	callstack 0
   322  000002                     onLEDS@valor:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1
   326  000002                     	ds	1
   327  000003                     MSdelay@i:
   328                           	callstack 0
   329  000003                     fputc@fp:
   330                           	callstack 0
   331  000003                     strlen@a:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  000003                     	ds	2
   336  000005                     ??_fputc:
   337  000005                     MSdelay@j:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x4
   341  000005                     	ds	2
   342  000007                     LCD_Command@cmd:
   343                           	callstack 0
   344  000007                     LCD_Char@dat:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x6
   348  000007                     	ds	1
   349  000008                     LCD_String@msg:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x7
   353  000008                     	ds	1
   354  000009                     ___aodiv@divisor:
   355                           	callstack 0
   356  000009                     ___aomod@divisor:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x8
   360  000009                     	ds	1
   361  00000A                     LCD_String_xy@pos:
   362                           	callstack 0
   363  00000A                     fputs@s:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  00000A                     	ds	1
   368  00000B                     LCD_String_xy@msg:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0xA
   372  00000B                     	ds	1
   373  00000C                     fputs@fp:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0xB
   377  00000C                     	ds	1
   378  00000D                     LCD_String_xy@row:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0xC
   382  00000D                     	ds	1
   383  00000E                     LCD_String_xy@location:
   384                           	callstack 0
   385  00000E                     fputs@c:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0xD
   389  00000E                     	ds	1
   390  00000F                     fputs@i:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xE
   394  00000F                     	ds	2
   395  000011                     ?_pad:
   396                           	callstack 0
   397  000011                     ___aodiv@counter:
   398                           	callstack 0
   399  000011                     ___aomod@counter:
   400                           	callstack 0
   401  000011                     pad@fp:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x10
   405  000011                     	ds	1
   406  000012                     ___aodiv@sign:
   407                           	callstack 0
   408  000012                     ___aomod@sign:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x11
   412  000012                     	ds	1
   413  000013                     ?_abs:
   414                           	callstack 0
   415  000013                     pad@buf:
   416                           	callstack 0
   417  000013                     abs@a:
   418                           	callstack 0
   419  000013                     ___aodiv@quotient:
   420                           	callstack 0
   421                           
   422                           ; 8 bytes @ 0x12
   423  000013                     	ds	2
   424  000015                     ??_abs:
   425  000015                     pad@p:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x14
   429  000015                     	ds	2
   430  000017                     ??_pad:
   431                           
   432                           ; 1 bytes @ 0x16
   433  000017                     	ds	1
   434  000018                     pad@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x17
   438  000018                     	ds	2
   439  00001A                     pad@w:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x19
   443  00001A                     	ds	2
   444  00001C                     ?_dtoa:
   445                           	callstack 0
   446  00001C                     dtoa@fp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x1B
   450  00001C                     	ds	2
   451  00001E                     dtoa@d:
   452                           	callstack 0
   453                           
   454                           ; 8 bytes @ 0x1D
   455  00001E                     	ds	8
   456  000026                     ??_dtoa:
   457                           
   458                           ; 1 bytes @ 0x25
   459  000026                     	ds	8
   460  00002E                     _dtoa$959:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2D
   464  00002E                     	ds	2
   465  000030                     dtoa@p:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2F
   469  000030                     	ds	2
   470  000032                     dtoa@w:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x31
   474  000032                     	ds	2
   475  000034                     dtoa@s:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x33
   479  000034                     	ds	2
   480  000036                     dtoa@n:
   481                           	callstack 0
   482                           
   483                           ; 8 bytes @ 0x35
   484  000036                     	ds	8
   485  00003E                     dtoa@i:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x3D
   489  00003E                     	ds	2
   490  000040                     ?_vfpfcnvrt:
   491                           	callstack 0
   492  000040                     vfpfcnvrt@fp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x3F
   496  000040                     	ds	2
   497  000042                     vfpfcnvrt@fmt:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x41
   501  000042                     	ds	2
   502  000044                     vfpfcnvrt@ap:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x43
   506  000044                     	ds	2
   507  000046                     ??_vfpfcnvrt:
   508                           
   509                           ; 1 bytes @ 0x45
   510  000046                     	ds	2
   511  000048                     vfpfcnvrt@ll:
   512                           	callstack 0
   513                           
   514                           ; 8 bytes @ 0x47
   515  000048                     	ds	8
   516  000050                     ?_vfprintf:
   517                           	callstack 0
   518  000050                     vfprintf@fp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x4F
   522  000050                     	ds	2
   523  000052                     vfprintf@fmt:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x51
   527  000052                     	ds	2
   528  000054                     vfprintf@ap:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x53
   532  000054                     	ds	2
   533  000056                     vfprintf@cfmt:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x55
   537  000056                     	ds	2
   538  000058                     ?_sprintf:
   539                           	callstack 0
   540  000058                     sprintf@s:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x57
   544  000058                     	ds	2
   545  00005A                     sprintf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x59
   549  00005A                     	ds	4
   550  00005E                     
   551                           ; 1 bytes @ 0x5D
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 31 in file "humidity_Temp.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  i               2   42[BANK0 ] int 
   562 ;;  buffer_TX      16   10[BANK0 ] unsigned char [16]
   563 ;;  value          10   27[BANK0 ] unsigned char [10]
   564 ;;  acum            2   45[BANK0 ] int 
   565 ;;  agr             2   40[BANK0 ] int 
   566 ;;  T_Integral      1   47[BANK0 ] unsigned char 
   567 ;;  T_Decimal       1   44[BANK0 ] unsigned char 
   568 ;;  Checksum        1   39[BANK0 ] unsigned char 
   569 ;;  RH_Integral     1   38[BANK0 ] unsigned char 
   570 ;;  RH_Decimal      1   37[BANK0 ] unsigned char 
   571 ;;  valor2          1    0        unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         0       0       0       0       0       0       0       0       0
   582 ;;      Locals:         0      38       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         0      38       0       0       0       0       0       0       0
   585 ;;Total ram usage:       38 bytes
   586 ;; Hardware stack levels required when called:    8
   587 ;; This function calls:
   588 ;;		_DHT11_CheckResponse
   589 ;;		_DHT11_ReadData
   590 ;;		_DHT11_Start
   591 ;;		_LCD_Char
   592 ;;		_LCD_Init
   593 ;;		_LCD_String
   594 ;;		_LCD_String_xy
   595 ;;		_MSdelay
   596 ;;		_onLEDS
   597 ;;		_sprintf
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text0
   604  00081E                     __ptext0:
   605                           	callstack 0
   606  00081E                     _main:
   607                           	callstack 23
   608  00081E                     
   609                           ;humidity_Temp.c: 33:     int agr= 0;
   610  00081E  0E00               	movlw	0
   611  000820  0100               	movlb	0	; () banked
   612  000822  6F89               	movwf	(main@agr+1)& (0+255),b
   613  000824  0E00               	movlw	0
   614  000826  6F88               	movwf	main@agr& (0+255),b
   615                           
   616                           ;humidity_Temp.c: 34:     int acum=0;
   617  000828  0E00               	movlw	0
   618  00082A  6F8E               	movwf	(main@acum+1)& (0+255),b
   619  00082C  0E00               	movlw	0
   620  00082E  6F8D               	movwf	main@acum& (0+255),b
   621                           
   622                           ;humidity_Temp.c: 35:     TRISA = 0;
   623  000830  0E00               	movlw	0
   624  000832  6E92               	movwf	146,c	;volatile
   625  000834                     
   626                           ; BSR set to: 0
   627                           ;humidity_Temp.c: 36:     PORTBbits.RB4=0;
   628  000834  9881               	bcf	129,4,c	;volatile
   629                           
   630                           ;humidity_Temp.c: 37:     char RH_Decimal,RH_Integral,T_Decimal,T_Integral, valor2;;humi
      +                          dity_Temp.c: 38:     char Checksum;;humidity_Temp.c: 39:     char value[10];;humidity_Te
      +                          mp.c: 40:     OSCCON = 0x72;
   631  000836  0E72               	movlw	114
   632  000838  6ED3               	movwf	211,c	;volatile
   633  00083A                     
   634                           ; BSR set to: 0
   635                           ;humidity_Temp.c: 43:     LCD_Init();
   636  00083A  ECC6  F00B         	call	_LCD_Init	;wreg free
   637  00083E                     
   638                           ;humidity_Temp.c: 44:     ADCON1=0x0F;
   639  00083E  0E0F               	movlw	15
   640  000840  6EC1               	movwf	193,c	;volatile
   641  000842                     l1955:
   642                           
   643                           ;humidity_Temp.c: 47: {;humidity_Temp.c: 48:     DHT11_Start();
   644  000842  ECF3  F00B         	call	_DHT11_Start	;wreg free
   645  000846                     
   646                           ;humidity_Temp.c: 49:     DHT11_CheckResponse();
   647  000846  ECDD  F00B         	call	_DHT11_CheckResponse	;wreg free
   648  00084A                     
   649                           ;humidity_Temp.c: 52:     RH_Integral = DHT11_ReadData();
   650  00084A  ECB0  F00A         	call	_DHT11_ReadData	;wreg free
   651  00084E  0100               	movlb	0	; () banked
   652  000850  6F86               	movwf	main@RH_Integral& (0+255),b
   653  000852                     
   654                           ; BSR set to: 0
   655                           ;humidity_Temp.c: 53:     RH_Decimal = DHT11_ReadData();
   656  000852  ECB0  F00A         	call	_DHT11_ReadData	;wreg free
   657  000856  0100               	movlb	0	; () banked
   658  000858  6F85               	movwf	main@RH_Decimal& (0+255),b
   659  00085A                     
   660                           ; BSR set to: 0
   661                           ;humidity_Temp.c: 54:     T_Integral = DHT11_ReadData();
   662  00085A  ECB0  F00A         	call	_DHT11_ReadData	;wreg free
   663  00085E  0100               	movlb	0	; () banked
   664  000860  6F8F               	movwf	main@T_Integral& (0+255),b
   665  000862                     
   666                           ; BSR set to: 0
   667                           ;humidity_Temp.c: 55:     T_Decimal = DHT11_ReadData();
   668  000862  ECB0  F00A         	call	_DHT11_ReadData	;wreg free
   669  000866  0100               	movlb	0	; () banked
   670  000868  6F8C               	movwf	main@T_Decimal& (0+255),b
   671  00086A                     
   672                           ; BSR set to: 0
   673                           ;humidity_Temp.c: 56:     Checksum = DHT11_ReadData();
   674  00086A  ECB0  F00A         	call	_DHT11_ReadData	;wreg free
   675  00086E  0100               	movlb	0	; () banked
   676  000870  6F87               	movwf	main@Checksum& (0+255),b
   677                           
   678                           ;humidity_Temp.c: 58:     while ( agr == 0){
   679  000872  EF77  F005         	goto	l2067
   680  000876                     l1969:
   681                           
   682                           ; BSR set to: 0
   683                           ;humidity_Temp.c: 59:         onLEDS(T_Integral);
   684  000876  518F               	movf	main@T_Integral& (0+255),w,b
   685  000878  EC14  F00A         	call	_onLEDS
   686  00087C                     
   687                           ;humidity_Temp.c: 61:         if(T_Integral <30 && acum == 0 ){
   688  00087C  0E1E               	movlw	30
   689  00087E  0100               	movlb	0	; () banked
   690  000880  618F               	cpfslt	main@T_Integral& (0+255),b
   691  000882  EF45  F004         	goto	u1351
   692  000886  EF47  F004         	goto	u1350
   693  00088A                     u1351:
   694  00088A  EF87  F004         	goto	l1997
   695  00088E                     u1350:
   696  00088E                     
   697                           ; BSR set to: 0
   698  00088E  518D               	movf	main@acum& (0+255),w,b
   699  000890  118E               	iorwf	(main@acum+1)& (0+255),w,b
   700  000892  A4D8               	btfss	status,2,c
   701  000894  EF4E  F004         	goto	u1361
   702  000898  EF50  F004         	goto	u1360
   703  00089C                     u1361:
   704  00089C  EF87  F004         	goto	l1997
   705  0008A0                     u1360:
   706  0008A0                     
   707                           ; BSR set to: 0
   708                           ;humidity_Temp.c: 62:             PORTAbits.RA0 = 1;
   709  0008A0  8080               	bsf	128,0,c	;volatile
   710  0008A2                     
   711                           ; BSR set to: 0
   712                           ;humidity_Temp.c: 63:             char buffer_TX[] = "LED 1 ENCENDIDO";
   713  0008A2  EE20  F0B6         	lfsr	2,main@F3506
   714  0008A6  EE10  F06A         	lfsr	1,main@buffer_TX
   715  0008AA  0E0F               	movlw	15
   716  0008AC                     u1371:
   717  0008AC  CFDB FFE3          	movff	plusw2,plusw1
   718  0008B0  06E8               	decf	wreg,f,c
   719  0008B2  E2FC               	bc	u1371
   720  0008B4                     
   721                           ; BSR set to: 0
   722                           ;humidity_Temp.c: 65:              for (int i = 0; i < 17; i++) {
   723  0008B4  0E00               	movlw	0
   724  0008B6  6F8B               	movwf	(main@i+1)& (0+255),b
   725  0008B8  0E00               	movlw	0
   726  0008BA  6F8A               	movwf	main@i& (0+255),b
   727  0008BC                     l55:
   728                           
   729                           ;humidity_Temp.c: 67:             while (!TXSTAbits.TRMT) {
   730  0008BC  A2AC               	btfss	172,1,c	;volatile
   731  0008BE  EF63  F004         	goto	u1381
   732  0008C2  EF65  F004         	goto	u1380
   733  0008C6                     u1381:
   734  0008C6  EF5E  F004         	goto	l55
   735  0008CA                     u1380:
   736  0008CA                     
   737                           ;humidity_Temp.c: 70:             TXREG = buffer_TX[i];
   738  0008CA  0E6A               	movlw	low main@buffer_TX
   739  0008CC  0100               	movlb	0	; () banked
   740  0008CE  258A               	addwf	main@i& (0+255),w,b
   741  0008D0  6ED9               	movwf	fsr2l,c
   742  0008D2  0E00               	movlw	high main@buffer_TX
   743  0008D4  218B               	addwfc	(main@i+1)& (0+255),w,b
   744  0008D6  6EDA               	movwf	fsr2h,c
   745  0008D8  50DF               	movf	indf2,w,c
   746  0008DA  6EAD               	movwf	173,c	;volatile
   747  0008DC                     
   748                           ; BSR set to: 0
   749                           ;humidity_Temp.c: 71:         }
   750  0008DC  4B8A               	infsnz	main@i& (0+255),f,b
   751  0008DE  2B8B               	incf	(main@i+1)& (0+255),f,b
   752  0008E0                     
   753                           ; BSR set to: 0
   754  0008E0  BF8B               	btfsc	(main@i+1)& (0+255),7,b
   755  0008E2  EF7C  F004         	goto	u1391
   756  0008E6  518B               	movf	(main@i+1)& (0+255),w,b
   757  0008E8  E109               	bnz	u1390
   758  0008EA  0E11               	movlw	17
   759  0008EC  5D8A               	subwf	main@i& (0+255),w,b
   760  0008EE  A0D8               	btfss	status,0,c
   761  0008F0  EF7C  F004         	goto	u1391
   762  0008F4  EF7E  F004         	goto	u1390
   763  0008F8                     u1391:
   764  0008F8  EF5E  F004         	goto	l55
   765  0008FC                     u1390:
   766  0008FC                     
   767                           ; BSR set to: 0
   768                           ;humidity_Temp.c: 72:             T_Integral = T_Integral + 6;
   769  0008FC  518F               	movf	main@T_Integral& (0+255),w,b
   770  0008FE  0F06               	addlw	6
   771  000900  6F8F               	movwf	main@T_Integral& (0+255),b
   772  000902                     
   773                           ; BSR set to: 0
   774                           ;humidity_Temp.c: 73:             acum = 6;
   775  000902  0E00               	movlw	0
   776  000904  6F8E               	movwf	(main@acum+1)& (0+255),b
   777  000906  0E06               	movlw	6
   778  000908  6F8D               	movwf	main@acum& (0+255),b
   779                           
   780                           ;humidity_Temp.c: 74:         } else if (T_Integral <30 && acum == 6){
   781  00090A  EFF7  F004         	goto	l2037
   782  00090E                     l1997:
   783                           
   784                           ; BSR set to: 0
   785  00090E  0E1E               	movlw	30
   786  000910  618F               	cpfslt	main@T_Integral& (0+255),b
   787  000912  EF8D  F004         	goto	u1401
   788  000916  EF8F  F004         	goto	u1400
   789  00091A                     u1401:
   790  00091A  EFA3  F004         	goto	l2007
   791  00091E                     u1400:
   792  00091E                     
   793                           ; BSR set to: 0
   794  00091E  0E06               	movlw	6
   795  000920  198D               	xorwf	main@acum& (0+255),w,b
   796  000922  118E               	iorwf	(main@acum+1)& (0+255),w,b
   797  000924  A4D8               	btfss	status,2,c
   798  000926  EF97  F004         	goto	u1411
   799  00092A  EF99  F004         	goto	u1410
   800  00092E                     u1411:
   801  00092E  EFA3  F004         	goto	l2007
   802  000932                     u1410:
   803  000932                     
   804                           ; BSR set to: 0
   805                           ;humidity_Temp.c: 75:             PORTAbits.RA1 = 1;
   806  000932  8280               	bsf	128,1,c	;volatile
   807  000934                     
   808                           ; BSR set to: 0
   809                           ;humidity_Temp.c: 76:             T_Integral = T_Integral + 6;
   810  000934  518F               	movf	main@T_Integral& (0+255),w,b
   811  000936  0F06               	addlw	6
   812  000938  6F8F               	movwf	main@T_Integral& (0+255),b
   813  00093A                     
   814                           ; BSR set to: 0
   815                           ;humidity_Temp.c: 77:             acum = 12;
   816  00093A  0E00               	movlw	0
   817  00093C  6F8E               	movwf	(main@acum+1)& (0+255),b
   818  00093E  0E0C               	movlw	12
   819  000940  6F8D               	movwf	main@acum& (0+255),b
   820                           
   821                           ;humidity_Temp.c: 78:         }else if (T_Integral <30 && acum == 12){
   822  000942  EFF7  F004         	goto	l2037
   823  000946                     l2007:
   824                           
   825                           ; BSR set to: 0
   826  000946  0E1E               	movlw	30
   827  000948  618F               	cpfslt	main@T_Integral& (0+255),b
   828  00094A  EFA9  F004         	goto	u1421
   829  00094E  EFAB  F004         	goto	u1420
   830  000952                     u1421:
   831  000952  EFBF  F004         	goto	l2017
   832  000956                     u1420:
   833  000956                     
   834                           ; BSR set to: 0
   835  000956  0E0C               	movlw	12
   836  000958  198D               	xorwf	main@acum& (0+255),w,b
   837  00095A  118E               	iorwf	(main@acum+1)& (0+255),w,b
   838  00095C  A4D8               	btfss	status,2,c
   839  00095E  EFB3  F004         	goto	u1431
   840  000962  EFB5  F004         	goto	u1430
   841  000966                     u1431:
   842  000966  EFBF  F004         	goto	l2017
   843  00096A                     u1430:
   844  00096A                     
   845                           ; BSR set to: 0
   846                           ;humidity_Temp.c: 79:             PORTAbits.RA2 = 1;
   847  00096A  8480               	bsf	128,2,c	;volatile
   848  00096C                     
   849                           ; BSR set to: 0
   850                           ;humidity_Temp.c: 80:             T_Integral = T_Integral + 6;
   851  00096C  518F               	movf	main@T_Integral& (0+255),w,b
   852  00096E  0F06               	addlw	6
   853  000970  6F8F               	movwf	main@T_Integral& (0+255),b
   854  000972                     
   855                           ; BSR set to: 0
   856                           ;humidity_Temp.c: 81:             acum = 18;
   857  000972  0E00               	movlw	0
   858  000974  6F8E               	movwf	(main@acum+1)& (0+255),b
   859  000976  0E12               	movlw	18
   860  000978  6F8D               	movwf	main@acum& (0+255),b
   861                           
   862                           ;humidity_Temp.c: 82:         }else if (T_Integral <30 && acum == 18){
   863  00097A  EFF7  F004         	goto	l2037
   864  00097E                     l2017:
   865                           
   866                           ; BSR set to: 0
   867  00097E  0E1E               	movlw	30
   868  000980  618F               	cpfslt	main@T_Integral& (0+255),b
   869  000982  EFC5  F004         	goto	u1441
   870  000986  EFC7  F004         	goto	u1440
   871  00098A                     u1441:
   872  00098A  EFDB  F004         	goto	l2027
   873  00098E                     u1440:
   874  00098E                     
   875                           ; BSR set to: 0
   876  00098E  0E12               	movlw	18
   877  000990  198D               	xorwf	main@acum& (0+255),w,b
   878  000992  118E               	iorwf	(main@acum+1)& (0+255),w,b
   879  000994  A4D8               	btfss	status,2,c
   880  000996  EFCF  F004         	goto	u1451
   881  00099A  EFD1  F004         	goto	u1450
   882  00099E                     u1451:
   883  00099E  EFDB  F004         	goto	l2027
   884  0009A2                     u1450:
   885  0009A2                     
   886                           ; BSR set to: 0
   887                           ;humidity_Temp.c: 83:             PORTAbits.RA3 = 1;
   888  0009A2  8680               	bsf	128,3,c	;volatile
   889  0009A4                     
   890                           ; BSR set to: 0
   891                           ;humidity_Temp.c: 84:             T_Integral = T_Integral + 6;
   892  0009A4  518F               	movf	main@T_Integral& (0+255),w,b
   893  0009A6  0F06               	addlw	6
   894  0009A8  6F8F               	movwf	main@T_Integral& (0+255),b
   895  0009AA                     
   896                           ; BSR set to: 0
   897                           ;humidity_Temp.c: 85:             acum = 24;
   898  0009AA  0E00               	movlw	0
   899  0009AC  6F8E               	movwf	(main@acum+1)& (0+255),b
   900  0009AE  0E18               	movlw	24
   901  0009B0  6F8D               	movwf	main@acum& (0+255),b
   902                           
   903                           ;humidity_Temp.c: 86:         }else if (T_Integral <30 && acum == 24){
   904  0009B2  EFF7  F004         	goto	l2037
   905  0009B6                     l2027:
   906                           
   907                           ; BSR set to: 0
   908  0009B6  0E1E               	movlw	30
   909  0009B8  618F               	cpfslt	main@T_Integral& (0+255),b
   910  0009BA  EFE1  F004         	goto	u1461
   911  0009BE  EFE3  F004         	goto	u1460
   912  0009C2                     u1461:
   913  0009C2  EFF3  F004         	goto	l2035
   914  0009C6                     u1460:
   915  0009C6                     
   916                           ; BSR set to: 0
   917  0009C6  0E18               	movlw	24
   918  0009C8  198D               	xorwf	main@acum& (0+255),w,b
   919  0009CA  118E               	iorwf	(main@acum+1)& (0+255),w,b
   920  0009CC  A4D8               	btfss	status,2,c
   921  0009CE  EFEB  F004         	goto	u1471
   922  0009D2  EFED  F004         	goto	u1470
   923  0009D6                     u1471:
   924  0009D6  EFF3  F004         	goto	l2035
   925  0009DA                     u1470:
   926  0009DA                     
   927                           ; BSR set to: 0
   928                           ;humidity_Temp.c: 87:             PORTAbits.RA4 = 1;
   929  0009DA  8880               	bsf	128,4,c	;volatile
   930  0009DC                     
   931                           ; BSR set to: 0
   932                           ;humidity_Temp.c: 88:             T_Integral = T_Integral + 6;
   933  0009DC  518F               	movf	main@T_Integral& (0+255),w,b
   934  0009DE  0F06               	addlw	6
   935  0009E0  6F8F               	movwf	main@T_Integral& (0+255),b
   936                           
   937                           ;humidity_Temp.c: 89:         } else
   938  0009E2  EFF7  F004         	goto	l2037
   939  0009E6                     l2035:
   940                           
   941                           ; BSR set to: 0
   942                           ;humidity_Temp.c: 90:             agr=1;
   943  0009E6  0E00               	movlw	0
   944  0009E8  6F89               	movwf	(main@agr+1)& (0+255),b
   945  0009EA  0E01               	movlw	1
   946  0009EC  6F88               	movwf	main@agr& (0+255),b
   947  0009EE                     l2037:
   948                           
   949                           ; BSR set to: 0
   950                           ;humidity_Temp.c: 92:         sprintf(value,"%d",RH_Integral);
   951  0009EE  0E7B               	movlw	low main@value
   952  0009F0  6E58               	movwf	sprintf@s^0,c
   953  0009F2  0E00               	movlw	high main@value
   954  0009F4  6E59               	movwf	(sprintf@s+1)^0,c
   955  0009F6  0E19               	movlw	low (STR_4+1)
   956  0009F8  6E5A               	movwf	sprintf@fmt^0,c
   957  0009FA  0E08               	movlw	high (STR_4+1)
   958  0009FC  6E5B               	movwf	(sprintf@fmt+1)^0,c
   959  0009FE  C086  F05C         	movff	main@RH_Integral,?_sprintf+4
   960  000A02  6A5D               	clrf	(?_sprintf+5)^0,c
   961  000A04  ECDE  F00A         	call	_sprintf	;wreg free
   962  000A08                     
   963                           ;humidity_Temp.c: 93:         LCD_String_xy(0,0,value);
   964  000A08  0E00               	movlw	0
   965  000A0A  6E0A               	movwf	LCD_String_xy@pos^0,c
   966  000A0C  0E7B               	movlw	low main@value
   967  000A0E  6E0B               	movwf	LCD_String_xy@msg^0,c
   968  000A10  0E00               	movlw	high main@value
   969  000A12  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   970  000A14  0E00               	movlw	0
   971  000A16  EC6E  F00B         	call	_LCD_String_xy
   972  000A1A                     
   973                           ;humidity_Temp.c: 94:         sprintf(value,".%d ",RH_Decimal);
   974  000A1A  0E7B               	movlw	low main@value
   975  000A1C  6E58               	movwf	sprintf@s^0,c
   976  000A1E  0E00               	movlw	high main@value
   977  000A20  6E59               	movwf	(sprintf@s+1)^0,c
   978  000A22  0E0E               	movlw	low STR_2
   979  000A24  6E5A               	movwf	sprintf@fmt^0,c
   980  000A26  0E08               	movlw	high STR_2
   981  000A28  6E5B               	movwf	(sprintf@fmt+1)^0,c
   982  000A2A  C085  F05C         	movff	main@RH_Decimal,?_sprintf+4
   983  000A2E  6A5D               	clrf	(?_sprintf+5)^0,c
   984  000A30  ECDE  F00A         	call	_sprintf	;wreg free
   985  000A34                     
   986                           ;humidity_Temp.c: 95:         LCD_String(value);
   987  000A34  0E7B               	movlw	low main@value
   988  000A36  6E08               	movwf	LCD_String@msg^0,c
   989  000A38  0E00               	movlw	high main@value
   990  000A3A  6E09               	movwf	(LCD_String@msg+1)^0,c
   991  000A3C  EC81  F00A         	call	_LCD_String	;wreg free
   992  000A40                     
   993                           ;humidity_Temp.c: 96:         LCD_Char('%');
   994  000A40  0E25               	movlw	37
   995  000A42  EC03  F00C         	call	_LCD_Char
   996  000A46                     
   997                           ;humidity_Temp.c: 99:         sprintf(value,"%d",T_Integral);
   998  000A46  0E7B               	movlw	low main@value
   999  000A48  6E58               	movwf	sprintf@s^0,c
  1000  000A4A  0E00               	movlw	high main@value
  1001  000A4C  6E59               	movwf	(sprintf@s+1)^0,c
  1002  000A4E  0E19               	movlw	low (STR_4+1)
  1003  000A50  6E5A               	movwf	sprintf@fmt^0,c
  1004  000A52  0E08               	movlw	high (STR_4+1)
  1005  000A54  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1006  000A56  C08F  F05C         	movff	main@T_Integral,?_sprintf+4
  1007  000A5A  6A5D               	clrf	(?_sprintf+5)^0,c
  1008  000A5C  ECDE  F00A         	call	_sprintf	;wreg free
  1009  000A60                     
  1010                           ;humidity_Temp.c: 100:         LCD_String_xy(1,0,value);
  1011  000A60  0E00               	movlw	0
  1012  000A62  6E0A               	movwf	LCD_String_xy@pos^0,c
  1013  000A64  0E7B               	movlw	low main@value
  1014  000A66  6E0B               	movwf	LCD_String_xy@msg^0,c
  1015  000A68  0E00               	movlw	high main@value
  1016  000A6A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1017  000A6C  0E01               	movlw	1
  1018  000A6E  EC6E  F00B         	call	_LCD_String_xy
  1019  000A72                     
  1020                           ;humidity_Temp.c: 101:         sprintf(value,".%d",T_Decimal);
  1021  000A72  0E7B               	movlw	low main@value
  1022  000A74  6E58               	movwf	sprintf@s^0,c
  1023  000A76  0E00               	movlw	high main@value
  1024  000A78  6E59               	movwf	(sprintf@s+1)^0,c
  1025  000A7A  0E18               	movlw	low STR_4
  1026  000A7C  6E5A               	movwf	sprintf@fmt^0,c
  1027  000A7E  0E08               	movlw	high STR_4
  1028  000A80  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1029  000A82  C08C  F05C         	movff	main@T_Decimal,?_sprintf+4
  1030  000A86  6A5D               	clrf	(?_sprintf+5)^0,c
  1031  000A88  ECDE  F00A         	call	_sprintf	;wreg free
  1032  000A8C                     
  1033                           ;humidity_Temp.c: 102:         LCD_String(value);
  1034  000A8C  0E7B               	movlw	low main@value
  1035  000A8E  6E08               	movwf	LCD_String@msg^0,c
  1036  000A90  0E00               	movlw	high main@value
  1037  000A92  6E09               	movwf	(LCD_String@msg+1)^0,c
  1038  000A94  EC81  F00A         	call	_LCD_String	;wreg free
  1039  000A98                     
  1040                           ;humidity_Temp.c: 103:         LCD_Char(0xdf);
  1041  000A98  0EDF               	movlw	223
  1042  000A9A  EC03  F00C         	call	_LCD_Char
  1043  000A9E                     
  1044                           ;humidity_Temp.c: 104:         LCD_Char('C');
  1045  000A9E  0E43               	movlw	67
  1046  000AA0  EC03  F00C         	call	_LCD_Char
  1047  000AA4                     
  1048                           ;humidity_Temp.c: 106:         sprintf(value,"%d  ",Checksum);
  1049  000AA4  0E7B               	movlw	low main@value
  1050  000AA6  6E58               	movwf	sprintf@s^0,c
  1051  000AA8  0E00               	movlw	high main@value
  1052  000AAA  6E59               	movwf	(sprintf@s+1)^0,c
  1053  000AAC  0E09               	movlw	low STR_5
  1054  000AAE  6E5A               	movwf	sprintf@fmt^0,c
  1055  000AB0  0E08               	movlw	high STR_5
  1056  000AB2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1057  000AB4  C087  F05C         	movff	main@Checksum,?_sprintf+4
  1058  000AB8  6A5D               	clrf	(?_sprintf+5)^0,c
  1059  000ABA  ECDE  F00A         	call	_sprintf	;wreg free
  1060  000ABE                     
  1061                           ;humidity_Temp.c: 107:         LCD_String_xy(0,8,"Humedad");
  1062  000ABE  0E08               	movlw	8
  1063  000AC0  6E0A               	movwf	LCD_String_xy@pos^0,c
  1064  000AC2  0E01               	movlw	low STR_6
  1065  000AC4  6E0B               	movwf	LCD_String_xy@msg^0,c
  1066  000AC6  0E08               	movlw	high STR_6
  1067  000AC8  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1068  000ACA  0E00               	movlw	0
  1069  000ACC  EC6E  F00B         	call	_LCD_String_xy
  1070  000AD0                     
  1071                           ;humidity_Temp.c: 108:         LCD_String_xy(1,8,"Temp");
  1072  000AD0  0E08               	movlw	8
  1073  000AD2  6E0A               	movwf	LCD_String_xy@pos^0,c
  1074  000AD4  0E13               	movlw	low STR_7
  1075  000AD6  6E0B               	movwf	LCD_String_xy@msg^0,c
  1076  000AD8  0E08               	movlw	high STR_7
  1077  000ADA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1078  000ADC  0E01               	movlw	1
  1079  000ADE  EC6E  F00B         	call	_LCD_String_xy
  1080  000AE2                     
  1081                           ;humidity_Temp.c: 110:         MSdelay(2000);
  1082  000AE2  0E07               	movlw	7
  1083  000AE4  6E02               	movwf	(MSdelay@val+1)^0,c
  1084  000AE6  0ED0               	movlw	208
  1085  000AE8  6E01               	movwf	MSdelay@val^0,c
  1086  000AEA  EC07  F00B         	call	_MSdelay	;wreg free
  1087  000AEE                     l2067:
  1088                           
  1089                           ;humidity_Temp.c: 58:     while ( agr == 0){
  1090  000AEE  0100               	movlb	0	; () banked
  1091  000AF0  5188               	movf	main@agr& (0+255),w,b
  1092  000AF2  1189               	iorwf	(main@agr+1)& (0+255),w,b
  1093  000AF4  B4D8               	btfsc	status,2,c
  1094  000AF6  EF7F  F005         	goto	u1481
  1095  000AFA  EF81  F005         	goto	u1480
  1096  000AFE                     u1481:
  1097  000AFE  EF3B  F004         	goto	l1969
  1098  000B02                     u1480:
  1099  000B02                     
  1100                           ; BSR set to: 0
  1101                           ;humidity_Temp.c: 112:     agr=0;
  1102  000B02  0E00               	movlw	0
  1103  000B04  6F89               	movwf	(main@agr+1)& (0+255),b
  1104  000B06  0E00               	movlw	0
  1105  000B08  6F88               	movwf	main@agr& (0+255),b
  1106  000B0A                     
  1107                           ; BSR set to: 0
  1108                           ;humidity_Temp.c: 113:     MSdelay(500);
  1109  000B0A  0E01               	movlw	1
  1110  000B0C  6E02               	movwf	(MSdelay@val+1)^0,c
  1111  000B0E  0EF4               	movlw	244
  1112  000B10  6E01               	movwf	MSdelay@val^0,c
  1113  000B12  EC07  F00B         	call	_MSdelay	;wreg free
  1114  000B16  EF21  F004         	goto	l1955
  1115  000B1A  EF00  F000         	goto	start
  1116  000B1E                     __end_of_main:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _sprintf *****************
  1120 ;; Defined at:
  1121 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  s               2   87[COMRAM] PTR unsigned char 
  1124 ;;		 -> main@value(10), 
  1125 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1126 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  1127 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  1128 ;;		 -> STR_2(5), STR_1(3), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1131 ;;  ap              2    2[BANK0 ] PTR void [1]
  1132 ;;		 -> ?_sprintf(2), 
  1133 ;;  ret             2    0        int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2   87[COMRAM] int 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         6       0       0       0       0       0       0       0       0
  1144 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         6      10       0       0       0       0       0       0       0
  1147 ;;Total ram usage:       16 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    7
  1150 ;; This function calls:
  1151 ;;		_vfprintf
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text1
  1158  0015BC                     __ptext1:
  1159                           	callstack 0
  1160  0015BC                     _sprintf:
  1161                           	callstack 23
  1162  0015BC  0E5C               	movlw	low (?_sprintf+4)
  1163  0015BE  0100               	movlb	0	; () banked
  1164  0015C0  6F62               	movwf	sprintf@ap& (0+255),b
  1165  0015C2  0E00               	movlw	high (?_sprintf+4)
  1166  0015C4  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  1167  0015C6  C058  F064         	movff	sprintf@s,sprintf@f
  1168  0015CA  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  1169  0015CE                     
  1170                           ; BSR set to: 0
  1171  0015CE  0E00               	movlw	0
  1172  0015D0  6F67               	movwf	(sprintf@f+3)& (0+255),b
  1173  0015D2  0E00               	movlw	0
  1174  0015D4  6F66               	movwf	(sprintf@f+2)& (0+255),b
  1175  0015D6                     
  1176                           ; BSR set to: 0
  1177  0015D6  0E00               	movlw	0
  1178  0015D8  6F69               	movwf	(sprintf@f+5)& (0+255),b
  1179  0015DA  0E00               	movlw	0
  1180  0015DC  6F68               	movwf	(sprintf@f+4)& (0+255),b
  1181  0015DE                     
  1182                           ; BSR set to: 0
  1183  0015DE  0E64               	movlw	low sprintf@f
  1184  0015E0  6E50               	movwf	vfprintf@fp^0,c
  1185  0015E2  0E00               	movlw	high sprintf@f
  1186  0015E4  6E51               	movwf	(vfprintf@fp+1)^0,c
  1187  0015E6  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1188  0015EA  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1189  0015EE  0E62               	movlw	low sprintf@ap
  1190  0015F0  6E54               	movwf	vfprintf@ap^0,c
  1191  0015F2  0E00               	movlw	high sprintf@ap
  1192  0015F4  6E55               	movwf	(vfprintf@ap+1)^0,c
  1193  0015F6  EC50  F00A         	call	_vfprintf	;wreg free
  1194  0015FA  0100               	movlb	0	; () banked
  1195  0015FC  5166               	movf	(sprintf@f+2)& (0+255),w,b
  1196  0015FE  2458               	addwf	sprintf@s^0,w,c
  1197  001600  6ED9               	movwf	fsr2l,c
  1198  001602  5167               	movf	(sprintf@f+3)& (0+255),w,b
  1199  001604  2059               	addwfc	(sprintf@s+1)^0,w,c
  1200  001606  6EDA               	movwf	fsr2h,c
  1201  001608  0E00               	movlw	0
  1202  00160A  6EDF               	movwf	indf2,c
  1203  00160C                     
  1204                           ; BSR set to: 0
  1205  00160C  0012               	return		;funcret
  1206  00160E                     __end_of_sprintf:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _vfprintf *****************
  1210 ;; Defined at:
  1211 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1214 ;;		 -> sprintf@f(6), 
  1215 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1216 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  1217 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  1218 ;;		 -> STR_2(5), STR_1(3), 
  1219 ;;  ap              2   83[COMRAM] PTR PTR void 
  1220 ;;		 -> sprintf@ap(2), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1223 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  1224 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  1225 ;;		 -> STR_2(5), STR_1(3), 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2   79[COMRAM] int 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         6       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1239 ;;Total ram usage:        8 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    6
  1242 ;; This function calls:
  1243 ;;		_vfpfcnvrt
  1244 ;; This function is called by:
  1245 ;;		_sprintf
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250  0014A0                     __ptext2:
  1251                           	callstack 0
  1252  0014A0                     _vfprintf:
  1253                           	callstack 23
  1254  0014A0                     
  1255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1256  0014A0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1257  0014A4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1258  0014A8                     
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1260  0014A8  0E00               	movlw	0
  1261  0014AA  0100               	movlb	0	; () banked
  1262  0014AC  6F91               	movwf	(_nout+1)& (0+255),b
  1263  0014AE  0E00               	movlw	0
  1264  0014B0  6F90               	movwf	_nout& (0+255),b
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1267  0014B2  EF6E  F00A         	goto	l1863
  1268  0014B6                     l1861:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1272  0014B6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1273  0014BA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1274  0014BE  0E56               	movlw	low vfprintf@cfmt
  1275  0014C0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1276  0014C2  0E00               	movlw	high vfprintf@cfmt
  1277  0014C4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1278  0014C6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1279  0014CA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1280  0014CE  ECFE  F006         	call	_vfpfcnvrt	;wreg free
  1281  0014D2  5040               	movf	?_vfpfcnvrt^0,w,c
  1282  0014D4  0100               	movlb	0	; () banked
  1283  0014D6  2790               	addwf	_nout& (0+255),f,b
  1284  0014D8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1285  0014DA  2391               	addwfc	(_nout+1)& (0+255),f,b
  1286  0014DC                     l1863:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1290  0014DC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1291  0014E0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1292  0014E4                     	if	0	;tblptru may be non-zero
  1293  0014E4                     	endif
  1294  0014E4                     	if	0	;tblptru may be non-zero
  1295  0014E4                     	endif
  1296  0014E4  0008               	tblrd		*
  1297  0014E6  50F5               	movf	tablat,w,c
  1298  0014E8  0900               	iorlw	0
  1299  0014EA  A4D8               	btfss	status,2,c
  1300  0014EC  EF7A  F00A         	goto	u1231
  1301  0014F0  EF7C  F00A         	goto	u1230
  1302  0014F4                     u1231:
  1303  0014F4  EF5B  F00A         	goto	l1861
  1304  0014F8                     u1230:
  1305  0014F8                     
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1308  0014F8  C090  F050         	movff	_nout,?_vfprintf
  1309  0014FC  C091  F051         	movff	_nout+1,?_vfprintf+1
  1310  001500                     
  1311                           ; BSR set to: 0
  1312  001500  0012               	return		;funcret
  1313  001502                     __end_of_vfprintf:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _vfpfcnvrt *****************
  1317 ;; Defined at:
  1318 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1321 ;;		 -> sprintf@f(6), 
  1322 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1323 ;;		 -> vfprintf@cfmt(2), 
  1324 ;;  ap              2   67[COMRAM] PTR PTR void 
  1325 ;;		 -> sprintf@ap(2), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  ll              8   71[COMRAM] long long 
  1328 ;;  llu             8    0        unsigned long long 
  1329 ;;  f               4    0        unsigned long long 
  1330 ;;  vp              3    0        PTR void 
  1331 ;;  ct              3    0        unsigned char [3]
  1332 ;;  cp              3    0        PTR unsigned char 
  1333 ;;  i               2    0        int 
  1334 ;;  done            2    0        int 
  1335 ;;  c               1    0        unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2   63[COMRAM] int 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1345 ;;      Params:         6       0       0       0       0       0       0       0       0
  1346 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1347 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1348 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1349 ;;Total ram usage:       16 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    5
  1352 ;; This function calls:
  1353 ;;		_dtoa
  1354 ;;		_fputc
  1355 ;; This function is called by:
  1356 ;;		_vfprintf
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361  000DFC                     __ptext3:
  1362                           	callstack 0
  1363  000DFC                     _vfpfcnvrt:
  1364                           	callstack 23
  1365  000DFC                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1367  000DFC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1368  000E00  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1369  000E04  CFDE FFF6          	movff	postinc2,tblptrl
  1370  000E08  CFDD FFF7          	movff	postdec2,tblptrh
  1371  000E0C                     	if	0	;tblptru may be non-zero
  1372  000E0C                     	endif
  1373  000E0C                     	if	0	;tblptru may be non-zero
  1374  000E0C                     	endif
  1375  000E0C  0008               	tblrd		*
  1376  000E0E  50F5               	movf	tablat,w,c
  1377  000E10  0A25               	xorlw	37
  1378  000E12  A4D8               	btfss	status,2,c
  1379  000E14  EF0E  F007         	goto	u1161
  1380  000E18  EF10  F007         	goto	u1160
  1381  000E1C                     u1161:
  1382  000E1C  EFBC  F007         	goto	l1829
  1383  000E20                     u1160:
  1384  000E20                     
  1385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1386  000E20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387  000E24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388  000E28  2ADE               	incf	postinc2,f,c
  1389  000E2A  0E00               	movlw	0
  1390  000E2C  22DD               	addwfc	postdec2,f,c
  1391  000E2E                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1393  000E2E  0E00               	movlw	0
  1394  000E30  0100               	movlb	0	; () banked
  1395  000E32  6F93               	movwf	(_width+1)& (0+255),b
  1396  000E34  0E00               	movlw	0
  1397  000E36  6F92               	movwf	_width& (0+255),b
  1398  000E38  C092  F05E         	movff	_width,_flags
  1399  000E3C  C093  F05F         	movff	_width+1,_flags+1
  1400  000E40                     
  1401                           ; BSR set to: 0
  1402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1403  000E40  6994               	setf	_prec& (0+255),b
  1404  000E42  6995               	setf	(_prec+1)& (0+255),b
  1405  000E44                     
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1408  000E44  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409  000E48  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410  000E4C  CFDE FFF6          	movff	postinc2,tblptrl
  1411  000E50  CFDD FFF7          	movff	postdec2,tblptrh
  1412  000E54                     	if	0	;tblptru may be non-zero
  1413  000E54                     	endif
  1414  000E54                     	if	0	;tblptru may be non-zero
  1415  000E54                     	endif
  1416  000E54  0008               	tblrd		*
  1417  000E56  50F5               	movf	tablat,w,c
  1418  000E58  0A64               	xorlw	100
  1419  000E5A  B4D8               	btfsc	status,2,c
  1420  000E5C  EF32  F007         	goto	u1171
  1421  000E60  EF34  F007         	goto	u1170
  1422  000E64                     u1171:
  1423  000E64  EF46  F007         	goto	l1807
  1424  000E68                     u1170:
  1425  000E68                     
  1426                           ; BSR set to: 0
  1427  000E68  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1428  000E6C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1429  000E70  CFDE FFF6          	movff	postinc2,tblptrl
  1430  000E74  CFDD FFF7          	movff	postdec2,tblptrh
  1431  000E78                     	if	0	;tblptru may be non-zero
  1432  000E78                     	endif
  1433  000E78                     	if	0	;tblptru may be non-zero
  1434  000E78                     	endif
  1435  000E78  0008               	tblrd		*
  1436  000E7A  50F5               	movf	tablat,w,c
  1437  000E7C  0A69               	xorlw	105
  1438  000E7E  A4D8               	btfss	status,2,c
  1439  000E80  EF44  F007         	goto	u1181
  1440  000E84  EF46  F007         	goto	u1180
  1441  000E88                     u1181:
  1442  000E88  EF86  F007         	goto	l1813
  1443  000E8C                     u1180:
  1444  000E8C                     l1807:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1448  000E8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  000E90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  000E94  2ADE               	incf	postinc2,f,c
  1451  000E96  0E00               	movlw	0
  1452  000E98  22DD               	addwfc	postdec2,f,c
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1455  000E9A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1456  000E9E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1457  000EA2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1458  000EA6  0E02               	movlw	2
  1459  000EA8  26DE               	addwf	postinc2,f,c
  1460  000EAA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1461  000EAE  0E00               	movlw	0
  1462  000EB0  22DD               	addwfc	postdec2,f,c
  1463  000EB2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1464  000EB6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1465  000EBA  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1466  000EBE  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1467  000EC2  0E00               	movlw	0
  1468  000EC4  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1469  000EC6  0EFF               	movlw	-1
  1470  000EC8  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1471  000ECA  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1472  000ECC  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1473  000ECE  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1474  000ED0  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1475  000ED2  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1476  000ED4                     
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1479  000ED4  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1480  000ED8  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1481  000EDC  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1482  000EE0  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1483  000EE4  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1484  000EE8  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1485  000EEC  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1486  000EF0  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1487  000EF4  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1488  000EF8  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1489  000EFC  EC8F  F005         	call	_dtoa	;wreg free
  1490  000F00  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1491  000F04  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1492  000F08  EFD7  F007         	goto	l912
  1493  000F0C                     l1813:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1497  000F0C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1498  000F10  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1499  000F14  CFDE FFF6          	movff	postinc2,tblptrl
  1500  000F18  CFDD FFF7          	movff	postdec2,tblptrh
  1501  000F1C                     	if	0	;tblptru may be non-zero
  1502  000F1C                     	endif
  1503  000F1C                     	if	0	;tblptru may be non-zero
  1504  000F1C                     	endif
  1505  000F1C  0008               	tblrd		*
  1506  000F1E  50F5               	movf	tablat,w,c
  1507  000F20  0A25               	xorlw	37
  1508  000F22  A4D8               	btfss	status,2,c
  1509  000F24  EF96  F007         	goto	u1191
  1510  000F28  EF98  F007         	goto	u1190
  1511  000F2C                     u1191:
  1512  000F2C  EFAF  F007         	goto	l1823
  1513  000F30                     u1190:
  1514  000F30                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1517  000F30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518  000F34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519  000F38  2ADE               	incf	postinc2,f,c
  1520  000F3A  0E00               	movlw	0
  1521  000F3C  22DD               	addwfc	postdec2,f,c
  1522  000F3E                     
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1525  000F3E  0E00               	movlw	0
  1526  000F40  6E02               	movwf	(fputc@c+1)^0,c
  1527  000F42  0E25               	movlw	37
  1528  000F44  6E01               	movwf	fputc@c^0,c
  1529  000F46  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1530  000F4A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1531  000F4E  EC4E  F009         	call	_fputc	;wreg free
  1532  000F52                     l1819:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1535  000F52  0E00               	movlw	0
  1536  000F54  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1537  000F56  0E01               	movlw	1
  1538  000F58  6E40               	movwf	?_vfpfcnvrt^0,c
  1539  000F5A  EFD7  F007         	goto	l912
  1540  000F5E                     l1823:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1544  000F5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1545  000F62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1546  000F66  2ADE               	incf	postinc2,f,c
  1547  000F68  0E00               	movlw	0
  1548  000F6A  22DD               	addwfc	postdec2,f,c
  1549  000F6C                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1552  000F6C  0E00               	movlw	0
  1553  000F6E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1554  000F70  0E00               	movlw	0
  1555  000F72  6E40               	movwf	?_vfpfcnvrt^0,c
  1556  000F74  EFD7  F007         	goto	l912
  1557  000F78                     l1829:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1560  000F78  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1561  000F7C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1562  000F80  CFDE FFF6          	movff	postinc2,tblptrl
  1563  000F84  CFDD FFF7          	movff	postdec2,tblptrh
  1564  000F88                     	if	0	;tblptru may be non-zero
  1565  000F88                     	endif
  1566  000F88                     	if	0	;tblptru may be non-zero
  1567  000F88                     	endif
  1568  000F88  0008               	tblrd		*
  1569  000F8A  50F5               	movf	tablat,w,c
  1570  000F8C  6E01               	movwf	fputc@c^0,c
  1571  000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1572  000F90  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1573  000F94  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1574  000F98  EC4E  F009         	call	_fputc	;wreg free
  1575  000F9C                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1577  000F9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578  000FA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  000FA4  2ADE               	incf	postinc2,f,c
  1580  000FA6  0E00               	movlw	0
  1581  000FA8  22DD               	addwfc	postdec2,f,c
  1582  000FAA  EFA9  F007         	goto	l1819
  1583  000FAE                     l912:
  1584  000FAE  0012               	return		;funcret
  1585  000FB0                     __end_of_vfpfcnvrt:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _dtoa *****************
  1589 ;; Defined at:
  1590 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1593 ;;		 -> sprintf@f(6), 
  1594 ;;  d               8   29[COMRAM] long long 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  n               8   53[COMRAM] long long 
  1597 ;;  i               2   61[COMRAM] int 
  1598 ;;  s               2   51[COMRAM] int 
  1599 ;;  w               2   49[COMRAM] int 
  1600 ;;  p               2   47[COMRAM] int 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  2   27[COMRAM] int 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1610 ;;      Params:        10       0       0       0       0       0       0       0       0
  1611 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1612 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1613 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1614 ;;Total ram usage:       36 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    4
  1617 ;; This function calls:
  1618 ;;		___aodiv
  1619 ;;		___aomod
  1620 ;;		_abs
  1621 ;;		_pad
  1622 ;; This function is called by:
  1623 ;;		_vfpfcnvrt
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text4
  1628  000B1E                     __ptext4:
  1629                           	callstack 0
  1630  000B1E                     _dtoa:
  1631                           	callstack 23
  1632  000B1E                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1634  000B1E  C01E  F036         	movff	dtoa@d,dtoa@n
  1635  000B22  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1636  000B26  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1637  000B2A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1638  000B2E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1639  000B32  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1640  000B36  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1641  000B3A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1642  000B3E                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1644  000B3E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1645  000B40  EFA4  F005         	goto	u1011
  1646  000B44  EFA7  F005         	goto	u1010
  1647  000B48                     u1011:
  1648  000B48  0E01               	movlw	1
  1649  000B4A  EFA8  F005         	goto	u1020
  1650  000B4E                     u1010:
  1651  000B4E  0E00               	movlw	0
  1652  000B50                     u1020:
  1653  000B50  6E34               	movwf	dtoa@s^0,c
  1654  000B52  6A35               	clrf	(dtoa@s+1)^0,c
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1657  000B54  5034               	movf	dtoa@s^0,w,c
  1658  000B56  1035               	iorwf	(dtoa@s+1)^0,w,c
  1659  000B58  B4D8               	btfsc	status,2,c
  1660  000B5A  EFB1  F005         	goto	u1031
  1661  000B5E  EFB3  F005         	goto	u1030
  1662  000B62                     u1031:
  1663  000B62  EFC3  F005         	goto	l1727
  1664  000B66                     u1030:
  1665  000B66                     
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1667  000B66  1E3D               	comf	(dtoa@n+7)^0,f,c
  1668  000B68  1E3C               	comf	(dtoa@n+6)^0,f,c
  1669  000B6A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1670  000B6C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1671  000B6E  1E39               	comf	(dtoa@n+3)^0,f,c
  1672  000B70  1E38               	comf	(dtoa@n+2)^0,f,c
  1673  000B72  1E37               	comf	(dtoa@n+1)^0,f,c
  1674  000B74  6C36               	negf	dtoa@n^0,c
  1675  000B76  0E00               	movlw	0
  1676  000B78  2237               	addwfc	(dtoa@n+1)^0,f,c
  1677  000B7A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1678  000B7C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1679  000B7E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1680  000B80  223B               	addwfc	(dtoa@n+5)^0,f,c
  1681  000B82  223C               	addwfc	(dtoa@n+6)^0,f,c
  1682  000B84  223D               	addwfc	(dtoa@n+7)^0,f,c
  1683  000B86                     l1727:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1686  000B86  0100               	movlb	0	; () banked
  1687  000B88  BF95               	btfsc	(_prec+1)& (0+255),7,b
  1688  000B8A  EFC9  F005         	goto	u1041
  1689  000B8E  EFCB  F005         	goto	u1040
  1690  000B92                     u1041:
  1691  000B92  EFCC  F005         	goto	l1731
  1692  000B96                     u1040:
  1693  000B96                     
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1696  000B96  925E               	bcf	_flags^0,1,c
  1697  000B98                     l1731:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1701  000B98  BF95               	btfsc	(_prec+1)& (0+255),7,b
  1702  000B9A  EFD9  F005         	goto	u1050
  1703  000B9E  5195               	movf	(_prec+1)& (0+255),w,b
  1704  000BA0  E106               	bnz	u1051
  1705  000BA2  0594               	decf	_prec& (0+255),w,b
  1706  000BA4  B0D8               	btfsc	status,0,c
  1707  000BA6  EFD7  F005         	goto	u1051
  1708  000BAA  EFD9  F005         	goto	u1050
  1709  000BAE                     u1051:
  1710  000BAE  EFDF  F005         	goto	l885
  1711  000BB2                     u1050:
  1712  000BB2                     
  1713                           ; BSR set to: 0
  1714  000BB2  0E00               	movlw	0
  1715  000BB4  6E31               	movwf	(dtoa@p+1)^0,c
  1716  000BB6  0E01               	movlw	1
  1717  000BB8  6E30               	movwf	dtoa@p^0,c
  1718  000BBA  EFE3  F005         	goto	l887
  1719  000BBE                     l885:
  1720                           
  1721                           ; BSR set to: 0
  1722  000BBE  C094  F030         	movff	_prec,dtoa@p
  1723  000BC2  C095  F031         	movff	_prec+1,dtoa@p+1
  1724  000BC6                     l887:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1728  000BC6  C092  F032         	movff	_width,dtoa@w
  1729  000BCA  C093  F033         	movff	_width+1,dtoa@w+1
  1730  000BCE                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1733  000BCE  5034               	movf	dtoa@s^0,w,c
  1734  000BD0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1735  000BD2  A4D8               	btfss	status,2,c
  1736  000BD4  EFEE  F005         	goto	u1061
  1737  000BD8  EFF0  F005         	goto	u1060
  1738  000BDC                     u1061:
  1739  000BDC  EFF7  F005         	goto	l1739
  1740  000BE0                     u1060:
  1741  000BE0                     
  1742                           ; BSR set to: 0
  1743  000BE0  A45E               	btfss	_flags^0,2,c
  1744  000BE2  EFF5  F005         	goto	u1071
  1745  000BE6  EFF7  F005         	goto	u1070
  1746  000BEA                     u1071:
  1747  000BEA  EFFA  F005         	goto	l1741
  1748  000BEE                     u1070:
  1749  000BEE                     l1739:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1753  000BEE  0632               	decf	dtoa@w^0,f,c
  1754  000BF0  A0D8               	btfss	status,0,c
  1755  000BF2  0633               	decf	(dtoa@w+1)^0,f,c
  1756  000BF4                     l1741:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1760  000BF4  0E00               	movlw	0
  1761  000BF6  6E3F               	movwf	(dtoa@i+1)^0,c
  1762  000BF8  0E1F               	movlw	31
  1763  000BFA  6E3E               	movwf	dtoa@i^0,c
  1764  000BFC                     
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1767  000BFC  0E00               	movlw	0
  1768  000BFE  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1771  000C00  EF7E  F006         	goto	l1755
  1772  000C04                     l1745:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1775  000C04  063E               	decf	dtoa@i^0,f,c
  1776  000C06  A0D8               	btfss	status,0,c
  1777  000C08  063F               	decf	(dtoa@i+1)^0,f,c
  1778  000C0A                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1780  000C0A  0E96               	movlw	low _dbuf
  1781  000C0C  243E               	addwf	dtoa@i^0,w,c
  1782  000C0E  6ED9               	movwf	fsr2l,c
  1783  000C10  0E00               	movlw	high _dbuf
  1784  000C12  203F               	addwfc	(dtoa@i+1)^0,w,c
  1785  000C14  6EDA               	movwf	fsr2h,c
  1786  000C16  C036  F001         	movff	dtoa@n,___aomod@dividend
  1787  000C1A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1788  000C1E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1789  000C22  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1790  000C26  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1791  000C2A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1792  000C2E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1793  000C32  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1794  000C36  0E0A               	movlw	10
  1795  000C38  6E09               	movwf	___aomod@divisor^0,c
  1796  000C3A  0E00               	movlw	0
  1797  000C3C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1798  000C3E  0E00               	movlw	0
  1799  000C40  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1800  000C42  0E00               	movlw	0
  1801  000C44  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1802  000C46  0E00               	movlw	0
  1803  000C48  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1804  000C4A  0E00               	movlw	0
  1805  000C4C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1806  000C4E  0E00               	movlw	0
  1807  000C50  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1808  000C52  0E00               	movlw	0
  1809  000C54  6E10               	movwf	(___aomod@divisor+7)^0,c
  1810  000C56  EC9C  F008         	call	___aomod	;wreg free
  1811  000C5A  C001  F026         	movff	?___aomod,??_dtoa
  1812  000C5E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1813  000C62  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1814  000C66  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1815  000C6A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1816  000C6E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1817  000C72  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1818  000C76  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1819  000C7A  C026  F013         	movff	??_dtoa,abs@a
  1820  000C7E  C028  F014         	movff	??_dtoa+2,abs@a+1
  1821  000C82  EC4E  F00B         	call	_abs	;wreg free
  1822  000C86  5013               	movf	?_abs^0,w,c
  1823  000C88  0F30               	addlw	48
  1824  000C8A  6EDF               	movwf	indf2,c
  1825  000C8C                     
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1827  000C8C  0630               	decf	dtoa@p^0,f,c
  1828  000C8E  A0D8               	btfss	status,0,c
  1829  000C90  0631               	decf	(dtoa@p+1)^0,f,c
  1830  000C92                     
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1832  000C92  0632               	decf	dtoa@w^0,f,c
  1833  000C94  A0D8               	btfss	status,0,c
  1834  000C96  0633               	decf	(dtoa@w+1)^0,f,c
  1835  000C98                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1837  000C98  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1838  000C9C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1839  000CA0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1840  000CA4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1841  000CA8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1842  000CAC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1843  000CB0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1844  000CB4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1845  000CB8  0E0A               	movlw	10
  1846  000CBA  6E09               	movwf	___aodiv@divisor^0,c
  1847  000CBC  0E00               	movlw	0
  1848  000CBE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1849  000CC0  0E00               	movlw	0
  1850  000CC2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1851  000CC4  0E00               	movlw	0
  1852  000CC6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1853  000CC8  0E00               	movlw	0
  1854  000CCA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1855  000CCC  0E00               	movlw	0
  1856  000CCE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1857  000CD0  0E00               	movlw	0
  1858  000CD2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1859  000CD4  0E00               	movlw	0
  1860  000CD6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1861  000CD8  ECD8  F007         	call	___aodiv	;wreg free
  1862  000CDC  C001  F036         	movff	?___aodiv,dtoa@n
  1863  000CE0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1864  000CE4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1865  000CE8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1866  000CEC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1867  000CF0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1868  000CF4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1869  000CF8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1870  000CFC                     l1755:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1873  000CFC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1874  000CFE  EF89  F006         	goto	u1081
  1875  000D02  503F               	movf	(dtoa@i+1)^0,w,c
  1876  000D04  E108               	bnz	u1080
  1877  000D06  043E               	decf	dtoa@i^0,w,c
  1878  000D08  A0D8               	btfss	status,0,c
  1879  000D0A  EF89  F006         	goto	u1081
  1880  000D0E  EF8B  F006         	goto	u1080
  1881  000D12                     u1081:
  1882  000D12  EFBB  F006         	goto	l1765
  1883  000D16                     u1080:
  1884  000D16  5036               	movf	dtoa@n^0,w,c
  1885  000D18  1037               	iorwf	(dtoa@n+1)^0,w,c
  1886  000D1A  1038               	iorwf	(dtoa@n+2)^0,w,c
  1887  000D1C  1039               	iorwf	(dtoa@n+3)^0,w,c
  1888  000D1E  103A               	iorwf	(dtoa@n+4)^0,w,c
  1889  000D20  103B               	iorwf	(dtoa@n+5)^0,w,c
  1890  000D22  103C               	iorwf	(dtoa@n+6)^0,w,c
  1891  000D24  103D               	iorwf	(dtoa@n+7)^0,w,c
  1892  000D26  A4D8               	btfss	status,2,c
  1893  000D28  EF98  F006         	goto	u1091
  1894  000D2C  EF9A  F006         	goto	u1090
  1895  000D30                     u1091:
  1896  000D30  EF02  F006         	goto	l1745
  1897  000D34                     u1090:
  1898  000D34  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1899  000D36  EFA7  F006         	goto	u1100
  1900  000D3A  5031               	movf	(dtoa@p+1)^0,w,c
  1901  000D3C  E106               	bnz	u1101
  1902  000D3E  0430               	decf	dtoa@p^0,w,c
  1903  000D40  B0D8               	btfsc	status,0,c
  1904  000D42  EFA5  F006         	goto	u1101
  1905  000D46  EFA7  F006         	goto	u1100
  1906  000D4A                     u1101:
  1907  000D4A  EF02  F006         	goto	l1745
  1908  000D4E                     u1100:
  1909  000D4E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1910  000D50  EFB2  F006         	goto	u1111
  1911  000D54  5033               	movf	(dtoa@w+1)^0,w,c
  1912  000D56  E108               	bnz	u1110
  1913  000D58  0432               	decf	dtoa@w^0,w,c
  1914  000D5A  A0D8               	btfss	status,0,c
  1915  000D5C  EFB2  F006         	goto	u1111
  1916  000D60  EFB4  F006         	goto	u1110
  1917  000D64                     u1111:
  1918  000D64  EFBB  F006         	goto	l1765
  1919  000D68                     u1110:
  1920  000D68  B25E               	btfsc	_flags^0,1,c
  1921  000D6A  EFB9  F006         	goto	u1121
  1922  000D6E  EFBB  F006         	goto	u1120
  1923  000D72                     u1121:
  1924  000D72  EF02  F006         	goto	l1745
  1925  000D76                     u1120:
  1926  000D76                     l1765:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1929  000D76  5034               	movf	dtoa@s^0,w,c
  1930  000D78  1035               	iorwf	(dtoa@s+1)^0,w,c
  1931  000D7A  A4D8               	btfss	status,2,c
  1932  000D7C  EFC2  F006         	goto	u1131
  1933  000D80  EFC4  F006         	goto	u1130
  1934  000D84                     u1131:
  1935  000D84  EFCB  F006         	goto	l1769
  1936  000D88                     u1130:
  1937  000D88  A45E               	btfss	_flags^0,2,c
  1938  000D8A  EFC9  F006         	goto	u1141
  1939  000D8E  EFCB  F006         	goto	u1140
  1940  000D92                     u1141:
  1941  000D92  EFE9  F006         	goto	l1779
  1942  000D96                     u1140:
  1943  000D96                     l1769:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1946  000D96  063E               	decf	dtoa@i^0,f,c
  1947  000D98  A0D8               	btfss	status,0,c
  1948  000D9A  063F               	decf	(dtoa@i+1)^0,f,c
  1949  000D9C                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1951  000D9C  5034               	movf	dtoa@s^0,w,c
  1952  000D9E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1953  000DA0  A4D8               	btfss	status,2,c
  1954  000DA2  EFD5  F006         	goto	u1151
  1955  000DA6  EFD7  F006         	goto	u1150
  1956  000DAA                     u1151:
  1957  000DAA  EFDD  F006         	goto	l1775
  1958  000DAE                     u1150:
  1959  000DAE  0E00               	movlw	0
  1960  000DB0  6E2F               	movwf	(_dtoa$959+1)^0,c
  1961  000DB2  0E2B               	movlw	43
  1962  000DB4  6E2E               	movwf	_dtoa$959^0,c
  1963  000DB6  EFE1  F006         	goto	l1777
  1964  000DBA                     l1775:
  1965  000DBA  0E00               	movlw	0
  1966  000DBC  6E2F               	movwf	(_dtoa$959+1)^0,c
  1967  000DBE  0E2D               	movlw	45
  1968  000DC0  6E2E               	movwf	_dtoa$959^0,c
  1969  000DC2                     l1777:
  1970  000DC2  0E96               	movlw	low _dbuf
  1971  000DC4  243E               	addwf	dtoa@i^0,w,c
  1972  000DC6  6ED9               	movwf	fsr2l,c
  1973  000DC8  0E00               	movlw	high _dbuf
  1974  000DCA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1975  000DCC  6EDA               	movwf	fsr2h,c
  1976  000DCE  C02E  FFDF         	movff	_dtoa$959,indf2
  1977  000DD2                     l1779:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1980  000DD2  C01C  F011         	movff	dtoa@fp,pad@fp
  1981  000DD6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1982  000DDA  0E96               	movlw	low _dbuf
  1983  000DDC  243E               	addwf	dtoa@i^0,w,c
  1984  000DDE  6E13               	movwf	pad@buf^0,c
  1985  000DE0  0E00               	movlw	high _dbuf
  1986  000DE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1987  000DE4  6E14               	movwf	(pad@buf+1)^0,c
  1988  000DE6  C032  F015         	movff	dtoa@w,pad@p
  1989  000DEA  C033  F016         	movff	dtoa@w+1,pad@p+1
  1990  000DEE  ECB3  F009         	call	_pad	;wreg free
  1991  000DF2  C011  F01C         	movff	?_pad,?_dtoa
  1992  000DF6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1993  000DFA  0012               	return		;funcret
  1994  000DFC                     __end_of_dtoa:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _pad *****************
  1998 ;; Defined at:
  1999 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2002 ;;		 -> sprintf@f(6), 
  2003 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2004 ;;		 -> dbuf(32), 
  2005 ;;  p               2   20[COMRAM] int 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  w               2   25[COMRAM] int 
  2008 ;;  i               2   23[COMRAM] int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2   16[COMRAM] int 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         6       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2021 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:       11 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		_fputc
  2027 ;;		_fputs
  2028 ;;		_strlen
  2029 ;; This function is called by:
  2030 ;;		_dtoa
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text5
  2035  001366                     __ptext5:
  2036                           	callstack 0
  2037  001366                     _pad:
  2038                           	callstack 23
  2039  001366                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2041  001366  A05E               	btfss	_flags^0,0,c
  2042  001368  EFB8  F009         	goto	u941
  2043  00136C  EFBA  F009         	goto	u940
  2044  001370                     u941:
  2045  001370  EFC4  F009         	goto	l1683
  2046  001374                     u940:
  2047  001374                     
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2049  001374  C013  F00A         	movff	pad@buf,fputs@s
  2050  001378  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2051  00137C  C011  F00C         	movff	pad@fp,fputs@fp
  2052  001380  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2053  001384  EC2C  F00B         	call	_fputs	;wreg free
  2054  001388                     l1683:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2057  001388  BE16               	btfsc	(pad@p+1)^0,7,c
  2058  00138A  EFC9  F009         	goto	u951
  2059  00138E  EFCB  F009         	goto	u950
  2060  001392                     u951:
  2061  001392  EFD1  F009         	goto	l1687
  2062  001396                     u950:
  2063  001396  C015  F01A         	movff	pad@p,pad@w
  2064  00139A  C016  F01B         	movff	pad@p+1,pad@w+1
  2065  00139E  EFD5  F009         	goto	l874
  2066  0013A2                     l1687:
  2067  0013A2  0E00               	movlw	0
  2068  0013A4  6E1B               	movwf	(pad@w+1)^0,c
  2069  0013A6  0E00               	movlw	0
  2070  0013A8  6E1A               	movwf	pad@w^0,c
  2071  0013AA                     l874:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2074  0013AA  0E00               	movlw	0
  2075  0013AC  6E19               	movwf	(pad@i+1)^0,c
  2076  0013AE  0E00               	movlw	0
  2077  0013B0  6E18               	movwf	pad@i^0,c
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2080  0013B2  EFE7  F009         	goto	l1693
  2081  0013B6                     l1689:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2084  0013B6  0E00               	movlw	0
  2085  0013B8  6E02               	movwf	(fputc@c+1)^0,c
  2086  0013BA  0E20               	movlw	32
  2087  0013BC  6E01               	movwf	fputc@c^0,c
  2088  0013BE  C011  F003         	movff	pad@fp,fputc@fp
  2089  0013C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2090  0013C6  EC4E  F009         	call	_fputc	;wreg free
  2091  0013CA                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2093  0013CA  4A18               	infsnz	pad@i^0,f,c
  2094  0013CC  2A19               	incf	(pad@i+1)^0,f,c
  2095  0013CE                     l1693:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2098  0013CE  501A               	movf	pad@w^0,w,c
  2099  0013D0  5C18               	subwf	pad@i^0,w,c
  2100  0013D2  5019               	movf	(pad@i+1)^0,w,c
  2101  0013D4  0A80               	xorlw	128
  2102  0013D6  6E17               	movwf	??_pad^0,c
  2103  0013D8  501B               	movf	(pad@w+1)^0,w,c
  2104  0013DA  0A80               	xorlw	128
  2105  0013DC  5817               	subwfb	??_pad^0,w,c
  2106  0013DE  A0D8               	btfss	status,0,c
  2107  0013E0  EFF4  F009         	goto	u961
  2108  0013E4  EFF6  F009         	goto	u960
  2109  0013E8                     u961:
  2110  0013E8  EFDB  F009         	goto	l1689
  2111  0013EC                     u960:
  2112  0013EC                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2114  0013EC  B05E               	btfsc	_flags^0,0,c
  2115  0013EE  EFFB  F009         	goto	u971
  2116  0013F2  EFFD  F009         	goto	u970
  2117  0013F6                     u971:
  2118  0013F6  EF07  F00A         	goto	l1697
  2119  0013FA                     u970:
  2120  0013FA                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2122  0013FA  C013  F00A         	movff	pad@buf,fputs@s
  2123  0013FE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2124  001402  C011  F00C         	movff	pad@fp,fputs@fp
  2125  001406  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2126  00140A  EC2C  F00B         	call	_fputs	;wreg free
  2127  00140E                     l1697:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2130  00140E  C013  F001         	movff	pad@buf,strlen@s
  2131  001412  C014  F002         	movff	pad@buf+1,strlen@s+1
  2132  001416  ECAB  F00B         	call	_strlen	;wreg free
  2133  00141A  501A               	movf	pad@w^0,w,c
  2134  00141C  2401               	addwf	?_strlen^0,w,c
  2135  00141E  6E11               	movwf	?_pad^0,c
  2136  001420  501B               	movf	(pad@w+1)^0,w,c
  2137  001422  2002               	addwfc	(?_strlen+1)^0,w,c
  2138  001424  6E12               	movwf	(?_pad+1)^0,c
  2139  001426  0012               	return		;funcret
  2140  001428                     __end_of_pad:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _strlen *****************
  2144 ;; Defined at:
  2145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2148 ;;		 -> dbuf(32), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2151 ;;		 -> dbuf(32), 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] unsigned int 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         2       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2165 ;;Total ram usage:        4 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_pad
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text6
  2175  001756                     __ptext6:
  2176                           	callstack 0
  2177  001756                     _strlen:
  2178                           	callstack 25
  2179  001756  C001  F003         	movff	strlen@s,strlen@a
  2180  00175A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2181  00175E  EFB3  F00B         	goto	l1593
  2182  001762                     l1591:
  2183  001762  4A01               	infsnz	strlen@s^0,f,c
  2184  001764  2A02               	incf	(strlen@s+1)^0,f,c
  2185  001766                     l1593:
  2186  001766  C001  FFD9         	movff	strlen@s,fsr2l
  2187  00176A  C002  FFDA         	movff	strlen@s+1,fsr2h
  2188  00176E  50DF               	movf	indf2,w,c
  2189  001770  A4D8               	btfss	status,2,c
  2190  001772  EFBD  F00B         	goto	u801
  2191  001776  EFBF  F00B         	goto	u800
  2192  00177A                     u801:
  2193  00177A  EFB1  F00B         	goto	l1591
  2194  00177E                     u800:
  2195  00177E  5003               	movf	strlen@a^0,w,c
  2196  001780  5C01               	subwf	strlen@s^0,w,c
  2197  001782  6E01               	movwf	?_strlen^0,c
  2198  001784  5004               	movf	(strlen@a+1)^0,w,c
  2199  001786  5802               	subwfb	(strlen@s+1)^0,w,c
  2200  001788  6E02               	movwf	(?_strlen+1)^0,c
  2201  00178A  0012               	return		;funcret
  2202  00178C                     __end_of_strlen:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _fputs *****************
  2206 ;; Defined at:
  2207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2210 ;;		 -> dbuf(32), 
  2211 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2212 ;;		 -> sprintf@f(6), 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  i               2   14[COMRAM] int 
  2215 ;;  c               1   13[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    9[COMRAM] int 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         4       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        7 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    2
  2232 ;; This function calls:
  2233 ;;		_fputc
  2234 ;; This function is called by:
  2235 ;;		_pad
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text7
  2240  001658                     __ptext7:
  2241                           	callstack 0
  2242  001658                     _fputs:
  2243                           	callstack 23
  2244  001658  0E00               	movlw	0
  2245  00165A  6E10               	movwf	(fputs@i+1)^0,c
  2246  00165C  0E00               	movlw	0
  2247  00165E  6E0F               	movwf	fputs@i^0,c
  2248  001660  EF3D  F00B         	goto	l1587
  2249  001664                     l1583:
  2250  001664  C00E  F001         	movff	fputs@c,fputc@c
  2251  001668  6A02               	clrf	(fputc@c+1)^0,c
  2252  00166A  C00C  F003         	movff	fputs@fp,fputc@fp
  2253  00166E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2254  001672  EC4E  F009         	call	_fputc	;wreg free
  2255  001676  4A0F               	infsnz	fputs@i^0,f,c
  2256  001678  2A10               	incf	(fputs@i+1)^0,f,c
  2257  00167A                     l1587:
  2258  00167A  500F               	movf	fputs@i^0,w,c
  2259  00167C  240A               	addwf	fputs@s^0,w,c
  2260  00167E  6ED9               	movwf	fsr2l,c
  2261  001680  5010               	movf	(fputs@i+1)^0,w,c
  2262  001682  200B               	addwfc	(fputs@s+1)^0,w,c
  2263  001684  6EDA               	movwf	fsr2h,c
  2264  001686  50DF               	movf	indf2,w,c
  2265  001688  6E0E               	movwf	fputs@c^0,c
  2266  00168A  500E               	movf	fputs@c^0,w,c
  2267  00168C  A4D8               	btfss	status,2,c
  2268  00168E  EF4B  F00B         	goto	u791
  2269  001692  EF4D  F00B         	goto	u790
  2270  001696                     u791:
  2271  001696  EF32  F00B         	goto	l1583
  2272  00169A                     u790:
  2273  00169A  0012               	return		;funcret
  2274  00169C                     __end_of_fputs:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _fputc *****************
  2278 ;; Defined at:
  2279 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  c               2    0[COMRAM] int 
  2282 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2283 ;;		 -> sprintf@f(6), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2    0[COMRAM] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         4       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        9 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    1
  2302 ;; This function calls:
  2303 ;;		_putch
  2304 ;; This function is called by:
  2305 ;;		_pad
  2306 ;;		_vfpfcnvrt
  2307 ;;		_fputs
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312  00129C                     __ptext8:
  2313                           	callstack 0
  2314  00129C                     _fputc:
  2315                           	callstack 26
  2316  00129C  5003               	movf	fputc@fp^0,w,c
  2317  00129E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2318  0012A0  B4D8               	btfsc	status,2,c
  2319  0012A2  EF55  F009         	goto	u751
  2320  0012A6  EF57  F009         	goto	u750
  2321  0012AA                     u751:
  2322  0012AA  EF60  F009         	goto	l1571
  2323  0012AE                     u750:
  2324  0012AE  5003               	movf	fputc@fp^0,w,c
  2325  0012B0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2326  0012B2  A4D8               	btfss	status,2,c
  2327  0012B4  EF5E  F009         	goto	u761
  2328  0012B8  EF60  F009         	goto	u760
  2329  0012BC                     u761:
  2330  0012BC  EF65  F009         	goto	l1573
  2331  0012C0                     u760:
  2332  0012C0                     l1571:
  2333  0012C0  5001               	movf	fputc@c^0,w,c
  2334  0012C2  EC27  F00C         	call	_putch
  2335  0012C6  EFB2  F009         	goto	l938
  2336  0012CA                     l1573:
  2337  0012CA  EE20 F004          	lfsr	2,4
  2338  0012CE  5003               	movf	fputc@fp^0,w,c
  2339  0012D0  26D9               	addwf	fsr2l,f,c
  2340  0012D2  5004               	movf	(fputc@fp+1)^0,w,c
  2341  0012D4  22DA               	addwfc	fsr2h,f,c
  2342  0012D6  50DE               	movf	postinc2,w,c
  2343  0012D8  10DE               	iorwf	postinc2,w,c
  2344  0012DA  B4D8               	btfsc	status,2,c
  2345  0012DC  EF72  F009         	goto	u771
  2346  0012E0  EF74  F009         	goto	u770
  2347  0012E4                     u771:
  2348  0012E4  EF8F  F009         	goto	l1577
  2349  0012E8                     u770:
  2350  0012E8  EE20 F004          	lfsr	2,4
  2351  0012EC  5003               	movf	fputc@fp^0,w,c
  2352  0012EE  26D9               	addwf	fsr2l,f,c
  2353  0012F0  5004               	movf	(fputc@fp+1)^0,w,c
  2354  0012F2  22DA               	addwfc	fsr2h,f,c
  2355  0012F4  EE10 F002          	lfsr	1,2
  2356  0012F8  5003               	movf	fputc@fp^0,w,c
  2357  0012FA  26E1               	addwf	fsr1l,f,c
  2358  0012FC  5004               	movf	(fputc@fp+1)^0,w,c
  2359  0012FE  22E2               	addwfc	fsr1h,f,c
  2360  001300  50DE               	movf	postinc2,w,c
  2361  001302  5CE6               	subwf	postinc1,w,c
  2362  001304  50E6               	movf	postinc1,w,c
  2363  001306  0A80               	xorlw	128
  2364  001308  6E09               	movwf	(??_fputc+4)^0,c
  2365  00130A  50DE               	movf	postinc2,w,c
  2366  00130C  0A80               	xorlw	128
  2367  00130E  5809               	subwfb	(??_fputc+4)^0,w,c
  2368  001310  B0D8               	btfsc	status,0,c
  2369  001312  EF8D  F009         	goto	u781
  2370  001316  EF8F  F009         	goto	u780
  2371  00131A                     u781:
  2372  00131A  EFB2  F009         	goto	l938
  2373  00131E                     u780:
  2374  00131E                     l1577:
  2375  00131E  EE20 F002          	lfsr	2,2
  2376  001322  5003               	movf	fputc@fp^0,w,c
  2377  001324  26D9               	addwf	fsr2l,f,c
  2378  001326  5004               	movf	(fputc@fp+1)^0,w,c
  2379  001328  22DA               	addwfc	fsr2h,f,c
  2380  00132A  CFDE F005          	movff	postinc2,??_fputc
  2381  00132E  CFDD F006          	movff	postdec2,??_fputc+1
  2382  001332  C003  FFD9         	movff	fputc@fp,fsr2l
  2383  001336  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2384  00133A  CFDE F007          	movff	postinc2,??_fputc+2
  2385  00133E  CFDD F008          	movff	postdec2,??_fputc+3
  2386  001342  5005               	movf	??_fputc^0,w,c
  2387  001344  2407               	addwf	(??_fputc+2)^0,w,c
  2388  001346  6ED9               	movwf	fsr2l,c
  2389  001348  5006               	movf	(??_fputc+1)^0,w,c
  2390  00134A  2008               	addwfc	(??_fputc+3)^0,w,c
  2391  00134C  6EDA               	movwf	fsr2h,c
  2392  00134E  C001  FFDF         	movff	fputc@c,indf2
  2393  001352  EE20 F002          	lfsr	2,2
  2394  001356  5003               	movf	fputc@fp^0,w,c
  2395  001358  26D9               	addwf	fsr2l,f,c
  2396  00135A  5004               	movf	(fputc@fp+1)^0,w,c
  2397  00135C  22DA               	addwfc	fsr2h,f,c
  2398  00135E  2ADE               	incf	postinc2,f,c
  2399  001360  0E00               	movlw	0
  2400  001362  22DD               	addwfc	postdec2,f,c
  2401  001364                     l938:
  2402  001364  0012               	return		;funcret
  2403  001366                     __end_of_fputc:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _putch *****************
  2407 ;; Defined at:
  2408 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  c               1    wreg     unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  c               1    0[COMRAM] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_fputc
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text9
  2436  00184E                     __ptext9:
  2437                           	callstack 0
  2438  00184E                     _putch:
  2439                           	callstack 26
  2440  00184E  0012               	return		;funcret
  2441  001850                     __end_of_putch:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _abs *****************
  2445 ;; Defined at:
  2446 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  a               2   18[COMRAM] int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   18[COMRAM] int 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         2       0       0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2462 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2463 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        4 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_dtoa
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text10
  2474  00169C                     __ptext10:
  2475                           	callstack 0
  2476  00169C                     _abs:
  2477                           	callstack 26
  2478  00169C  BE14               	btfsc	(abs@a+1)^0,7,c
  2479  00169E  EF5B  F00B         	goto	u980
  2480  0016A2  5014               	movf	(abs@a+1)^0,w,c
  2481  0016A4  E106               	bnz	u981
  2482  0016A6  0413               	decf	abs@a^0,w,c
  2483  0016A8  B0D8               	btfsc	status,0,c
  2484  0016AA  EF59  F00B         	goto	u981
  2485  0016AE  EF5B  F00B         	goto	u980
  2486  0016B2                     u981:
  2487  0016B2  EF69  F00B         	goto	l923
  2488  0016B6                     u980:
  2489  0016B6  C013  F015         	movff	abs@a,??_abs
  2490  0016BA  C014  F016         	movff	abs@a+1,??_abs+1
  2491  0016BE  1E15               	comf	??_abs^0,f,c
  2492  0016C0  1E16               	comf	(??_abs+1)^0,f,c
  2493  0016C2  4A15               	infsnz	??_abs^0,f,c
  2494  0016C4  2A16               	incf	(??_abs+1)^0,f,c
  2495  0016C6  C015  F013         	movff	??_abs,?_abs
  2496  0016CA  C016  F014         	movff	??_abs+1,?_abs+1
  2497  0016CE  EF6D  F00B         	goto	l926
  2498  0016D2                     l923:
  2499  0016D2  C013  F013         	movff	abs@a,?_abs
  2500  0016D6  C014  F014         	movff	abs@a+1,?_abs+1
  2501  0016DA                     l926:
  2502  0016DA  0012               	return		;funcret
  2503  0016DC                     __end_of_abs:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function ___aomod *****************
  2507 ;; Defined at:
  2508 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  dividend        8    0[COMRAM] long long 
  2511 ;;  divisor         8    8[COMRAM] long long 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  sign            1   17[COMRAM] unsigned char 
  2514 ;;  counter         1   16[COMRAM] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  8    0[COMRAM] long long 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:        16       0       0       0       0       0       0       0       0
  2525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2527 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:       18 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_dtoa
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text11
  2538  001138                     __ptext11:
  2539                           	callstack 0
  2540  001138                     ___aomod:
  2541                           	callstack 26
  2542  001138  0E00               	movlw	0
  2543  00113A  6E12               	movwf	___aomod@sign^0,c
  2544  00113C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2545  00113E  EFA5  F008         	goto	u880
  2546  001142  EFA3  F008         	goto	u881
  2547  001146                     u881:
  2548  001146  EFB7  F008         	goto	l1651
  2549  00114A                     u880:
  2550  00114A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2551  00114C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2552  00114E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2553  001150  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2554  001152  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2555  001154  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2556  001156  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2557  001158  6C01               	negf	___aomod@dividend^0,c
  2558  00115A  0E00               	movlw	0
  2559  00115C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2560  00115E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2561  001160  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2562  001162  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2563  001164  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2564  001166  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2565  001168  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2566  00116A  0E01               	movlw	1
  2567  00116C  6E12               	movwf	___aomod@sign^0,c
  2568  00116E                     l1651:
  2569  00116E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2570  001170  EFBE  F008         	goto	u890
  2571  001174  EFBC  F008         	goto	u891
  2572  001178                     u891:
  2573  001178  EFCE  F008         	goto	l1655
  2574  00117C                     u890:
  2575  00117C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2576  00117E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2577  001180  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2578  001182  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2579  001184  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2580  001186  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2581  001188  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2582  00118A  6C09               	negf	___aomod@divisor^0,c
  2583  00118C  0E00               	movlw	0
  2584  00118E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2585  001190  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2586  001192  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2587  001194  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2588  001196  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2589  001198  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2590  00119A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2591  00119C                     l1655:
  2592  00119C  5009               	movf	___aomod@divisor^0,w,c
  2593  00119E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2594  0011A0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2595  0011A2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2596  0011A4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2597  0011A6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2598  0011A8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2599  0011AA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2600  0011AC  B4D8               	btfsc	status,2,c
  2601  0011AE  EFDB  F008         	goto	u901
  2602  0011B2  EFDD  F008         	goto	u900
  2603  0011B6                     u901:
  2604  0011B6  EF25  F009         	goto	l1671
  2605  0011BA                     u900:
  2606  0011BA  0E01               	movlw	1
  2607  0011BC  6E11               	movwf	___aomod@counter^0,c
  2608  0011BE  EFEB  F008         	goto	l1661
  2609  0011C2                     l1659:
  2610  0011C2  90D8               	bcf	status,0,c
  2611  0011C4  3609               	rlcf	___aomod@divisor^0,f,c
  2612  0011C6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2613  0011C8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2614  0011CA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2615  0011CC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2616  0011CE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2617  0011D0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2618  0011D2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2619  0011D4  2A11               	incf	___aomod@counter^0,f,c
  2620  0011D6                     l1661:
  2621  0011D6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2622  0011D8  EFF0  F008         	goto	u911
  2623  0011DC  EFF2  F008         	goto	u910
  2624  0011E0                     u911:
  2625  0011E0  EFE1  F008         	goto	l1659
  2626  0011E4                     u910:
  2627  0011E4                     l1663:
  2628  0011E4  5009               	movf	___aomod@divisor^0,w,c
  2629  0011E6  5C01               	subwf	___aomod@dividend^0,w,c
  2630  0011E8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2631  0011EA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2632  0011EC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2633  0011EE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2634  0011F0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2635  0011F2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2636  0011F4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2637  0011F6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2638  0011F8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2639  0011FA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2640  0011FC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2641  0011FE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2642  001200  5010               	movf	(___aomod@divisor+7)^0,w,c
  2643  001202  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2644  001204  A0D8               	btfss	status,0,c
  2645  001206  EF07  F009         	goto	u921
  2646  00120A  EF09  F009         	goto	u920
  2647  00120E                     u921:
  2648  00120E  EF19  F009         	goto	l1667
  2649  001212                     u920:
  2650  001212  5009               	movf	___aomod@divisor^0,w,c
  2651  001214  5E01               	subwf	___aomod@dividend^0,f,c
  2652  001216  500A               	movf	(___aomod@divisor+1)^0,w,c
  2653  001218  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2654  00121A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2655  00121C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2656  00121E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2657  001220  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2658  001222  500D               	movf	(___aomod@divisor+4)^0,w,c
  2659  001224  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2660  001226  500E               	movf	(___aomod@divisor+5)^0,w,c
  2661  001228  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2662  00122A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2663  00122C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2664  00122E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2665  001230  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2666  001232                     l1667:
  2667  001232  90D8               	bcf	status,0,c
  2668  001234  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2669  001236  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2670  001238  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2671  00123A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2672  00123C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2673  00123E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2674  001240  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2675  001242  3209               	rrcf	___aomod@divisor^0,f,c
  2676  001244  2E11               	decfsz	___aomod@counter^0,f,c
  2677  001246  EFF2  F008         	goto	l1663
  2678  00124A                     l1671:
  2679  00124A  5012               	movf	___aomod@sign^0,w,c
  2680  00124C  B4D8               	btfsc	status,2,c
  2681  00124E  EF2B  F009         	goto	u931
  2682  001252  EF2D  F009         	goto	u930
  2683  001256                     u931:
  2684  001256  EF3D  F009         	goto	l1675
  2685  00125A                     u930:
  2686  00125A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2687  00125C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2688  00125E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2689  001260  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2690  001262  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2691  001264  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2692  001266  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2693  001268  6C01               	negf	___aomod@dividend^0,c
  2694  00126A  0E00               	movlw	0
  2695  00126C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2696  00126E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2697  001270  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2698  001272  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2699  001274  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2700  001276  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2701  001278  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2702  00127A                     l1675:
  2703  00127A  C001  F001         	movff	___aomod@dividend,?___aomod
  2704  00127E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2705  001282  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2706  001286  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2707  00128A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2708  00128E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2709  001292  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2710  001296  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2711  00129A  0012               	return		;funcret
  2712  00129C                     __end_of___aomod:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function ___aodiv *****************
  2716 ;; Defined at:
  2717 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  dividend        8    0[COMRAM] long long 
  2720 ;;  divisor         8    8[COMRAM] long long 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  quotient        8   18[COMRAM] long long 
  2723 ;;  sign            1   17[COMRAM] unsigned char 
  2724 ;;  counter         1   16[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  8    0[COMRAM] long long 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:        16       0       0       0       0       0       0       0       0
  2735 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2737 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:       26 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_dtoa
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text12
  2748  000FB0                     __ptext12:
  2749                           	callstack 0
  2750  000FB0                     ___aodiv:
  2751                           	callstack 26
  2752  000FB0  0E00               	movlw	0
  2753  000FB2  6E12               	movwf	___aodiv@sign^0,c
  2754  000FB4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2755  000FB6  EFE1  F007         	goto	u810
  2756  000FBA  EFDF  F007         	goto	u811
  2757  000FBE                     u811:
  2758  000FBE  EFF3  F007         	goto	l1607
  2759  000FC2                     u810:
  2760  000FC2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2761  000FC4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2762  000FC6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2763  000FC8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2764  000FCA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2765  000FCC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2766  000FCE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2767  000FD0  6C09               	negf	___aodiv@divisor^0,c
  2768  000FD2  0E00               	movlw	0
  2769  000FD4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2770  000FD6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2771  000FD8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2772  000FDA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2773  000FDC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2774  000FDE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2775  000FE0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2776  000FE2  0E01               	movlw	1
  2777  000FE4  6E12               	movwf	___aodiv@sign^0,c
  2778  000FE6                     l1607:
  2779  000FE6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2780  000FE8  EFFA  F007         	goto	u820
  2781  000FEC  EFF8  F007         	goto	u821
  2782  000FF0                     u821:
  2783  000FF0  EF0C  F008         	goto	l1613
  2784  000FF4                     u820:
  2785  000FF4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2786  000FF6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2787  000FF8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2788  000FFA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2789  000FFC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2790  000FFE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2791  001000  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2792  001002  6C01               	negf	___aodiv@dividend^0,c
  2793  001004  0E00               	movlw	0
  2794  001006  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2795  001008  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2796  00100A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2797  00100C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2798  00100E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2799  001010  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2800  001012  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2801  001014  0E01               	movlw	1
  2802  001016  1A12               	xorwf	___aodiv@sign^0,f,c
  2803  001018                     l1613:
  2804  001018  EE20  F013         	lfsr	2,___aodiv@quotient
  2805  00101C  0E07               	movlw	7
  2806  00101E                     u831:
  2807  00101E  6ADE               	clrf	postinc2,c
  2808  001020  06E8               	decf	wreg,f,c
  2809  001022  E2FD               	bc	u831
  2810  001024  5009               	movf	___aodiv@divisor^0,w,c
  2811  001026  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2812  001028  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2813  00102A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2814  00102C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2815  00102E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2816  001030  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2817  001032  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2818  001034  B4D8               	btfsc	status,2,c
  2819  001036  EF1F  F008         	goto	u841
  2820  00103A  EF21  F008         	goto	u840
  2821  00103E                     u841:
  2822  00103E  EF73  F008         	goto	l1635
  2823  001042                     u840:
  2824  001042  0E01               	movlw	1
  2825  001044  6E11               	movwf	___aodiv@counter^0,c
  2826  001046  EF2F  F008         	goto	l1621
  2827  00104A                     l1619:
  2828  00104A  90D8               	bcf	status,0,c
  2829  00104C  3609               	rlcf	___aodiv@divisor^0,f,c
  2830  00104E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2831  001050  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2832  001052  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2833  001054  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2834  001056  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2835  001058  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2836  00105A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2837  00105C  2A11               	incf	___aodiv@counter^0,f,c
  2838  00105E                     l1621:
  2839  00105E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2840  001060  EF34  F008         	goto	u851
  2841  001064  EF36  F008         	goto	u850
  2842  001068                     u851:
  2843  001068  EF25  F008         	goto	l1619
  2844  00106C                     u850:
  2845  00106C                     l1623:
  2846  00106C  90D8               	bcf	status,0,c
  2847  00106E  3613               	rlcf	___aodiv@quotient^0,f,c
  2848  001070  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2849  001072  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2850  001074  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2851  001076  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2852  001078  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2853  00107A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2854  00107C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2855  00107E  5009               	movf	___aodiv@divisor^0,w,c
  2856  001080  5C01               	subwf	___aodiv@dividend^0,w,c
  2857  001082  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2858  001084  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2859  001086  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2860  001088  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2861  00108A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2862  00108C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2863  00108E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2864  001090  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2865  001092  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2866  001094  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2867  001096  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2868  001098  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2869  00109A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2870  00109C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2871  00109E  A0D8               	btfss	status,0,c
  2872  0010A0  EF54  F008         	goto	u861
  2873  0010A4  EF56  F008         	goto	u860
  2874  0010A8                     u861:
  2875  0010A8  EF67  F008         	goto	l1631
  2876  0010AC                     u860:
  2877  0010AC  5009               	movf	___aodiv@divisor^0,w,c
  2878  0010AE  5E01               	subwf	___aodiv@dividend^0,f,c
  2879  0010B0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2880  0010B2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2881  0010B4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2882  0010B6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2883  0010B8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2884  0010BA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2885  0010BC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2886  0010BE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2887  0010C0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2888  0010C2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2889  0010C4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2890  0010C6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2891  0010C8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2892  0010CA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2893  0010CC  8013               	bsf	___aodiv@quotient^0,0,c
  2894  0010CE                     l1631:
  2895  0010CE  90D8               	bcf	status,0,c
  2896  0010D0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2897  0010D2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2898  0010D4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2899  0010D6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2900  0010D8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2901  0010DA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2902  0010DC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2903  0010DE  3209               	rrcf	___aodiv@divisor^0,f,c
  2904  0010E0  2E11               	decfsz	___aodiv@counter^0,f,c
  2905  0010E2  EF36  F008         	goto	l1623
  2906  0010E6                     l1635:
  2907  0010E6  5012               	movf	___aodiv@sign^0,w,c
  2908  0010E8  B4D8               	btfsc	status,2,c
  2909  0010EA  EF79  F008         	goto	u871
  2910  0010EE  EF7B  F008         	goto	u870
  2911  0010F2                     u871:
  2912  0010F2  EF8B  F008         	goto	l1639
  2913  0010F6                     u870:
  2914  0010F6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2915  0010F8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2916  0010FA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2917  0010FC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2918  0010FE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2919  001100  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2920  001102  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2921  001104  6C13               	negf	___aodiv@quotient^0,c
  2922  001106  0E00               	movlw	0
  2923  001108  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2924  00110A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2925  00110C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2926  00110E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2927  001110  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2928  001112  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2929  001114  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2930  001116                     l1639:
  2931  001116  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2932  00111A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2933  00111E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2934  001122  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2935  001126  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2936  00112A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2937  00112E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2938  001132  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2939  001136  0012               	return		;funcret
  2940  001138                     __end_of___aodiv:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _onLEDS *****************
  2944 ;; Defined at:
  2945 ;;		line 222 in file "humidity_Temp.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  T_Integral      1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  T_Integral      1    0[COMRAM] unsigned char 
  2950 ;;  valor           2    1[COMRAM] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        3 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_main
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text13
  2974  001428                     __ptext13:
  2975                           	callstack 0
  2976  001428                     _onLEDS:
  2977                           	callstack 30
  2978                           
  2979                           ;incstack = 0
  2980                           ;onLEDS@T_Integral stored from wreg
  2981  001428  6E01               	movwf	onLEDS@T_Integral^0,c
  2982  00142A                     
  2983                           ;humidity_Temp.c: 222: void onLEDS( char T_Integral);humidity_Temp.c: 223: {;humidity_Te
      +                          mp.c: 224:     int valor =T_Integral ;
  2984  00142A  C001  F002         	movff	onLEDS@T_Integral,onLEDS@valor
  2985  00142E  6A03               	clrf	(onLEDS@valor+1)^0,c
  2986  001430                     
  2987                           ;humidity_Temp.c: 225:     if(valor < 30)
  2988  001430  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  2989  001432  EF26  F00A         	goto	u1310
  2990  001436  5003               	movf	(onLEDS@valor+1)^0,w,c
  2991  001438  E107               	bnz	u1311
  2992  00143A  0E1E               	movlw	30
  2993  00143C  5C02               	subwf	onLEDS@valor^0,w,c
  2994  00143E  B0D8               	btfsc	status,0,c
  2995  001440  EF24  F00A         	goto	u1311
  2996  001444  EF26  F00A         	goto	u1310
  2997  001448                     u1311:
  2998  001448  EF2B  F00A         	goto	l1915
  2999  00144C                     u1310:
  3000  00144C                     
  3001                           ;humidity_Temp.c: 226:     {;humidity_Temp.c: 227:         PORTCbits.RC5 = 1;
  3002  00144C  8A82               	bsf	130,5,c	;volatile
  3003                           
  3004                           ;humidity_Temp.c: 228:         PORTCbits.RC4 = 0;
  3005  00144E  9882               	bcf	130,4,c	;volatile
  3006                           
  3007                           ;humidity_Temp.c: 229:         PORTCbits.RC6 = 0;
  3008  001450  9C82               	bcf	130,6,c	;volatile
  3009                           
  3010                           ;humidity_Temp.c: 230:     }
  3011  001452  EF4F  F00A         	goto	l119
  3012  001456                     l1915:
  3013  001456  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  3014  001458  EF37  F00A         	goto	u1321
  3015  00145C  5003               	movf	(onLEDS@valor+1)^0,w,c
  3016  00145E  E109               	bnz	u1320
  3017  001460  0E1E               	movlw	30
  3018  001462  5C02               	subwf	onLEDS@valor^0,w,c
  3019  001464  A0D8               	btfss	status,0,c
  3020  001466  EF37  F00A         	goto	u1321
  3021  00146A  EF39  F00A         	goto	u1320
  3022  00146E                     u1321:
  3023  00146E  EF4C  F00A         	goto	l117
  3024  001472                     u1320:
  3025  001472  BE03               	btfsc	(onLEDS@valor+1)^0,7,c
  3026  001474  EF47  F00A         	goto	u1330
  3027  001478  5003               	movf	(onLEDS@valor+1)^0,w,c
  3028  00147A  E107               	bnz	u1331
  3029  00147C  0E24               	movlw	36
  3030  00147E  5C02               	subwf	onLEDS@valor^0,w,c
  3031  001480  B0D8               	btfsc	status,0,c
  3032  001482  EF45  F00A         	goto	u1331
  3033  001486  EF47  F00A         	goto	u1330
  3034  00148A                     u1331:
  3035  00148A  EF4C  F00A         	goto	l117
  3036  00148E                     u1330:
  3037  00148E                     
  3038                           ;humidity_Temp.c: 232:         PORTCbits.RC5 = 0;
  3039  00148E  9A82               	bcf	130,5,c	;volatile
  3040                           
  3041                           ;humidity_Temp.c: 233:         PORTCbits.RC4 = 1;
  3042  001490  8882               	bsf	130,4,c	;volatile
  3043                           
  3044                           ;humidity_Temp.c: 234:         PORTCbits.RC6 = 0;
  3045  001492  9C82               	bcf	130,6,c	;volatile
  3046                           
  3047                           ;humidity_Temp.c: 235:     }
  3048  001494  EF4F  F00A         	goto	l119
  3049  001498                     l117:
  3050                           
  3051                           ;humidity_Temp.c: 237:         PORTCbits.RC5 = 0;
  3052  001498  9A82               	bcf	130,5,c	;volatile
  3053                           
  3054                           ;humidity_Temp.c: 238:         PORTCbits.RC4 = 0;
  3055  00149A  9882               	bcf	130,4,c	;volatile
  3056                           
  3057                           ;humidity_Temp.c: 239:         PORTCbits.RC6 = 1;
  3058  00149C  8C82               	bsf	130,6,c	;volatile
  3059  00149E                     l119:
  3060  00149E  0012               	return		;funcret
  3061  0014A0                     __end_of_onLEDS:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _LCD_String_xy *****************
  3065 ;; Defined at:
  3066 ;;		line 58 in file "LCD_16x2.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  row             1    wreg     unsigned char 
  3069 ;;  pos             1    9[COMRAM] unsigned char 
  3070 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  3071 ;;		 -> STR_14(5), STR_13(8), STR_7(5), STR_6(8), 
  3072 ;;		 -> main@value(10), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  row             1   12[COMRAM] unsigned char 
  3075 ;;  location        1   13[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3085 ;;      Params:         3       0       0       0       0       0       0       0       0
  3086 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3088 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3089 ;;Total ram usage:        5 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    3
  3092 ;; This function calls:
  3093 ;;		_LCD_Command
  3094 ;;		_LCD_String
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text14
  3101  0016DC                     __ptext14:
  3102                           	callstack 0
  3103  0016DC                     _LCD_String_xy:
  3104                           	callstack 27
  3105                           
  3106                           ;incstack = 0
  3107                           ;LCD_String_xy@row stored from wreg
  3108  0016DC  6E0D               	movwf	LCD_String_xy@row^0,c
  3109  0016DE                     
  3110                           ;LCD_16x2.c: 61:     if(row<1)
  3111  0016DE  500D               	movf	LCD_String_xy@row^0,w,c
  3112  0016E0  A4D8               	btfss	status,2,c
  3113  0016E2  EF75  F00B         	goto	u1341
  3114  0016E6  EF77  F00B         	goto	u1340
  3115  0016EA                     u1341:
  3116  0016EA  EF80  F00B         	goto	l1941
  3117  0016EE                     u1340:
  3118  0016EE                     
  3119                           ;LCD_16x2.c: 62:     {;LCD_16x2.c: 63:         location=(0x80) | ((pos) & 0x0f);
  3120  0016EE  500A               	movf	LCD_String_xy@pos^0,w,c
  3121  0016F0  0B0F               	andlw	15
  3122  0016F2  0980               	iorlw	128
  3123  0016F4  6E0E               	movwf	LCD_String_xy@location^0,c
  3124  0016F6                     
  3125                           ;LCD_16x2.c: 64:         LCD_Command(location);
  3126  0016F6  500E               	movf	LCD_String_xy@location^0,w,c
  3127  0016F8  EC11  F00C         	call	_LCD_Command
  3128                           
  3129                           ;LCD_16x2.c: 65:     }
  3130  0016FC  EF87  F00B         	goto	l1945
  3131  001700                     l1941:
  3132                           
  3133                           ;LCD_16x2.c: 67:     {;LCD_16x2.c: 68:         location=(0xC0) | ((pos) & 0x0f);
  3134  001700  500A               	movf	LCD_String_xy@pos^0,w,c
  3135  001702  0B0F               	andlw	15
  3136  001704  09C0               	iorlw	192
  3137  001706  6E0E               	movwf	LCD_String_xy@location^0,c
  3138  001708                     
  3139                           ;LCD_16x2.c: 69:         LCD_Command(location);
  3140  001708  500E               	movf	LCD_String_xy@location^0,w,c
  3141  00170A  EC11  F00C         	call	_LCD_Command
  3142  00170E                     l1945:
  3143                           
  3144                           ;LCD_16x2.c: 73:     LCD_String(msg);
  3145  00170E  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  3146  001712  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3147  001716  EC81  F00A         	call	_LCD_String	;wreg free
  3148  00171A  0012               	return		;funcret
  3149  00171C                     __end_of_LCD_String_xy:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _LCD_String *****************
  3153 ;; Defined at:
  3154 ;;		line 48 in file "LCD_16x2.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  3157 ;;		 -> STR_14(5), STR_13(8), STR_7(5), STR_6(8), 
  3158 ;;		 -> main@value(10), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         2       0       0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3173 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		_LCD_Char
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_LCD_String_xy
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text15
  3186  001502                     __ptext15:
  3187                           	callstack 0
  3188  001502                     _LCD_String:
  3189                           	callstack 27
  3190  001502                     
  3191                           ;LCD_16x2.c: 48: void LCD_String(const char *msg);LCD_16x2.c: 49: {;LCD_16x2.c: 50:  whi
      +                          le((*msg)!=0)
  3192  001502  EF97  F00A         	goto	l1843
  3193  001506                     l1839:
  3194                           
  3195                           ;LCD_16x2.c: 51:  {;LCD_16x2.c: 52:    LCD_Char(*msg);
  3196  001506  C008  FFF6         	movff	LCD_String@msg,tblptrl
  3197  00150A  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  3198  00150E  6AF8               	clrf	tblptru,c
  3199  001510  0E07               	movlw	(high __ramtop+-1)
  3200  001512  64F7               	cpfsgt	tblptrh,c
  3201  001514  D003               	bra	u1207
  3202  001516  0008               	tblrd		*
  3203  001518  50F5               	movf	tablat,w,c
  3204  00151A  D005               	bra	u1200
  3205  00151C                     u1207:
  3206  00151C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3207  001520  CFF7 FFE2          	movff	tblptrh,fsr1h
  3208  001524  50E7               	movf	indf1,w,c
  3209  001526                     u1200:
  3210  001526  EC03  F00C         	call	_LCD_Char
  3211  00152A                     
  3212                           ;LCD_16x2.c: 53:    msg++;
  3213  00152A  4A08               	infsnz	LCD_String@msg^0,f,c
  3214  00152C  2A09               	incf	(LCD_String@msg+1)^0,f,c
  3215  00152E                     l1843:
  3216                           
  3217                           ;LCD_16x2.c: 50:  while((*msg)!=0)
  3218  00152E  C008  FFF6         	movff	LCD_String@msg,tblptrl
  3219  001532  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  3220  001536  6AF8               	clrf	tblptru,c
  3221  001538  0E07               	movlw	(high __ramtop+-1)
  3222  00153A  64F7               	cpfsgt	tblptrh,c
  3223  00153C  D003               	bra	u1217
  3224  00153E  0008               	tblrd		*
  3225  001540  50F5               	movf	tablat,w,c
  3226  001542  D005               	bra	u1210
  3227  001544                     u1217:
  3228  001544  CFF6 FFE1          	movff	tblptrl,fsr1l
  3229  001548  CFF7 FFE2          	movff	tblptrh,fsr1h
  3230  00154C  50E7               	movf	indf1,w,c
  3231  00154E                     u1210:
  3232  00154E  0900               	iorlw	0
  3233  001550  A4D8               	btfss	status,2,c
  3234  001552  EFAD  F00A         	goto	u1221
  3235  001556  EFAF  F00A         	goto	u1220
  3236  00155A                     u1221:
  3237  00155A  EF83  F00A         	goto	l1839
  3238  00155E                     u1220:
  3239  00155E  0012               	return		;funcret
  3240  001560                     __end_of_LCD_String:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _LCD_Char *****************
  3244 ;; Defined at:
  3245 ;;		line 37 in file "LCD_16x2.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  dat             1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  dat             1    6[COMRAM] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3262 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    1
  3266 ;; This function calls:
  3267 ;;		_MSdelay
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;;		_LCD_String
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text16
  3275  001806                     __ptext16:
  3276                           	callstack 0
  3277  001806                     _LCD_Char:
  3278                           	callstack 27
  3279                           
  3280                           ;incstack = 0
  3281                           ;LCD_Char@dat stored from wreg
  3282  001806  6E07               	movwf	LCD_Char@dat^0,c
  3283  001808                     
  3284                           ;LCD_16x2.c: 37: void LCD_Char(char dat);LCD_16x2.c: 38: {;LCD_16x2.c: 39:  LATD= dat;
  3285  001808  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  3286  00180C                     
  3287                           ;LCD_16x2.c: 40:  LATC0 = 1;
  3288  00180C  808B               	bsf	3979,0,c	;volatile
  3289  00180E                     
  3290                           ;LCD_16x2.c: 41:  LATC1=1;
  3291  00180E  828B               	bsf	3979,1,c	;volatile
  3292  001810                     
  3293                           ;LCD_16x2.c: 42:  __nop();
  3294  001810  F000               	nop	
  3295  001812                     
  3296                           ;LCD_16x2.c: 43:  LATC1=0;
  3297  001812  928B               	bcf	3979,1,c	;volatile
  3298  001814                     
  3299                           ;LCD_16x2.c: 44:     MSdelay(1);
  3300  001814  0E00               	movlw	0
  3301  001816  6E02               	movwf	(MSdelay@val+1)^0,c
  3302  001818  0E01               	movlw	1
  3303  00181A  6E01               	movwf	MSdelay@val^0,c
  3304  00181C  EC07  F00B         	call	_MSdelay	;wreg free
  3305  001820  0012               	return		;funcret
  3306  001822                     __end_of_LCD_Char:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _LCD_Init *****************
  3310 ;; Defined at:
  3311 ;;		line 9 in file "LCD_16x2.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    2
  3332 ;; This function calls:
  3333 ;;		_LCD_Command
  3334 ;;		_MSdelay
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text17
  3341  00178C                     __ptext17:
  3342                           	callstack 0
  3343  00178C                     _LCD_Init:
  3344                           	callstack 28
  3345  00178C                     
  3346                           ;LCD_16x2.c: 11:     TRISD = 0x00;
  3347  00178C  0E00               	movlw	0
  3348  00178E  6E95               	movwf	149,c	;volatile
  3349                           
  3350                           ;LCD_16x2.c: 12:     TRISC = 0x00;
  3351  001790  0E00               	movlw	0
  3352  001792  6E94               	movwf	148,c	;volatile
  3353  001794                     
  3354                           ;LCD_16x2.c: 13:     MSdelay(20);
  3355  001794  0E00               	movlw	0
  3356  001796  6E02               	movwf	(MSdelay@val+1)^0,c
  3357  001798  0E14               	movlw	20
  3358  00179A  6E01               	movwf	MSdelay@val^0,c
  3359  00179C  EC07  F00B         	call	_MSdelay	;wreg free
  3360  0017A0                     
  3361                           ;LCD_16x2.c: 14:  LCD_Command(0x38);
  3362  0017A0  0E38               	movlw	56
  3363  0017A2  EC11  F00C         	call	_LCD_Command
  3364  0017A6                     
  3365                           ;LCD_16x2.c: 15:     LCD_Command(0x01);
  3366  0017A6  0E01               	movlw	1
  3367  0017A8  EC11  F00C         	call	_LCD_Command
  3368  0017AC                     
  3369                           ;LCD_16x2.c: 16:     LCD_Command(0x0c);
  3370  0017AC  0E0C               	movlw	12
  3371  0017AE  EC11  F00C         	call	_LCD_Command
  3372  0017B2                     
  3373                           ;LCD_16x2.c: 17:     LCD_Command(0x06);
  3374  0017B2  0E06               	movlw	6
  3375  0017B4  EC11  F00C         	call	_LCD_Command
  3376  0017B8  0012               	return		;funcret
  3377  0017BA                     __end_of_LCD_Init:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _LCD_Command *****************
  3381 ;; Defined at:
  3382 ;;		line 26 in file "LCD_16x2.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  cmd             1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  cmd             1    6[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		_MSdelay
  3405 ;; This function is called by:
  3406 ;;		_LCD_Init
  3407 ;;		_LCD_String_xy
  3408 ;;		_LCD_Clear
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text18
  3413  001822                     __ptext18:
  3414                           	callstack 0
  3415  001822                     _LCD_Command:
  3416                           	callstack 28
  3417                           
  3418                           ;incstack = 0
  3419                           ;LCD_Command@cmd stored from wreg
  3420  001822  6E07               	movwf	LCD_Command@cmd^0,c
  3421  001824                     
  3422                           ;LCD_16x2.c: 26: void LCD_Command(char cmd );LCD_16x2.c: 27: {;LCD_16x2.c: 28:  LATD= cm
      +                          d;
  3423  001824  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  3424  001828                     
  3425                           ;LCD_16x2.c: 29:  LATC0 = 0;
  3426  001828  908B               	bcf	3979,0,c	;volatile
  3427  00182A                     
  3428                           ;LCD_16x2.c: 30:  LATC1 = 1;
  3429  00182A  828B               	bsf	3979,1,c	;volatile
  3430  00182C                     
  3431                           ;LCD_16x2.c: 31:  __nop();
  3432  00182C  F000               	nop	
  3433  00182E                     
  3434                           ;LCD_16x2.c: 32:  LATC1 = 0;
  3435  00182E  928B               	bcf	3979,1,c	;volatile
  3436  001830                     
  3437                           ;LCD_16x2.c: 33:     MSdelay(3);
  3438  001830  0E00               	movlw	0
  3439  001832  6E02               	movwf	(MSdelay@val+1)^0,c
  3440  001834  0E03               	movlw	3
  3441  001836  6E01               	movwf	MSdelay@val^0,c
  3442  001838  EC07  F00B         	call	_MSdelay	;wreg free
  3443  00183C  0012               	return		;funcret
  3444  00183E                     __end_of_LCD_Command:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _MSdelay *****************
  3448 ;; Defined at:
  3449 ;;		line 77 in file "LCD_16x2.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  val             2    0[COMRAM] unsigned int 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  j               2    4[COMRAM] unsigned int 
  3454 ;;  i               2    2[COMRAM] unsigned int 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3464 ;;      Params:         2       0       0       0       0       0       0       0       0
  3465 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3467 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3468 ;;Total ram usage:        6 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;;		_LCD_Init
  3475 ;;		_LCD_Command
  3476 ;;		_LCD_Char
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text19
  3481  00160E                     __ptext19:
  3482                           	callstack 0
  3483  00160E                     _MSdelay:
  3484                           	callstack 30
  3485  00160E                     
  3486                           ;LCD_16x2.c: 77: void MSdelay(unsigned int val);LCD_16x2.c: 78: {;LCD_16x2.c: 79:      u
      +                          nsigned int i,j;;LCD_16x2.c: 80:         for(i=0;i<=val;i++)
  3487  00160E  0E00               	movlw	0
  3488  001610  6E04               	movwf	(MSdelay@i+1)^0,c
  3489  001612  0E00               	movlw	0
  3490  001614  6E03               	movwf	MSdelay@i^0,c
  3491  001616  EF20  F00B         	goto	l1719
  3492  00161A                     l1707:
  3493                           
  3494                           ;LCD_16x2.c: 81:             for(j=0;j<81;j++);
  3495  00161A  0E00               	movlw	0
  3496  00161C  6E06               	movwf	(MSdelay@j+1)^0,c
  3497  00161E  0E00               	movlw	0
  3498  001620  6E05               	movwf	MSdelay@j^0,c
  3499  001622                     l1713:
  3500  001622  4A05               	infsnz	MSdelay@j^0,f,c
  3501  001624  2A06               	incf	(MSdelay@j+1)^0,f,c
  3502  001626  5006               	movf	(MSdelay@j+1)^0,w,c
  3503  001628  E109               	bnz	u990
  3504  00162A  0E51               	movlw	81
  3505  00162C  5C05               	subwf	MSdelay@j^0,w,c
  3506  00162E  A0D8               	btfss	status,0,c
  3507  001630  EF1C  F00B         	goto	u991
  3508  001634  EF1E  F00B         	goto	u990
  3509  001638                     u991:
  3510  001638  EF11  F00B         	goto	l1713
  3511  00163C                     u990:
  3512  00163C  4A03               	infsnz	MSdelay@i^0,f,c
  3513  00163E  2A04               	incf	(MSdelay@i+1)^0,f,c
  3514  001640                     l1719:
  3515  001640  5003               	movf	MSdelay@i^0,w,c
  3516  001642  5C01               	subwf	MSdelay@val^0,w,c
  3517  001644  5004               	movf	(MSdelay@i+1)^0,w,c
  3518  001646  5802               	subwfb	(MSdelay@val+1)^0,w,c
  3519  001648  B0D8               	btfsc	status,0,c
  3520  00164A  EF29  F00B         	goto	u1001
  3521  00164E  EF2B  F00B         	goto	u1000
  3522  001652                     u1001:
  3523  001652  EF0D  F00B         	goto	l1707
  3524  001656                     u1000:
  3525  001656  0012               	return		;funcret
  3526  001658                     __end_of_MSdelay:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _DHT11_Start *****************
  3530 ;; Defined at:
  3531 ;;		line 204 in file "humidity_Temp.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        1 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text20
  3559  0017E6                     __ptext20:
  3560                           	callstack 0
  3561  0017E6                     _DHT11_Start:
  3562                           	callstack 30
  3563  0017E6                     
  3564                           ;humidity_Temp.c: 206:     TRISCbits.RC2 = 0;
  3565  0017E6  9494               	bcf	148,2,c	;volatile
  3566                           
  3567                           ;humidity_Temp.c: 207:     LATC2 = 0;
  3568  0017E8  948B               	bcf	3979,2,c	;volatile
  3569  0017EA                     
  3570                           ;humidity_Temp.c: 208:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3571  0017EA  0E2F               	movlw	47
  3572  0017EC  6E01               	movwf	??_DHT11_Start^0,c
  3573  0017EE  0EC0               	movlw	192
  3574  0017F0                     u1497:
  3575  0017F0  2EE8               	decfsz	wreg,f,c
  3576  0017F2  D7FE               	bra	u1497
  3577  0017F4  2E01               	decfsz	??_DHT11_Start^0,f,c
  3578  0017F6  D7FC               	bra	u1497
  3579  0017F8                     
  3580                           ;humidity_Temp.c: 209:     LATC2 = 1;
  3581  0017F8  848B               	bsf	3979,2,c	;volatile
  3582                           
  3583                           ;humidity_Temp.c: 210:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  3584  0017FA  0E0D               	movlw	13
  3585  0017FC                     u1507:
  3586  0017FC  2EE8               	decfsz	wreg,f,c
  3587  0017FE  D7FE               	bra	u1507
  3588  001800  F000               	nop	
  3589  001802                     
  3590                           ;humidity_Temp.c: 211:     TRISCbits.RC2 = 1;
  3591  001802  8494               	bsf	148,2,c	;volatile
  3592  001804  0012               	return		;funcret
  3593  001806                     __end_of_DHT11_Start:
  3594                           	callstack 0
  3595                           
  3596 ;; *************** function _DHT11_ReadData *****************
  3597 ;; Defined at:
  3598 ;;		line 187 in file "humidity_Temp.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  data            1    1[COMRAM] unsigned char 
  3603 ;;  i               1    0[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      unsigned char 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0
  3614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3616 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text21
  3627  001560                     __ptext21:
  3628                           	callstack 0
  3629  001560                     _DHT11_ReadData:
  3630                           	callstack 30
  3631  001560                     
  3632                           ;humidity_Temp.c: 189:   char i,data = 0;
  3633  001560  0E00               	movlw	0
  3634  001562  6E02               	movwf	DHT11_ReadData@data^0,c
  3635                           
  3636                           ;humidity_Temp.c: 190:     for(i=0;i<8;i++)
  3637  001564  0E00               	movlw	0
  3638  001566  6E01               	movwf	DHT11_ReadData@i^0,c
  3639  001568                     l89:
  3640  001568  A482               	btfss	130,2,c	;volatile
  3641  00156A  EFB9  F00A         	goto	u1271
  3642  00156E  EFBB  F00A         	goto	u1270
  3643  001572                     u1271:
  3644  001572  EFB4  F00A         	goto	l89
  3645  001576                     u1270:
  3646  001576                     
  3647                           ;humidity_Temp.c: 193:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  3648  001576  0E14               	movlw	20
  3649  001578                     u1517:
  3650  001578  2EE8               	decfsz	wreg,f,c
  3651  00157A  D7FE               	bra	u1517
  3652  00157C                     
  3653                           ;humidity_Temp.c: 194:         if(PORTCbits.RC2 & 1)
  3654  00157C  A482               	btfss	130,2,c	;volatile
  3655  00157E  EFC3  F00A         	goto	u1281
  3656  001582  EFC5  F00A         	goto	u1280
  3657  001586                     u1281:
  3658  001586  EFC9  F00A         	goto	l1899
  3659  00158A                     u1280:
  3660  00158A                     
  3661                           ;humidity_Temp.c: 195:           data = ((data<<1) | 1);
  3662  00158A  80D8               	bsf	status,0,c
  3663  00158C  3602               	rlcf	DHT11_ReadData@data^0,f,c
  3664  00158E  EFCC  F00A         	goto	l94
  3665  001592                     l1899:
  3666                           
  3667                           ;humidity_Temp.c: 197:           data = (data<<1);
  3668  001592  5002               	movf	DHT11_ReadData@data^0,w,c
  3669  001594  2402               	addwf	DHT11_ReadData@data^0,w,c
  3670  001596  6E02               	movwf	DHT11_ReadData@data^0,c
  3671  001598                     l94:
  3672  001598  B482               	btfsc	130,2,c	;volatile
  3673  00159A  EFD1  F00A         	goto	u1291
  3674  00159E  EFD3  F00A         	goto	u1290
  3675  0015A2                     u1291:
  3676  0015A2  EFCC  F00A         	goto	l94
  3677  0015A6                     u1290:
  3678  0015A6                     
  3679                           ;humidity_Temp.c: 200:     }
  3680  0015A6  2A01               	incf	DHT11_ReadData@i^0,f,c
  3681  0015A8  0E07               	movlw	7
  3682  0015AA  6401               	cpfsgt	DHT11_ReadData@i^0,c
  3683  0015AC  EFDA  F00A         	goto	u1301
  3684  0015B0  EFDC  F00A         	goto	u1300
  3685  0015B4                     u1301:
  3686  0015B4  EFB4  F00A         	goto	l89
  3687  0015B8                     u1300:
  3688  0015B8                     
  3689                           ;humidity_Temp.c: 201:   return data;
  3690  0015B8  5002               	movf	DHT11_ReadData@data^0,w,c
  3691  0015BA  0012               	return		;funcret
  3692  0015BC                     __end_of_DHT11_ReadData:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _DHT11_CheckResponse *****************
  3696 ;; Defined at:
  3697 ;;		line 215 in file "humidity_Temp.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		None
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text22
  3725  0017BA                     __ptext22:
  3726                           	callstack 0
  3727  0017BA                     _DHT11_CheckResponse:
  3728                           	callstack 30
  3729  0017BA                     l103:
  3730  0017BA  B482               	btfsc	130,2,c	;volatile
  3731  0017BC  EFE2  F00B         	goto	u1241
  3732  0017C0  EFE4  F00B         	goto	u1240
  3733  0017C4                     u1241:
  3734  0017C4  EFDD  F00B         	goto	l103
  3735  0017C8                     u1240:
  3736  0017C8                     l106:
  3737  0017C8  A482               	btfss	130,2,c	;volatile
  3738  0017CA  EFE9  F00B         	goto	u1251
  3739  0017CE  EFEB  F00B         	goto	u1250
  3740  0017D2                     u1251:
  3741  0017D2  EFE4  F00B         	goto	l106
  3742  0017D6                     u1250:
  3743  0017D6                     l109:
  3744  0017D6  B482               	btfsc	130,2,c	;volatile
  3745  0017D8  EFF0  F00B         	goto	u1261
  3746  0017DC  EFF2  F00B         	goto	u1260
  3747  0017E0                     u1261:
  3748  0017E0  EFEB  F00B         	goto	l109
  3749  0017E4                     u1260:
  3750  0017E4  0012               	return		;funcret
  3751  0017E6                     __end_of_DHT11_CheckResponse:
  3752                           	callstack 0
  3753                           
  3754                           	psect	rparam
  3755  0000                     
  3756                           	psect	idloc
  3757                           
  3758                           ;Config register IDLOC0 @ 0x200000
  3759                           ;	unspecified, using default values
  3760  200000                     	org	2097152
  3761  200000  FF                 	db	255
  3762                           
  3763                           ;Config register IDLOC1 @ 0x200001
  3764                           ;	unspecified, using default values
  3765  200001                     	org	2097153
  3766  200001  FF                 	db	255
  3767                           
  3768                           ;Config register IDLOC2 @ 0x200002
  3769                           ;	unspecified, using default values
  3770  200002                     	org	2097154
  3771  200002  FF                 	db	255
  3772                           
  3773                           ;Config register IDLOC3 @ 0x200003
  3774                           ;	unspecified, using default values
  3775  200003                     	org	2097155
  3776  200003  FF                 	db	255
  3777                           
  3778                           ;Config register IDLOC4 @ 0x200004
  3779                           ;	unspecified, using default values
  3780  200004                     	org	2097156
  3781  200004  FF                 	db	255
  3782                           
  3783                           ;Config register IDLOC5 @ 0x200005
  3784                           ;	unspecified, using default values
  3785  200005                     	org	2097157
  3786  200005  FF                 	db	255
  3787                           
  3788                           ;Config register IDLOC6 @ 0x200006
  3789                           ;	unspecified, using default values
  3790  200006                     	org	2097158
  3791  200006  FF                 	db	255
  3792                           
  3793                           ;Config register IDLOC7 @ 0x200007
  3794                           ;	unspecified, using default values
  3795  200007                     	org	2097159
  3796  200007  FF                 	db	255
  3797                           
  3798                           	psect	config
  3799                           
  3800                           ;Config register CONFIG1L @ 0x300000
  3801                           ;	PLL Prescaler Selection bits
  3802                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3803                           ;	System Clock Postscaler Selection bits
  3804                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3805                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3806                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3807  300000                     	org	3145728
  3808  300000  00                 	db	0
  3809                           
  3810                           ;Config register CONFIG1H @ 0x300001
  3811                           ;	Oscillator Selection bits
  3812                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3813                           ;	Fail-Safe Clock Monitor Enable bit
  3814                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3815                           ;	Internal/External Oscillator Switchover bit
  3816                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3817  300001                     	org	3145729
  3818  300001  09                 	db	9
  3819                           
  3820                           ;Config register CONFIG2L @ 0x300002
  3821                           ;	Power-up Timer Enable bit
  3822                           ;	PWRT = OFF, PWRT disabled
  3823                           ;	Brown-out Reset Enable bits
  3824                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3825                           ;	Brown-out Reset Voltage bits
  3826                           ;	BORV = 3, Minimum setting 2.05V
  3827                           ;	USB Voltage Regulator Enable bit
  3828                           ;	VREGEN = OFF, USB voltage regulator disabled
  3829  300002                     	org	3145730
  3830  300002  1F                 	db	31
  3831                           
  3832                           ;Config register CONFIG2H @ 0x300003
  3833                           ;	Watchdog Timer Enable bit
  3834                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3835                           ;	Watchdog Timer Postscale Select bits
  3836                           ;	WDTPS = 32768, 1:32768
  3837  300003                     	org	3145731
  3838  300003  1E                 	db	30
  3839                           
  3840                           ; Padding undefined space
  3841  300004                     	org	3145732
  3842  300004  FF                 	db	255
  3843                           
  3844                           ;Config register CONFIG3H @ 0x300005
  3845                           ;	CCP2 MUX bit
  3846                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3847                           ;	PORTB A/D Enable bit
  3848                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3849                           ;	Low-Power Timer 1 Oscillator Enable bit
  3850                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3851                           ;	MCLR Pin Enable bit
  3852                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3853  300005                     	org	3145733
  3854  300005  00                 	db	0
  3855                           
  3856                           ;Config register CONFIG4L @ 0x300006
  3857                           ;	Stack Full/Underflow Reset Enable bit
  3858                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3859                           ;	Single-Supply ICSP Enable bit
  3860                           ;	LVP = OFF, Single-Supply ICSP disabled
  3861                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3862                           ;	ICPRT = OFF, ICPORT disabled
  3863                           ;	Extended Instruction Set Enable bit
  3864                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3865                           ;	Background Debugger Enable bit
  3866                           ;	DEBUG = 0x1, unprogrammed default
  3867  300006                     	org	3145734
  3868  300006  81                 	db	129
  3869                           
  3870                           ; Padding undefined space
  3871  300007                     	org	3145735
  3872  300007  FF                 	db	255
  3873                           
  3874                           ;Config register CONFIG5L @ 0x300008
  3875                           ;	Code Protection bit
  3876                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3877                           ;	Code Protection bit
  3878                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3879                           ;	Code Protection bit
  3880                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3881                           ;	Code Protection bit
  3882                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3883  300008                     	org	3145736
  3884  300008  0F                 	db	15
  3885                           
  3886                           ;Config register CONFIG5H @ 0x300009
  3887                           ;	Boot Block Code Protection bit
  3888                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3889                           ;	Data EEPROM Code Protection bit
  3890                           ;	CPD = OFF, Data EEPROM is not code-protected
  3891  300009                     	org	3145737
  3892  300009  C0                 	db	192
  3893                           
  3894                           ;Config register CONFIG6L @ 0x30000A
  3895                           ;	Write Protection bit
  3896                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3897                           ;	Write Protection bit
  3898                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3899                           ;	Write Protection bit
  3900                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3901                           ;	Write Protection bit
  3902                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3903  30000A                     	org	3145738
  3904  30000A  0F                 	db	15
  3905                           
  3906                           ;Config register CONFIG6H @ 0x30000B
  3907                           ;	Configuration Register Write Protection bit
  3908                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3909                           ;	Boot Block Write Protection bit
  3910                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3911                           ;	Data EEPROM Write Protection bit
  3912                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3913  30000B                     	org	3145739
  3914  30000B  E0                 	db	224
  3915                           
  3916                           ;Config register CONFIG7L @ 0x30000C
  3917                           ;	Table Read Protection bit
  3918                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3919                           ;	Table Read Protection bit
  3920                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3921                           ;	Table Read Protection bit
  3922                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3923                           ;	Table Read Protection bit
  3924                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3925  30000C                     	org	3145740
  3926  30000C  0F                 	db	15
  3927                           
  3928                           ;Config register CONFIG7H @ 0x30000D
  3929                           ;	Boot Block Table Read Protection bit
  3930                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3931  30000D                     	org	3145741
  3932  30000D  40                 	db	64
  3933                           tosu	equ	0xFFF
  3934                           tosh	equ	0xFFE
  3935                           tosl	equ	0xFFD
  3936                           stkptr	equ	0xFFC
  3937                           pclatu	equ	0xFFB
  3938                           pclath	equ	0xFFA
  3939                           pcl	equ	0xFF9
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           indf0	equ	0xFEF
  3947                           postinc0	equ	0xFEE
  3948                           postdec0	equ	0xFED
  3949                           preinc0	equ	0xFEC
  3950                           plusw0	equ	0xFEB
  3951                           fsr0h	equ	0xFEA
  3952                           fsr0l	equ	0xFE9
  3953                           wreg	equ	0xFE8
  3954                           indf1	equ	0xFE7
  3955                           postinc1	equ	0xFE6
  3956                           postdec1	equ	0xFE5
  3957                           preinc1	equ	0xFE4
  3958                           plusw1	equ	0xFE3
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           bsr	equ	0xFE0
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           preinc2	equ	0xFDC
  3966                           plusw2	equ	0xFDB
  3967                           fsr2h	equ	0xFDA
  3968                           fsr2l	equ	0xFD9
  3969                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        16
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     48     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S886_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[5]), STR_13(CODE[8]), STR_7(CODE[5]), STR_6(CODE[8]), 
		 -> main@value(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[5]), STR_13(CODE[8]), STR_7(CODE[5]), STR_6(CODE[8]), 
		 -> main@value(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   16248
                                             10 BANK0     38    38      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                             _onLEDS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7824
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _onLEDS                                               3     3      0      89
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3068
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1071
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     646
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1270
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     646
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     624
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _LCD_Char
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _onLEDS
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      66       5       63.7%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      20        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 13 12:06:55 2020

                main@Checksum 0087                  ?_LCD_Command 0001                            l55 08BC  
                          l94 1598                            l97 15BA                            l89 1568  
                 ?_LCD_String 0008                           l100 1804                           l103 17BA  
                         l112 17E4                           l106 17C8                           l109 17D6  
                         l117 1498                           l119 149E                           l144 183C  
                         l153 155E                           l138 17B8                           l147 1820  
                         l166 1656                           l158 171A                           l283 1136  
                         l296 129A                           l912 0FAE                           l905 0DFA  
                         l923 16D2                           l926 16DA                           l918 14F8  
                         l919 1500                           l847 160C                           l938 1364  
                         l946 169A                           l874 13AA                           l955 178A  
                         l949 184E                           l877 13EC                           l885 0BBE  
                         l879 1426                           l887 0BC6                 main@T_Decimal 008C  
                         u800 177E                           u801 177A                           u810 0FC2  
                         u811 0FBE                           u820 0FF4                           u900 11BA  
                         u821 0FF0                           u901 11B6                           u910 11E4  
                         u750 12AE                           u831 101E                           u911 11E0  
                         u751 12AA                           u840 1042                           u920 1212  
                         u760 12C0                           u841 103E                           u921 120E  
                         u761 12BC                           u850 106C                           u930 125A  
                         u770 12E8                           u851 1068                           u931 1256  
                         u771 12E4                           u860 10AC                           u780 131E  
                         u940 1374                           u861 10A8                           u781 131A  
                         u941 1370                           u870 10F6                           u790 169A  
                         u950 1396                           u871 10F2                           u791 1696  
                         u951 1392                           u880 114A                           u960 13EC  
                         u881 1146                           u961 13E8                           u890 117C  
                         u970 13FA                           u891 1178                           u971 13F6  
                         u980 16B6                           u981 16B2                           u990 163C  
                         u991 1638                           _abs 169C                           _pad 1366  
                         wreg 000FE8                   LCD_Char@dat 0007                          l2001 0932  
                        l2011 096A                          l2003 0934                          ?_abs 0013  
                        l2021 09A2                          l2013 096C                          l2005 093A  
                        l2031 09DA                          l2023 09A4                          l2015 0972  
                        l2007 0946                          l2041 0A1A                          l2033 09DC  
                        l2025 09AA                          l2009 0956                          l2017 097E  
                        l2051 0A72                          l2043 0A34                          l2035 09E6  
                        l2019 098E                          l2027 09B6                          l2061 0ABE  
                        l2053 0A8C                          l2045 0A40                          l2029 09C6  
                        l2037 09EE                          l2071 0B0A                          l2063 0AD0  
                        l2055 0A98                          l2047 0A46                          l2039 0A08  
                        l1601 0FB4                          l2065 0AE2                          l2057 0A9E  
                        l2049 0A60                          l1611 1014                          l1603 0FC2  
                        l2059 0AA4                          l2067 0AEE                          l1621 105E  
                        l1613 1018                          l1605 0FE2                          l1701 169C  
                        l2069 0B02                          l1631 10CE                          l1623 106C  
                        l1615 1024                          l1607 0FE6                          l1703 16B6  
                        l1713 1622                          l1705 160E                          l1633 10E0  
                        l1625 107E                          l1617 1042                          l1609 0FF4  
                        l1721 0B1E                          l1801 0E40                          l1715 1626  
                        l1707 161A                          l1627 10AC                          l1619 104A  
                        l1635 10E6                          l1651 116E                          l1643 1138  
                        l1571 12C0                          l1731 0B98                          l1723 0B3E  
                        l1803 0E44                          l1901 15A6                          l1717 163C  
                        l1637 10F6                          l1629 10CC                          l1661 11D6  
                        l1653 117C                          l1645 113C                          l1573 12CA  
                        l1581 1658                          l1741 0BF4                          l1733 0BB2  
                        l1725 0B66                          l1813 0F0C                          l1805 0E68  
                        l1903 15A8                          l1719 1640                          l1911 1430  
                        l1639 1116                          l1663 11E4                          l1671 124A  
                        l1655 119C                          l1647 114A                          l1575 12E8  
                        l1567 129C                          l1583 1664                          l1591 1762  
                        l1751 0C92                          l1743 0BFC                          l1735 0BCE  
                        l1727 0B86                          l1831 0F9C                          l1815 0F30  
                        l1823 0F5E                          l1807 0E8C                          l1905 15B8  
                        l1841 152A                          l1913 144C                          l1673 125A  
                        l1665 1212                          l1657 11BA                          l1649 116A  
                        l1577 131E                          l1569 12AE                          l1585 1676  
                        l1593 1766                          l1681 1374                          l1761 0D4E  
                        l1753 0C98                          l1745 0C04                          l1737 0BE0  
                        l1729 0B96                          l1825 0F6C                          l1817 0F3E  
                        l1809 0ED4                          l1921 15BC                          l1851 182C  
                        l1843 152E                          l1915 1456                          l1675 127A  
                        l1667 1232                          l1659 11C2                          l1587 167A  
                        l1595 177E                          l1691 13CA                          l1683 1388  
                        l1771 0D9C                          l1763 0D68                          l1747 0C0A  
                        l1755 0CFC                          l1739 0BEE                          l1819 0F52  
                        l1923 15CE                          l1853 182E                          l1845 1824  
                        l1837 1502                          l1941 1700                          l1933 16DE  
                        l1917 1472                          l1909 142A                          l1669 1244  
                        l1589 1756                          l1693 13CE                          l1685 1396  
                        l1773 0DAE                          l1757 0D16                          l1765 0D76  
                        l1749 0C8C                          l1829 0F78                          l1861 14B6  
                        l1925 15D6                          l1855 1830                          l1847 1828  
                        l1871 17A6                          l1791 1812                          l1783 1808  
                        l1839 1506                          l1943 1708                          l1935 16DE  
                        l1919 148E                          l1599 0FB0                          l1695 13FA  
                        l1687 13A2                          l1679 1366                          l1775 0DBA  
                        l1767 0D88                          l1759 0D34                          l1863 14DC  
                        l1927 15DE                          l1951 083A                          l1881 17F8  
                        l1849 182A                          l1873 17AC                          l1865 178C  
                        l1793 1814                          l1785 180C                          l1945 170E  
                        l1937 16EE                          l1697 140E                          l1689 13B6  
                        l1777 0DC2                          l1769 0D96                          l1857 14A0  
                        l1929 15FA                          l1961 0852                          l1953 083E  
                        l1883 1802                          l1875 17B2                          l1867 1794  
                        l1787 180E                          l1939 16F6                          l1779 0DD2  
                        l1795 0DFC                          l1859 14A8                          l1971 087C  
                        l1963 085A                          l1955 0842                          l1947 081E  
                        l1885 17BA                          l1893 1576                          l1877 17E6  
                        l1869 17A0                          l1789 1810                          l1797 0E20  
                        l1981 08B4                          l1973 087C                          l1965 0862  
                        l1957 0846                          l1949 0834                          ?_pad 0011  
                        l1895 157C                          l1887 1560                          l1879 17EA  
                        l1799 0E2E                          l1991 08E0                          l1975 088E  
                        l1967 086A                          l1959 084A                          l1897 158A  
                        l1993 08FC                          l1977 08A0                          l1969 0876  
                        l1899 1592                          l1995 0902                          l1987 08CA  
                        l1979 08A2                          l1989 08DC                          l1997 090E  
                        l1999 091E                          STR_1 0819                          STR_2 080E  
                        STR_3 0819                          STR_4 0818                          STR_5 0809  
                        STR_6 0801                          STR_7 0813                          u1000 1656  
                        u1001 1652                          u1010 0B4E                          u1011 0B48  
                        u1100 0D4E                          u1020 0B50                          u1101 0D4A  
                        u1110 0D68                          u1030 0B66                          u1111 0D64  
                        u1031 0B62                          u1200 1526                          u1120 0D76  
                        u1040 0B96                          u1121 0D72                          u1041 0B92  
                        u1210 154E                          u1130 0D88                          u1050 0BB2  
                        u1131 0D84                          u1051 0BAE                          u1300 15B8  
                        u1220 155E                          u1140 0D96                          u1060 0BE0  
                        u1301 15B4                          u1221 155A                          u1141 0D92  
                        u1061 0BDC                          u1310 144C                          u1150 0DAE  
                        u1070 0BEE                          u1230 14F8                          u1207 151C  
                        u1311 1448                          u1151 0DAA                          u1071 0BEA  
                        u1231 14F4                          u1240 17C8                          u1320 1472  
                        u1080 0D16                          u1160 0E20                          u1400 091E  
                        u1241 17C4                          u1217 1544                          u1321 146E  
                        u1081 0D12                          u1161 0E1C                          u1401 091A  
                        u1250 17D6                          u1330 148E                          u1090 0D34  
                        u1170 0E68                          u1410 0932                          u1251 17D2  
                        u1331 148A                          u1091 0D30                          u1171 0E64  
                        u1411 092E                          u1260 17E4                          u1340 16EE  
                        u1180 0E8C                          u1420 0956                          u1261 17E0  
                        u1341 16EA                          u1181 0E88                          u1421 0952  
                        u1270 1576                          u1190 0F30                          u1430 096A  
                        u1350 088E                          u1271 1572                          u1191 0F2C  
                        u1431 0966                          u1351 088A                          u1280 158A  
                        u1440 098E                          u1360 08A0                          _LATD 000F8C  
                        u1281 1586                          u1441 098A                          u1361 089C  
                        u1290 15A6                          u1450 09A2                          u1291 15A2  
                        u1507 17FC                          u1451 099E                          u1371 08AC  
                        u1460 09C6                          u1380 08CA                          u1517 1578  
                        u1461 09C2                          u1381 08C6                          u1470 09DA  
                        u1390 08FC                          u1471 09D6                          u1391 08F8  
                        u1480 0B02                          u1481 0AFE                          u1497 17F0  
                        abs@a 0013                          _dbuf 0096                          _main 081E  
                        _dtoa 0B1E                          _prec 0094                          _nout 0090  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 001A                          fsr2l 000FD9  
                        start 0000               __end_of_MSdelay 1658              ??_DHT11_ReadData 0001  
               _LCD_String_xy 16DC          __size_of_DHT11_Start 0020                  ___param_bank 000000  
              main@T_Integral 008F                         ??_abs 0015                         ??_pad 0017  
            __end_of_LCD_Char 1822              __end_of_LCD_Init 17BA               __end_of___aodiv 1138  
                       ?_main 0001                         ?_dtoa 001C               __end_of___aomod 129C  
                       _LATC0 007C58                         _LATC1 007C59                         _LATC2 007C5A  
                vfpfcnvrt@fmt 0042                         _TRISA 000F92                         _TRISC 000F94  
                       _TRISD 000F95                         _TXREG 000FAD                         _flags 005E  
                       _fputc 129C                         _fputs 1658                         pad@fp 0011  
                       _width 0092                         _putch 184E                         main@i 008A  
                       dtoa@d 001E                         dtoa@i 003E                         dtoa@n 0036  
                       dtoa@p 0030                         dtoa@s 0034                         dtoa@w 0032  
                       tablat 000FF5                         plusw1 000FE3                         plusw2 000FDB  
                       status 000FD8           __size_of_LCD_String 005E               __end_of_sprintf 160E  
              ?_LCD_String_xy 000A               __initialization 171C                  __end_of_main 0B1E  
                __end_of_dtoa 0DFC                        ??_main 005E                        ??_dtoa 0026  
               __activetblptr 000002                 main@buffer_TX 006A                        _ADCON1 000FC1  
                      ?_fputc 0001                        ?_fputs 000A                        ?_putch 0001  
         _DHT11_CheckResponse 17BA              LCD_String_xy@msg 000B              LCD_String_xy@pos 000A  
            LCD_String_xy@row 000D                     ??_MSdelay 0003                        _OSCCON 000FD3  
                vfprintf@cfmt 0056                     ??___aodiv 0011                     ??___aomod 0011  
                      _onLEDS 1428          ?_DHT11_CheckResponse 0001                        clear_0 1742  
                      pad@buf 0013          __size_of_LCD_Command 001C                        dtoa@fp 001C  
                      _strlen 1756                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                        fputs@s 000A                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001              __end_of_vfprintf 1502                     ??_sprintf 005E  
                   ?_LCD_Char 0001                    __accesstop 0060       __end_of__initialization 174C  
                   ?_LCD_Init 0001               ??_LCD_String_xy 000D                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                  __pidataBANK0 183E         ??_DHT11_CheckResponse 0001  
               __end_of_fputc 1366                 __end_of_fputs 169C                 __end_of_putch 1850  
                ??_LCD_String 000A                       ??_fputc 0005                       ??_fputs 000E  
                     ??_putch 0001                    __pbssBANK0 0090                    ??_LCD_Char 0007  
                  ??_LCD_Init 0008            __end_of_LCD_String 1560                       ?_onLEDS 0001  
                     ?_strlen 0001            __size_of_vfpfcnvrt 01B4                       _MSdelay 160E  
               ??_DHT11_Start 0001                 LCD_String@msg 0008                       __Hparam 0000  
                     __Lparam 0000                       ___aodiv 0FB0                       ___aomod 1138  
             __size_of_onLEDS 0078                     ?_vfprintf 0050                  __psmallconst 0800  
                     __pcinit 171C                       __ramtop 0800                       __ptext0 081E  
                     __ptext1 15BC                       __ptext2 14A0                       __ptext3 0DFC  
                     __ptext4 0B1E                       __ptext5 1366                       __ptext6 1756  
                     __ptext7 1658                       __ptext8 129C                       __ptext9 184E  
             __size_of_strlen 0036                  __size_of_abs 0040                  __size_of_pad 00C2  
                     main@agr 0088                       _sprintf 15BC          end_of_initialization 174C  
                     fputc@fp 0003                LCD_Command@cmd 0007                 __Lmediumconst 0000  
                     fputs@fp 000C             __end_of_vfpfcnvrt 0FB0           __end_of_DHT11_Start 1806  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 0056  
                     strlen@a 0003                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTBbits 000F81                     _PORTCbits 000F82       __size_of_DHT11_ReadData 005C  
                   _TRISCbits 000F94                     _TXSTAbits 000FAC             __size_of_LCD_Char 001C  
           __size_of_LCD_Init 002E            DHT11_ReadData@data 0002                 ??_LCD_Command 0007  
                 vfpfcnvrt@ap 0044                   vfpfcnvrt@fp 0040                   vfpfcnvrt@ll 0048  
              __end_of_onLEDS 14A0                __end_of_strlen 178C           start_initialization 171C  
                 __end_of_abs 16DC                   __end_of_pad 1428                   _DHT11_Start 17E6  
 __end_of_DHT11_CheckResponse 17E6         __end_of_LCD_String_xy 171C                   vfprintf@fmt 0052  
                    ??_onLEDS 0001                   __pdataBANK0 00B6                      ??_strlen 0003  
         __end_of_LCD_Command 183E                   __pbssCOMRAM 005E                 __pcstackBANK0 0060  
            ___aodiv@dividend 0001                      ?_MSdelay 0001                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013                _DHT11_ReadData 1560  
           __size_of_vfprintf 0062                   __smallconst 0800         LCD_String_xy@location 000E  
                    ?_sprintf 0058                __size_of_fputc 00CA                __size_of_fputs 0044  
              __size_of_putch 0002                      MSdelay@i 0003                      MSdelay@j 0005  
                    _LCD_Char 1806                      _LCD_Init 178C                     main@F3506 00B6  
      __end_of_DHT11_ReadData 15BC                   _LCD_Command 1822                     _vfpfcnvrt 0DFC  
                   main@value 007B              onLEDS@T_Integral 0001                     copy_data0 1730  
            __size_of_MSdelay 004A                      __Hrparam 0000                    vfprintf@ap 0054  
                    __Lrparam 0000                    vfprintf@fp 0050               ?_DHT11_ReadData 0001  
            __size_of___aodiv 0188              __size_of___aomod 0164                    ?_vfpfcnvrt 0040  
             DHT11_ReadData@i 0001               ___aodiv@divisor 0009               ___aodiv@counter 0011  
                  sprintf@fmt 005A                      _dtoa$959 002E                      __ptext10 169C  
                    __ptext11 1138                      __ptext20 17E6                      __ptext12 0FB0  
                    __ptext21 1560                      __ptext13 1428                      __ptext22 17BA  
                    __ptext14 16DC                      __ptext15 1502                      __ptext16 1806  
                    __ptext17 178C                      __ptext18 1822                      __ptext19 160E  
            __size_of_sprintf 0052                 __size_of_main 0300                 __size_of_dtoa 02DE  
                ?_DHT11_Start 0001                    MSdelay@val 0001                      _vfprintf 14A0  
                 onLEDS@valor 0002                      main@acum 008D                    _LCD_String 1502  
            ___aomod@dividend 0001                     sprintf@ap 0062               main@RH_Integral 0086  
__size_of_DHT11_CheckResponse 002C               ___aomod@divisor 0009                   ??_vfpfcnvrt 0046  
             ___aomod@counter 0011                main@RH_Decimal 0085                      sprintf@f 0064  
                    sprintf@s 0058        __size_of_LCD_String_xy 0040                  ___aodiv@sign 0012  
                ___aomod@sign 0012  
