

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 13 16:53:30 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  001A4A                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F3513
    87  001A4A  53                 	db	83
    88  001A4B  65                 	db	101
    89  001A4C  20                 	db	32
    90  001A4D  65                 	db	101
    91  001A4E  6E                 	db	110
    92  001A4F  63                 	db	99
    93  001A50  65                 	db	101
    94  001A51  6E                 	db	110
    95  001A52  64                 	db	100
    96  001A53  69                 	db	105
    97  001A54  6F                 	db	111
    98  001A55  20                 	db	32
    99  001A56  6C                 	db	108
   100  001A57  61                 	db	97
   101  001A58  20                 	db	32
   102  001A59  62                 	db	98
   103  001A5A  6F                 	db	111
   104  001A5B  6D                 	db	109
   105  001A5C  62                 	db	98
   106  001A5D  69                 	db	105
   107  001A5E  6C                 	db	108
   108  001A5F  6C                 	db	108
   109  001A60  61                 	db	97
   110  001A61  20                 	db	32
   111  001A62  32                 	db	50
   112  001A63  0D                 	db	13
   113  001A64  00                 	db	0
   114                           
   115                           ;initializer for main@F3510
   116  001A65  53                 	db	83
   117  001A66  65                 	db	101
   118  001A67  20                 	db	32
   119  001A68  65                 	db	101
   120  001A69  6E                 	db	110
   121  001A6A  63                 	db	99
   122  001A6B  65                 	db	101
   123  001A6C  6E                 	db	110
   124  001A6D  64                 	db	100
   125  001A6E  69                 	db	105
   126  001A6F  6F                 	db	111
   127  001A70  20                 	db	32
   128  001A71  6C                 	db	108
   129  001A72  61                 	db	97
   130  001A73  20                 	db	32
   131  001A74  62                 	db	98
   132  001A75  6F                 	db	111
   133  001A76  6D                 	db	109
   134  001A77  62                 	db	98
   135  001A78  69                 	db	105
   136  001A79  6C                 	db	108
   137  001A7A  6C                 	db	108
   138  001A7B  61                 	db	97
   139  001A7C  20                 	db	32
   140  001A7D  31                 	db	49
   141  001A7E  0D                 	db	13
   142  001A7F  00                 	db	0
   143                           
   144                           ;initializer for offBombillas@F3540
   145  001A80  42                 	db	66
   146  001A81  6F                 	db	111
   147  001A82  6D                 	db	109
   148  001A83  62                 	db	98
   149  001A84  69                 	db	105
   150  001A85  6C                 	db	108
   151  001A86  6C                 	db	108
   152  001A87  61                 	db	97
   153  001A88  73                 	db	115
   154  001A89  20                 	db	32
   155  001A8A  41                 	db	65
   156  001A8B  70                 	db	112
   157  001A8C  61                 	db	97
   158  001A8D  67                 	db	103
   159  001A8E  61                 	db	97
   160  001A8F  64                 	db	100
   161  001A90  61                 	db	97
   162  001A91  73                 	db	115
   163  001A92  20                 	db	32
   164  001A93  0D                 	db	13
   165  001A94  00                 	db	0
   166                           
   167                           ;initializer for onLEDS@F3536
   168  001A95  54                 	db	84
   169  001A96  65                 	db	101
   170  001A97  6D                 	db	109
   171  001A98  70                 	db	112
   172  001A99  65                 	db	101
   173  001A9A  72                 	db	114
   174  001A9B  61                 	db	97
   175  001A9C  74                 	db	116
   176  001A9D  75                 	db	117
   177  001A9E  72                 	db	114
   178  001A9F  61                 	db	97
   179  001AA0  20                 	db	32
   180  001AA1  49                 	db	73
   181  001AA2  64                 	db	100
   182  001AA3  65                 	db	101
   183  001AA4  61                 	db	97
   184  001AA5  6C                 	db	108
   185  001AA6  0D                 	db	13
   186  001AA7  00                 	db	0
   187                           
   188                           	psect	idataBANK1
   189  001DAA                     __pidataBANK1:
   190                           	callstack 0
   191                           
   192                           ;initializer for main@F3525
   193  001DAA  54                 	db	84
   194  001DAB  65                 	db	101
   195  001DAC  6D                 	db	109
   196  001DAD  70                 	db	112
   197  001DAE  65                 	db	101
   198  001DAF  72                 	db	114
   199  001DB0  61                 	db	97
   200  001DB1  74                 	db	116
   201  001DB2  75                 	db	117
   202  001DB3  72                 	db	114
   203  001DB4  61                 	db	97
   204  001DB5  20                 	db	32
   205  001DB6  41                 	db	65
   206  001DB7  6C                 	db	108
   207  001DB8  74                 	db	116
   208  001DB9  61                 	db	97
   209  001DBA  20                 	db	32
   210  001DBB  0D                 	db	13
   211  001DBC  00                 	db	0
   212                           
   213                           	psect	idataBANK2
   214  00190E                     __pidataBANK2:
   215                           	callstack 0
   216                           
   217                           ;initializer for main@F3507
   218  00190E  4E                 	db	78
   219  00190F  6F                 	db	111
   220  001910  20                 	db	32
   221  001911  73                 	db	115
   222  001912  65                 	db	101
   223  001913  20                 	db	32
   224  001914  68                 	db	104
   225  001915  61                 	db	97
   226  001916  20                 	db	32
   227  001917  70                 	db	112
   228  001918  72                 	db	114
   229  001919  65                 	db	101
   230  00191A  6E                 	db	110
   231  00191B  64                 	db	100
   232  00191C  69                 	db	105
   233  00191D  64                 	db	100
   234  00191E  6F                 	db	111
   235  00191F  20                 	db	32
   236  001920  6E                 	db	110
   237  001921  69                 	db	105
   238  001922  6E                 	db	110
   239  001923  67                 	db	103
   240  001924  75                 	db	117
   241  001925  6E                 	db	110
   242  001926  61                 	db	97
   243  001927  20                 	db	32
   244  001928  62                 	db	98
   245  001929  6F                 	db	111
   246  00192A  6D                 	db	109
   247  00192B  62                 	db	98
   248  00192C  69                 	db	105
   249  00192D  6C                 	db	108
   250  00192E  6C                 	db	108
   251  00192F  61                 	db	97
   252  001930  0D                 	db	13
   253  001931  00                 	db	0
   254                           
   255                           ;initializer for main@F3522
   256  001932  53                 	db	83
   257  001933  65                 	db	101
   258  001934  20                 	db	32
   259  001935  65                 	db	101
   260  001936  6E                 	db	110
   261  001937  63                 	db	99
   262  001938  65                 	db	101
   263  001939  6E                 	db	110
   264  00193A  64                 	db	100
   265  00193B  69                 	db	105
   266  00193C  6F                 	db	111
   267  00193D  20                 	db	32
   268  00193E  6C                 	db	108
   269  00193F  61                 	db	97
   270  001940  20                 	db	32
   271  001941  62                 	db	98
   272  001942  6F                 	db	111
   273  001943  6D                 	db	109
   274  001944  62                 	db	98
   275  001945  69                 	db	105
   276  001946  6C                 	db	108
   277  001947  6C                 	db	108
   278  001948  61                 	db	97
   279  001949  20                 	db	32
   280  00194A  35                 	db	53
   281  00194B  0D                 	db	13
   282  00194C  00                 	db	0
   283                           
   284                           ;initializer for main@F3519
   285  00194D  53                 	db	83
   286  00194E  65                 	db	101
   287  00194F  20                 	db	32
   288  001950  65                 	db	101
   289  001951  6E                 	db	110
   290  001952  63                 	db	99
   291  001953  65                 	db	101
   292  001954  6E                 	db	110
   293  001955  64                 	db	100
   294  001956  69                 	db	105
   295  001957  6F                 	db	111
   296  001958  20                 	db	32
   297  001959  6C                 	db	108
   298  00195A  61                 	db	97
   299  00195B  20                 	db	32
   300  00195C  62                 	db	98
   301  00195D  6F                 	db	111
   302  00195E  6D                 	db	109
   303  00195F  62                 	db	98
   304  001960  69                 	db	105
   305  001961  6C                 	db	108
   306  001962  6C                 	db	108
   307  001963  61                 	db	97
   308  001964  20                 	db	32
   309  001965  34                 	db	52
   310  001966  0D                 	db	13
   311  001967  00                 	db	0
   312                           
   313                           ;initializer for main@F3516
   314  001968  53                 	db	83
   315  001969  65                 	db	101
   316  00196A  20                 	db	32
   317  00196B  65                 	db	101
   318  00196C  6E                 	db	110
   319  00196D  63                 	db	99
   320  00196E  65                 	db	101
   321  00196F  6E                 	db	110
   322  001970  64                 	db	100
   323  001971  69                 	db	105
   324  001972  6F                 	db	111
   325  001973  20                 	db	32
   326  001974  6C                 	db	108
   327  001975  61                 	db	97
   328  001976  20                 	db	32
   329  001977  62                 	db	98
   330  001978  6F                 	db	111
   331  001979  6D                 	db	109
   332  00197A  62                 	db	98
   333  00197B  69                 	db	105
   334  00197C  6C                 	db	108
   335  00197D  6C                 	db	108
   336  00197E  61                 	db	97
   337  00197F  20                 	db	32
   338  001980  33                 	db	51
   339  001981  0D                 	db	13
   340  001982  00                 	db	0
   341  0000                     _LATD	set	3980
   342  0000                     _TRISC	set	3988
   343  0000                     _TRISD	set	3989
   344  0000                     _PORTCbits	set	3970
   345  0000                     _TXREG	set	4013
   346  0000                     _ADCON1	set	4033
   347  0000                     _OSCCON	set	4051
   348  0000                     _SPBRG	set	4015
   349  0000                     _RCSTAbits	set	4011
   350  0000                     _BAUDCONbits	set	4024
   351  0000                     _TXSTAbits	set	4012
   352  0000                     _TRISCbits	set	3988
   353  0000                     _PORTAbits	set	3968
   354  0000                     _TRISA	set	3986
   355  0000                     _LATC1	set	31833
   356  0000                     _LATC0	set	31832
   357  0000                     _LATC2	set	31834
   358                           
   359                           	psect	smallconst
   360  000800                     __psmallconst:
   361                           	callstack 0
   362  000800  00                 	db	0
   363  000801                     STR_6:
   364  000801  48                 	db	72	;'H'
   365  000802  75                 	db	117	;'u'
   366  000803  6D                 	db	109	;'m'
   367  000804  65                 	db	101	;'e'
   368  000805  64                 	db	100	;'d'
   369  000806  61                 	db	97	;'a'
   370  000807  64                 	db	100	;'d'
   371  000808  00                 	db	0
   372  000809                     STR_5:
   373  000809  25                 	db	37
   374  00080A  64                 	db	100	;'d'
   375  00080B  20                 	db	32
   376  00080C  20                 	db	32
   377  00080D  00                 	db	0
   378  00080E                     STR_2:
   379  00080E  2E                 	db	46
   380  00080F  25                 	db	37
   381  000810  64                 	db	100	;'d'
   382  000811  20                 	db	32
   383  000812  00                 	db	0
   384  000813                     STR_7:
   385  000813  54                 	db	84	;'T'
   386  000814  65                 	db	101	;'e'
   387  000815  6D                 	db	109	;'m'
   388  000816  70                 	db	112	;'p'
   389  000817  00                 	db	0
   390  000818                     STR_4:
   391  000818  2E                 	db	46
   392  000819  25                 	db	37
   393  00081A  64                 	db	100	;'d'
   394  00081B  00                 	db	0
   395  00081C  00                 	db	0	; dummy byte at the end
   396  0000                     
   397                           ; #config settings
   398                           
   399                           	psect	cinit
   400  001894                     __pcinit:
   401                           	callstack 0
   402  001894                     start_initialization:
   403                           	callstack 0
   404  001894                     __initialization:
   405                           	callstack 0
   406                           
   407                           ; Initialize objects allocated to BANK2 (117 bytes)
   408                           ; load TBLPTR registers with __pidataBANK2
   409  001894  0E0E               	movlw	low __pidataBANK2
   410  001896  6EF6               	movwf	tblptrl,c
   411  001898  0E19               	movlw	high __pidataBANK2
   412  00189A  6EF7               	movwf	tblptrh,c
   413  00189C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   414  00189E  6EF8               	movwf	tblptru,c
   415  0018A0  EE02  F000         	lfsr	0,__pdataBANK2
   416  0018A4  EE10 F075          	lfsr	1,117
   417  0018A8                     copy_data0:
   418  0018A8  0009               	tblrd		*+
   419  0018AA  CFF5 FFEE          	movff	tablat,postinc0
   420  0018AE  50E5               	movf	postdec1,w,c
   421  0018B0  50E1               	movf	fsr1l,w,c
   422  0018B2  E1FA               	bnz	copy_data0
   423                           
   424                           ; Initialize objects allocated to BANK1 (19 bytes)
   425                           ; load TBLPTR registers with __pidataBANK1
   426  0018B4  0EAA               	movlw	low __pidataBANK1
   427  0018B6  6EF6               	movwf	tblptrl,c
   428  0018B8  0E1D               	movlw	high __pidataBANK1
   429  0018BA  6EF7               	movwf	tblptrh,c
   430  0018BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   431  0018BE  6EF8               	movwf	tblptru,c
   432  0018C0  EE01  F0DF         	lfsr	0,__pdataBANK1
   433  0018C4  EE10 F013          	lfsr	1,19
   434  0018C8                     copy_data1:
   435  0018C8  0009               	tblrd		*+
   436  0018CA  CFF5 FFEE          	movff	tablat,postinc0
   437  0018CE  50E5               	movf	postdec1,w,c
   438  0018D0  50E1               	movf	fsr1l,w,c
   439  0018D2  E1FA               	bnz	copy_data1
   440                           
   441                           ; Initialize objects allocated to BANK0 (94 bytes)
   442                           ; load TBLPTR registers with __pidataBANK0
   443  0018D4  0E4A               	movlw	low __pidataBANK0
   444  0018D6  6EF6               	movwf	tblptrl,c
   445  0018D8  0E1A               	movlw	high __pidataBANK0
   446  0018DA  6EF7               	movwf	tblptrh,c
   447  0018DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   448  0018DE  6EF8               	movwf	tblptru,c
   449  0018E0  EE00  F060         	lfsr	0,__pdataBANK0
   450  0018E4  EE10 F05E          	lfsr	1,94
   451  0018E8                     copy_data2:
   452  0018E8  0009               	tblrd		*+
   453  0018EA  CFF5 FFEE          	movff	tablat,postinc0
   454  0018EE  50E5               	movf	postdec1,w,c
   455  0018F0  50E1               	movf	fsr1l,w,c
   456  0018F2  E1FA               	bnz	copy_data2
   457                           
   458                           ; Clear objects allocated to BANK0 (38 bytes)
   459  0018F4  EE00  F0BE         	lfsr	0,__pbssBANK0
   460  0018F8  0E26               	movlw	38
   461  0018FA                     clear_0:
   462  0018FA  6AEE               	clrf	postinc0,c
   463  0018FC  06E8               	decf	wreg,f,c
   464  0018FE  E1FD               	bnz	clear_0
   465                           
   466                           ; Clear objects allocated to COMRAM (2 bytes)
   467  001900  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   468  001902  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   469  001904                     end_of_initialization:
   470                           	callstack 0
   471  001904                     __end_of__initialization:
   472                           	callstack 0
   473  001904  0E00               	movlw	low (__Lmediumconst shr (0+16))
   474  001906  6EF8               	movwf	tblptru,c
   475  001908  0100               	movlb	0
   476  00190A  EF0F  F004         	goto	_main	;jump to C main() function
   477                           
   478                           	psect	bssCOMRAM
   479  00005E                     __pbssCOMRAM:
   480                           	callstack 0
   481  00005E                     _flags:
   482                           	callstack 0
   483  00005E                     	ds	2
   484                           
   485                           	psect	bssBANK0
   486  0000BE                     __pbssBANK0:
   487                           	callstack 0
   488  0000BE                     _nout:
   489                           	callstack 0
   490  0000BE                     	ds	2
   491  0000C0                     _width:
   492                           	callstack 0
   493  0000C0                     	ds	2
   494  0000C2                     _prec:
   495                           	callstack 0
   496  0000C2                     	ds	2
   497  0000C4                     _dbuf:
   498                           	callstack 0
   499  0000C4                     	ds	32
   500                           
   501                           	psect	dataBANK0
   502  000060                     __pdataBANK0:
   503                           	callstack 0
   504  000060                     main@F3513:
   505                           	callstack 0
   506  000060                     	ds	27
   507  00007B                     main@F3510:
   508                           	callstack 0
   509  00007B                     	ds	27
   510  000096                     offBombillas@F3540:
   511                           	callstack 0
   512  000096                     	ds	21
   513  0000AB                     onLEDS@F3536:
   514                           	callstack 0
   515  0000AB                     	ds	19
   516                           
   517                           	psect	dataBANK1
   518  0001DF                     __pdataBANK1:
   519                           	callstack 0
   520  0001DF                     main@F3525:
   521                           	callstack 0
   522  0001DF                     	ds	19
   523                           
   524                           	psect	dataBANK2
   525  000200                     __pdataBANK2:
   526                           	callstack 0
   527  000200                     main@F3507:
   528                           	callstack 0
   529  000200                     	ds	36
   530  000224                     main@F3522:
   531                           	callstack 0
   532  000224                     	ds	27
   533  00023F                     main@F3519:
   534                           	callstack 0
   535  00023F                     	ds	27
   536  00025A                     main@F3516:
   537                           	callstack 0
   538  00025A                     	ds	27
   539                           
   540                           	psect	cstackBANK1
   541  000100                     __pcstackBANK1:
   542                           	callstack 0
   543  000100                     main@buffer_TX:
   544                           	callstack 0
   545                           
   546                           ; 36 bytes @ 0x0
   547  000100                     	ds	36
   548  000124                     main@buffer_TX_463:
   549                           	callstack 0
   550                           
   551                           ; 27 bytes @ 0x24
   552  000124                     	ds	27
   553  00013F                     main@buffer_TX_466:
   554                           	callstack 0
   555                           
   556                           ; 27 bytes @ 0x3F
   557  00013F                     	ds	27
   558  00015A                     main@buffer_TX_469:
   559                           	callstack 0
   560                           
   561                           ; 27 bytes @ 0x5A
   562  00015A                     	ds	27
   563  000175                     main@buffer_TX_472:
   564                           	callstack 0
   565                           
   566                           ; 27 bytes @ 0x75
   567  000175                     	ds	27
   568  000190                     main@buffer_TX_475:
   569                           	callstack 0
   570                           
   571                           ; 27 bytes @ 0x90
   572  000190                     	ds	27
   573  0001AB                     main@buffer_TX_478:
   574                           	callstack 0
   575                           
   576                           ; 19 bytes @ 0xAB
   577  0001AB                     	ds	19
   578  0001BE                     main@value:
   579                           	callstack 0
   580                           
   581                           ; 10 bytes @ 0xBE
   582  0001BE                     	ds	10
   583  0001C8                     main@agr:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xC8
   587  0001C8                     	ds	2
   588  0001CA                     main@RH_Decimal:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xCA
   592  0001CA                     	ds	1
   593  0001CB                     main@RH_Integral:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0xCB
   597  0001CB                     	ds	1
   598  0001CC                     main@T_Decimal:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xCC
   602  0001CC                     	ds	1
   603  0001CD                     main@Checksum:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xCD
   607  0001CD                     	ds	1
   608  0001CE                     main@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0xCE
   612  0001CE                     	ds	2
   613  0001D0                     main@i_464:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xD0
   617  0001D0                     	ds	2
   618  0001D2                     main@i_467:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xD2
   622  0001D2                     	ds	2
   623  0001D4                     main@i_470:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0xD4
   627  0001D4                     	ds	2
   628  0001D6                     main@i_473:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xD6
   632  0001D6                     	ds	2
   633  0001D8                     main@i_476:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0xD8
   637  0001D8                     	ds	2
   638  0001DA                     main@i_479:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0xDA
   642  0001DA                     	ds	2
   643  0001DC                     main@acum:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xDC
   647  0001DC                     	ds	2
   648  0001DE                     main@T_Integral:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0xDE
   652  0001DE                     	ds	1
   653                           
   654                           	psect	cstackBANK0
   655  0000E4                     __pcstackBANK0:
   656                           	callstack 0
   657  0000E4                     	ds	2
   658  0000E6                     sprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  0000E6                     	ds	2
   663  0000E8                     sprintf@f:
   664                           	callstack 0
   665                           
   666                           ; 6 bytes @ 0x4
   667  0000E8                     	ds	6
   668                           
   669                           	psect	cstackCOMRAM
   670  000001                     __pcstackCOMRAM:
   671                           	callstack 0
   672  000001                     ??_DHT11_Start:
   673  000001                     ?_strlen:
   674                           	callstack 0
   675  000001                     ?___aodiv:
   676                           	callstack 0
   677  000001                     ?___aomod:
   678                           	callstack 0
   679  000001                     DHT11_ReadData@i:
   680                           	callstack 0
   681  000001                     MSdelay@val:
   682                           	callstack 0
   683  000001                     fputc@c:
   684                           	callstack 0
   685  000001                     strlen@s:
   686                           	callstack 0
   687  000001                     ___aodiv@dividend:
   688                           	callstack 0
   689  000001                     ___aomod@dividend:
   690                           	callstack 0
   691  000001                     onLEDS@buffer_TX:
   692                           	callstack 0
   693  000001                     offBombillas@buffer_TX:
   694                           	callstack 0
   695                           
   696                           ; 21 bytes @ 0x0
   697  000001                     	ds	1
   698  000002                     DHT11_ReadData@data:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x1
   702  000002                     	ds	1
   703  000003                     MSdelay@i:
   704                           	callstack 0
   705  000003                     fputc@fp:
   706                           	callstack 0
   707  000003                     strlen@a:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  000003                     	ds	2
   712  000005                     ??_fputc:
   713  000005                     MSdelay@j:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x4
   717  000005                     	ds	2
   718  000007                     LCD_Command@cmd:
   719                           	callstack 0
   720  000007                     LCD_Char@dat:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x6
   724  000007                     	ds	1
   725  000008                     LCD_String@msg:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x7
   729  000008                     	ds	1
   730  000009                     ___aodiv@divisor:
   731                           	callstack 0
   732  000009                     ___aomod@divisor:
   733                           	callstack 0
   734                           
   735                           ; 8 bytes @ 0x8
   736  000009                     	ds	1
   737  00000A                     LCD_String_xy@pos:
   738                           	callstack 0
   739  00000A                     fputs@s:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x9
   743  00000A                     	ds	1
   744  00000B                     LCD_String_xy@msg:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xA
   748  00000B                     	ds	1
   749  00000C                     fputs@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xB
   753  00000C                     	ds	1
   754  00000D                     LCD_String_xy@row:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xC
   758  00000D                     	ds	1
   759  00000E                     LCD_String_xy@location:
   760                           	callstack 0
   761  00000E                     fputs@c:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0xD
   765  00000E                     	ds	1
   766  00000F                     fputs@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0xE
   770  00000F                     	ds	2
   771  000011                     ?_pad:
   772                           	callstack 0
   773  000011                     ___aodiv@counter:
   774                           	callstack 0
   775  000011                     ___aomod@counter:
   776                           	callstack 0
   777  000011                     pad@fp:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x10
   781  000011                     	ds	1
   782  000012                     ___aodiv@sign:
   783                           	callstack 0
   784  000012                     ___aomod@sign:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x11
   788  000012                     	ds	1
   789  000013                     ?_abs:
   790                           	callstack 0
   791  000013                     pad@buf:
   792                           	callstack 0
   793  000013                     abs@a:
   794                           	callstack 0
   795  000013                     ___aodiv@quotient:
   796                           	callstack 0
   797                           
   798                           ; 8 bytes @ 0x12
   799  000013                     	ds	1
   800  000014                     onLEDS@T_Integral:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x13
   804  000014                     	ds	1
   805  000015                     ??_abs:
   806  000015                     onLEDS@valor:
   807                           	callstack 0
   808  000015                     pad@p:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x14
   812  000015                     	ds	1
   813  000016                     offBombillas@i:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x15
   817  000016                     	ds	1
   818  000017                     ??_pad:
   819  000017                     onLEDS@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x16
   823  000017                     	ds	1
   824  000018                     pad@i:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x17
   828  000018                     	ds	2
   829  00001A                     pad@w:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x19
   833  00001A                     	ds	2
   834  00001C                     ?_dtoa:
   835                           	callstack 0
   836  00001C                     dtoa@fp:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x1B
   840  00001C                     	ds	2
   841  00001E                     dtoa@d:
   842                           	callstack 0
   843                           
   844                           ; 8 bytes @ 0x1D
   845  00001E                     	ds	8
   846  000026                     ??_dtoa:
   847                           
   848                           ; 1 bytes @ 0x25
   849  000026                     	ds	8
   850  00002E                     _dtoa$1052:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x2D
   854  00002E                     	ds	2
   855  000030                     dtoa@p:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x2F
   859  000030                     	ds	2
   860  000032                     dtoa@w:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x31
   864  000032                     	ds	2
   865  000034                     dtoa@s:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x33
   869  000034                     	ds	2
   870  000036                     dtoa@n:
   871                           	callstack 0
   872                           
   873                           ; 8 bytes @ 0x35
   874  000036                     	ds	8
   875  00003E                     dtoa@i:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x3D
   879  00003E                     	ds	2
   880  000040                     ?_vfpfcnvrt:
   881                           	callstack 0
   882  000040                     vfpfcnvrt@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x3F
   886  000040                     	ds	2
   887  000042                     vfpfcnvrt@fmt:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x41
   891  000042                     	ds	2
   892  000044                     vfpfcnvrt@ap:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x43
   896  000044                     	ds	2
   897  000046                     ??_vfpfcnvrt:
   898                           
   899                           ; 1 bytes @ 0x45
   900  000046                     	ds	2
   901  000048                     vfpfcnvrt@ll:
   902                           	callstack 0
   903                           
   904                           ; 8 bytes @ 0x47
   905  000048                     	ds	8
   906  000050                     ?_vfprintf:
   907                           	callstack 0
   908  000050                     vfprintf@fp:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x4F
   912  000050                     	ds	2
   913  000052                     vfprintf@fmt:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x51
   917  000052                     	ds	2
   918  000054                     vfprintf@ap:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x53
   922  000054                     	ds	2
   923  000056                     vfprintf@cfmt:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x55
   927  000056                     	ds	2
   928  000058                     ?_sprintf:
   929                           	callstack 0
   930  000058                     sprintf@s:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x57
   934  000058                     	ds	2
   935  00005A                     sprintf@fmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x59
   939  00005A                     	ds	4
   940  00005E                     
   941                           ; 1 bytes @ 0x5D
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 28 in file "humidity_Temp.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  i               2  218[BANK1 ] int 
   952 ;;  i               2  216[BANK1 ] int 
   953 ;;  i               2  214[BANK1 ] int 
   954 ;;  i               2  212[BANK1 ] int 
   955 ;;  i               2  210[BANK1 ] int 
   956 ;;  i               2  208[BANK1 ] int 
   957 ;;  buffer_TX      19  171[BANK1 ] unsigned char [19]
   958 ;;  buffer_TX      27  144[BANK1 ] unsigned char [27]
   959 ;;  buffer_TX      27  117[BANK1 ] unsigned char [27]
   960 ;;  buffer_TX      27   90[BANK1 ] unsigned char [27]
   961 ;;  buffer_TX      27   63[BANK1 ] unsigned char [27]
   962 ;;  buffer_TX      27   36[BANK1 ] unsigned char [27]
   963 ;;  i               2  206[BANK1 ] int 
   964 ;;  buffer_TX      36    0[BANK1 ] unsigned char [36]
   965 ;;  value          10  190[BANK1 ] unsigned char [10]
   966 ;;  acum            2  220[BANK1 ] int 
   967 ;;  agr             2  200[BANK1 ] int 
   968 ;;  T_Integral      1  222[BANK1 ] unsigned char 
   969 ;;  Checksum        1  205[BANK1 ] unsigned char 
   970 ;;  T_Decimal       1  204[BANK1 ] unsigned char 
   971 ;;  RH_Integral     1  203[BANK1 ] unsigned char 
   972 ;;  RH_Decimal      1  202[BANK1 ] unsigned char 
   973 ;;  valor2          1    0        unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   983 ;;      Params:         0       0       0       0       0       0       0       0       0
   984 ;;      Locals:         0       0     223       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0
   986 ;;      Totals:         0       0     223       0       0       0       0       0       0
   987 ;;Total ram usage:      223 bytes
   988 ;; Hardware stack levels required when called:    8
   989 ;; This function calls:
   990 ;;		_DHT11_CheckResponse
   991 ;;		_DHT11_ReadData
   992 ;;		_DHT11_Start
   993 ;;		_LCD_Char
   994 ;;		_LCD_Init
   995 ;;		_LCD_String
   996 ;;		_LCD_String_xy
   997 ;;		_MSdelay
   998 ;;		_offBombillas
   999 ;;		_onLEDS
  1000 ;;		_sprintf
  1001 ;; This function is called by:
  1002 ;;		Startup code after reset
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text0
  1007  00081E                     __ptext0:
  1008                           	callstack 0
  1009  00081E                     _main:
  1010                           	callstack 23
  1011  00081E                     
  1012                           ;humidity_Temp.c: 29:     int agr = 0;
  1013  00081E  0E00               	movlw	0
  1014  000820  0101               	movlb	1	; () banked
  1015  000822  6FC9               	movwf	(main@agr+1)& (0+255),b
  1016  000824  0E00               	movlw	0
  1017  000826  6FC8               	movwf	main@agr& (0+255),b
  1018                           
  1019                           ;humidity_Temp.c: 30:     int acum = 0;
  1020  000828  0E00               	movlw	0
  1021  00082A  6FDD               	movwf	(main@acum+1)& (0+255),b
  1022  00082C  0E00               	movlw	0
  1023  00082E  6FDC               	movwf	main@acum& (0+255),b
  1024                           
  1025                           ;humidity_Temp.c: 31:     TRISA = 0;
  1026  000830  0E00               	movlw	0
  1027  000832  6E92               	movwf	146,c	;volatile
  1028  000834                     
  1029                           ; BSR set to: 1
  1030                           ;humidity_Temp.c: 32:     char RH_Decimal, RH_Integral, T_Decimal, T_Integral, valor2;;h
      +                          umidity_Temp.c: 33:     char Checksum;;humidity_Temp.c: 34:     char value[10];;humidity
      +                          _Temp.c: 37:     PORTAbits.RA0 = 0;
  1031  000834  9080               	bcf	128,0,c	;volatile
  1032  000836                     
  1033                           ; BSR set to: 1
  1034                           ;humidity_Temp.c: 38:     PORTAbits.RA1 = 0;
  1035  000836  9280               	bcf	128,1,c	;volatile
  1036  000838                     
  1037                           ; BSR set to: 1
  1038                           ;humidity_Temp.c: 39:     PORTAbits.RA2 = 0;
  1039  000838  9480               	bcf	128,2,c	;volatile
  1040  00083A                     
  1041                           ; BSR set to: 1
  1042                           ;humidity_Temp.c: 40:     PORTAbits.RA3 = 0;
  1043  00083A  9680               	bcf	128,3,c	;volatile
  1044  00083C                     
  1045                           ; BSR set to: 1
  1046                           ;humidity_Temp.c: 41:     PORTAbits.RA4 = 0;
  1047  00083C  9880               	bcf	128,4,c	;volatile
  1048  00083E                     
  1049                           ; BSR set to: 1
  1050                           ;humidity_Temp.c: 45:     TRISCbits.RC6 = 0;
  1051  00083E  9C94               	bcf	148,6,c	;volatile
  1052  000840                     
  1053                           ; BSR set to: 1
  1054                           ;humidity_Temp.c: 46:     TXSTAbits.TX9 = 0;
  1055  000840  9CAC               	bcf	172,6,c	;volatile
  1056  000842                     
  1057                           ; BSR set to: 1
  1058                           ;humidity_Temp.c: 47:     TXSTAbits.TXEN = 1;
  1059  000842  8AAC               	bsf	172,5,c	;volatile
  1060  000844                     
  1061                           ; BSR set to: 1
  1062                           ;humidity_Temp.c: 48:     TXSTAbits.SYNC = 0;
  1063  000844  98AC               	bcf	172,4,c	;volatile
  1064  000846                     
  1065                           ; BSR set to: 1
  1066                           ;humidity_Temp.c: 49:     TXSTAbits.BRGH = 0;
  1067  000846  94AC               	bcf	172,2,c	;volatile
  1068  000848                     
  1069                           ; BSR set to: 1
  1070                           ;humidity_Temp.c: 50:     BAUDCONbits.BRG16 = 0;
  1071  000848  96B8               	bcf	184,3,c	;volatile
  1072  00084A                     
  1073                           ; BSR set to: 1
  1074                           ;humidity_Temp.c: 51:     RCSTAbits.SPEN = 1;
  1075  00084A  8EAB               	bsf	171,7,c	;volatile
  1076                           
  1077                           ;humidity_Temp.c: 52:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1078  00084C  0E0C               	movlw	12
  1079  00084E  6EAF               	movwf	175,c	;volatile
  1080                           
  1081                           ;humidity_Temp.c: 55:     OSCCON = 0x72;
  1082  000850  0E72               	movlw	114
  1083  000852  6ED3               	movwf	211,c	;volatile
  1084  000854                     
  1085                           ; BSR set to: 1
  1086                           ;humidity_Temp.c: 58:     LCD_Init();
  1087  000854  EC7C  F00E         	call	_LCD_Init	;wreg free
  1088  000858                     
  1089                           ;humidity_Temp.c: 59:     ADCON1 = 0x0F;
  1090  000858  0E0F               	movlw	15
  1091  00085A  6EC1               	movwf	193,c	;volatile
  1092  00085C                     l2130:
  1093                           
  1094                           ;humidity_Temp.c: 64:         DHT11_Start();
  1095  00085C  ECA9  F00E         	call	_DHT11_Start	;wreg free
  1096  000860                     
  1097                           ;humidity_Temp.c: 65:         DHT11_CheckResponse();
  1098  000860  EC93  F00E         	call	_DHT11_CheckResponse	;wreg free
  1099  000864                     
  1100                           ;humidity_Temp.c: 68:         RH_Integral = DHT11_ReadData();
  1101  000864  EC83  F00D         	call	_DHT11_ReadData	;wreg free
  1102  000868  0101               	movlb	1	; () banked
  1103  00086A  6FCB               	movwf	main@RH_Integral& (0+255),b
  1104  00086C                     
  1105                           ; BSR set to: 1
  1106                           ;humidity_Temp.c: 69:         RH_Decimal = DHT11_ReadData();
  1107  00086C  EC83  F00D         	call	_DHT11_ReadData	;wreg free
  1108  000870  0101               	movlb	1	; () banked
  1109  000872  6FCA               	movwf	main@RH_Decimal& (0+255),b
  1110  000874                     
  1111                           ; BSR set to: 1
  1112                           ;humidity_Temp.c: 70:         T_Integral = DHT11_ReadData();
  1113  000874  EC83  F00D         	call	_DHT11_ReadData	;wreg free
  1114  000878  0101               	movlb	1	; () banked
  1115  00087A  6FDE               	movwf	main@T_Integral& (0+255),b
  1116  00087C                     
  1117                           ; BSR set to: 1
  1118                           ;humidity_Temp.c: 71:         T_Decimal = DHT11_ReadData();
  1119  00087C  EC83  F00D         	call	_DHT11_ReadData	;wreg free
  1120  000880  0101               	movlb	1	; () banked
  1121  000882  6FCC               	movwf	main@T_Decimal& (0+255),b
  1122  000884                     
  1123                           ; BSR set to: 1
  1124                           ;humidity_Temp.c: 72:         Checksum = DHT11_ReadData();
  1125  000884  EC83  F00D         	call	_DHT11_ReadData	;wreg free
  1126  000888  0101               	movlb	1	; () banked
  1127  00088A  6FCD               	movwf	main@Checksum& (0+255),b
  1128  00088C                     
  1129                           ; BSR set to: 1
  1130                           ;humidity_Temp.c: 75:         sprintf(value, "%d", RH_Integral);
  1131  00088C  0EBE               	movlw	low main@value
  1132  00088E  6E58               	movwf	sprintf@s^0,c
  1133  000890  0E01               	movlw	high main@value
  1134  000892  6E59               	movwf	(sprintf@s+1)^0,c
  1135  000894  0E19               	movlw	low (STR_4+1)
  1136  000896  6E5A               	movwf	sprintf@fmt^0,c
  1137  000898  0E08               	movlw	high (STR_4+1)
  1138  00089A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1139  00089C  C1CB  F05C         	movff	main@RH_Integral,?_sprintf+4
  1140  0008A0  6A5D               	clrf	(?_sprintf+5)^0,c
  1141  0008A2  ECB1  F00D         	call	_sprintf	;wreg free
  1142  0008A6                     
  1143                           ;humidity_Temp.c: 76:         LCD_String_xy(0, 0, value);
  1144  0008A6  0E00               	movlw	0
  1145  0008A8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1146  0008AA  0EBE               	movlw	low main@value
  1147  0008AC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1148  0008AE  0E01               	movlw	high main@value
  1149  0008B0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1150  0008B2  0E00               	movlw	0
  1151  0008B4  EC41  F00E         	call	_LCD_String_xy
  1152  0008B8                     
  1153                           ;humidity_Temp.c: 77:         sprintf(value, ".%d ", RH_Decimal);
  1154  0008B8  0EBE               	movlw	low main@value
  1155  0008BA  6E58               	movwf	sprintf@s^0,c
  1156  0008BC  0E01               	movlw	high main@value
  1157  0008BE  6E59               	movwf	(sprintf@s+1)^0,c
  1158  0008C0  0E0E               	movlw	low STR_2
  1159  0008C2  6E5A               	movwf	sprintf@fmt^0,c
  1160  0008C4  0E08               	movlw	high STR_2
  1161  0008C6  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1162  0008C8  C1CA  F05C         	movff	main@RH_Decimal,?_sprintf+4
  1163  0008CC  6A5D               	clrf	(?_sprintf+5)^0,c
  1164  0008CE  ECB1  F00D         	call	_sprintf	;wreg free
  1165  0008D2                     
  1166                           ;humidity_Temp.c: 78:         LCD_String(value);
  1167  0008D2  0EBE               	movlw	low main@value
  1168  0008D4  6E08               	movwf	LCD_String@msg^0,c
  1169  0008D6  0E01               	movlw	high main@value
  1170  0008D8  6E09               	movwf	(LCD_String@msg+1)^0,c
  1171  0008DA  EC54  F00D         	call	_LCD_String	;wreg free
  1172  0008DE                     
  1173                           ;humidity_Temp.c: 79:         LCD_Char('%');
  1174  0008DE  0E25               	movlw	37
  1175  0008E0  ECB9  F00E         	call	_LCD_Char
  1176  0008E4                     
  1177                           ;humidity_Temp.c: 82:         sprintf(value, "%d", T_Integral);
  1178  0008E4  0EBE               	movlw	low main@value
  1179  0008E6  6E58               	movwf	sprintf@s^0,c
  1180  0008E8  0E01               	movlw	high main@value
  1181  0008EA  6E59               	movwf	(sprintf@s+1)^0,c
  1182  0008EC  0E19               	movlw	low (STR_4+1)
  1183  0008EE  6E5A               	movwf	sprintf@fmt^0,c
  1184  0008F0  0E08               	movlw	high (STR_4+1)
  1185  0008F2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1186  0008F4  C1DE  F05C         	movff	main@T_Integral,?_sprintf+4
  1187  0008F8  6A5D               	clrf	(?_sprintf+5)^0,c
  1188  0008FA  ECB1  F00D         	call	_sprintf	;wreg free
  1189  0008FE                     
  1190                           ;humidity_Temp.c: 83:         LCD_String_xy(1, 0, value);
  1191  0008FE  0E00               	movlw	0
  1192  000900  6E0A               	movwf	LCD_String_xy@pos^0,c
  1193  000902  0EBE               	movlw	low main@value
  1194  000904  6E0B               	movwf	LCD_String_xy@msg^0,c
  1195  000906  0E01               	movlw	high main@value
  1196  000908  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1197  00090A  0E01               	movlw	1
  1198  00090C  EC41  F00E         	call	_LCD_String_xy
  1199  000910                     
  1200                           ;humidity_Temp.c: 84:         sprintf(value, ".%d", T_Decimal);
  1201  000910  0EBE               	movlw	low main@value
  1202  000912  6E58               	movwf	sprintf@s^0,c
  1203  000914  0E01               	movlw	high main@value
  1204  000916  6E59               	movwf	(sprintf@s+1)^0,c
  1205  000918  0E18               	movlw	low STR_4
  1206  00091A  6E5A               	movwf	sprintf@fmt^0,c
  1207  00091C  0E08               	movlw	high STR_4
  1208  00091E  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1209  000920  C1CC  F05C         	movff	main@T_Decimal,?_sprintf+4
  1210  000924  6A5D               	clrf	(?_sprintf+5)^0,c
  1211  000926  ECB1  F00D         	call	_sprintf	;wreg free
  1212  00092A                     
  1213                           ;humidity_Temp.c: 85:         LCD_String(value);
  1214  00092A  0EBE               	movlw	low main@value
  1215  00092C  6E08               	movwf	LCD_String@msg^0,c
  1216  00092E  0E01               	movlw	high main@value
  1217  000930  6E09               	movwf	(LCD_String@msg+1)^0,c
  1218  000932  EC54  F00D         	call	_LCD_String	;wreg free
  1219  000936                     
  1220                           ;humidity_Temp.c: 86:         LCD_Char(0xdf);
  1221  000936  0EDF               	movlw	223
  1222  000938  ECB9  F00E         	call	_LCD_Char
  1223  00093C                     
  1224                           ;humidity_Temp.c: 87:         LCD_Char('C');
  1225  00093C  0E43               	movlw	67
  1226  00093E  ECB9  F00E         	call	_LCD_Char
  1227  000942                     
  1228                           ;humidity_Temp.c: 89:         sprintf(value, "%d  ", Checksum);
  1229  000942  0EBE               	movlw	low main@value
  1230  000944  6E58               	movwf	sprintf@s^0,c
  1231  000946  0E01               	movlw	high main@value
  1232  000948  6E59               	movwf	(sprintf@s+1)^0,c
  1233  00094A  0E09               	movlw	low STR_5
  1234  00094C  6E5A               	movwf	sprintf@fmt^0,c
  1235  00094E  0E08               	movlw	high STR_5
  1236  000950  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1237  000952  C1CD  F05C         	movff	main@Checksum,?_sprintf+4
  1238  000956  6A5D               	clrf	(?_sprintf+5)^0,c
  1239  000958  ECB1  F00D         	call	_sprintf	;wreg free
  1240  00095C                     
  1241                           ;humidity_Temp.c: 90:         LCD_String_xy(0, 8, "Humedad");
  1242  00095C  0E08               	movlw	8
  1243  00095E  6E0A               	movwf	LCD_String_xy@pos^0,c
  1244  000960  0E01               	movlw	low STR_6
  1245  000962  6E0B               	movwf	LCD_String_xy@msg^0,c
  1246  000964  0E08               	movlw	high STR_6
  1247  000966  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1248  000968  0E00               	movlw	0
  1249  00096A  EC41  F00E         	call	_LCD_String_xy
  1250  00096E                     
  1251                           ;humidity_Temp.c: 91:         LCD_String_xy(1, 8, "Temp");
  1252  00096E  0E08               	movlw	8
  1253  000970  6E0A               	movwf	LCD_String_xy@pos^0,c
  1254  000972  0E13               	movlw	low STR_7
  1255  000974  6E0B               	movwf	LCD_String_xy@msg^0,c
  1256  000976  0E08               	movlw	high STR_7
  1257  000978  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1258  00097A  0E01               	movlw	1
  1259  00097C  EC41  F00E         	call	_LCD_String_xy
  1260  000980                     
  1261                           ;humidity_Temp.c: 93:         char buffer_TX[] = "No se ha prendido ninguna bombilla\r";
  1262  000980  EE22  F000         	lfsr	2,main@F3507
  1263  000984  EE11  F000         	lfsr	1,main@buffer_TX
  1264  000988  0E23               	movlw	35
  1265  00098A                     u1661:
  1266  00098A  CFDB FFE3          	movff	plusw2,plusw1
  1267  00098E  06E8               	decf	wreg,f,c
  1268  000990  E2FC               	bc	u1661
  1269  000992                     
  1270                           ;humidity_Temp.c: 94:         for (int i = 0; i < 36; i++) {
  1271  000992  0E00               	movlw	0
  1272  000994  0101               	movlb	1	; () banked
  1273  000996  6FCF               	movwf	(main@i+1)& (0+255),b
  1274  000998  0E00               	movlw	0
  1275  00099A  6FCE               	movwf	main@i& (0+255),b
  1276  00099C                     l2176:
  1277                           
  1278                           ; BSR set to: 1
  1279  00099C  BFCF               	btfsc	(main@i+1)& (0+255),7,b
  1280  00099E  EFDA  F004         	goto	u1671
  1281  0009A2  51CF               	movf	(main@i+1)& (0+255),w,b
  1282  0009A4  E109               	bnz	u1670
  1283  0009A6  0E24               	movlw	36
  1284  0009A8  5DCE               	subwf	main@i& (0+255),w,b
  1285  0009AA  A0D8               	btfss	status,0,c
  1286  0009AC  EFDA  F004         	goto	u1671
  1287  0009B0  EFDC  F004         	goto	u1670
  1288  0009B4                     u1671:
  1289  0009B4  EFDE  F004         	goto	l58
  1290  0009B8                     u1670:
  1291  0009B8  EFF2  F004         	goto	l2186
  1292  0009BC                     l58:
  1293                           
  1294                           ;humidity_Temp.c: 96:         while (!TXSTAbits.TRMT) {
  1295  0009BC  A2AC               	btfss	172,1,c	;volatile
  1296  0009BE  EFE3  F004         	goto	u1681
  1297  0009C2  EFE5  F004         	goto	u1680
  1298  0009C6                     u1681:
  1299  0009C6  EFDE  F004         	goto	l58
  1300  0009CA                     u1680:
  1301  0009CA                     
  1302                           ;humidity_Temp.c: 99:                     TXREG = buffer_TX[i];
  1303  0009CA  0E00               	movlw	low main@buffer_TX
  1304  0009CC  0101               	movlb	1	; () banked
  1305  0009CE  25CE               	addwf	main@i& (0+255),w,b
  1306  0009D0  6ED9               	movwf	fsr2l,c
  1307  0009D2  0E01               	movlw	high main@buffer_TX
  1308  0009D4  21CF               	addwfc	(main@i+1)& (0+255),w,b
  1309  0009D6  6EDA               	movwf	fsr2h,c
  1310  0009D8  50DF               	movf	indf2,w,c
  1311  0009DA  6EAD               	movwf	173,c	;volatile
  1312  0009DC                     
  1313                           ; BSR set to: 1
  1314                           ;humidity_Temp.c: 100:                 }
  1315  0009DC  4BCE               	infsnz	main@i& (0+255),f,b
  1316  0009DE  2BCF               	incf	(main@i+1)& (0+255),f,b
  1317  0009E0  EFCE  F004         	goto	l2176
  1318  0009E4                     l2186:
  1319                           
  1320                           ;humidity_Temp.c: 102:         MSdelay(1000);
  1321  0009E4  0E03               	movlw	3
  1322  0009E6  6E02               	movwf	(MSdelay@val+1)^0,c
  1323  0009E8  0EE8               	movlw	232
  1324  0009EA  6E01               	movwf	MSdelay@val^0,c
  1325  0009EC  ECDA  F00D         	call	_MSdelay	;wreg free
  1326                           
  1327                           ;humidity_Temp.c: 103:         while (agr == 0) {
  1328  0009F0  EF3F  F007         	goto	l2360
  1329  0009F4                     l2188:
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;humidity_Temp.c: 105:             onLEDS(T_Integral);
  1333  0009F4  51DE               	movf	main@T_Integral& (0+255),w,b
  1334  0009F6  EC1C  F00B         	call	_onLEDS
  1335  0009FA                     
  1336                           ;humidity_Temp.c: 106:             if (T_Integral < 30 && acum == 0) {
  1337  0009FA  0E1E               	movlw	30
  1338  0009FC  0101               	movlb	1	; () banked
  1339  0009FE  61DE               	cpfslt	main@T_Integral& (0+255),b
  1340  000A00  EF04  F005         	goto	u1691
  1341  000A04  EF06  F005         	goto	u1690
  1342  000A08                     u1691:
  1343  000A08  EF4A  F005         	goto	l2214
  1344  000A0C                     u1690:
  1345  000A0C                     
  1346                           ; BSR set to: 1
  1347  000A0C  51DC               	movf	main@acum& (0+255),w,b
  1348  000A0E  11DD               	iorwf	(main@acum+1)& (0+255),w,b
  1349  000A10  A4D8               	btfss	status,2,c
  1350  000A12  EF0D  F005         	goto	u1701
  1351  000A16  EF0F  F005         	goto	u1700
  1352  000A1A                     u1701:
  1353  000A1A  EF4A  F005         	goto	l2214
  1354  000A1E                     u1700:
  1355  000A1E                     
  1356                           ; BSR set to: 1
  1357                           ;humidity_Temp.c: 107:                 PORTAbits.RA0 = 1;
  1358  000A1E  8080               	bsf	128,0,c	;volatile
  1359  000A20                     
  1360                           ; BSR set to: 1
  1361                           ;humidity_Temp.c: 108:                 char buffer_TX[] = "Se encendio la bombilla 1\r";
  1362  000A20  EE20  F07B         	lfsr	2,main@F3510
  1363  000A24  EE11  F024         	lfsr	1,main@buffer_TX_463
  1364  000A28  0E1A               	movlw	26
  1365  000A2A                     u1711:
  1366  000A2A  CFDB FFE3          	movff	plusw2,plusw1
  1367  000A2E  06E8               	decf	wreg,f,c
  1368  000A30  E2FC               	bc	u1711
  1369  000A32                     
  1370                           ; BSR set to: 1
  1371                           ;humidity_Temp.c: 109:                 for (int i = 0; i < 27; i++) {
  1372  000A32  0E00               	movlw	0
  1373  000A34  6FD1               	movwf	(main@i_464+1)& (0+255),b
  1374  000A36  0E00               	movlw	0
  1375  000A38  6FD0               	movwf	main@i_464& (0+255),b
  1376  000A3A                     l2200:
  1377                           
  1378                           ; BSR set to: 1
  1379  000A3A  BFD1               	btfsc	(main@i_464+1)& (0+255),7,b
  1380  000A3C  EF29  F005         	goto	u1721
  1381  000A40  51D1               	movf	(main@i_464+1)& (0+255),w,b
  1382  000A42  E109               	bnz	u1720
  1383  000A44  0E1B               	movlw	27
  1384  000A46  5DD0               	subwf	main@i_464& (0+255),w,b
  1385  000A48  A0D8               	btfss	status,0,c
  1386  000A4A  EF29  F005         	goto	u1721
  1387  000A4E  EF2B  F005         	goto	u1720
  1388  000A52                     u1721:
  1389  000A52  EF2D  F005         	goto	l68
  1390  000A56                     u1720:
  1391  000A56  EF41  F005         	goto	l2210
  1392  000A5A                     l68:
  1393                           
  1394                           ;humidity_Temp.c: 111:                     while (!TXSTAbits.TRMT) {
  1395  000A5A  A2AC               	btfss	172,1,c	;volatile
  1396  000A5C  EF32  F005         	goto	u1731
  1397  000A60  EF34  F005         	goto	u1730
  1398  000A64                     u1731:
  1399  000A64  EF2D  F005         	goto	l68
  1400  000A68                     u1730:
  1401  000A68                     
  1402                           ;humidity_Temp.c: 114:                     TXREG = buffer_TX[i];
  1403  000A68  0E24               	movlw	low main@buffer_TX_463
  1404  000A6A  0101               	movlb	1	; () banked
  1405  000A6C  25D0               	addwf	main@i_464& (0+255),w,b
  1406  000A6E  6ED9               	movwf	fsr2l,c
  1407  000A70  0E01               	movlw	high main@buffer_TX_463
  1408  000A72  21D1               	addwfc	(main@i_464+1)& (0+255),w,b
  1409  000A74  6EDA               	movwf	fsr2h,c
  1410  000A76  50DF               	movf	indf2,w,c
  1411  000A78  6EAD               	movwf	173,c	;volatile
  1412  000A7A                     
  1413                           ; BSR set to: 1
  1414                           ;humidity_Temp.c: 115:                 }
  1415  000A7A  4BD0               	infsnz	main@i_464& (0+255),f,b
  1416  000A7C  2BD1               	incf	(main@i_464+1)& (0+255),f,b
  1417  000A7E  EF1D  F005         	goto	l2200
  1418  000A82                     l2210:
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;humidity_Temp.c: 116:                 T_Integral = T_Integral + 6;
  1422  000A82  51DE               	movf	main@T_Integral& (0+255),w,b
  1423  000A84  0F06               	addlw	6
  1424  000A86  6FDE               	movwf	main@T_Integral& (0+255),b
  1425  000A88                     
  1426                           ; BSR set to: 1
  1427                           ;humidity_Temp.c: 117:                 acum = 6;
  1428  000A88  0E00               	movlw	0
  1429  000A8A  6FDD               	movwf	(main@acum+1)& (0+255),b
  1430  000A8C  0E06               	movlw	6
  1431  000A8E  6FDC               	movwf	main@acum& (0+255),b
  1432                           
  1433                           ;humidity_Temp.c: 119:             } else if (T_Integral < 30 && acum == 6) {
  1434  000A90  EFC3  F006         	goto	l2330
  1435  000A94                     l2214:
  1436                           
  1437                           ; BSR set to: 1
  1438  000A94  0E1E               	movlw	30
  1439  000A96  61DE               	cpfslt	main@T_Integral& (0+255),b
  1440  000A98  EF50  F005         	goto	u1741
  1441  000A9C  EF52  F005         	goto	u1740
  1442  000AA0                     u1741:
  1443  000AA0  EF97  F005         	goto	l2238
  1444  000AA4                     u1740:
  1445  000AA4                     
  1446                           ; BSR set to: 1
  1447  000AA4  0E06               	movlw	6
  1448  000AA6  19DC               	xorwf	main@acum& (0+255),w,b
  1449  000AA8  11DD               	iorwf	(main@acum+1)& (0+255),w,b
  1450  000AAA  A4D8               	btfss	status,2,c
  1451  000AAC  EF5A  F005         	goto	u1751
  1452  000AB0  EF5C  F005         	goto	u1750
  1453  000AB4                     u1751:
  1454  000AB4  EF97  F005         	goto	l2238
  1455  000AB8                     u1750:
  1456  000AB8                     
  1457                           ; BSR set to: 1
  1458                           ;humidity_Temp.c: 120:                 PORTAbits.RA1 = 1;
  1459  000AB8  8280               	bsf	128,1,c	;volatile
  1460  000ABA                     
  1461                           ; BSR set to: 1
  1462                           ;humidity_Temp.c: 122:                 char buffer_TX[] = "Se encendio la bombilla 2\r";
  1463  000ABA  EE20  F060         	lfsr	2,main@F3513
  1464  000ABE  EE11  F03F         	lfsr	1,main@buffer_TX_466
  1465  000AC2  0E1A               	movlw	26
  1466  000AC4                     u1761:
  1467  000AC4  CFDB FFE3          	movff	plusw2,plusw1
  1468  000AC8  06E8               	decf	wreg,f,c
  1469  000ACA  E2FC               	bc	u1761
  1470  000ACC                     
  1471                           ; BSR set to: 1
  1472                           ;humidity_Temp.c: 123:                 for (int i = 0; i < 27; i++) {
  1473  000ACC  0E00               	movlw	0
  1474  000ACE  6FD3               	movwf	(main@i_467+1)& (0+255),b
  1475  000AD0  0E00               	movlw	0
  1476  000AD2  6FD2               	movwf	main@i_467& (0+255),b
  1477  000AD4                     l2224:
  1478                           
  1479                           ; BSR set to: 1
  1480  000AD4  BFD3               	btfsc	(main@i_467+1)& (0+255),7,b
  1481  000AD6  EF76  F005         	goto	u1771
  1482  000ADA  51D3               	movf	(main@i_467+1)& (0+255),w,b
  1483  000ADC  E109               	bnz	u1770
  1484  000ADE  0E1B               	movlw	27
  1485  000AE0  5DD2               	subwf	main@i_467& (0+255),w,b
  1486  000AE2  A0D8               	btfss	status,0,c
  1487  000AE4  EF76  F005         	goto	u1771
  1488  000AE8  EF78  F005         	goto	u1770
  1489  000AEC                     u1771:
  1490  000AEC  EF7A  F005         	goto	l77
  1491  000AF0                     u1770:
  1492  000AF0  EF8E  F005         	goto	l2234
  1493  000AF4                     l77:
  1494                           
  1495                           ;humidity_Temp.c: 125:                     while (!TXSTAbits.TRMT) {
  1496  000AF4  A2AC               	btfss	172,1,c	;volatile
  1497  000AF6  EF7F  F005         	goto	u1781
  1498  000AFA  EF81  F005         	goto	u1780
  1499  000AFE                     u1781:
  1500  000AFE  EF7A  F005         	goto	l77
  1501  000B02                     u1780:
  1502  000B02                     
  1503                           ;humidity_Temp.c: 128:                     TXREG = buffer_TX[i];
  1504  000B02  0E3F               	movlw	low main@buffer_TX_466
  1505  000B04  0101               	movlb	1	; () banked
  1506  000B06  25D2               	addwf	main@i_467& (0+255),w,b
  1507  000B08  6ED9               	movwf	fsr2l,c
  1508  000B0A  0E01               	movlw	high main@buffer_TX_466
  1509  000B0C  21D3               	addwfc	(main@i_467+1)& (0+255),w,b
  1510  000B0E  6EDA               	movwf	fsr2h,c
  1511  000B10  50DF               	movf	indf2,w,c
  1512  000B12  6EAD               	movwf	173,c	;volatile
  1513  000B14                     
  1514                           ; BSR set to: 1
  1515                           ;humidity_Temp.c: 129:                 }
  1516  000B14  4BD2               	infsnz	main@i_467& (0+255),f,b
  1517  000B16  2BD3               	incf	(main@i_467+1)& (0+255),f,b
  1518  000B18  EF6A  F005         	goto	l2224
  1519  000B1C                     l2234:
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;humidity_Temp.c: 131:                 T_Integral = T_Integral + 6;
  1523  000B1C  51DE               	movf	main@T_Integral& (0+255),w,b
  1524  000B1E  0F06               	addlw	6
  1525  000B20  6FDE               	movwf	main@T_Integral& (0+255),b
  1526  000B22                     
  1527                           ; BSR set to: 1
  1528                           ;humidity_Temp.c: 132:                 acum = 12;
  1529  000B22  0E00               	movlw	0
  1530  000B24  6FDD               	movwf	(main@acum+1)& (0+255),b
  1531  000B26  0E0C               	movlw	12
  1532  000B28  6FDC               	movwf	main@acum& (0+255),b
  1533                           
  1534                           ;humidity_Temp.c: 133:             } else if (T_Integral < 30 && acum == 12) {
  1535  000B2A  EFC3  F006         	goto	l2330
  1536  000B2E                     l2238:
  1537                           
  1538                           ; BSR set to: 1
  1539  000B2E  0E1E               	movlw	30
  1540  000B30  61DE               	cpfslt	main@T_Integral& (0+255),b
  1541  000B32  EF9D  F005         	goto	u1791
  1542  000B36  EF9F  F005         	goto	u1790
  1543  000B3A                     u1791:
  1544  000B3A  EFE4  F005         	goto	l2262
  1545  000B3E                     u1790:
  1546  000B3E                     
  1547                           ; BSR set to: 1
  1548  000B3E  0E0C               	movlw	12
  1549  000B40  19DC               	xorwf	main@acum& (0+255),w,b
  1550  000B42  11DD               	iorwf	(main@acum+1)& (0+255),w,b
  1551  000B44  A4D8               	btfss	status,2,c
  1552  000B46  EFA7  F005         	goto	u1801
  1553  000B4A  EFA9  F005         	goto	u1800
  1554  000B4E                     u1801:
  1555  000B4E  EFE4  F005         	goto	l2262
  1556  000B52                     u1800:
  1557  000B52                     
  1558                           ; BSR set to: 1
  1559                           ;humidity_Temp.c: 134:                 PORTAbits.RA2 = 1;
  1560  000B52  8480               	bsf	128,2,c	;volatile
  1561  000B54                     
  1562                           ; BSR set to: 1
  1563                           ;humidity_Temp.c: 136:                 char buffer_TX[] = "Se encendio la bombilla 3\r";
  1564  000B54  EE22  F05A         	lfsr	2,main@F3516
  1565  000B58  EE11  F05A         	lfsr	1,main@buffer_TX_469
  1566  000B5C  0E1A               	movlw	26
  1567  000B5E                     u1811:
  1568  000B5E  CFDB FFE3          	movff	plusw2,plusw1
  1569  000B62  06E8               	decf	wreg,f,c
  1570  000B64  E2FC               	bc	u1811
  1571  000B66                     
  1572                           ; BSR set to: 1
  1573                           ;humidity_Temp.c: 137:                 for (int i = 0; i < 27; i++) {
  1574  000B66  0E00               	movlw	0
  1575  000B68  6FD5               	movwf	(main@i_470+1)& (0+255),b
  1576  000B6A  0E00               	movlw	0
  1577  000B6C  6FD4               	movwf	main@i_470& (0+255),b
  1578  000B6E                     l2248:
  1579                           
  1580                           ; BSR set to: 1
  1581  000B6E  BFD5               	btfsc	(main@i_470+1)& (0+255),7,b
  1582  000B70  EFC3  F005         	goto	u1821
  1583  000B74  51D5               	movf	(main@i_470+1)& (0+255),w,b
  1584  000B76  E109               	bnz	u1820
  1585  000B78  0E1B               	movlw	27
  1586  000B7A  5DD4               	subwf	main@i_470& (0+255),w,b
  1587  000B7C  A0D8               	btfss	status,0,c
  1588  000B7E  EFC3  F005         	goto	u1821
  1589  000B82  EFC5  F005         	goto	u1820
  1590  000B86                     u1821:
  1591  000B86  EFC7  F005         	goto	l86
  1592  000B8A                     u1820:
  1593  000B8A  EFDB  F005         	goto	l2258
  1594  000B8E                     l86:
  1595                           
  1596                           ;humidity_Temp.c: 139:                     while (!TXSTAbits.TRMT) {
  1597  000B8E  A2AC               	btfss	172,1,c	;volatile
  1598  000B90  EFCC  F005         	goto	u1831
  1599  000B94  EFCE  F005         	goto	u1830
  1600  000B98                     u1831:
  1601  000B98  EFC7  F005         	goto	l86
  1602  000B9C                     u1830:
  1603  000B9C                     
  1604                           ;humidity_Temp.c: 142:                     TXREG = buffer_TX[i];
  1605  000B9C  0E5A               	movlw	low main@buffer_TX_469
  1606  000B9E  0101               	movlb	1	; () banked
  1607  000BA0  25D4               	addwf	main@i_470& (0+255),w,b
  1608  000BA2  6ED9               	movwf	fsr2l,c
  1609  000BA4  0E01               	movlw	high main@buffer_TX_469
  1610  000BA6  21D5               	addwfc	(main@i_470+1)& (0+255),w,b
  1611  000BA8  6EDA               	movwf	fsr2h,c
  1612  000BAA  50DF               	movf	indf2,w,c
  1613  000BAC  6EAD               	movwf	173,c	;volatile
  1614  000BAE                     
  1615                           ; BSR set to: 1
  1616                           ;humidity_Temp.c: 143:                 }
  1617  000BAE  4BD4               	infsnz	main@i_470& (0+255),f,b
  1618  000BB0  2BD5               	incf	(main@i_470+1)& (0+255),f,b
  1619  000BB2  EFB7  F005         	goto	l2248
  1620  000BB6                     l2258:
  1621                           
  1622                           ; BSR set to: 1
  1623                           ;humidity_Temp.c: 145:                 T_Integral = T_Integral + 6;
  1624  000BB6  51DE               	movf	main@T_Integral& (0+255),w,b
  1625  000BB8  0F06               	addlw	6
  1626  000BBA  6FDE               	movwf	main@T_Integral& (0+255),b
  1627  000BBC                     
  1628                           ; BSR set to: 1
  1629                           ;humidity_Temp.c: 146:                 acum = 18;
  1630  000BBC  0E00               	movlw	0
  1631  000BBE  6FDD               	movwf	(main@acum+1)& (0+255),b
  1632  000BC0  0E12               	movlw	18
  1633  000BC2  6FDC               	movwf	main@acum& (0+255),b
  1634                           
  1635                           ;humidity_Temp.c: 147:             } else if (T_Integral < 30 && acum == 18) {
  1636  000BC4  EFC3  F006         	goto	l2330
  1637  000BC8                     l2262:
  1638                           
  1639                           ; BSR set to: 1
  1640  000BC8  0E1E               	movlw	30
  1641  000BCA  61DE               	cpfslt	main@T_Integral& (0+255),b
  1642  000BCC  EFEA  F005         	goto	u1841
  1643  000BD0  EFEC  F005         	goto	u1840
  1644  000BD4                     u1841:
  1645  000BD4  EF31  F006         	goto	l2286
  1646  000BD8                     u1840:
  1647  000BD8                     
  1648                           ; BSR set to: 1
  1649  000BD8  0E12               	movlw	18
  1650  000BDA  19DC               	xorwf	main@acum& (0+255),w,b
  1651  000BDC  11DD               	iorwf	(main@acum+1)& (0+255),w,b
  1652  000BDE  A4D8               	btfss	status,2,c
  1653  000BE0  EFF4  F005         	goto	u1851
  1654  000BE4  EFF6  F005         	goto	u1850
  1655  000BE8                     u1851:
  1656  000BE8  EF31  F006         	goto	l2286
  1657  000BEC                     u1850:
  1658  000BEC                     
  1659                           ; BSR set to: 1
  1660                           ;humidity_Temp.c: 148:                 PORTAbits.RA3 = 1;
  1661  000BEC  8680               	bsf	128,3,c	;volatile
  1662  000BEE                     
  1663                           ; BSR set to: 1
  1664                           ;humidity_Temp.c: 150:                 char buffer_TX[] = "Se encendio la bombilla 4\r";
  1665  000BEE  EE22  F03F         	lfsr	2,main@F3519
  1666  000BF2  EE11  F075         	lfsr	1,main@buffer_TX_472
  1667  000BF6  0E1A               	movlw	26
  1668  000BF8                     u1861:
  1669  000BF8  CFDB FFE3          	movff	plusw2,plusw1
  1670  000BFC  06E8               	decf	wreg,f,c
  1671  000BFE  E2FC               	bc	u1861
  1672  000C00                     
  1673                           ; BSR set to: 1
  1674                           ;humidity_Temp.c: 151:                 for (int i = 0; i < 27; i++) {
  1675  000C00  0E00               	movlw	0
  1676  000C02  6FD7               	movwf	(main@i_473+1)& (0+255),b
  1677  000C04  0E00               	movlw	0
  1678  000C06  6FD6               	movwf	main@i_473& (0+255),b
  1679  000C08                     l2272:
  1680                           
  1681                           ; BSR set to: 1
  1682  000C08  BFD7               	btfsc	(main@i_473+1)& (0+255),7,b
  1683  000C0A  EF10  F006         	goto	u1871
  1684  000C0E  51D7               	movf	(main@i_473+1)& (0+255),w,b
  1685  000C10  E109               	bnz	u1870
  1686  000C12  0E1B               	movlw	27
  1687  000C14  5DD6               	subwf	main@i_473& (0+255),w,b
  1688  000C16  A0D8               	btfss	status,0,c
  1689  000C18  EF10  F006         	goto	u1871
  1690  000C1C  EF12  F006         	goto	u1870
  1691  000C20                     u1871:
  1692  000C20  EF14  F006         	goto	l95
  1693  000C24                     u1870:
  1694  000C24  EF28  F006         	goto	l2282
  1695  000C28                     l95:
  1696                           
  1697                           ;humidity_Temp.c: 153:                     while (!TXSTAbits.TRMT) {
  1698  000C28  A2AC               	btfss	172,1,c	;volatile
  1699  000C2A  EF19  F006         	goto	u1881
  1700  000C2E  EF1B  F006         	goto	u1880
  1701  000C32                     u1881:
  1702  000C32  EF14  F006         	goto	l95
  1703  000C36                     u1880:
  1704  000C36                     
  1705                           ;humidity_Temp.c: 156:                     TXREG = buffer_TX[i];
  1706  000C36  0E75               	movlw	low main@buffer_TX_472
  1707  000C38  0101               	movlb	1	; () banked
  1708  000C3A  25D6               	addwf	main@i_473& (0+255),w,b
  1709  000C3C  6ED9               	movwf	fsr2l,c
  1710  000C3E  0E01               	movlw	high main@buffer_TX_472
  1711  000C40  21D7               	addwfc	(main@i_473+1)& (0+255),w,b
  1712  000C42  6EDA               	movwf	fsr2h,c
  1713  000C44  50DF               	movf	indf2,w,c
  1714  000C46  6EAD               	movwf	173,c	;volatile
  1715  000C48                     
  1716                           ; BSR set to: 1
  1717                           ;humidity_Temp.c: 157:                 }
  1718  000C48  4BD6               	infsnz	main@i_473& (0+255),f,b
  1719  000C4A  2BD7               	incf	(main@i_473+1)& (0+255),f,b
  1720  000C4C  EF04  F006         	goto	l2272
  1721  000C50                     l2282:
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;humidity_Temp.c: 159:                 T_Integral = T_Integral + 6;
  1725  000C50  51DE               	movf	main@T_Integral& (0+255),w,b
  1726  000C52  0F06               	addlw	6
  1727  000C54  6FDE               	movwf	main@T_Integral& (0+255),b
  1728  000C56                     
  1729                           ; BSR set to: 1
  1730                           ;humidity_Temp.c: 160:                 acum = 24;
  1731  000C56  0E00               	movlw	0
  1732  000C58  6FDD               	movwf	(main@acum+1)& (0+255),b
  1733  000C5A  0E18               	movlw	24
  1734  000C5C  6FDC               	movwf	main@acum& (0+255),b
  1735                           
  1736                           ;humidity_Temp.c: 161:             } else if (T_Integral < 30 && acum == 24) {
  1737  000C5E  EFC3  F006         	goto	l2330
  1738  000C62                     l2286:
  1739                           
  1740                           ; BSR set to: 1
  1741  000C62  0E1E               	movlw	30
  1742  000C64  61DE               	cpfslt	main@T_Integral& (0+255),b
  1743  000C66  EF37  F006         	goto	u1891
  1744  000C6A  EF39  F006         	goto	u1890
  1745  000C6E                     u1891:
  1746  000C6E  EF7A  F006         	goto	l2308
  1747  000C72                     u1890:
  1748  000C72                     
  1749                           ; BSR set to: 1
  1750  000C72  0E18               	movlw	24
  1751  000C74  19DC               	xorwf	main@acum& (0+255),w,b
  1752  000C76  11DD               	iorwf	(main@acum+1)& (0+255),w,b
  1753  000C78  A4D8               	btfss	status,2,c
  1754  000C7A  EF41  F006         	goto	u1901
  1755  000C7E  EF43  F006         	goto	u1900
  1756  000C82                     u1901:
  1757  000C82  EF7A  F006         	goto	l2308
  1758  000C86                     u1900:
  1759  000C86                     
  1760                           ; BSR set to: 1
  1761                           ;humidity_Temp.c: 162:                 PORTAbits.RA4 = 1;
  1762  000C86  8880               	bsf	128,4,c	;volatile
  1763  000C88                     
  1764                           ; BSR set to: 1
  1765                           ;humidity_Temp.c: 164:                 char buffer_TX[] = "Se encendio la bombilla 5\r";
  1766  000C88  EE22  F024         	lfsr	2,main@F3522
  1767  000C8C  EE11  F090         	lfsr	1,main@buffer_TX_475
  1768  000C90  0E1A               	movlw	26
  1769  000C92                     u1911:
  1770  000C92  CFDB FFE3          	movff	plusw2,plusw1
  1771  000C96  06E8               	decf	wreg,f,c
  1772  000C98  E2FC               	bc	u1911
  1773  000C9A                     
  1774                           ; BSR set to: 1
  1775                           ;humidity_Temp.c: 165:                 for (int i = 0; i < 27; i++) {
  1776  000C9A  0E00               	movlw	0
  1777  000C9C  6FD9               	movwf	(main@i_476+1)& (0+255),b
  1778  000C9E  0E00               	movlw	0
  1779  000CA0  6FD8               	movwf	main@i_476& (0+255),b
  1780  000CA2                     l2296:
  1781                           
  1782                           ; BSR set to: 1
  1783  000CA2  BFD9               	btfsc	(main@i_476+1)& (0+255),7,b
  1784  000CA4  EF5D  F006         	goto	u1921
  1785  000CA8  51D9               	movf	(main@i_476+1)& (0+255),w,b
  1786  000CAA  E109               	bnz	u1920
  1787  000CAC  0E1B               	movlw	27
  1788  000CAE  5DD8               	subwf	main@i_476& (0+255),w,b
  1789  000CB0  A0D8               	btfss	status,0,c
  1790  000CB2  EF5D  F006         	goto	u1921
  1791  000CB6  EF5F  F006         	goto	u1920
  1792  000CBA                     u1921:
  1793  000CBA  EF61  F006         	goto	l104
  1794  000CBE                     u1920:
  1795  000CBE  EF75  F006         	goto	l2306
  1796  000CC2                     l104:
  1797                           
  1798                           ;humidity_Temp.c: 167:                     while (!TXSTAbits.TRMT) {
  1799  000CC2  A2AC               	btfss	172,1,c	;volatile
  1800  000CC4  EF66  F006         	goto	u1931
  1801  000CC8  EF68  F006         	goto	u1930
  1802  000CCC                     u1931:
  1803  000CCC  EF61  F006         	goto	l104
  1804  000CD0                     u1930:
  1805  000CD0                     
  1806                           ;humidity_Temp.c: 170:                     TXREG = buffer_TX[i];
  1807  000CD0  0E90               	movlw	low main@buffer_TX_475
  1808  000CD2  0101               	movlb	1	; () banked
  1809  000CD4  25D8               	addwf	main@i_476& (0+255),w,b
  1810  000CD6  6ED9               	movwf	fsr2l,c
  1811  000CD8  0E01               	movlw	high main@buffer_TX_475
  1812  000CDA  21D9               	addwfc	(main@i_476+1)& (0+255),w,b
  1813  000CDC  6EDA               	movwf	fsr2h,c
  1814  000CDE  50DF               	movf	indf2,w,c
  1815  000CE0  6EAD               	movwf	173,c	;volatile
  1816  000CE2                     
  1817                           ; BSR set to: 1
  1818                           ;humidity_Temp.c: 171:                 }
  1819  000CE2  4BD8               	infsnz	main@i_476& (0+255),f,b
  1820  000CE4  2BD9               	incf	(main@i_476+1)& (0+255),f,b
  1821  000CE6  EF51  F006         	goto	l2296
  1822  000CEA                     l2306:
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;humidity_Temp.c: 173:                 T_Integral = T_Integral + 6;
  1826  000CEA  51DE               	movf	main@T_Integral& (0+255),w,b
  1827  000CEC  0F06               	addlw	6
  1828  000CEE  6FDE               	movwf	main@T_Integral& (0+255),b
  1829                           
  1830                           ;humidity_Temp.c: 174:             }
  1831  000CF0  EFC3  F006         	goto	l2330
  1832  000CF4                     l2308:
  1833                           
  1834                           ; BSR set to: 1
  1835  000CF4  0E23               	movlw	35
  1836  000CF6  65DE               	cpfsgt	main@T_Integral& (0+255),b
  1837  000CF8  EF80  F006         	goto	u1941
  1838  000CFC  EF82  F006         	goto	u1940
  1839  000D00                     u1941:
  1840  000D00  EFBF  F006         	goto	l2328
  1841  000D04                     u1940:
  1842  000D04                     
  1843                           ; BSR set to: 1
  1844                           ;humidity_Temp.c: 176:             {;humidity_Temp.c: 177:                 agr = 1;
  1845  000D04  0E00               	movlw	0
  1846  000D06  6FC9               	movwf	(main@agr+1)& (0+255),b
  1847  000D08  0E01               	movlw	1
  1848  000D0A  6FC8               	movwf	main@agr& (0+255),b
  1849  000D0C                     
  1850                           ; BSR set to: 1
  1851                           ;humidity_Temp.c: 178:                 char buffer_TX[] = "Temperatura Alta \r";
  1852  000D0C  EE21  F0DF         	lfsr	2,main@F3525
  1853  000D10  EE11  F0AB         	lfsr	1,main@buffer_TX_478
  1854  000D14  0E12               	movlw	18
  1855  000D16                     u1951:
  1856  000D16  CFDB FFE3          	movff	plusw2,plusw1
  1857  000D1A  06E8               	decf	wreg,f,c
  1858  000D1C  E2FC               	bc	u1951
  1859  000D1E                     
  1860                           ; BSR set to: 1
  1861                           ;humidity_Temp.c: 179:                 for (int i = 0; i < 19; i++) {
  1862  000D1E  0E00               	movlw	0
  1863  000D20  6FDB               	movwf	(main@i_479+1)& (0+255),b
  1864  000D22  0E00               	movlw	0
  1865  000D24  6FDA               	movwf	main@i_479& (0+255),b
  1866  000D26                     l2316:
  1867                           
  1868                           ; BSR set to: 1
  1869  000D26  BFDB               	btfsc	(main@i_479+1)& (0+255),7,b
  1870  000D28  EF9F  F006         	goto	u1961
  1871  000D2C  51DB               	movf	(main@i_479+1)& (0+255),w,b
  1872  000D2E  E109               	bnz	u1960
  1873  000D30  0E13               	movlw	19
  1874  000D32  5DDA               	subwf	main@i_479& (0+255),w,b
  1875  000D34  A0D8               	btfss	status,0,c
  1876  000D36  EF9F  F006         	goto	u1961
  1877  000D3A  EFA1  F006         	goto	u1960
  1878  000D3E                     u1961:
  1879  000D3E  EFA3  F006         	goto	l113
  1880  000D42                     u1960:
  1881  000D42  EFB7  F006         	goto	l2326
  1882  000D46                     l113:
  1883                           
  1884                           ;humidity_Temp.c: 181:                     while (!TXSTAbits.TRMT) {
  1885  000D46  A2AC               	btfss	172,1,c	;volatile
  1886  000D48  EFA8  F006         	goto	u1971
  1887  000D4C  EFAA  F006         	goto	u1970
  1888  000D50                     u1971:
  1889  000D50  EFA3  F006         	goto	l113
  1890  000D54                     u1970:
  1891  000D54                     
  1892                           ;humidity_Temp.c: 184:                     TXREG = buffer_TX[i];
  1893  000D54  0EAB               	movlw	low main@buffer_TX_478
  1894  000D56  0101               	movlb	1	; () banked
  1895  000D58  25DA               	addwf	main@i_479& (0+255),w,b
  1896  000D5A  6ED9               	movwf	fsr2l,c
  1897  000D5C  0E01               	movlw	high main@buffer_TX_478
  1898  000D5E  21DB               	addwfc	(main@i_479+1)& (0+255),w,b
  1899  000D60  6EDA               	movwf	fsr2h,c
  1900  000D62  50DF               	movf	indf2,w,c
  1901  000D64  6EAD               	movwf	173,c	;volatile
  1902  000D66                     
  1903                           ; BSR set to: 1
  1904                           ;humidity_Temp.c: 185:                 }
  1905  000D66  4BDA               	infsnz	main@i_479& (0+255),f,b
  1906  000D68  2BDB               	incf	(main@i_479+1)& (0+255),f,b
  1907  000D6A  EF93  F006         	goto	l2316
  1908  000D6E                     l2326:
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;humidity_Temp.c: 186:                  MSdelay(100);
  1912  000D6E  0E00               	movlw	0
  1913  000D70  6E02               	movwf	(MSdelay@val+1)^0,c
  1914  000D72  0E64               	movlw	100
  1915  000D74  6E01               	movwf	MSdelay@val^0,c
  1916  000D76  ECDA  F00D         	call	_MSdelay	;wreg free
  1917                           
  1918                           ;humidity_Temp.c: 187:             } else
  1919  000D7A  EFC3  F006         	goto	l2330
  1920  000D7E                     l2328:
  1921                           
  1922                           ; BSR set to: 1
  1923                           ;humidity_Temp.c: 188:                 agr = 1;
  1924  000D7E  0E00               	movlw	0
  1925  000D80  6FC9               	movwf	(main@agr+1)& (0+255),b
  1926  000D82  0E01               	movlw	1
  1927  000D84  6FC8               	movwf	main@agr& (0+255),b
  1928  000D86                     l2330:
  1929                           
  1930                           ;humidity_Temp.c: 191:             sprintf(value, "%d", RH_Integral);
  1931  000D86  0EBE               	movlw	low main@value
  1932  000D88  6E58               	movwf	sprintf@s^0,c
  1933  000D8A  0E01               	movlw	high main@value
  1934  000D8C  6E59               	movwf	(sprintf@s+1)^0,c
  1935  000D8E  0E19               	movlw	low (STR_4+1)
  1936  000D90  6E5A               	movwf	sprintf@fmt^0,c
  1937  000D92  0E08               	movlw	high (STR_4+1)
  1938  000D94  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1939  000D96  C1CB  F05C         	movff	main@RH_Integral,?_sprintf+4
  1940  000D9A  6A5D               	clrf	(?_sprintf+5)^0,c
  1941  000D9C  ECB1  F00D         	call	_sprintf	;wreg free
  1942  000DA0                     
  1943                           ;humidity_Temp.c: 192:             LCD_String_xy(0, 0, value);
  1944  000DA0  0E00               	movlw	0
  1945  000DA2  6E0A               	movwf	LCD_String_xy@pos^0,c
  1946  000DA4  0EBE               	movlw	low main@value
  1947  000DA6  6E0B               	movwf	LCD_String_xy@msg^0,c
  1948  000DA8  0E01               	movlw	high main@value
  1949  000DAA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1950  000DAC  0E00               	movlw	0
  1951  000DAE  EC41  F00E         	call	_LCD_String_xy
  1952  000DB2                     
  1953                           ;humidity_Temp.c: 193:             sprintf(value, ".%d ", RH_Decimal);
  1954  000DB2  0EBE               	movlw	low main@value
  1955  000DB4  6E58               	movwf	sprintf@s^0,c
  1956  000DB6  0E01               	movlw	high main@value
  1957  000DB8  6E59               	movwf	(sprintf@s+1)^0,c
  1958  000DBA  0E0E               	movlw	low STR_2
  1959  000DBC  6E5A               	movwf	sprintf@fmt^0,c
  1960  000DBE  0E08               	movlw	high STR_2
  1961  000DC0  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1962  000DC2  C1CA  F05C         	movff	main@RH_Decimal,?_sprintf+4
  1963  000DC6  6A5D               	clrf	(?_sprintf+5)^0,c
  1964  000DC8  ECB1  F00D         	call	_sprintf	;wreg free
  1965  000DCC                     
  1966                           ;humidity_Temp.c: 194:             LCD_String(value);
  1967  000DCC  0EBE               	movlw	low main@value
  1968  000DCE  6E08               	movwf	LCD_String@msg^0,c
  1969  000DD0  0E01               	movlw	high main@value
  1970  000DD2  6E09               	movwf	(LCD_String@msg+1)^0,c
  1971  000DD4  EC54  F00D         	call	_LCD_String	;wreg free
  1972  000DD8                     
  1973                           ;humidity_Temp.c: 195:             LCD_Char('%');
  1974  000DD8  0E25               	movlw	37
  1975  000DDA  ECB9  F00E         	call	_LCD_Char
  1976  000DDE                     
  1977                           ;humidity_Temp.c: 198:             sprintf(value, "%d", T_Integral);
  1978  000DDE  0EBE               	movlw	low main@value
  1979  000DE0  6E58               	movwf	sprintf@s^0,c
  1980  000DE2  0E01               	movlw	high main@value
  1981  000DE4  6E59               	movwf	(sprintf@s+1)^0,c
  1982  000DE6  0E19               	movlw	low (STR_4+1)
  1983  000DE8  6E5A               	movwf	sprintf@fmt^0,c
  1984  000DEA  0E08               	movlw	high (STR_4+1)
  1985  000DEC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1986  000DEE  C1DE  F05C         	movff	main@T_Integral,?_sprintf+4
  1987  000DF2  6A5D               	clrf	(?_sprintf+5)^0,c
  1988  000DF4  ECB1  F00D         	call	_sprintf	;wreg free
  1989  000DF8                     
  1990                           ;humidity_Temp.c: 199:             LCD_String_xy(1, 0, value);
  1991  000DF8  0E00               	movlw	0
  1992  000DFA  6E0A               	movwf	LCD_String_xy@pos^0,c
  1993  000DFC  0EBE               	movlw	low main@value
  1994  000DFE  6E0B               	movwf	LCD_String_xy@msg^0,c
  1995  000E00  0E01               	movlw	high main@value
  1996  000E02  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1997  000E04  0E01               	movlw	1
  1998  000E06  EC41  F00E         	call	_LCD_String_xy
  1999  000E0A                     
  2000                           ;humidity_Temp.c: 200:             sprintf(value, ".%d", T_Decimal);
  2001  000E0A  0EBE               	movlw	low main@value
  2002  000E0C  6E58               	movwf	sprintf@s^0,c
  2003  000E0E  0E01               	movlw	high main@value
  2004  000E10  6E59               	movwf	(sprintf@s+1)^0,c
  2005  000E12  0E18               	movlw	low STR_4
  2006  000E14  6E5A               	movwf	sprintf@fmt^0,c
  2007  000E16  0E08               	movlw	high STR_4
  2008  000E18  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2009  000E1A  C1CC  F05C         	movff	main@T_Decimal,?_sprintf+4
  2010  000E1E  6A5D               	clrf	(?_sprintf+5)^0,c
  2011  000E20  ECB1  F00D         	call	_sprintf	;wreg free
  2012  000E24                     
  2013                           ;humidity_Temp.c: 201:             LCD_String(value);
  2014  000E24  0EBE               	movlw	low main@value
  2015  000E26  6E08               	movwf	LCD_String@msg^0,c
  2016  000E28  0E01               	movlw	high main@value
  2017  000E2A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2018  000E2C  EC54  F00D         	call	_LCD_String	;wreg free
  2019  000E30                     
  2020                           ;humidity_Temp.c: 202:             LCD_Char(0xdf);
  2021  000E30  0EDF               	movlw	223
  2022  000E32  ECB9  F00E         	call	_LCD_Char
  2023  000E36                     
  2024                           ;humidity_Temp.c: 203:             LCD_Char('C');
  2025  000E36  0E43               	movlw	67
  2026  000E38  ECB9  F00E         	call	_LCD_Char
  2027  000E3C                     
  2028                           ;humidity_Temp.c: 205:             sprintf(value, "%d  ", Checksum);
  2029  000E3C  0EBE               	movlw	low main@value
  2030  000E3E  6E58               	movwf	sprintf@s^0,c
  2031  000E40  0E01               	movlw	high main@value
  2032  000E42  6E59               	movwf	(sprintf@s+1)^0,c
  2033  000E44  0E09               	movlw	low STR_5
  2034  000E46  6E5A               	movwf	sprintf@fmt^0,c
  2035  000E48  0E08               	movlw	high STR_5
  2036  000E4A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2037  000E4C  C1CD  F05C         	movff	main@Checksum,?_sprintf+4
  2038  000E50  6A5D               	clrf	(?_sprintf+5)^0,c
  2039  000E52  ECB1  F00D         	call	_sprintf	;wreg free
  2040  000E56                     
  2041                           ;humidity_Temp.c: 206:             LCD_String_xy(0, 8, "Humedad");
  2042  000E56  0E08               	movlw	8
  2043  000E58  6E0A               	movwf	LCD_String_xy@pos^0,c
  2044  000E5A  0E01               	movlw	low STR_6
  2045  000E5C  6E0B               	movwf	LCD_String_xy@msg^0,c
  2046  000E5E  0E08               	movlw	high STR_6
  2047  000E60  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2048  000E62  0E00               	movlw	0
  2049  000E64  EC41  F00E         	call	_LCD_String_xy
  2050  000E68                     
  2051                           ;humidity_Temp.c: 207:             LCD_String_xy(1, 8, "Temp");
  2052  000E68  0E08               	movlw	8
  2053  000E6A  6E0A               	movwf	LCD_String_xy@pos^0,c
  2054  000E6C  0E13               	movlw	low STR_7
  2055  000E6E  6E0B               	movwf	LCD_String_xy@msg^0,c
  2056  000E70  0E08               	movlw	high STR_7
  2057  000E72  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2058  000E74  0E01               	movlw	1
  2059  000E76  EC41  F00E         	call	_LCD_String_xy
  2060  000E7A  EFF2  F004         	goto	l2186
  2061  000E7E                     l2360:
  2062                           
  2063                           ;humidity_Temp.c: 103:         while (agr == 0) {
  2064  000E7E  0101               	movlb	1	; () banked
  2065  000E80  51C8               	movf	main@agr& (0+255),w,b
  2066  000E82  11C9               	iorwf	(main@agr+1)& (0+255),w,b
  2067  000E84  B4D8               	btfsc	status,2,c
  2068  000E86  EF47  F007         	goto	u1981
  2069  000E8A  EF49  F007         	goto	u1980
  2070  000E8E                     u1981:
  2071  000E8E  EFFA  F004         	goto	l2188
  2072  000E92                     u1980:
  2073  000E92                     
  2074                           ; BSR set to: 1
  2075                           ;humidity_Temp.c: 211:         agr = 0;
  2076  000E92  0E00               	movlw	0
  2077  000E94  6FC9               	movwf	(main@agr+1)& (0+255),b
  2078  000E96  0E00               	movlw	0
  2079  000E98  6FC8               	movwf	main@agr& (0+255),b
  2080                           
  2081                           ;humidity_Temp.c: 212:         acum=0;
  2082  000E9A  0E00               	movlw	0
  2083  000E9C  6FDD               	movwf	(main@acum+1)& (0+255),b
  2084  000E9E  0E00               	movlw	0
  2085  000EA0  6FDC               	movwf	main@acum& (0+255),b
  2086  000EA2                     
  2087                           ; BSR set to: 1
  2088                           ;humidity_Temp.c: 213:         offBombillas();
  2089  000EA2  ECC2  F00C         	call	_offBombillas	;wreg free
  2090  000EA6                     
  2091                           ;humidity_Temp.c: 214:         MSdelay(4000);
  2092  000EA6  0E0F               	movlw	15
  2093  000EA8  6E02               	movwf	(MSdelay@val+1)^0,c
  2094  000EAA  0EA0               	movlw	160
  2095  000EAC  6E01               	movwf	MSdelay@val^0,c
  2096  000EAE  ECDA  F00D         	call	_MSdelay	;wreg free
  2097  000EB2  EF2E  F004         	goto	l2130
  2098  000EB6  EF00  F000         	goto	start
  2099  000EBA                     __end_of_main:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _sprintf *****************
  2103 ;; Defined at:
  2104 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  s               2   87[COMRAM] PTR unsigned char 
  2107 ;;		 -> main@value(10), 
  2108 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2109 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  2110 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  2111 ;;		 -> STR_2(5), STR_1(3), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2114 ;;  ap              2    2[BANK0 ] PTR void [1]
  2115 ;;		 -> ?_sprintf(2), 
  2116 ;;  ret             2    0        int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2   87[COMRAM] int 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         6       0       0       0       0       0       0       0       0
  2127 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2129 ;;      Totals:         6      10       0       0       0       0       0       0       0
  2130 ;;Total ram usage:       16 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    7
  2133 ;; This function calls:
  2134 ;;		_vfprintf
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text1
  2141  001B62                     __ptext1:
  2142                           	callstack 0
  2143  001B62                     _sprintf:
  2144                           	callstack 23
  2145  001B62  0E5C               	movlw	low (?_sprintf+4)
  2146  001B64  0100               	movlb	0	; () banked
  2147  001B66  6FE6               	movwf	sprintf@ap& (0+255),b
  2148  001B68  0E00               	movlw	high (?_sprintf+4)
  2149  001B6A  6FE7               	movwf	(sprintf@ap+1)& (0+255),b
  2150  001B6C  C058  F0E8         	movff	sprintf@s,sprintf@f
  2151  001B70  C059  F0E9         	movff	sprintf@s+1,sprintf@f+1
  2152  001B74                     
  2153                           ; BSR set to: 0
  2154  001B74  0E00               	movlw	0
  2155  001B76  6FEB               	movwf	(sprintf@f+3)& (0+255),b
  2156  001B78  0E00               	movlw	0
  2157  001B7A  6FEA               	movwf	(sprintf@f+2)& (0+255),b
  2158  001B7C                     
  2159                           ; BSR set to: 0
  2160  001B7C  0E00               	movlw	0
  2161  001B7E  6FED               	movwf	(sprintf@f+5)& (0+255),b
  2162  001B80  0E00               	movlw	0
  2163  001B82  6FEC               	movwf	(sprintf@f+4)& (0+255),b
  2164  001B84                     
  2165                           ; BSR set to: 0
  2166  001B84  0EE8               	movlw	low sprintf@f
  2167  001B86  6E50               	movwf	vfprintf@fp^0,c
  2168  001B88  0E00               	movlw	high sprintf@f
  2169  001B8A  6E51               	movwf	(vfprintf@fp+1)^0,c
  2170  001B8C  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2171  001B90  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2172  001B94  0EE6               	movlw	low sprintf@ap
  2173  001B96  6E54               	movwf	vfprintf@ap^0,c
  2174  001B98  0E00               	movlw	high sprintf@ap
  2175  001B9A  6E55               	movwf	(vfprintf@ap+1)^0,c
  2176  001B9C  ECF4  F00C         	call	_vfprintf	;wreg free
  2177  001BA0  0100               	movlb	0	; () banked
  2178  001BA2  51EA               	movf	(sprintf@f+2)& (0+255),w,b
  2179  001BA4  2458               	addwf	sprintf@s^0,w,c
  2180  001BA6  6ED9               	movwf	fsr2l,c
  2181  001BA8  51EB               	movf	(sprintf@f+3)& (0+255),w,b
  2182  001BAA  2059               	addwfc	(sprintf@s+1)^0,w,c
  2183  001BAC  6EDA               	movwf	fsr2h,c
  2184  001BAE  0E00               	movlw	0
  2185  001BB0  6EDF               	movwf	indf2,c
  2186  001BB2                     
  2187                           ; BSR set to: 0
  2188  001BB2  0012               	return		;funcret
  2189  001BB4                     __end_of_sprintf:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _vfprintf *****************
  2193 ;; Defined at:
  2194 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2197 ;;		 -> sprintf@f(6), 
  2198 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2199 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  2200 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  2201 ;;		 -> STR_2(5), STR_1(3), 
  2202 ;;  ap              2   83[COMRAM] PTR PTR void 
  2203 ;;		 -> sprintf@ap(2), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2206 ;;		 -> STR_12(5), STR_11(4), STR_10(3), STR_9(5), 
  2207 ;;		 -> STR_8(3), STR_5(5), STR_4(4), STR_3(3), 
  2208 ;;		 -> STR_2(5), STR_1(3), 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  2   79[COMRAM] int 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2218 ;;      Params:         6       0       0       0       0       0       0       0       0
  2219 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2221 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2222 ;;Total ram usage:        8 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    6
  2225 ;; This function calls:
  2226 ;;		_vfpfcnvrt
  2227 ;; This function is called by:
  2228 ;;		_sprintf
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text2
  2233  0019E8                     __ptext2:
  2234                           	callstack 0
  2235  0019E8                     _vfprintf:
  2236                           	callstack 23
  2237  0019E8                     
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2239  0019E8  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2240  0019EC  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2241  0019F0                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2243  0019F0  0E00               	movlw	0
  2244  0019F2  0100               	movlb	0	; () banked
  2245  0019F4  6FBF               	movwf	(_nout+1)& (0+255),b
  2246  0019F6  0E00               	movlw	0
  2247  0019F8  6FBE               	movwf	_nout& (0+255),b
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2250  0019FA  EF12  F00D         	goto	l1986
  2251  0019FE                     l1984:
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2255  0019FE  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2256  001A02  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2257  001A06  0E56               	movlw	low vfprintf@cfmt
  2258  001A08  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2259  001A0A  0E00               	movlw	high vfprintf@cfmt
  2260  001A0C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2261  001A0E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2262  001A12  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2263  001A16  ECCC  F008         	call	_vfpfcnvrt	;wreg free
  2264  001A1A  5040               	movf	?_vfpfcnvrt^0,w,c
  2265  001A1C  0100               	movlb	0	; () banked
  2266  001A1E  27BE               	addwf	_nout& (0+255),f,b
  2267  001A20  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2268  001A22  23BF               	addwfc	(_nout+1)& (0+255),f,b
  2269  001A24                     l1986:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2273  001A24  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2274  001A28  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2275  001A2C                     	if	0	;tblptru may be non-zero
  2276  001A2C                     	endif
  2277  001A2C                     	if	0	;tblptru may be non-zero
  2278  001A2C                     	endif
  2279  001A2C  0008               	tblrd		*
  2280  001A2E  50F5               	movf	tablat,w,c
  2281  001A30  0900               	iorlw	0
  2282  001A32  A4D8               	btfss	status,2,c
  2283  001A34  EF1E  F00D         	goto	u1481
  2284  001A38  EF20  F00D         	goto	u1480
  2285  001A3C                     u1481:
  2286  001A3C  EFFF  F00C         	goto	l1984
  2287  001A40                     u1480:
  2288  001A40                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2291  001A40  C0BE  F050         	movff	_nout,?_vfprintf
  2292  001A44  C0BF  F051         	movff	_nout+1,?_vfprintf+1
  2293  001A48                     
  2294                           ; BSR set to: 0
  2295  001A48  0012               	return		;funcret
  2296  001A4A                     __end_of_vfprintf:
  2297                           	callstack 0
  2298                           
  2299 ;; *************** function _vfpfcnvrt *****************
  2300 ;; Defined at:
  2301 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2304 ;;		 -> sprintf@f(6), 
  2305 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2306 ;;		 -> vfprintf@cfmt(2), 
  2307 ;;  ap              2   67[COMRAM] PTR PTR void 
  2308 ;;		 -> sprintf@ap(2), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  ll              8   71[COMRAM] long long 
  2311 ;;  llu             8    0        unsigned long long 
  2312 ;;  f               4    0        unsigned long long 
  2313 ;;  vp              3    0        PTR void 
  2314 ;;  ct              3    0        unsigned char [3]
  2315 ;;  cp              3    0        PTR unsigned char 
  2316 ;;  i               2    0        int 
  2317 ;;  done            2    0        int 
  2318 ;;  c               1    0        unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2   63[COMRAM] int 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         6       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2330 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2331 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:       16 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    5
  2335 ;; This function calls:
  2336 ;;		_dtoa
  2337 ;;		_fputc
  2338 ;; This function is called by:
  2339 ;;		_vfprintf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text3
  2344  001198                     __ptext3:
  2345                           	callstack 0
  2346  001198                     _vfpfcnvrt:
  2347                           	callstack 23
  2348  001198                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2350  001198  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  00119C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  0011A0  CFDE FFF6          	movff	postinc2,tblptrl
  2353  0011A4  CFDD FFF7          	movff	postdec2,tblptrh
  2354  0011A8                     	if	0	;tblptru may be non-zero
  2355  0011A8                     	endif
  2356  0011A8                     	if	0	;tblptru may be non-zero
  2357  0011A8                     	endif
  2358  0011A8  0008               	tblrd		*
  2359  0011AA  50F5               	movf	tablat,w,c
  2360  0011AC  0A25               	xorlw	37
  2361  0011AE  A4D8               	btfss	status,2,c
  2362  0011B0  EFDC  F008         	goto	u1411
  2363  0011B4  EFDE  F008         	goto	u1410
  2364  0011B8                     u1411:
  2365  0011B8  EF8A  F009         	goto	l1952
  2366  0011BC                     u1410:
  2367  0011BC                     
  2368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2369  0011BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2370  0011C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2371  0011C4  2ADE               	incf	postinc2,f,c
  2372  0011C6  0E00               	movlw	0
  2373  0011C8  22DD               	addwfc	postdec2,f,c
  2374  0011CA                     
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2376  0011CA  0E00               	movlw	0
  2377  0011CC  0100               	movlb	0	; () banked
  2378  0011CE  6FC1               	movwf	(_width+1)& (0+255),b
  2379  0011D0  0E00               	movlw	0
  2380  0011D2  6FC0               	movwf	_width& (0+255),b
  2381  0011D4  C0C0  F05E         	movff	_width,_flags
  2382  0011D8  C0C1  F05F         	movff	_width+1,_flags+1
  2383  0011DC                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2386  0011DC  69C2               	setf	_prec& (0+255),b
  2387  0011DE  69C3               	setf	(_prec+1)& (0+255),b
  2388  0011E0                     
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2391  0011E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2392  0011E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2393  0011E8  CFDE FFF6          	movff	postinc2,tblptrl
  2394  0011EC  CFDD FFF7          	movff	postdec2,tblptrh
  2395  0011F0                     	if	0	;tblptru may be non-zero
  2396  0011F0                     	endif
  2397  0011F0                     	if	0	;tblptru may be non-zero
  2398  0011F0                     	endif
  2399  0011F0  0008               	tblrd		*
  2400  0011F2  50F5               	movf	tablat,w,c
  2401  0011F4  0A64               	xorlw	100
  2402  0011F6  B4D8               	btfsc	status,2,c
  2403  0011F8  EF00  F009         	goto	u1421
  2404  0011FC  EF02  F009         	goto	u1420
  2405  001200                     u1421:
  2406  001200  EF14  F009         	goto	l1930
  2407  001204                     u1420:
  2408  001204                     
  2409                           ; BSR set to: 0
  2410  001204  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  001208  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  00120C  CFDE FFF6          	movff	postinc2,tblptrl
  2413  001210  CFDD FFF7          	movff	postdec2,tblptrh
  2414  001214                     	if	0	;tblptru may be non-zero
  2415  001214                     	endif
  2416  001214                     	if	0	;tblptru may be non-zero
  2417  001214                     	endif
  2418  001214  0008               	tblrd		*
  2419  001216  50F5               	movf	tablat,w,c
  2420  001218  0A69               	xorlw	105
  2421  00121A  A4D8               	btfss	status,2,c
  2422  00121C  EF12  F009         	goto	u1431
  2423  001220  EF14  F009         	goto	u1430
  2424  001224                     u1431:
  2425  001224  EF54  F009         	goto	l1936
  2426  001228                     u1430:
  2427  001228                     l1930:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2431  001228  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  00122C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  001230  2ADE               	incf	postinc2,f,c
  2434  001232  0E00               	movlw	0
  2435  001234  22DD               	addwfc	postdec2,f,c
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2438  001236  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2439  00123A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2440  00123E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2441  001242  0E02               	movlw	2
  2442  001244  26DE               	addwf	postinc2,f,c
  2443  001246  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2444  00124A  0E00               	movlw	0
  2445  00124C  22DD               	addwfc	postdec2,f,c
  2446  00124E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2447  001252  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2448  001256  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2449  00125A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2450  00125E  0E00               	movlw	0
  2451  001260  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2452  001262  0EFF               	movlw	-1
  2453  001264  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2454  001266  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2455  001268  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2456  00126A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2457  00126C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2458  00126E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2459  001270                     
  2460                           ; BSR set to: 0
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2462  001270  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2463  001274  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2464  001278  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2465  00127C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2466  001280  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2467  001284  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2468  001288  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2469  00128C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2470  001290  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2471  001294  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2472  001298  EC5D  F007         	call	_dtoa	;wreg free
  2473  00129C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2474  0012A0  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2475  0012A4  EFA5  F009         	goto	l965
  2476  0012A8                     l1936:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2480  0012A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2481  0012AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2482  0012B0  CFDE FFF6          	movff	postinc2,tblptrl
  2483  0012B4  CFDD FFF7          	movff	postdec2,tblptrh
  2484  0012B8                     	if	0	;tblptru may be non-zero
  2485  0012B8                     	endif
  2486  0012B8                     	if	0	;tblptru may be non-zero
  2487  0012B8                     	endif
  2488  0012B8  0008               	tblrd		*
  2489  0012BA  50F5               	movf	tablat,w,c
  2490  0012BC  0A25               	xorlw	37
  2491  0012BE  A4D8               	btfss	status,2,c
  2492  0012C0  EF64  F009         	goto	u1441
  2493  0012C4  EF66  F009         	goto	u1440
  2494  0012C8                     u1441:
  2495  0012C8  EF7D  F009         	goto	l1946
  2496  0012CC                     u1440:
  2497  0012CC                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2500  0012CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2501  0012D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2502  0012D4  2ADE               	incf	postinc2,f,c
  2503  0012D6  0E00               	movlw	0
  2504  0012D8  22DD               	addwfc	postdec2,f,c
  2505  0012DA                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2508  0012DA  0E00               	movlw	0
  2509  0012DC  6E02               	movwf	(fputc@c+1)^0,c
  2510  0012DE  0E25               	movlw	37
  2511  0012E0  6E01               	movwf	fputc@c^0,c
  2512  0012E2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2513  0012E6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2514  0012EA  EC84  F00B         	call	_fputc	;wreg free
  2515  0012EE                     l1942:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2518  0012EE  0E00               	movlw	0
  2519  0012F0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2520  0012F2  0E01               	movlw	1
  2521  0012F4  6E40               	movwf	?_vfpfcnvrt^0,c
  2522  0012F6  EFA5  F009         	goto	l965
  2523  0012FA                     l1946:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2527  0012FA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2528  0012FE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2529  001302  2ADE               	incf	postinc2,f,c
  2530  001304  0E00               	movlw	0
  2531  001306  22DD               	addwfc	postdec2,f,c
  2532  001308                     
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2535  001308  0E00               	movlw	0
  2536  00130A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2537  00130C  0E00               	movlw	0
  2538  00130E  6E40               	movwf	?_vfpfcnvrt^0,c
  2539  001310  EFA5  F009         	goto	l965
  2540  001314                     l1952:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2543  001314  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  001318  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  00131C  CFDE FFF6          	movff	postinc2,tblptrl
  2546  001320  CFDD FFF7          	movff	postdec2,tblptrh
  2547  001324                     	if	0	;tblptru may be non-zero
  2548  001324                     	endif
  2549  001324                     	if	0	;tblptru may be non-zero
  2550  001324                     	endif
  2551  001324  0008               	tblrd		*
  2552  001326  50F5               	movf	tablat,w,c
  2553  001328  6E01               	movwf	fputc@c^0,c
  2554  00132A  6A02               	clrf	(fputc@c+1)^0,c
  2555  00132C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2556  001330  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2557  001334  EC84  F00B         	call	_fputc	;wreg free
  2558  001338                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2560  001338  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561  00133C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562  001340  2ADE               	incf	postinc2,f,c
  2563  001342  0E00               	movlw	0
  2564  001344  22DD               	addwfc	postdec2,f,c
  2565  001346  EF77  F009         	goto	l1942
  2566  00134A                     l965:
  2567  00134A  0012               	return		;funcret
  2568  00134C                     __end_of_vfpfcnvrt:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _dtoa *****************
  2572 ;; Defined at:
  2573 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2576 ;;		 -> sprintf@f(6), 
  2577 ;;  d               8   29[COMRAM] long long 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  n               8   53[COMRAM] long long 
  2580 ;;  i               2   61[COMRAM] int 
  2581 ;;  s               2   51[COMRAM] int 
  2582 ;;  w               2   49[COMRAM] int 
  2583 ;;  p               2   47[COMRAM] int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2   27[COMRAM] int 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2593 ;;      Params:        10       0       0       0       0       0       0       0       0
  2594 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2595 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2596 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:       36 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    4
  2600 ;; This function calls:
  2601 ;;		___aodiv
  2602 ;;		___aomod
  2603 ;;		_abs
  2604 ;;		_pad
  2605 ;; This function is called by:
  2606 ;;		_vfpfcnvrt
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text4
  2611  000EBA                     __ptext4:
  2612                           	callstack 0
  2613  000EBA                     _dtoa:
  2614                           	callstack 23
  2615  000EBA                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2617  000EBA  C01E  F036         	movff	dtoa@d,dtoa@n
  2618  000EBE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2619  000EC2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2620  000EC6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2621  000ECA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2622  000ECE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2623  000ED2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2624  000ED6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2625  000EDA                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2627  000EDA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2628  000EDC  EF72  F007         	goto	u1261
  2629  000EE0  EF75  F007         	goto	u1260
  2630  000EE4                     u1261:
  2631  000EE4  0E01               	movlw	1
  2632  000EE6  EF76  F007         	goto	u1270
  2633  000EEA                     u1260:
  2634  000EEA  0E00               	movlw	0
  2635  000EEC                     u1270:
  2636  000EEC  6E34               	movwf	dtoa@s^0,c
  2637  000EEE  6A35               	clrf	(dtoa@s+1)^0,c
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2640  000EF0  5034               	movf	dtoa@s^0,w,c
  2641  000EF2  1035               	iorwf	(dtoa@s+1)^0,w,c
  2642  000EF4  B4D8               	btfsc	status,2,c
  2643  000EF6  EF7F  F007         	goto	u1281
  2644  000EFA  EF81  F007         	goto	u1280
  2645  000EFE                     u1281:
  2646  000EFE  EF91  F007         	goto	l1850
  2647  000F02                     u1280:
  2648  000F02                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2650  000F02  1E3D               	comf	(dtoa@n+7)^0,f,c
  2651  000F04  1E3C               	comf	(dtoa@n+6)^0,f,c
  2652  000F06  1E3B               	comf	(dtoa@n+5)^0,f,c
  2653  000F08  1E3A               	comf	(dtoa@n+4)^0,f,c
  2654  000F0A  1E39               	comf	(dtoa@n+3)^0,f,c
  2655  000F0C  1E38               	comf	(dtoa@n+2)^0,f,c
  2656  000F0E  1E37               	comf	(dtoa@n+1)^0,f,c
  2657  000F10  6C36               	negf	dtoa@n^0,c
  2658  000F12  0E00               	movlw	0
  2659  000F14  2237               	addwfc	(dtoa@n+1)^0,f,c
  2660  000F16  2238               	addwfc	(dtoa@n+2)^0,f,c
  2661  000F18  2239               	addwfc	(dtoa@n+3)^0,f,c
  2662  000F1A  223A               	addwfc	(dtoa@n+4)^0,f,c
  2663  000F1C  223B               	addwfc	(dtoa@n+5)^0,f,c
  2664  000F1E  223C               	addwfc	(dtoa@n+6)^0,f,c
  2665  000F20  223D               	addwfc	(dtoa@n+7)^0,f,c
  2666  000F22                     l1850:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2669  000F22  0100               	movlb	0	; () banked
  2670  000F24  BFC3               	btfsc	(_prec+1)& (0+255),7,b
  2671  000F26  EF97  F007         	goto	u1291
  2672  000F2A  EF99  F007         	goto	u1290
  2673  000F2E                     u1291:
  2674  000F2E  EF9A  F007         	goto	l1854
  2675  000F32                     u1290:
  2676  000F32                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2679  000F32  925E               	bcf	_flags^0,1,c
  2680  000F34                     l1854:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2684  000F34  BFC3               	btfsc	(_prec+1)& (0+255),7,b
  2685  000F36  EFA7  F007         	goto	u1300
  2686  000F3A  51C3               	movf	(_prec+1)& (0+255),w,b
  2687  000F3C  E106               	bnz	u1301
  2688  000F3E  05C2               	decf	_prec& (0+255),w,b
  2689  000F40  B0D8               	btfsc	status,0,c
  2690  000F42  EFA5  F007         	goto	u1301
  2691  000F46  EFA7  F007         	goto	u1300
  2692  000F4A                     u1301:
  2693  000F4A  EFAD  F007         	goto	l938
  2694  000F4E                     u1300:
  2695  000F4E                     
  2696                           ; BSR set to: 0
  2697  000F4E  0E00               	movlw	0
  2698  000F50  6E31               	movwf	(dtoa@p+1)^0,c
  2699  000F52  0E01               	movlw	1
  2700  000F54  6E30               	movwf	dtoa@p^0,c
  2701  000F56  EFB1  F007         	goto	l940
  2702  000F5A                     l938:
  2703                           
  2704                           ; BSR set to: 0
  2705  000F5A  C0C2  F030         	movff	_prec,dtoa@p
  2706  000F5E  C0C3  F031         	movff	_prec+1,dtoa@p+1
  2707  000F62                     l940:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2711  000F62  C0C0  F032         	movff	_width,dtoa@w
  2712  000F66  C0C1  F033         	movff	_width+1,dtoa@w+1
  2713  000F6A                     
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2716  000F6A  5034               	movf	dtoa@s^0,w,c
  2717  000F6C  1035               	iorwf	(dtoa@s+1)^0,w,c
  2718  000F6E  A4D8               	btfss	status,2,c
  2719  000F70  EFBC  F007         	goto	u1311
  2720  000F74  EFBE  F007         	goto	u1310
  2721  000F78                     u1311:
  2722  000F78  EFC5  F007         	goto	l1862
  2723  000F7C                     u1310:
  2724  000F7C                     
  2725                           ; BSR set to: 0
  2726  000F7C  A45E               	btfss	_flags^0,2,c
  2727  000F7E  EFC3  F007         	goto	u1321
  2728  000F82  EFC5  F007         	goto	u1320
  2729  000F86                     u1321:
  2730  000F86  EFC8  F007         	goto	l1864
  2731  000F8A                     u1320:
  2732  000F8A                     l1862:
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2736  000F8A  0632               	decf	dtoa@w^0,f,c
  2737  000F8C  A0D8               	btfss	status,0,c
  2738  000F8E  0633               	decf	(dtoa@w+1)^0,f,c
  2739  000F90                     l1864:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2743  000F90  0E00               	movlw	0
  2744  000F92  6E3F               	movwf	(dtoa@i+1)^0,c
  2745  000F94  0E1F               	movlw	31
  2746  000F96  6E3E               	movwf	dtoa@i^0,c
  2747  000F98                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2750  000F98  0E00               	movlw	0
  2751  000F9A  6FE3               	movwf	(_dbuf+31)& (0+255),b
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2754  000F9C  EF4C  F008         	goto	l1878
  2755  000FA0                     l1868:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2758  000FA0  063E               	decf	dtoa@i^0,f,c
  2759  000FA2  A0D8               	btfss	status,0,c
  2760  000FA4  063F               	decf	(dtoa@i+1)^0,f,c
  2761  000FA6                     
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2763  000FA6  0EC4               	movlw	low _dbuf
  2764  000FA8  243E               	addwf	dtoa@i^0,w,c
  2765  000FAA  6ED9               	movwf	fsr2l,c
  2766  000FAC  0E00               	movlw	high _dbuf
  2767  000FAE  203F               	addwfc	(dtoa@i+1)^0,w,c
  2768  000FB0  6EDA               	movwf	fsr2h,c
  2769  000FB2  C036  F001         	movff	dtoa@n,___aomod@dividend
  2770  000FB6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2771  000FBA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2772  000FBE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2773  000FC2  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2774  000FC6  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2775  000FCA  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2776  000FCE  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2777  000FD2  0E0A               	movlw	10
  2778  000FD4  6E09               	movwf	___aomod@divisor^0,c
  2779  000FD6  0E00               	movlw	0
  2780  000FD8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2781  000FDA  0E00               	movlw	0
  2782  000FDC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2783  000FDE  0E00               	movlw	0
  2784  000FE0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2785  000FE2  0E00               	movlw	0
  2786  000FE4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2787  000FE6  0E00               	movlw	0
  2788  000FE8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2789  000FEA  0E00               	movlw	0
  2790  000FEC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2791  000FEE  0E00               	movlw	0
  2792  000FF0  6E10               	movwf	(___aomod@divisor+7)^0,c
  2793  000FF2  EC6A  F00A         	call	___aomod	;wreg free
  2794  000FF6  C001  F026         	movff	?___aomod,??_dtoa
  2795  000FFA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2796  000FFE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2797  001002  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2798  001006  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2799  00100A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2800  00100E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2801  001012  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2802  001016  C026  F013         	movff	??_dtoa,abs@a
  2803  00101A  C028  F014         	movff	??_dtoa+2,abs@a+1
  2804  00101E  EC21  F00E         	call	_abs	;wreg free
  2805  001022  5013               	movf	?_abs^0,w,c
  2806  001024  0F30               	addlw	48
  2807  001026  6EDF               	movwf	indf2,c
  2808  001028                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2810  001028  0630               	decf	dtoa@p^0,f,c
  2811  00102A  A0D8               	btfss	status,0,c
  2812  00102C  0631               	decf	(dtoa@p+1)^0,f,c
  2813  00102E                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2815  00102E  0632               	decf	dtoa@w^0,f,c
  2816  001030  A0D8               	btfss	status,0,c
  2817  001032  0633               	decf	(dtoa@w+1)^0,f,c
  2818  001034                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2820  001034  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2821  001038  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2822  00103C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2823  001040  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2824  001044  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2825  001048  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2826  00104C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2827  001050  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2828  001054  0E0A               	movlw	10
  2829  001056  6E09               	movwf	___aodiv@divisor^0,c
  2830  001058  0E00               	movlw	0
  2831  00105A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2832  00105C  0E00               	movlw	0
  2833  00105E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2834  001060  0E00               	movlw	0
  2835  001062  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2836  001064  0E00               	movlw	0
  2837  001066  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2838  001068  0E00               	movlw	0
  2839  00106A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2840  00106C  0E00               	movlw	0
  2841  00106E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2842  001070  0E00               	movlw	0
  2843  001072  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2844  001074  ECA6  F009         	call	___aodiv	;wreg free
  2845  001078  C001  F036         	movff	?___aodiv,dtoa@n
  2846  00107C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2847  001080  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2848  001084  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2849  001088  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2850  00108C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2851  001090  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2852  001094  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2853  001098                     l1878:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2856  001098  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2857  00109A  EF57  F008         	goto	u1331
  2858  00109E  503F               	movf	(dtoa@i+1)^0,w,c
  2859  0010A0  E108               	bnz	u1330
  2860  0010A2  043E               	decf	dtoa@i^0,w,c
  2861  0010A4  A0D8               	btfss	status,0,c
  2862  0010A6  EF57  F008         	goto	u1331
  2863  0010AA  EF59  F008         	goto	u1330
  2864  0010AE                     u1331:
  2865  0010AE  EF89  F008         	goto	l1888
  2866  0010B2                     u1330:
  2867  0010B2  5036               	movf	dtoa@n^0,w,c
  2868  0010B4  1037               	iorwf	(dtoa@n+1)^0,w,c
  2869  0010B6  1038               	iorwf	(dtoa@n+2)^0,w,c
  2870  0010B8  1039               	iorwf	(dtoa@n+3)^0,w,c
  2871  0010BA  103A               	iorwf	(dtoa@n+4)^0,w,c
  2872  0010BC  103B               	iorwf	(dtoa@n+5)^0,w,c
  2873  0010BE  103C               	iorwf	(dtoa@n+6)^0,w,c
  2874  0010C0  103D               	iorwf	(dtoa@n+7)^0,w,c
  2875  0010C2  A4D8               	btfss	status,2,c
  2876  0010C4  EF66  F008         	goto	u1341
  2877  0010C8  EF68  F008         	goto	u1340
  2878  0010CC                     u1341:
  2879  0010CC  EFD0  F007         	goto	l1868
  2880  0010D0                     u1340:
  2881  0010D0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2882  0010D2  EF75  F008         	goto	u1350
  2883  0010D6  5031               	movf	(dtoa@p+1)^0,w,c
  2884  0010D8  E106               	bnz	u1351
  2885  0010DA  0430               	decf	dtoa@p^0,w,c
  2886  0010DC  B0D8               	btfsc	status,0,c
  2887  0010DE  EF73  F008         	goto	u1351
  2888  0010E2  EF75  F008         	goto	u1350
  2889  0010E6                     u1351:
  2890  0010E6  EFD0  F007         	goto	l1868
  2891  0010EA                     u1350:
  2892  0010EA  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2893  0010EC  EF80  F008         	goto	u1361
  2894  0010F0  5033               	movf	(dtoa@w+1)^0,w,c
  2895  0010F2  E108               	bnz	u1360
  2896  0010F4  0432               	decf	dtoa@w^0,w,c
  2897  0010F6  A0D8               	btfss	status,0,c
  2898  0010F8  EF80  F008         	goto	u1361
  2899  0010FC  EF82  F008         	goto	u1360
  2900  001100                     u1361:
  2901  001100  EF89  F008         	goto	l1888
  2902  001104                     u1360:
  2903  001104  B25E               	btfsc	_flags^0,1,c
  2904  001106  EF87  F008         	goto	u1371
  2905  00110A  EF89  F008         	goto	u1370
  2906  00110E                     u1371:
  2907  00110E  EFD0  F007         	goto	l1868
  2908  001112                     u1370:
  2909  001112                     l1888:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2912  001112  5034               	movf	dtoa@s^0,w,c
  2913  001114  1035               	iorwf	(dtoa@s+1)^0,w,c
  2914  001116  A4D8               	btfss	status,2,c
  2915  001118  EF90  F008         	goto	u1381
  2916  00111C  EF92  F008         	goto	u1380
  2917  001120                     u1381:
  2918  001120  EF99  F008         	goto	l1892
  2919  001124                     u1380:
  2920  001124  A45E               	btfss	_flags^0,2,c
  2921  001126  EF97  F008         	goto	u1391
  2922  00112A  EF99  F008         	goto	u1390
  2923  00112E                     u1391:
  2924  00112E  EFB7  F008         	goto	l1902
  2925  001132                     u1390:
  2926  001132                     l1892:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2929  001132  063E               	decf	dtoa@i^0,f,c
  2930  001134  A0D8               	btfss	status,0,c
  2931  001136  063F               	decf	(dtoa@i+1)^0,f,c
  2932  001138                     
  2933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2934  001138  5034               	movf	dtoa@s^0,w,c
  2935  00113A  1035               	iorwf	(dtoa@s+1)^0,w,c
  2936  00113C  A4D8               	btfss	status,2,c
  2937  00113E  EFA3  F008         	goto	u1401
  2938  001142  EFA5  F008         	goto	u1400
  2939  001146                     u1401:
  2940  001146  EFAB  F008         	goto	l1898
  2941  00114A                     u1400:
  2942  00114A  0E00               	movlw	0
  2943  00114C  6E2F               	movwf	(_dtoa$1052+1)^0,c
  2944  00114E  0E2B               	movlw	43
  2945  001150  6E2E               	movwf	_dtoa$1052^0,c
  2946  001152  EFAF  F008         	goto	l1900
  2947  001156                     l1898:
  2948  001156  0E00               	movlw	0
  2949  001158  6E2F               	movwf	(_dtoa$1052+1)^0,c
  2950  00115A  0E2D               	movlw	45
  2951  00115C  6E2E               	movwf	_dtoa$1052^0,c
  2952  00115E                     l1900:
  2953  00115E  0EC4               	movlw	low _dbuf
  2954  001160  243E               	addwf	dtoa@i^0,w,c
  2955  001162  6ED9               	movwf	fsr2l,c
  2956  001164  0E00               	movlw	high _dbuf
  2957  001166  203F               	addwfc	(dtoa@i+1)^0,w,c
  2958  001168  6EDA               	movwf	fsr2h,c
  2959  00116A  C02E  FFDF         	movff	_dtoa$1052,indf2
  2960  00116E                     l1902:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2963  00116E  C01C  F011         	movff	dtoa@fp,pad@fp
  2964  001172  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2965  001176  0EC4               	movlw	low _dbuf
  2966  001178  243E               	addwf	dtoa@i^0,w,c
  2967  00117A  6E13               	movwf	pad@buf^0,c
  2968  00117C  0E00               	movlw	high _dbuf
  2969  00117E  203F               	addwfc	(dtoa@i+1)^0,w,c
  2970  001180  6E14               	movwf	(pad@buf+1)^0,c
  2971  001182  C032  F015         	movff	dtoa@w,pad@p
  2972  001186  C033  F016         	movff	dtoa@w+1,pad@p+1
  2973  00118A  ECE9  F00B         	call	_pad	;wreg free
  2974  00118E  C011  F01C         	movff	?_pad,?_dtoa
  2975  001192  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2976  001196  0012               	return		;funcret
  2977  001198                     __end_of_dtoa:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _pad *****************
  2981 ;; Defined at:
  2982 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2985 ;;		 -> sprintf@f(6), 
  2986 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2987 ;;		 -> dbuf(32), 
  2988 ;;  p               2   20[COMRAM] int 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  w               2   25[COMRAM] int 
  2991 ;;  i               2   23[COMRAM] int 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2   16[COMRAM] int 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3001 ;;      Params:         6       0       0       0       0       0       0       0       0
  3002 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3003 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3004 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:       11 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    3
  3008 ;; This function calls:
  3009 ;;		_fputc
  3010 ;;		_fputs
  3011 ;;		_strlen
  3012 ;; This function is called by:
  3013 ;;		_dtoa
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text5
  3018  0017D2                     __ptext5:
  3019                           	callstack 0
  3020  0017D2                     _pad:
  3021                           	callstack 23
  3022  0017D2                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3024  0017D2  A05E               	btfss	_flags^0,0,c
  3025  0017D4  EFEE  F00B         	goto	u1191
  3026  0017D8  EFF0  F00B         	goto	u1190
  3027  0017DC                     u1191:
  3028  0017DC  EFFA  F00B         	goto	l1806
  3029  0017E0                     u1190:
  3030  0017E0                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3032  0017E0  C013  F00A         	movff	pad@buf,fputs@s
  3033  0017E4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3034  0017E8  C011  F00C         	movff	pad@fp,fputs@fp
  3035  0017EC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3036  0017F0  ECFF  F00D         	call	_fputs	;wreg free
  3037  0017F4                     l1806:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3040  0017F4  BE16               	btfsc	(pad@p+1)^0,7,c
  3041  0017F6  EFFF  F00B         	goto	u1201
  3042  0017FA  EF01  F00C         	goto	u1200
  3043  0017FE                     u1201:
  3044  0017FE  EF07  F00C         	goto	l1810
  3045  001802                     u1200:
  3046  001802  C015  F01A         	movff	pad@p,pad@w
  3047  001806  C016  F01B         	movff	pad@p+1,pad@w+1
  3048  00180A  EF0B  F00C         	goto	l927
  3049  00180E                     l1810:
  3050  00180E  0E00               	movlw	0
  3051  001810  6E1B               	movwf	(pad@w+1)^0,c
  3052  001812  0E00               	movlw	0
  3053  001814  6E1A               	movwf	pad@w^0,c
  3054  001816                     l927:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3057  001816  0E00               	movlw	0
  3058  001818  6E19               	movwf	(pad@i+1)^0,c
  3059  00181A  0E00               	movlw	0
  3060  00181C  6E18               	movwf	pad@i^0,c
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3063  00181E  EF1D  F00C         	goto	l1816
  3064  001822                     l1812:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3067  001822  0E00               	movlw	0
  3068  001824  6E02               	movwf	(fputc@c+1)^0,c
  3069  001826  0E20               	movlw	32
  3070  001828  6E01               	movwf	fputc@c^0,c
  3071  00182A  C011  F003         	movff	pad@fp,fputc@fp
  3072  00182E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3073  001832  EC84  F00B         	call	_fputc	;wreg free
  3074  001836                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3076  001836  4A18               	infsnz	pad@i^0,f,c
  3077  001838  2A19               	incf	(pad@i+1)^0,f,c
  3078  00183A                     l1816:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3081  00183A  501A               	movf	pad@w^0,w,c
  3082  00183C  5C18               	subwf	pad@i^0,w,c
  3083  00183E  5019               	movf	(pad@i+1)^0,w,c
  3084  001840  0A80               	xorlw	128
  3085  001842  6E17               	movwf	??_pad^0,c
  3086  001844  501B               	movf	(pad@w+1)^0,w,c
  3087  001846  0A80               	xorlw	128
  3088  001848  5817               	subwfb	??_pad^0,w,c
  3089  00184A  A0D8               	btfss	status,0,c
  3090  00184C  EF2A  F00C         	goto	u1211
  3091  001850  EF2C  F00C         	goto	u1210
  3092  001854                     u1211:
  3093  001854  EF11  F00C         	goto	l1812
  3094  001858                     u1210:
  3095  001858                     
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3097  001858  B05E               	btfsc	_flags^0,0,c
  3098  00185A  EF31  F00C         	goto	u1221
  3099  00185E  EF33  F00C         	goto	u1220
  3100  001862                     u1221:
  3101  001862  EF3D  F00C         	goto	l1820
  3102  001866                     u1220:
  3103  001866                     
  3104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3105  001866  C013  F00A         	movff	pad@buf,fputs@s
  3106  00186A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3107  00186E  C011  F00C         	movff	pad@fp,fputs@fp
  3108  001872  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3109  001876  ECFF  F00D         	call	_fputs	;wreg free
  3110  00187A                     l1820:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3113  00187A  C013  F001         	movff	pad@buf,strlen@s
  3114  00187E  C014  F002         	movff	pad@buf+1,strlen@s+1
  3115  001882  EC61  F00E         	call	_strlen	;wreg free
  3116  001886  501A               	movf	pad@w^0,w,c
  3117  001888  2401               	addwf	?_strlen^0,w,c
  3118  00188A  6E11               	movwf	?_pad^0,c
  3119  00188C  501B               	movf	(pad@w+1)^0,w,c
  3120  00188E  2002               	addwfc	(?_strlen+1)^0,w,c
  3121  001890  6E12               	movwf	(?_pad+1)^0,c
  3122  001892  0012               	return		;funcret
  3123  001894                     __end_of_pad:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _strlen *****************
  3127 ;; Defined at:
  3128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3131 ;;		 -> dbuf(32), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3134 ;;		 -> dbuf(32), 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2    0[COMRAM] unsigned int 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3144 ;;      Params:         2       0       0       0       0       0       0       0       0
  3145 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3147 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3148 ;;Total ram usage:        4 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_pad
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text6
  3158  001CC2                     __ptext6:
  3159                           	callstack 0
  3160  001CC2                     _strlen:
  3161                           	callstack 25
  3162  001CC2  C001  F003         	movff	strlen@s,strlen@a
  3163  001CC6  C002  F004         	movff	strlen@s+1,strlen@a+1
  3164  001CCA  EF69  F00E         	goto	l1716
  3165  001CCE                     l1714:
  3166  001CCE  4A01               	infsnz	strlen@s^0,f,c
  3167  001CD0  2A02               	incf	(strlen@s+1)^0,f,c
  3168  001CD2                     l1716:
  3169  001CD2  C001  FFD9         	movff	strlen@s,fsr2l
  3170  001CD6  C002  FFDA         	movff	strlen@s+1,fsr2h
  3171  001CDA  50DF               	movf	indf2,w,c
  3172  001CDC  A4D8               	btfss	status,2,c
  3173  001CDE  EF73  F00E         	goto	u1051
  3174  001CE2  EF75  F00E         	goto	u1050
  3175  001CE6                     u1051:
  3176  001CE6  EF67  F00E         	goto	l1714
  3177  001CEA                     u1050:
  3178  001CEA  5003               	movf	strlen@a^0,w,c
  3179  001CEC  5C01               	subwf	strlen@s^0,w,c
  3180  001CEE  6E01               	movwf	?_strlen^0,c
  3181  001CF0  5004               	movf	(strlen@a+1)^0,w,c
  3182  001CF2  5802               	subwfb	(strlen@s+1)^0,w,c
  3183  001CF4  6E02               	movwf	(?_strlen+1)^0,c
  3184  001CF6  0012               	return		;funcret
  3185  001CF8                     __end_of_strlen:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _fputs *****************
  3189 ;; Defined at:
  3190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3193 ;;		 -> dbuf(32), 
  3194 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3195 ;;		 -> sprintf@f(6), 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  i               2   14[COMRAM] int 
  3198 ;;  c               1   13[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2    9[COMRAM] int 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         4       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3211 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        7 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    2
  3215 ;; This function calls:
  3216 ;;		_fputc
  3217 ;; This function is called by:
  3218 ;;		_pad
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text7
  3223  001BFE                     __ptext7:
  3224                           	callstack 0
  3225  001BFE                     _fputs:
  3226                           	callstack 23
  3227  001BFE  0E00               	movlw	0
  3228  001C00  6E10               	movwf	(fputs@i+1)^0,c
  3229  001C02  0E00               	movlw	0
  3230  001C04  6E0F               	movwf	fputs@i^0,c
  3231  001C06  EF10  F00E         	goto	l1710
  3232  001C0A                     l1706:
  3233  001C0A  C00E  F001         	movff	fputs@c,fputc@c
  3234  001C0E  6A02               	clrf	(fputc@c+1)^0,c
  3235  001C10  C00C  F003         	movff	fputs@fp,fputc@fp
  3236  001C14  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3237  001C18  EC84  F00B         	call	_fputc	;wreg free
  3238  001C1C  4A0F               	infsnz	fputs@i^0,f,c
  3239  001C1E  2A10               	incf	(fputs@i+1)^0,f,c
  3240  001C20                     l1710:
  3241  001C20  500F               	movf	fputs@i^0,w,c
  3242  001C22  240A               	addwf	fputs@s^0,w,c
  3243  001C24  6ED9               	movwf	fsr2l,c
  3244  001C26  5010               	movf	(fputs@i+1)^0,w,c
  3245  001C28  200B               	addwfc	(fputs@s+1)^0,w,c
  3246  001C2A  6EDA               	movwf	fsr2h,c
  3247  001C2C  50DF               	movf	indf2,w,c
  3248  001C2E  6E0E               	movwf	fputs@c^0,c
  3249  001C30  500E               	movf	fputs@c^0,w,c
  3250  001C32  A4D8               	btfss	status,2,c
  3251  001C34  EF1E  F00E         	goto	u1041
  3252  001C38  EF20  F00E         	goto	u1040
  3253  001C3C                     u1041:
  3254  001C3C  EF05  F00E         	goto	l1706
  3255  001C40                     u1040:
  3256  001C40  0012               	return		;funcret
  3257  001C42                     __end_of_fputs:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _fputc *****************
  3261 ;; Defined at:
  3262 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  c               2    0[COMRAM] int 
  3265 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3266 ;;		 -> sprintf@f(6), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2    0[COMRAM] int 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         4       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3281 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        9 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    1
  3285 ;; This function calls:
  3286 ;;		_putch
  3287 ;; This function is called by:
  3288 ;;		_pad
  3289 ;;		_vfpfcnvrt
  3290 ;;		_fputs
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text8
  3295  001708                     __ptext8:
  3296                           	callstack 0
  3297  001708                     _fputc:
  3298                           	callstack 26
  3299  001708  5003               	movf	fputc@fp^0,w,c
  3300  00170A  1004               	iorwf	(fputc@fp+1)^0,w,c
  3301  00170C  B4D8               	btfsc	status,2,c
  3302  00170E  EF8B  F00B         	goto	u1001
  3303  001712  EF8D  F00B         	goto	u1000
  3304  001716                     u1001:
  3305  001716  EF96  F00B         	goto	l1694
  3306  00171A                     u1000:
  3307  00171A  5003               	movf	fputc@fp^0,w,c
  3308  00171C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3309  00171E  A4D8               	btfss	status,2,c
  3310  001720  EF94  F00B         	goto	u1011
  3311  001724  EF96  F00B         	goto	u1010
  3312  001728                     u1011:
  3313  001728  EF9B  F00B         	goto	l1696
  3314  00172C                     u1010:
  3315  00172C                     l1694:
  3316  00172C  5001               	movf	fputc@c^0,w,c
  3317  00172E  ECDF  F00E         	call	_putch
  3318  001732  EFE8  F00B         	goto	l991
  3319  001736                     l1696:
  3320  001736  EE20 F004          	lfsr	2,4
  3321  00173A  5003               	movf	fputc@fp^0,w,c
  3322  00173C  26D9               	addwf	fsr2l,f,c
  3323  00173E  5004               	movf	(fputc@fp+1)^0,w,c
  3324  001740  22DA               	addwfc	fsr2h,f,c
  3325  001742  50DE               	movf	postinc2,w,c
  3326  001744  10DE               	iorwf	postinc2,w,c
  3327  001746  B4D8               	btfsc	status,2,c
  3328  001748  EFA8  F00B         	goto	u1021
  3329  00174C  EFAA  F00B         	goto	u1020
  3330  001750                     u1021:
  3331  001750  EFC5  F00B         	goto	l1700
  3332  001754                     u1020:
  3333  001754  EE20 F004          	lfsr	2,4
  3334  001758  5003               	movf	fputc@fp^0,w,c
  3335  00175A  26D9               	addwf	fsr2l,f,c
  3336  00175C  5004               	movf	(fputc@fp+1)^0,w,c
  3337  00175E  22DA               	addwfc	fsr2h,f,c
  3338  001760  EE10 F002          	lfsr	1,2
  3339  001764  5003               	movf	fputc@fp^0,w,c
  3340  001766  26E1               	addwf	fsr1l,f,c
  3341  001768  5004               	movf	(fputc@fp+1)^0,w,c
  3342  00176A  22E2               	addwfc	fsr1h,f,c
  3343  00176C  50DE               	movf	postinc2,w,c
  3344  00176E  5CE6               	subwf	postinc1,w,c
  3345  001770  50E6               	movf	postinc1,w,c
  3346  001772  0A80               	xorlw	128
  3347  001774  6E09               	movwf	(??_fputc+4)^0,c
  3348  001776  50DE               	movf	postinc2,w,c
  3349  001778  0A80               	xorlw	128
  3350  00177A  5809               	subwfb	(??_fputc+4)^0,w,c
  3351  00177C  B0D8               	btfsc	status,0,c
  3352  00177E  EFC3  F00B         	goto	u1031
  3353  001782  EFC5  F00B         	goto	u1030
  3354  001786                     u1031:
  3355  001786  EFE8  F00B         	goto	l991
  3356  00178A                     u1030:
  3357  00178A                     l1700:
  3358  00178A  EE20 F002          	lfsr	2,2
  3359  00178E  5003               	movf	fputc@fp^0,w,c
  3360  001790  26D9               	addwf	fsr2l,f,c
  3361  001792  5004               	movf	(fputc@fp+1)^0,w,c
  3362  001794  22DA               	addwfc	fsr2h,f,c
  3363  001796  CFDE F005          	movff	postinc2,??_fputc
  3364  00179A  CFDD F006          	movff	postdec2,??_fputc+1
  3365  00179E  C003  FFD9         	movff	fputc@fp,fsr2l
  3366  0017A2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3367  0017A6  CFDE F007          	movff	postinc2,??_fputc+2
  3368  0017AA  CFDD F008          	movff	postdec2,??_fputc+3
  3369  0017AE  5005               	movf	??_fputc^0,w,c
  3370  0017B0  2407               	addwf	(??_fputc+2)^0,w,c
  3371  0017B2  6ED9               	movwf	fsr2l,c
  3372  0017B4  5006               	movf	(??_fputc+1)^0,w,c
  3373  0017B6  2008               	addwfc	(??_fputc+3)^0,w,c
  3374  0017B8  6EDA               	movwf	fsr2h,c
  3375  0017BA  C001  FFDF         	movff	fputc@c,indf2
  3376  0017BE  EE20 F002          	lfsr	2,2
  3377  0017C2  5003               	movf	fputc@fp^0,w,c
  3378  0017C4  26D9               	addwf	fsr2l,f,c
  3379  0017C6  5004               	movf	(fputc@fp+1)^0,w,c
  3380  0017C8  22DA               	addwfc	fsr2h,f,c
  3381  0017CA  2ADE               	incf	postinc2,f,c
  3382  0017CC  0E00               	movlw	0
  3383  0017CE  22DD               	addwfc	postdec2,f,c
  3384  0017D0                     l991:
  3385  0017D0  0012               	return		;funcret
  3386  0017D2                     __end_of_fputc:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function _putch *****************
  3390 ;; Defined at:
  3391 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  c               1    wreg     unsigned char 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  c               1    0[COMRAM] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_fputc
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text9
  3419  001DBE                     __ptext9:
  3420                           	callstack 0
  3421  001DBE                     _putch:
  3422                           	callstack 26
  3423  001DBE  0012               	return		;funcret
  3424  001DC0                     __end_of_putch:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _abs *****************
  3428 ;; Defined at:
  3429 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  a               2   18[COMRAM] int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   18[COMRAM] int 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3443 ;;      Params:         2       0       0       0       0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3445 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3446 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_dtoa
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text10
  3457  001C42                     __ptext10:
  3458                           	callstack 0
  3459  001C42                     _abs:
  3460                           	callstack 26
  3461  001C42  BE14               	btfsc	(abs@a+1)^0,7,c
  3462  001C44  EF2E  F00E         	goto	u1230
  3463  001C48  5014               	movf	(abs@a+1)^0,w,c
  3464  001C4A  E106               	bnz	u1231
  3465  001C4C  0413               	decf	abs@a^0,w,c
  3466  001C4E  B0D8               	btfsc	status,0,c
  3467  001C50  EF2C  F00E         	goto	u1231
  3468  001C54  EF2E  F00E         	goto	u1230
  3469  001C58                     u1231:
  3470  001C58  EF3C  F00E         	goto	l976
  3471  001C5C                     u1230:
  3472  001C5C  C013  F015         	movff	abs@a,??_abs
  3473  001C60  C014  F016         	movff	abs@a+1,??_abs+1
  3474  001C64  1E15               	comf	??_abs^0,f,c
  3475  001C66  1E16               	comf	(??_abs+1)^0,f,c
  3476  001C68  4A15               	infsnz	??_abs^0,f,c
  3477  001C6A  2A16               	incf	(??_abs+1)^0,f,c
  3478  001C6C  C015  F013         	movff	??_abs,?_abs
  3479  001C70  C016  F014         	movff	??_abs+1,?_abs+1
  3480  001C74  EF40  F00E         	goto	l979
  3481  001C78                     l976:
  3482  001C78  C013  F013         	movff	abs@a,?_abs
  3483  001C7C  C014  F014         	movff	abs@a+1,?_abs+1
  3484  001C80                     l979:
  3485  001C80  0012               	return		;funcret
  3486  001C82                     __end_of_abs:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function ___aomod *****************
  3490 ;; Defined at:
  3491 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  dividend        8    0[COMRAM] long long 
  3494 ;;  divisor         8    8[COMRAM] long long 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  sign            1   17[COMRAM] unsigned char 
  3497 ;;  counter         1   16[COMRAM] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  8    0[COMRAM] long long 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3507 ;;      Params:        16       0       0       0       0       0       0       0       0
  3508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3510 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3511 ;;Total ram usage:       18 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_dtoa
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text11
  3521  0014D4                     __ptext11:
  3522                           	callstack 0
  3523  0014D4                     ___aomod:
  3524                           	callstack 26
  3525  0014D4  0E00               	movlw	0
  3526  0014D6  6E12               	movwf	___aomod@sign^0,c
  3527  0014D8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3528  0014DA  EF73  F00A         	goto	u1130
  3529  0014DE  EF71  F00A         	goto	u1131
  3530  0014E2                     u1131:
  3531  0014E2  EF85  F00A         	goto	l1774
  3532  0014E6                     u1130:
  3533  0014E6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3534  0014E8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3535  0014EA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3536  0014EC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3537  0014EE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3538  0014F0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3539  0014F2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3540  0014F4  6C01               	negf	___aomod@dividend^0,c
  3541  0014F6  0E00               	movlw	0
  3542  0014F8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3543  0014FA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3544  0014FC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3545  0014FE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3546  001500  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3547  001502  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3548  001504  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3549  001506  0E01               	movlw	1
  3550  001508  6E12               	movwf	___aomod@sign^0,c
  3551  00150A                     l1774:
  3552  00150A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3553  00150C  EF8C  F00A         	goto	u1140
  3554  001510  EF8A  F00A         	goto	u1141
  3555  001514                     u1141:
  3556  001514  EF9C  F00A         	goto	l1778
  3557  001518                     u1140:
  3558  001518  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3559  00151A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3560  00151C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3561  00151E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3562  001520  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3563  001522  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3564  001524  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3565  001526  6C09               	negf	___aomod@divisor^0,c
  3566  001528  0E00               	movlw	0
  3567  00152A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3568  00152C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3569  00152E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3570  001530  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3571  001532  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3572  001534  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3573  001536  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3574  001538                     l1778:
  3575  001538  5009               	movf	___aomod@divisor^0,w,c
  3576  00153A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3577  00153C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3578  00153E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3579  001540  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3580  001542  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3581  001544  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3582  001546  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3583  001548  B4D8               	btfsc	status,2,c
  3584  00154A  EFA9  F00A         	goto	u1151
  3585  00154E  EFAB  F00A         	goto	u1150
  3586  001552                     u1151:
  3587  001552  EFF3  F00A         	goto	l1794
  3588  001556                     u1150:
  3589  001556  0E01               	movlw	1
  3590  001558  6E11               	movwf	___aomod@counter^0,c
  3591  00155A  EFB9  F00A         	goto	l1784
  3592  00155E                     l1782:
  3593  00155E  90D8               	bcf	status,0,c
  3594  001560  3609               	rlcf	___aomod@divisor^0,f,c
  3595  001562  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3596  001564  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3597  001566  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3598  001568  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3599  00156A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3600  00156C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3601  00156E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3602  001570  2A11               	incf	___aomod@counter^0,f,c
  3603  001572                     l1784:
  3604  001572  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3605  001574  EFBE  F00A         	goto	u1161
  3606  001578  EFC0  F00A         	goto	u1160
  3607  00157C                     u1161:
  3608  00157C  EFAF  F00A         	goto	l1782
  3609  001580                     u1160:
  3610  001580                     l1786:
  3611  001580  5009               	movf	___aomod@divisor^0,w,c
  3612  001582  5C01               	subwf	___aomod@dividend^0,w,c
  3613  001584  500A               	movf	(___aomod@divisor+1)^0,w,c
  3614  001586  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3615  001588  500B               	movf	(___aomod@divisor+2)^0,w,c
  3616  00158A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3617  00158C  500C               	movf	(___aomod@divisor+3)^0,w,c
  3618  00158E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3619  001590  500D               	movf	(___aomod@divisor+4)^0,w,c
  3620  001592  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3621  001594  500E               	movf	(___aomod@divisor+5)^0,w,c
  3622  001596  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3623  001598  500F               	movf	(___aomod@divisor+6)^0,w,c
  3624  00159A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3625  00159C  5010               	movf	(___aomod@divisor+7)^0,w,c
  3626  00159E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3627  0015A0  A0D8               	btfss	status,0,c
  3628  0015A2  EFD5  F00A         	goto	u1171
  3629  0015A6  EFD7  F00A         	goto	u1170
  3630  0015AA                     u1171:
  3631  0015AA  EFE7  F00A         	goto	l1790
  3632  0015AE                     u1170:
  3633  0015AE  5009               	movf	___aomod@divisor^0,w,c
  3634  0015B0  5E01               	subwf	___aomod@dividend^0,f,c
  3635  0015B2  500A               	movf	(___aomod@divisor+1)^0,w,c
  3636  0015B4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3637  0015B6  500B               	movf	(___aomod@divisor+2)^0,w,c
  3638  0015B8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3639  0015BA  500C               	movf	(___aomod@divisor+3)^0,w,c
  3640  0015BC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3641  0015BE  500D               	movf	(___aomod@divisor+4)^0,w,c
  3642  0015C0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3643  0015C2  500E               	movf	(___aomod@divisor+5)^0,w,c
  3644  0015C4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3645  0015C6  500F               	movf	(___aomod@divisor+6)^0,w,c
  3646  0015C8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3647  0015CA  5010               	movf	(___aomod@divisor+7)^0,w,c
  3648  0015CC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3649  0015CE                     l1790:
  3650  0015CE  90D8               	bcf	status,0,c
  3651  0015D0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3652  0015D2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3653  0015D4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3654  0015D6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3655  0015D8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3656  0015DA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3657  0015DC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3658  0015DE  3209               	rrcf	___aomod@divisor^0,f,c
  3659  0015E0  2E11               	decfsz	___aomod@counter^0,f,c
  3660  0015E2  EFC0  F00A         	goto	l1786
  3661  0015E6                     l1794:
  3662  0015E6  5012               	movf	___aomod@sign^0,w,c
  3663  0015E8  B4D8               	btfsc	status,2,c
  3664  0015EA  EFF9  F00A         	goto	u1181
  3665  0015EE  EFFB  F00A         	goto	u1180
  3666  0015F2                     u1181:
  3667  0015F2  EF0B  F00B         	goto	l1798
  3668  0015F6                     u1180:
  3669  0015F6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3670  0015F8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3671  0015FA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3672  0015FC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3673  0015FE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3674  001600  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3675  001602  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3676  001604  6C01               	negf	___aomod@dividend^0,c
  3677  001606  0E00               	movlw	0
  3678  001608  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3679  00160A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3680  00160C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3681  00160E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3682  001610  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3683  001612  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3684  001614  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3685  001616                     l1798:
  3686  001616  C001  F001         	movff	___aomod@dividend,?___aomod
  3687  00161A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3688  00161E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3689  001622  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3690  001626  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3691  00162A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3692  00162E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3693  001632  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3694  001636  0012               	return		;funcret
  3695  001638                     __end_of___aomod:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function ___aodiv *****************
  3699 ;; Defined at:
  3700 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  dividend        8    0[COMRAM] long long 
  3703 ;;  divisor         8    8[COMRAM] long long 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  quotient        8   18[COMRAM] long long 
  3706 ;;  sign            1   17[COMRAM] unsigned char 
  3707 ;;  counter         1   16[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  8    0[COMRAM] long long 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3717 ;;      Params:        16       0       0       0       0       0       0       0       0
  3718 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3720 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3721 ;;Total ram usage:       26 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_dtoa
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text12
  3731  00134C                     __ptext12:
  3732                           	callstack 0
  3733  00134C                     ___aodiv:
  3734                           	callstack 26
  3735  00134C  0E00               	movlw	0
  3736  00134E  6E12               	movwf	___aodiv@sign^0,c
  3737  001350  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3738  001352  EFAF  F009         	goto	u1060
  3739  001356  EFAD  F009         	goto	u1061
  3740  00135A                     u1061:
  3741  00135A  EFC1  F009         	goto	l1730
  3742  00135E                     u1060:
  3743  00135E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3744  001360  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3745  001362  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3746  001364  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3747  001366  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3748  001368  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3749  00136A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3750  00136C  6C09               	negf	___aodiv@divisor^0,c
  3751  00136E  0E00               	movlw	0
  3752  001370  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3753  001372  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3754  001374  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3755  001376  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3756  001378  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3757  00137A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3758  00137C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3759  00137E  0E01               	movlw	1
  3760  001380  6E12               	movwf	___aodiv@sign^0,c
  3761  001382                     l1730:
  3762  001382  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3763  001384  EFC8  F009         	goto	u1070
  3764  001388  EFC6  F009         	goto	u1071
  3765  00138C                     u1071:
  3766  00138C  EFDA  F009         	goto	l1736
  3767  001390                     u1070:
  3768  001390  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3769  001392  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3770  001394  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3771  001396  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3772  001398  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3773  00139A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3774  00139C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3775  00139E  6C01               	negf	___aodiv@dividend^0,c
  3776  0013A0  0E00               	movlw	0
  3777  0013A2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3778  0013A4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3779  0013A6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3780  0013A8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3781  0013AA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3782  0013AC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3783  0013AE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3784  0013B0  0E01               	movlw	1
  3785  0013B2  1A12               	xorwf	___aodiv@sign^0,f,c
  3786  0013B4                     l1736:
  3787  0013B4  EE20  F013         	lfsr	2,___aodiv@quotient
  3788  0013B8  0E07               	movlw	7
  3789  0013BA                     u1081:
  3790  0013BA  6ADE               	clrf	postinc2,c
  3791  0013BC  06E8               	decf	wreg,f,c
  3792  0013BE  E2FD               	bc	u1081
  3793  0013C0  5009               	movf	___aodiv@divisor^0,w,c
  3794  0013C2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3795  0013C4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3796  0013C6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3797  0013C8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3798  0013CA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3799  0013CC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3800  0013CE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3801  0013D0  B4D8               	btfsc	status,2,c
  3802  0013D2  EFED  F009         	goto	u1091
  3803  0013D6  EFEF  F009         	goto	u1090
  3804  0013DA                     u1091:
  3805  0013DA  EF41  F00A         	goto	l1758
  3806  0013DE                     u1090:
  3807  0013DE  0E01               	movlw	1
  3808  0013E0  6E11               	movwf	___aodiv@counter^0,c
  3809  0013E2  EFFD  F009         	goto	l1744
  3810  0013E6                     l1742:
  3811  0013E6  90D8               	bcf	status,0,c
  3812  0013E8  3609               	rlcf	___aodiv@divisor^0,f,c
  3813  0013EA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3814  0013EC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3815  0013EE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3816  0013F0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3817  0013F2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3818  0013F4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3819  0013F6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3820  0013F8  2A11               	incf	___aodiv@counter^0,f,c
  3821  0013FA                     l1744:
  3822  0013FA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3823  0013FC  EF02  F00A         	goto	u1101
  3824  001400  EF04  F00A         	goto	u1100
  3825  001404                     u1101:
  3826  001404  EFF3  F009         	goto	l1742
  3827  001408                     u1100:
  3828  001408                     l1746:
  3829  001408  90D8               	bcf	status,0,c
  3830  00140A  3613               	rlcf	___aodiv@quotient^0,f,c
  3831  00140C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3832  00140E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3833  001410  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3834  001412  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3835  001414  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3836  001416  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3837  001418  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3838  00141A  5009               	movf	___aodiv@divisor^0,w,c
  3839  00141C  5C01               	subwf	___aodiv@dividend^0,w,c
  3840  00141E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3841  001420  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3842  001422  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3843  001424  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3844  001426  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3845  001428  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3846  00142A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3847  00142C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3848  00142E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3849  001430  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3850  001432  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3851  001434  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3852  001436  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3853  001438  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3854  00143A  A0D8               	btfss	status,0,c
  3855  00143C  EF22  F00A         	goto	u1111
  3856  001440  EF24  F00A         	goto	u1110
  3857  001444                     u1111:
  3858  001444  EF35  F00A         	goto	l1754
  3859  001448                     u1110:
  3860  001448  5009               	movf	___aodiv@divisor^0,w,c
  3861  00144A  5E01               	subwf	___aodiv@dividend^0,f,c
  3862  00144C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3863  00144E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3864  001450  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3865  001452  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3866  001454  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3867  001456  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3868  001458  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3869  00145A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3870  00145C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3871  00145E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3872  001460  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3873  001462  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3874  001464  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3875  001466  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3876  001468  8013               	bsf	___aodiv@quotient^0,0,c
  3877  00146A                     l1754:
  3878  00146A  90D8               	bcf	status,0,c
  3879  00146C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3880  00146E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3881  001470  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3882  001472  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3883  001474  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3884  001476  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3885  001478  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3886  00147A  3209               	rrcf	___aodiv@divisor^0,f,c
  3887  00147C  2E11               	decfsz	___aodiv@counter^0,f,c
  3888  00147E  EF04  F00A         	goto	l1746
  3889  001482                     l1758:
  3890  001482  5012               	movf	___aodiv@sign^0,w,c
  3891  001484  B4D8               	btfsc	status,2,c
  3892  001486  EF47  F00A         	goto	u1121
  3893  00148A  EF49  F00A         	goto	u1120
  3894  00148E                     u1121:
  3895  00148E  EF59  F00A         	goto	l1762
  3896  001492                     u1120:
  3897  001492  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3898  001494  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3899  001496  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3900  001498  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3901  00149A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3902  00149C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3903  00149E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3904  0014A0  6C13               	negf	___aodiv@quotient^0,c
  3905  0014A2  0E00               	movlw	0
  3906  0014A4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3907  0014A6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3908  0014A8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3909  0014AA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3910  0014AC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3911  0014AE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3912  0014B0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3913  0014B2                     l1762:
  3914  0014B2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3915  0014B6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3916  0014BA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3917  0014BE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3918  0014C2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3919  0014C6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3920  0014CA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3921  0014CE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3922  0014D2  0012               	return		;funcret
  3923  0014D4                     __end_of___aodiv:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _onLEDS *****************
  3927 ;; Defined at:
  3928 ;;		line 250 in file "humidity_Temp.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  T_Integral      1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  T_Integral      1   19[COMRAM] unsigned char 
  3933 ;;  i               2   22[COMRAM] int 
  3934 ;;  buffer_TX      19    0[COMRAM] unsigned char [19]
  3935 ;;  valor           2   20[COMRAM] int 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0
  3946 ;;      Locals:        24       0       0       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3948 ;;      Totals:        24       0       0       0       0       0       0       0       0
  3949 ;;Total ram usage:       24 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text13
  3959  001638                     __ptext13:
  3960                           	callstack 0
  3961  001638                     _onLEDS:
  3962                           	callstack 30
  3963                           
  3964                           ;incstack = 0
  3965                           ;onLEDS@T_Integral stored from wreg
  3966  001638  6E14               	movwf	onLEDS@T_Integral^0,c
  3967  00163A                     
  3968                           ;humidity_Temp.c: 251:     int valor = T_Integral;
  3969  00163A  C014  F015         	movff	onLEDS@T_Integral,onLEDS@valor
  3970  00163E  6A16               	clrf	(onLEDS@valor+1)^0,c
  3971  001640                     
  3972                           ;humidity_Temp.c: 252:     if (valor < 30)
  3973  001640  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  3974  001642  EF2E  F00B         	goto	u1570
  3975  001646  5016               	movf	(onLEDS@valor+1)^0,w,c
  3976  001648  E107               	bnz	u1571
  3977  00164A  0E1E               	movlw	30
  3978  00164C  5C15               	subwf	onLEDS@valor^0,w,c
  3979  00164E  B0D8               	btfsc	status,0,c
  3980  001650  EF2C  F00B         	goto	u1571
  3981  001654  EF2E  F00B         	goto	u1570
  3982  001658                     u1571:
  3983  001658  EF33  F00B         	goto	l2064
  3984  00165C                     u1570:
  3985  00165C                     
  3986                           ;humidity_Temp.c: 253:     {;humidity_Temp.c: 254:         PORTCbits.RC5 = 1;
  3987  00165C  8A82               	bsf	130,5,c	;volatile
  3988                           
  3989                           ;humidity_Temp.c: 255:         PORTCbits.RC4 = 0;
  3990  00165E  9882               	bcf	130,4,c	;volatile
  3991                           
  3992                           ;humidity_Temp.c: 256:         PORTAbits.RA5 = 0;
  3993  001660  9A80               	bcf	128,5,c	;volatile
  3994                           
  3995                           ;humidity_Temp.c: 257:     } else if (valor >= 30 && valor <= 35) {
  3996  001662  EF83  F00B         	goto	l162
  3997  001666                     l2064:
  3998  001666  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  3999  001668  EF3F  F00B         	goto	u1581
  4000  00166C  5016               	movf	(onLEDS@valor+1)^0,w,c
  4001  00166E  E109               	bnz	u1580
  4002  001670  0E1E               	movlw	30
  4003  001672  5C15               	subwf	onLEDS@valor^0,w,c
  4004  001674  A0D8               	btfss	status,0,c
  4005  001676  EF3F  F00B         	goto	u1581
  4006  00167A  EF41  F00B         	goto	u1580
  4007  00167E                     u1581:
  4008  00167E  EF80  F00B         	goto	l153
  4009  001682                     u1580:
  4010  001682  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  4011  001684  EF4F  F00B         	goto	u1590
  4012  001688  5016               	movf	(onLEDS@valor+1)^0,w,c
  4013  00168A  E107               	bnz	u1591
  4014  00168C  0E24               	movlw	36
  4015  00168E  5C15               	subwf	onLEDS@valor^0,w,c
  4016  001690  B0D8               	btfsc	status,0,c
  4017  001692  EF4D  F00B         	goto	u1591
  4018  001696  EF4F  F00B         	goto	u1590
  4019  00169A                     u1591:
  4020  00169A  EF80  F00B         	goto	l153
  4021  00169E                     u1590:
  4022  00169E                     
  4023                           ;humidity_Temp.c: 258:         PORTCbits.RC5 = 0;
  4024  00169E  9A82               	bcf	130,5,c	;volatile
  4025                           
  4026                           ;humidity_Temp.c: 259:         PORTCbits.RC4 = 1;
  4027  0016A0  8882               	bsf	130,4,c	;volatile
  4028                           
  4029                           ;humidity_Temp.c: 260:         PORTAbits.RA5 = 0;
  4030  0016A2  9A80               	bcf	128,5,c	;volatile
  4031  0016A4                     
  4032                           ;humidity_Temp.c: 261:         char buffer_TX[] = "Temperatura Ideal\r";
  4033  0016A4  EE20  F0AB         	lfsr	2,onLEDS@F3536
  4034  0016A8  EE10  F001         	lfsr	1,onLEDS@buffer_TX
  4035  0016AC  0E12               	movlw	18
  4036  0016AE                     u1601:
  4037  0016AE  CFDB FFE3          	movff	plusw2,plusw1
  4038  0016B2  06E8               	decf	wreg,f,c
  4039  0016B4  E2FC               	bc	u1601
  4040  0016B6                     
  4041                           ;humidity_Temp.c: 262:                 for (int i = 0; i < 19;i++) {
  4042  0016B6  0E00               	movlw	0
  4043  0016B8  6E18               	movwf	(onLEDS@i+1)^0,c
  4044  0016BA  0E00               	movlw	0
  4045  0016BC  6E17               	movwf	onLEDS@i^0,c
  4046  0016BE                     l158:
  4047                           
  4048                           ;humidity_Temp.c: 264:                     while (!TXSTAbits.TRMT) {
  4049  0016BE  A2AC               	btfss	172,1,c	;volatile
  4050  0016C0  EF64  F00B         	goto	u1611
  4051  0016C4  EF66  F00B         	goto	u1610
  4052  0016C8                     u1611:
  4053  0016C8  EF5F  F00B         	goto	l158
  4054  0016CC                     u1610:
  4055  0016CC                     
  4056                           ;humidity_Temp.c: 267:                     TXREG = buffer_TX[i];
  4057  0016CC  0E01               	movlw	low onLEDS@buffer_TX
  4058  0016CE  2417               	addwf	onLEDS@i^0,w,c
  4059  0016D0  6ED9               	movwf	fsr2l,c
  4060  0016D2  0E00               	movlw	high onLEDS@buffer_TX
  4061  0016D4  2018               	addwfc	(onLEDS@i+1)^0,w,c
  4062  0016D6  6EDA               	movwf	fsr2h,c
  4063  0016D8  50DF               	movf	indf2,w,c
  4064  0016DA  6EAD               	movwf	173,c	;volatile
  4065  0016DC                     
  4066                           ;humidity_Temp.c: 268:                 }
  4067  0016DC  4A17               	infsnz	onLEDS@i^0,f,c
  4068  0016DE  2A18               	incf	(onLEDS@i+1)^0,f,c
  4069  0016E0  BE18               	btfsc	(onLEDS@i+1)^0,7,c
  4070  0016E2  EF7C  F00B         	goto	u1621
  4071  0016E6  5018               	movf	(onLEDS@i+1)^0,w,c
  4072  0016E8  E109               	bnz	u1620
  4073  0016EA  0E13               	movlw	19
  4074  0016EC  5C17               	subwf	onLEDS@i^0,w,c
  4075  0016EE  A0D8               	btfss	status,0,c
  4076  0016F0  EF7C  F00B         	goto	u1621
  4077  0016F4  EF7E  F00B         	goto	u1620
  4078  0016F8                     u1621:
  4079  0016F8  EF5F  F00B         	goto	l158
  4080  0016FC                     u1620:
  4081  0016FC  EF83  F00B         	goto	l162
  4082  001700                     l153:
  4083                           
  4084                           ;humidity_Temp.c: 270:         PORTCbits.RC5 = 0;
  4085  001700  9A82               	bcf	130,5,c	;volatile
  4086                           
  4087                           ;humidity_Temp.c: 271:         PORTCbits.RC4 = 0;
  4088  001702  9882               	bcf	130,4,c	;volatile
  4089                           
  4090                           ;humidity_Temp.c: 272:         PORTAbits.RA5 = 1;
  4091  001704  8A80               	bsf	128,5,c	;volatile
  4092  001706                     l162:
  4093  001706  0012               	return		;funcret
  4094  001708                     __end_of_onLEDS:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _offBombillas *****************
  4098 ;; Defined at:
  4099 ;;		line 278 in file "humidity_Temp.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  i               2   21[COMRAM] int 
  4104 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:        23       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:       23 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text14
  4128  001984                     __ptext14:
  4129                           	callstack 0
  4130  001984                     _offBombillas:
  4131                           	callstack 30
  4132  001984                     
  4133                           ;humidity_Temp.c: 279:         PORTAbits.RA0 = 0;
  4134  001984  9080               	bcf	128,0,c	;volatile
  4135                           
  4136                           ;humidity_Temp.c: 280:         PORTAbits.RA1 = 0;
  4137  001986  9280               	bcf	128,1,c	;volatile
  4138                           
  4139                           ;humidity_Temp.c: 281:         PORTAbits.RA2 = 0;
  4140  001988  9480               	bcf	128,2,c	;volatile
  4141                           
  4142                           ;humidity_Temp.c: 282:         PORTAbits.RA3 = 0;
  4143  00198A  9680               	bcf	128,3,c	;volatile
  4144                           
  4145                           ;humidity_Temp.c: 283:         PORTAbits.RA4 = 0;
  4146  00198C  9880               	bcf	128,4,c	;volatile
  4147  00198E                     
  4148                           ;humidity_Temp.c: 284:         char buffer_TX[] = "Bombillas Apagadas \r";
  4149  00198E  EE20  F096         	lfsr	2,offBombillas@F3540
  4150  001992  EE10  F001         	lfsr	1,offBombillas@buffer_TX
  4151  001996  0E14               	movlw	20
  4152  001998                     u1631:
  4153  001998  CFDB FFE3          	movff	plusw2,plusw1
  4154  00199C  06E8               	decf	wreg,f,c
  4155  00199E  E2FC               	bc	u1631
  4156  0019A0                     
  4157                           ;humidity_Temp.c: 285:                 for (int i = 0; i < 19;i++) {
  4158  0019A0  0E00               	movlw	0
  4159  0019A2  6E17               	movwf	(offBombillas@i+1)^0,c
  4160  0019A4  0E00               	movlw	0
  4161  0019A6  6E16               	movwf	offBombillas@i^0,c
  4162  0019A8                     l169:
  4163                           
  4164                           ;humidity_Temp.c: 287:                     while (!TXSTAbits.TRMT) {
  4165  0019A8  A2AC               	btfss	172,1,c	;volatile
  4166  0019AA  EFD9  F00C         	goto	u1641
  4167  0019AE  EFDB  F00C         	goto	u1640
  4168  0019B2                     u1641:
  4169  0019B2  EFD4  F00C         	goto	l169
  4170  0019B6                     u1640:
  4171  0019B6                     
  4172                           ;humidity_Temp.c: 290:                     TXREG = buffer_TX[i];
  4173  0019B6  0E01               	movlw	low offBombillas@buffer_TX
  4174  0019B8  2416               	addwf	offBombillas@i^0,w,c
  4175  0019BA  6ED9               	movwf	fsr2l,c
  4176  0019BC  0E00               	movlw	high offBombillas@buffer_TX
  4177  0019BE  2017               	addwfc	(offBombillas@i+1)^0,w,c
  4178  0019C0  6EDA               	movwf	fsr2h,c
  4179  0019C2  50DF               	movf	indf2,w,c
  4180  0019C4  6EAD               	movwf	173,c	;volatile
  4181  0019C6                     
  4182                           ;humidity_Temp.c: 291:                 }
  4183  0019C6  4A16               	infsnz	offBombillas@i^0,f,c
  4184  0019C8  2A17               	incf	(offBombillas@i+1)^0,f,c
  4185  0019CA  BE17               	btfsc	(offBombillas@i+1)^0,7,c
  4186  0019CC  EFF1  F00C         	goto	u1651
  4187  0019D0  5017               	movf	(offBombillas@i+1)^0,w,c
  4188  0019D2  E109               	bnz	u1650
  4189  0019D4  0E13               	movlw	19
  4190  0019D6  5C16               	subwf	offBombillas@i^0,w,c
  4191  0019D8  A0D8               	btfss	status,0,c
  4192  0019DA  EFF1  F00C         	goto	u1651
  4193  0019DE  EFF3  F00C         	goto	u1650
  4194  0019E2                     u1651:
  4195  0019E2  EFD4  F00C         	goto	l169
  4196  0019E6                     u1650:
  4197  0019E6  0012               	return		;funcret
  4198  0019E8                     __end_of_offBombillas:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _LCD_String_xy *****************
  4202 ;; Defined at:
  4203 ;;		line 58 in file "LCD_16x2.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  row             1    wreg     unsigned char 
  4206 ;;  pos             1    9[COMRAM] unsigned char 
  4207 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  4208 ;;		 -> STR_14(5), STR_13(8), STR_7(5), STR_6(8), 
  4209 ;;		 -> main@value(10), 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  row             1   12[COMRAM] unsigned char 
  4212 ;;  location        1   13[COMRAM] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4222 ;;      Params:         3       0       0       0       0       0       0       0       0
  4223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4225 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4226 ;;Total ram usage:        5 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    3
  4229 ;; This function calls:
  4230 ;;		_LCD_Command
  4231 ;;		_LCD_String
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text15
  4238  001C82                     __ptext15:
  4239                           	callstack 0
  4240  001C82                     _LCD_String_xy:
  4241                           	callstack 27
  4242                           
  4243                           ;incstack = 0
  4244                           ;LCD_String_xy@row stored from wreg
  4245  001C82  6E0D               	movwf	LCD_String_xy@row^0,c
  4246  001C84                     
  4247                           ;LCD_16x2.c: 61:     if(row<1)
  4248  001C84  500D               	movf	LCD_String_xy@row^0,w,c
  4249  001C86  A4D8               	btfss	status,2,c
  4250  001C88  EF48  F00E         	goto	u1561
  4251  001C8C  EF4A  F00E         	goto	u1560
  4252  001C90                     u1561:
  4253  001C90  EF53  F00E         	goto	l2052
  4254  001C94                     u1560:
  4255  001C94                     
  4256                           ;LCD_16x2.c: 62:     {;LCD_16x2.c: 63:         location=(0x80) | ((pos) & 0x0f);
  4257  001C94  500A               	movf	LCD_String_xy@pos^0,w,c
  4258  001C96  0B0F               	andlw	15
  4259  001C98  0980               	iorlw	128
  4260  001C9A  6E0E               	movwf	LCD_String_xy@location^0,c
  4261  001C9C                     
  4262                           ;LCD_16x2.c: 64:         LCD_Command(location);
  4263  001C9C  500E               	movf	LCD_String_xy@location^0,w,c
  4264  001C9E  ECC7  F00E         	call	_LCD_Command
  4265                           
  4266                           ;LCD_16x2.c: 65:     }
  4267  001CA2  EF5A  F00E         	goto	l2056
  4268  001CA6                     l2052:
  4269                           
  4270                           ;LCD_16x2.c: 67:     {;LCD_16x2.c: 68:         location=(0xC0) | ((pos) & 0x0f);
  4271  001CA6  500A               	movf	LCD_String_xy@pos^0,w,c
  4272  001CA8  0B0F               	andlw	15
  4273  001CAA  09C0               	iorlw	192
  4274  001CAC  6E0E               	movwf	LCD_String_xy@location^0,c
  4275  001CAE                     
  4276                           ;LCD_16x2.c: 69:         LCD_Command(location);
  4277  001CAE  500E               	movf	LCD_String_xy@location^0,w,c
  4278  001CB0  ECC7  F00E         	call	_LCD_Command
  4279  001CB4                     l2056:
  4280                           
  4281                           ;LCD_16x2.c: 73:     LCD_String(msg);
  4282  001CB4  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  4283  001CB8  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4284  001CBC  EC54  F00D         	call	_LCD_String	;wreg free
  4285  001CC0  0012               	return		;funcret
  4286  001CC2                     __end_of_LCD_String_xy:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _LCD_String *****************
  4290 ;; Defined at:
  4291 ;;		line 48 in file "LCD_16x2.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  4294 ;;		 -> STR_14(5), STR_13(8), STR_7(5), STR_6(8), 
  4295 ;;		 -> main@value(10), 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4307 ;;      Params:         2       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4310 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:        2 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		_LCD_Char
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;;		_LCD_String_xy
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text16
  4323  001AA8                     __ptext16:
  4324                           	callstack 0
  4325  001AA8                     _LCD_String:
  4326                           	callstack 27
  4327  001AA8                     
  4328                           ;LCD_16x2.c: 48: void LCD_String(const char *msg);LCD_16x2.c: 49: {;LCD_16x2.c: 50:  whi
      +                          le((*msg)!=0)
  4329  001AA8  EF6A  F00D         	goto	l1966
  4330  001AAC                     l1962:
  4331                           
  4332                           ;LCD_16x2.c: 51:  {;LCD_16x2.c: 52:    LCD_Char(*msg);
  4333  001AAC  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4334  001AB0  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4335  001AB4  6AF8               	clrf	tblptru,c
  4336  001AB6  0E07               	movlw	(high __ramtop+-1)
  4337  001AB8  64F7               	cpfsgt	tblptrh,c
  4338  001ABA  D003               	bra	u1457
  4339  001ABC  0008               	tblrd		*
  4340  001ABE  50F5               	movf	tablat,w,c
  4341  001AC0  D005               	bra	u1450
  4342  001AC2                     u1457:
  4343  001AC2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4344  001AC6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4345  001ACA  50E7               	movf	indf1,w,c
  4346  001ACC                     u1450:
  4347  001ACC  ECB9  F00E         	call	_LCD_Char
  4348  001AD0                     
  4349                           ;LCD_16x2.c: 53:    msg++;
  4350  001AD0  4A08               	infsnz	LCD_String@msg^0,f,c
  4351  001AD2  2A09               	incf	(LCD_String@msg+1)^0,f,c
  4352  001AD4                     l1966:
  4353                           
  4354                           ;LCD_16x2.c: 50:  while((*msg)!=0)
  4355  001AD4  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4356  001AD8  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4357  001ADC  6AF8               	clrf	tblptru,c
  4358  001ADE  0E07               	movlw	(high __ramtop+-1)
  4359  001AE0  64F7               	cpfsgt	tblptrh,c
  4360  001AE2  D003               	bra	u1467
  4361  001AE4  0008               	tblrd		*
  4362  001AE6  50F5               	movf	tablat,w,c
  4363  001AE8  D005               	bra	u1460
  4364  001AEA                     u1467:
  4365  001AEA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4366  001AEE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4367  001AF2  50E7               	movf	indf1,w,c
  4368  001AF4                     u1460:
  4369  001AF4  0900               	iorlw	0
  4370  001AF6  A4D8               	btfss	status,2,c
  4371  001AF8  EF80  F00D         	goto	u1471
  4372  001AFC  EF82  F00D         	goto	u1470
  4373  001B00                     u1471:
  4374  001B00  EF56  F00D         	goto	l1962
  4375  001B04                     u1470:
  4376  001B04  0012               	return		;funcret
  4377  001B06                     __end_of_LCD_String:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _LCD_Char *****************
  4381 ;; Defined at:
  4382 ;;		line 37 in file "LCD_16x2.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  dat             1    wreg     unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  dat             1    6[COMRAM] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        1 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    1
  4403 ;; This function calls:
  4404 ;;		_MSdelay
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;;		_LCD_String
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text17
  4412  001D72                     __ptext17:
  4413                           	callstack 0
  4414  001D72                     _LCD_Char:
  4415                           	callstack 27
  4416                           
  4417                           ;incstack = 0
  4418                           ;LCD_Char@dat stored from wreg
  4419  001D72  6E07               	movwf	LCD_Char@dat^0,c
  4420  001D74                     
  4421                           ;LCD_16x2.c: 37: void LCD_Char(char dat);LCD_16x2.c: 38: {;LCD_16x2.c: 39:  LATD= dat;
  4422  001D74  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  4423  001D78                     
  4424                           ;LCD_16x2.c: 40:  LATC0 = 1;
  4425  001D78  808B               	bsf	3979,0,c	;volatile
  4426  001D7A                     
  4427                           ;LCD_16x2.c: 41:  LATC1=1;
  4428  001D7A  828B               	bsf	3979,1,c	;volatile
  4429  001D7C                     
  4430                           ;LCD_16x2.c: 42:  __nop();
  4431  001D7C  F000               	nop	
  4432  001D7E                     
  4433                           ;LCD_16x2.c: 43:  LATC1=0;
  4434  001D7E  928B               	bcf	3979,1,c	;volatile
  4435  001D80                     
  4436                           ;LCD_16x2.c: 44:     MSdelay(1);
  4437  001D80  0E00               	movlw	0
  4438  001D82  6E02               	movwf	(MSdelay@val+1)^0,c
  4439  001D84  0E01               	movlw	1
  4440  001D86  6E01               	movwf	MSdelay@val^0,c
  4441  001D88  ECDA  F00D         	call	_MSdelay	;wreg free
  4442  001D8C  0012               	return		;funcret
  4443  001D8E                     __end_of_LCD_Char:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function _LCD_Init *****************
  4447 ;; Defined at:
  4448 ;;		line 9 in file "LCD_16x2.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		_LCD_Command
  4471 ;;		_MSdelay
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text18
  4478  001CF8                     __ptext18:
  4479                           	callstack 0
  4480  001CF8                     _LCD_Init:
  4481                           	callstack 28
  4482  001CF8                     
  4483                           ;LCD_16x2.c: 11:     TRISD = 0x00;
  4484  001CF8  0E00               	movlw	0
  4485  001CFA  6E95               	movwf	149,c	;volatile
  4486                           
  4487                           ;LCD_16x2.c: 12:     TRISC = 0x00;
  4488  001CFC  0E00               	movlw	0
  4489  001CFE  6E94               	movwf	148,c	;volatile
  4490  001D00                     
  4491                           ;LCD_16x2.c: 13:     MSdelay(20);
  4492  001D00  0E00               	movlw	0
  4493  001D02  6E02               	movwf	(MSdelay@val+1)^0,c
  4494  001D04  0E14               	movlw	20
  4495  001D06  6E01               	movwf	MSdelay@val^0,c
  4496  001D08  ECDA  F00D         	call	_MSdelay	;wreg free
  4497  001D0C                     
  4498                           ;LCD_16x2.c: 14:  LCD_Command(0x38);
  4499  001D0C  0E38               	movlw	56
  4500  001D0E  ECC7  F00E         	call	_LCD_Command
  4501  001D12                     
  4502                           ;LCD_16x2.c: 15:     LCD_Command(0x01);
  4503  001D12  0E01               	movlw	1
  4504  001D14  ECC7  F00E         	call	_LCD_Command
  4505  001D18                     
  4506                           ;LCD_16x2.c: 16:     LCD_Command(0x0c);
  4507  001D18  0E0C               	movlw	12
  4508  001D1A  ECC7  F00E         	call	_LCD_Command
  4509  001D1E                     
  4510                           ;LCD_16x2.c: 17:     LCD_Command(0x06);
  4511  001D1E  0E06               	movlw	6
  4512  001D20  ECC7  F00E         	call	_LCD_Command
  4513  001D24  0012               	return		;funcret
  4514  001D26                     __end_of_LCD_Init:
  4515                           	callstack 0
  4516                           
  4517 ;; *************** function _LCD_Command *****************
  4518 ;; Defined at:
  4519 ;;		line 26 in file "LCD_16x2.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  cmd             1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  cmd             1    6[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0
  4534 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4536 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4537 ;;Total ram usage:        1 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    1
  4540 ;; This function calls:
  4541 ;;		_MSdelay
  4542 ;; This function is called by:
  4543 ;;		_LCD_Init
  4544 ;;		_LCD_String_xy
  4545 ;;		_LCD_Clear
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text19
  4550  001D8E                     __ptext19:
  4551                           	callstack 0
  4552  001D8E                     _LCD_Command:
  4553                           	callstack 28
  4554                           
  4555                           ;incstack = 0
  4556                           ;LCD_Command@cmd stored from wreg
  4557  001D8E  6E07               	movwf	LCD_Command@cmd^0,c
  4558  001D90                     
  4559                           ;LCD_16x2.c: 26: void LCD_Command(char cmd );LCD_16x2.c: 27: {;LCD_16x2.c: 28:  LATD= cm
      +                          d;
  4560  001D90  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  4561  001D94                     
  4562                           ;LCD_16x2.c: 29:  LATC0 = 0;
  4563  001D94  908B               	bcf	3979,0,c	;volatile
  4564  001D96                     
  4565                           ;LCD_16x2.c: 30:  LATC1 = 1;
  4566  001D96  828B               	bsf	3979,1,c	;volatile
  4567  001D98                     
  4568                           ;LCD_16x2.c: 31:  __nop();
  4569  001D98  F000               	nop	
  4570  001D9A                     
  4571                           ;LCD_16x2.c: 32:  LATC1 = 0;
  4572  001D9A  928B               	bcf	3979,1,c	;volatile
  4573  001D9C                     
  4574                           ;LCD_16x2.c: 33:     MSdelay(3);
  4575  001D9C  0E00               	movlw	0
  4576  001D9E  6E02               	movwf	(MSdelay@val+1)^0,c
  4577  001DA0  0E03               	movlw	3
  4578  001DA2  6E01               	movwf	MSdelay@val^0,c
  4579  001DA4  ECDA  F00D         	call	_MSdelay	;wreg free
  4580  001DA8  0012               	return		;funcret
  4581  001DAA                     __end_of_LCD_Command:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _MSdelay *****************
  4585 ;; Defined at:
  4586 ;;		line 77 in file "LCD_16x2.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  val             2    0[COMRAM] unsigned int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  j               2    4[COMRAM] unsigned int 
  4591 ;;  i               2    2[COMRAM] unsigned int 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4601 ;;      Params:         2       0       0       0       0       0       0       0       0
  4602 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4604 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4605 ;;Total ram usage:        6 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_main
  4611 ;;		_LCD_Init
  4612 ;;		_LCD_Command
  4613 ;;		_LCD_Char
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text20
  4618  001BB4                     __ptext20:
  4619                           	callstack 0
  4620  001BB4                     _MSdelay:
  4621                           	callstack 30
  4622  001BB4                     
  4623                           ;LCD_16x2.c: 77: void MSdelay(unsigned int val);LCD_16x2.c: 78: {;LCD_16x2.c: 79:      u
      +                          nsigned int i,j;;LCD_16x2.c: 80:         for(i=0;i<=val;i++)
  4624  001BB4  0E00               	movlw	0
  4625  001BB6  6E04               	movwf	(MSdelay@i+1)^0,c
  4626  001BB8  0E00               	movlw	0
  4627  001BBA  6E03               	movwf	MSdelay@i^0,c
  4628  001BBC  EFF3  F00D         	goto	l1842
  4629  001BC0                     l1830:
  4630                           
  4631                           ;LCD_16x2.c: 81:             for(j=0;j<81;j++);
  4632  001BC0  0E00               	movlw	0
  4633  001BC2  6E06               	movwf	(MSdelay@j+1)^0,c
  4634  001BC4  0E00               	movlw	0
  4635  001BC6  6E05               	movwf	MSdelay@j^0,c
  4636  001BC8                     l1836:
  4637  001BC8  4A05               	infsnz	MSdelay@j^0,f,c
  4638  001BCA  2A06               	incf	(MSdelay@j+1)^0,f,c
  4639  001BCC  5006               	movf	(MSdelay@j+1)^0,w,c
  4640  001BCE  E109               	bnz	u1240
  4641  001BD0  0E51               	movlw	81
  4642  001BD2  5C05               	subwf	MSdelay@j^0,w,c
  4643  001BD4  A0D8               	btfss	status,0,c
  4644  001BD6  EFEF  F00D         	goto	u1241
  4645  001BDA  EFF1  F00D         	goto	u1240
  4646  001BDE                     u1241:
  4647  001BDE  EFE4  F00D         	goto	l1836
  4648  001BE2                     u1240:
  4649  001BE2  4A03               	infsnz	MSdelay@i^0,f,c
  4650  001BE4  2A04               	incf	(MSdelay@i+1)^0,f,c
  4651  001BE6                     l1842:
  4652  001BE6  5003               	movf	MSdelay@i^0,w,c
  4653  001BE8  5C01               	subwf	MSdelay@val^0,w,c
  4654  001BEA  5004               	movf	(MSdelay@i+1)^0,w,c
  4655  001BEC  5802               	subwfb	(MSdelay@val+1)^0,w,c
  4656  001BEE  B0D8               	btfsc	status,0,c
  4657  001BF0  EFFC  F00D         	goto	u1251
  4658  001BF4  EFFE  F00D         	goto	u1250
  4659  001BF8                     u1251:
  4660  001BF8  EFE0  F00D         	goto	l1830
  4661  001BFC                     u1250:
  4662  001BFC  0012               	return		;funcret
  4663  001BFE                     __end_of_MSdelay:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _DHT11_Start *****************
  4667 ;; Defined at:
  4668 ;;		line 234 in file "humidity_Temp.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        1 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text21
  4696  001D52                     __ptext21:
  4697                           	callstack 0
  4698  001D52                     _DHT11_Start:
  4699                           	callstack 30
  4700  001D52                     
  4701                           ;humidity_Temp.c: 235:     TRISCbits.RC2 = 0;
  4702  001D52  9494               	bcf	148,2,c	;volatile
  4703                           
  4704                           ;humidity_Temp.c: 236:     LATC2 = 0;
  4705  001D54  948B               	bcf	3979,2,c	;volatile
  4706  001D56                     
  4707                           ;humidity_Temp.c: 237:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4708  001D56  0E2F               	movlw	47
  4709  001D58  6E01               	movwf	??_DHT11_Start^0,c
  4710  001D5A  0EC0               	movlw	192
  4711  001D5C                     u1997:
  4712  001D5C  2EE8               	decfsz	wreg,f,c
  4713  001D5E  D7FE               	bra	u1997
  4714  001D60  2E01               	decfsz	??_DHT11_Start^0,f,c
  4715  001D62  D7FC               	bra	u1997
  4716  001D64                     
  4717                           ;humidity_Temp.c: 238:     LATC2 = 1;
  4718  001D64  848B               	bsf	3979,2,c	;volatile
  4719                           
  4720                           ;humidity_Temp.c: 239:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4721  001D66  0E0D               	movlw	13
  4722  001D68                     u2007:
  4723  001D68  2EE8               	decfsz	wreg,f,c
  4724  001D6A  D7FE               	bra	u2007
  4725  001D6C  F000               	nop	
  4726  001D6E                     
  4727                           ;humidity_Temp.c: 240:     TRISCbits.RC2 = 1;
  4728  001D6E  8494               	bsf	148,2,c	;volatile
  4729  001D70  0012               	return		;funcret
  4730  001D72                     __end_of_DHT11_Start:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _DHT11_ReadData *****************
  4734 ;; Defined at:
  4735 ;;		line 219 in file "humidity_Temp.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  data            1    1[COMRAM] unsigned char 
  4740 ;;  i               1    0[COMRAM] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      unsigned char 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0
  4751 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4753 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        2 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text22
  4764  001B06                     __ptext22:
  4765                           	callstack 0
  4766  001B06                     _DHT11_ReadData:
  4767                           	callstack 30
  4768  001B06                     
  4769                           ;humidity_Temp.c: 220:     char i, data = 0;
  4770  001B06  0E00               	movlw	0
  4771  001B08  6E02               	movwf	DHT11_ReadData@data^0,c
  4772                           
  4773                           ;humidity_Temp.c: 221:     for (i = 0; i < 8; i++) {
  4774  001B0A  0E00               	movlw	0
  4775  001B0C  6E01               	movwf	DHT11_ReadData@i^0,c
  4776  001B0E                     l125:
  4777  001B0E  A482               	btfss	130,2,c	;volatile
  4778  001B10  EF8C  F00D         	goto	u1521
  4779  001B14  EF8E  F00D         	goto	u1520
  4780  001B18                     u1521:
  4781  001B18  EF87  F00D         	goto	l125
  4782  001B1C                     u1520:
  4783  001B1C                     
  4784                           ;humidity_Temp.c: 223:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4785  001B1C  0E14               	movlw	20
  4786  001B1E                     u2017:
  4787  001B1E  2EE8               	decfsz	wreg,f,c
  4788  001B20  D7FE               	bra	u2017
  4789  001B22                     
  4790                           ;humidity_Temp.c: 224:         if (PORTCbits.RC2 & 1)
  4791  001B22  A482               	btfss	130,2,c	;volatile
  4792  001B24  EF96  F00D         	goto	u1531
  4793  001B28  EF98  F00D         	goto	u1530
  4794  001B2C                     u1531:
  4795  001B2C  EF9C  F00D         	goto	l2022
  4796  001B30                     u1530:
  4797  001B30                     
  4798                           ;humidity_Temp.c: 225:             data = ((data << 1) | 1);
  4799  001B30  80D8               	bsf	status,0,c
  4800  001B32  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4801  001B34  EF9F  F00D         	goto	l130
  4802  001B38                     l2022:
  4803                           
  4804                           ;humidity_Temp.c: 227:             data = (data << 1);
  4805  001B38  5002               	movf	DHT11_ReadData@data^0,w,c
  4806  001B3A  2402               	addwf	DHT11_ReadData@data^0,w,c
  4807  001B3C  6E02               	movwf	DHT11_ReadData@data^0,c
  4808  001B3E                     l130:
  4809  001B3E  B482               	btfsc	130,2,c	;volatile
  4810  001B40  EFA4  F00D         	goto	u1541
  4811  001B44  EFA6  F00D         	goto	u1540
  4812  001B48                     u1541:
  4813  001B48  EF9F  F00D         	goto	l130
  4814  001B4C                     u1540:
  4815  001B4C                     
  4816                           ;humidity_Temp.c: 230:     }
  4817  001B4C  2A01               	incf	DHT11_ReadData@i^0,f,c
  4818  001B4E  0E07               	movlw	7
  4819  001B50  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4820  001B52  EFAD  F00D         	goto	u1551
  4821  001B56  EFAF  F00D         	goto	u1550
  4822  001B5A                     u1551:
  4823  001B5A  EF87  F00D         	goto	l125
  4824  001B5E                     u1550:
  4825  001B5E                     
  4826                           ;humidity_Temp.c: 231:     return data;
  4827  001B5E  5002               	movf	DHT11_ReadData@data^0,w,c
  4828  001B60  0012               	return		;funcret
  4829  001B62                     __end_of_DHT11_ReadData:
  4830                           	callstack 0
  4831                           
  4832 ;; *************** function _DHT11_CheckResponse *****************
  4833 ;; Defined at:
  4834 ;;		line 244 in file "humidity_Temp.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		None
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4848 ;;      Params:         0       0       0       0       0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4851 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4852 ;;Total ram usage:        0 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text23
  4862  001D26                     __ptext23:
  4863                           	callstack 0
  4864  001D26                     _DHT11_CheckResponse:
  4865                           	callstack 30
  4866  001D26                     l139:
  4867  001D26  B482               	btfsc	130,2,c	;volatile
  4868  001D28  EF98  F00E         	goto	u1491
  4869  001D2C  EF9A  F00E         	goto	u1490
  4870  001D30                     u1491:
  4871  001D30  EF93  F00E         	goto	l139
  4872  001D34                     u1490:
  4873  001D34                     l142:
  4874  001D34  A482               	btfss	130,2,c	;volatile
  4875  001D36  EF9F  F00E         	goto	u1501
  4876  001D3A  EFA1  F00E         	goto	u1500
  4877  001D3E                     u1501:
  4878  001D3E  EF9A  F00E         	goto	l142
  4879  001D42                     u1500:
  4880  001D42                     l145:
  4881  001D42  B482               	btfsc	130,2,c	;volatile
  4882  001D44  EFA6  F00E         	goto	u1511
  4883  001D48  EFA8  F00E         	goto	u1510
  4884  001D4C                     u1511:
  4885  001D4C  EFA1  F00E         	goto	l145
  4886  001D50                     u1510:
  4887  001D50  0012               	return		;funcret
  4888  001D52                     __end_of_DHT11_CheckResponse:
  4889                           	callstack 0
  4890                           
  4891                           	psect	rparam
  4892  0000                     
  4893                           	psect	idloc
  4894                           
  4895                           ;Config register IDLOC0 @ 0x200000
  4896                           ;	unspecified, using default values
  4897  200000                     	org	2097152
  4898  200000  FF                 	db	255
  4899                           
  4900                           ;Config register IDLOC1 @ 0x200001
  4901                           ;	unspecified, using default values
  4902  200001                     	org	2097153
  4903  200001  FF                 	db	255
  4904                           
  4905                           ;Config register IDLOC2 @ 0x200002
  4906                           ;	unspecified, using default values
  4907  200002                     	org	2097154
  4908  200002  FF                 	db	255
  4909                           
  4910                           ;Config register IDLOC3 @ 0x200003
  4911                           ;	unspecified, using default values
  4912  200003                     	org	2097155
  4913  200003  FF                 	db	255
  4914                           
  4915                           ;Config register IDLOC4 @ 0x200004
  4916                           ;	unspecified, using default values
  4917  200004                     	org	2097156
  4918  200004  FF                 	db	255
  4919                           
  4920                           ;Config register IDLOC5 @ 0x200005
  4921                           ;	unspecified, using default values
  4922  200005                     	org	2097157
  4923  200005  FF                 	db	255
  4924                           
  4925                           ;Config register IDLOC6 @ 0x200006
  4926                           ;	unspecified, using default values
  4927  200006                     	org	2097158
  4928  200006  FF                 	db	255
  4929                           
  4930                           ;Config register IDLOC7 @ 0x200007
  4931                           ;	unspecified, using default values
  4932  200007                     	org	2097159
  4933  200007  FF                 	db	255
  4934                           
  4935                           	psect	config
  4936                           
  4937                           ;Config register CONFIG1L @ 0x300000
  4938                           ;	PLL Prescaler Selection bits
  4939                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4940                           ;	System Clock Postscaler Selection bits
  4941                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4942                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4943                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4944  300000                     	org	3145728
  4945  300000  00                 	db	0
  4946                           
  4947                           ;Config register CONFIG1H @ 0x300001
  4948                           ;	Oscillator Selection bits
  4949                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4950                           ;	Fail-Safe Clock Monitor Enable bit
  4951                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4952                           ;	Internal/External Oscillator Switchover bit
  4953                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4954  300001                     	org	3145729
  4955  300001  09                 	db	9
  4956                           
  4957                           ;Config register CONFIG2L @ 0x300002
  4958                           ;	Power-up Timer Enable bit
  4959                           ;	PWRT = OFF, PWRT disabled
  4960                           ;	Brown-out Reset Enable bits
  4961                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4962                           ;	Brown-out Reset Voltage bits
  4963                           ;	BORV = 3, Minimum setting 2.05V
  4964                           ;	USB Voltage Regulator Enable bit
  4965                           ;	VREGEN = OFF, USB voltage regulator disabled
  4966  300002                     	org	3145730
  4967  300002  1F                 	db	31
  4968                           
  4969                           ;Config register CONFIG2H @ 0x300003
  4970                           ;	Watchdog Timer Enable bit
  4971                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4972                           ;	Watchdog Timer Postscale Select bits
  4973                           ;	WDTPS = 32768, 1:32768
  4974  300003                     	org	3145731
  4975  300003  1E                 	db	30
  4976                           
  4977                           ; Padding undefined space
  4978  300004                     	org	3145732
  4979  300004  FF                 	db	255
  4980                           
  4981                           ;Config register CONFIG3H @ 0x300005
  4982                           ;	CCP2 MUX bit
  4983                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  4984                           ;	PORTB A/D Enable bit
  4985                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4986                           ;	Low-Power Timer 1 Oscillator Enable bit
  4987                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4988                           ;	MCLR Pin Enable bit
  4989                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4990  300005                     	org	3145733
  4991  300005  00                 	db	0
  4992                           
  4993                           ;Config register CONFIG4L @ 0x300006
  4994                           ;	Stack Full/Underflow Reset Enable bit
  4995                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4996                           ;	Single-Supply ICSP Enable bit
  4997                           ;	LVP = OFF, Single-Supply ICSP disabled
  4998                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4999                           ;	ICPRT = OFF, ICPORT disabled
  5000                           ;	Extended Instruction Set Enable bit
  5001                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5002                           ;	Background Debugger Enable bit
  5003                           ;	DEBUG = 0x1, unprogrammed default
  5004  300006                     	org	3145734
  5005  300006  81                 	db	129
  5006                           
  5007                           ; Padding undefined space
  5008  300007                     	org	3145735
  5009  300007  FF                 	db	255
  5010                           
  5011                           ;Config register CONFIG5L @ 0x300008
  5012                           ;	Code Protection bit
  5013                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5014                           ;	Code Protection bit
  5015                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5016                           ;	Code Protection bit
  5017                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5018                           ;	Code Protection bit
  5019                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5020  300008                     	org	3145736
  5021  300008  0F                 	db	15
  5022                           
  5023                           ;Config register CONFIG5H @ 0x300009
  5024                           ;	Boot Block Code Protection bit
  5025                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5026                           ;	Data EEPROM Code Protection bit
  5027                           ;	CPD = OFF, Data EEPROM is not code-protected
  5028  300009                     	org	3145737
  5029  300009  C0                 	db	192
  5030                           
  5031                           ;Config register CONFIG6L @ 0x30000A
  5032                           ;	Write Protection bit
  5033                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5034                           ;	Write Protection bit
  5035                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5036                           ;	Write Protection bit
  5037                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5038                           ;	Write Protection bit
  5039                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5040  30000A                     	org	3145738
  5041  30000A  0F                 	db	15
  5042                           
  5043                           ;Config register CONFIG6H @ 0x30000B
  5044                           ;	Configuration Register Write Protection bit
  5045                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5046                           ;	Boot Block Write Protection bit
  5047                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5048                           ;	Data EEPROM Write Protection bit
  5049                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5050  30000B                     	org	3145739
  5051  30000B  E0                 	db	224
  5052                           
  5053                           ;Config register CONFIG7L @ 0x30000C
  5054                           ;	Table Read Protection bit
  5055                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5056                           ;	Table Read Protection bit
  5057                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5058                           ;	Table Read Protection bit
  5059                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5060                           ;	Table Read Protection bit
  5061                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5062  30000C                     	org	3145740
  5063  30000C  0F                 	db	15
  5064                           
  5065                           ;Config register CONFIG7H @ 0x30000D
  5066                           ;	Boot Block Table Read Protection bit
  5067                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5068  30000D                     	org	3145741
  5069  30000D  40                 	db	64
  5070                           tosu	equ	0xFFF
  5071                           tosh	equ	0xFFE
  5072                           tosl	equ	0xFFD
  5073                           stkptr	equ	0xFFC
  5074                           pclatu	equ	0xFFB
  5075                           pclath	equ	0xFFA
  5076                           pcl	equ	0xFF9
  5077                           tblptru	equ	0xFF8
  5078                           tblptrh	equ	0xFF7
  5079                           tblptrl	equ	0xFF6
  5080                           tablat	equ	0xFF5
  5081                           prodh	equ	0xFF4
  5082                           prodl	equ	0xFF3
  5083                           indf0	equ	0xFEF
  5084                           postinc0	equ	0xFEE
  5085                           postdec0	equ	0xFED
  5086                           preinc0	equ	0xFEC
  5087                           plusw0	equ	0xFEB
  5088                           fsr0h	equ	0xFEA
  5089                           fsr0l	equ	0xFE9
  5090                           wreg	equ	0xFE8
  5091                           indf1	equ	0xFE7
  5092                           postinc1	equ	0xFE6
  5093                           postdec1	equ	0xFE5
  5094                           preinc1	equ	0xFE4
  5095                           plusw1	equ	0xFE3
  5096                           fsr1h	equ	0xFE2
  5097                           fsr1l	equ	0xFE1
  5098                           bsr	equ	0xFE0
  5099                           indf2	equ	0xFDF
  5100                           postinc2	equ	0xFDE
  5101                           postdec2	equ	0xFDD
  5102                           preinc2	equ	0xFDC
  5103                           plusw2	equ	0xFDB
  5104                           fsr2h	equ	0xFDA
  5105                           fsr2l	equ	0xFD9
  5106                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        230
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     10     142
    BANK1           256    223     242
    BANK2           256      0     117
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S979_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK1[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[5]), STR_13(CODE[8]), STR_7(CODE[5]), STR_6(CODE[8]), 
		 -> main@value(BANK1[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[5]), STR_13(CODE[8]), STR_7(CODE[5]), STR_6(CODE[8]), 
		 -> main@value(BANK1[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               224   224      0   16573
                                              0 BANK1    223   223      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                       _offBombillas
                             _onLEDS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7824
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _onLEDS                                              24    24      0     181
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (1) _offBombillas                                        23    23      0      92
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3068
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1071
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     646
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1270
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     646
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     624
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _LCD_Char
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _offBombillas
   _onLEDS
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      75       9       45.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DF      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     254      20        0.0%
DATA                 0      0     254       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 13 16:53:30 2020

                main@Checksum 01CD               onLEDS@buffer_TX 0001                  ?_LCD_Command 0001  
                          l58 09BC                            l68 0A5A                            l77 0AF4  
                          l86 0B8E                            l95 0C28                   ?_LCD_String 0008  
                         l200 1D8C                           l104 0CC2                           l113 0D46  
                         l130 1B3E                           l211 1CC0                           l133 1B60  
                         l125 1B0E                           l142 1D34                           l206 1B04  
                         l136 1D70                           l145 1D42                           l153 1700  
                         l162 1706                           l139 1D26                           l219 1BFC  
                         l148 1D50                           l172 19E6                           l158 16BE  
                         l191 1D24                           l336 14D2                           l169 19A8  
                         l197 1DA8                           l349 1636                           l900 1BB2  
                         l930 1858                           l932 1892                           l940 0F62  
                         l927 1816                           l938 0F5A                           l971 1A40  
                         l972 1A48                           l965 134A                           l958 1196  
                         l991 17D0                           l976 1C78                           l979 1C80  
                         l999 1C40                 main@T_Decimal 01CC                           _abs 1C42  
                         _pad 17D2                           wreg 000FE8                   LCD_Char@dat 0007  
                        l1002 1DBE                          l2000 1D52                          l1008 1CF6  
                        l2010 1B06                          l2002 1D56                          ?_abs 0013  
                        l2020 1B30                          l2004 1D64                          l2100 081E  
                        l2022 1B38                          l2006 1D6E                          l2110 083C  
                        l2102 0834                          l2008 1D26                          l2024 1B4C  
                        l2016 1B1C                          l2040 1BA0                          l2032 1B62  
                        l2200 0A3A                          l2120 0846                          l2112 083E  
                        l2104 0836                          l2026 1B4E                          l2018 1B22  
                        l2050 1C9C                          l2034 1B74                          l2210 0A82  
                        l2130 085C                          l2122 0848                          l2114 0840  
                        l2106 0838                          l2028 1B5E                          l2052 1CA6  
                        l2044 1C84                          l2060 1640                          l2036 1B7C  
                        l2300 0CD0                          l2220 0ABA                          l2212 0A88  
                        l2204 0A68                          l2140 087C                          l2132 0860  
                        l2124 084A                          l2116 0842                          l2108 083A  
                        l2054 1CAE                          l2046 1C84                          l2070 16A4  
                        l2062 165C                          l2038 1B84                          l2310 0D04  
                        l2302 0CE2                          l2230 0B14                          l2222 0ACC  
                        l2206 0A7A                          l2214 0A94                          l2150 08D2  
                        l2142 0884                          l2134 0864                          l2126 0854  
                        l2118 0844                          l2056 1CB4                          l2048 1C94  
                        l2080 16DC                          l2072 16B6                          l2064 1666  
                        l2320 0D54                          l2312 0D0C                          l2240 0B3E  
                        l2224 0AD4                          l2216 0AA4                          l2160 092A  
                        l2152 08DE                          l2144 088C                          l2136 086C  
                        l2128 0858                          l2082 16E0                          l2066 1682  
                        l2058 163A                          l2322 0D66                          l2314 0D1E  
                        l2306 0CEA                          l2242 0B52                          l2234 0B1C  
                        l2218 0AB8                          l2330 0D86                          l2170 096E  
                        l2162 0936                          l2154 08E4                          l2146 08A6  
                        l2138 0874                          l2084 1984                          l2068 169E  
                        l1700 178A                          l2340 0DDE                          l2332 0DA0  
                        l2316 0D26                          l2308 0CF4                          l2260 0BBC  
                        l2252 0B9C                          l2244 0B54                          l2236 0B22  
                        l2228 0B02                          l2180 09CA                          l2172 0980  
                        l2164 093C                          l2156 08FE                          l2148 08B8  
                        l2094 19B6                          l2086 198E                          l2078 16CC  
                        l1710 1C20                          l2350 0E36                          l2342 0DF8  
                        l2334 0DB2                          l2326 0D6E                          l2270 0C00  
                        l2254 0BAE                          l2246 0B66                          l2262 0BC8  
                        l2238 0B2E                          l2190 09FA                          l2182 09DC  
                        l2174 0992                          l2166 0942                          l2158 0910  
                        l2096 19C6                          l2088 19A0                          l1704 1BFE  
                        l1712 1CC2                          l2352 0E3C                          l2344 0E0A  
                        l2336 0DCC                          l2328 0D7E                          l2272 0C08  
                        l2264 0BD8                          l2248 0B6E                          l2192 0A0C  
                        l2360 0E7E                          l2176 099C                          l2168 095C  
                        l2098 19CA                          l1730 1382                          l1722 134C  
                        l1706 1C0A                          l1714 1CCE                          l1810 180E  
                        l1802 17D2                          l2362 0E92                          l2354 0E56  
                        l2346 0E24                          l2338 0DD8                          l2290 0C86  
                        l2282 0C50                          l2266 0BEC                          l2258 0BB6  
                        l2194 0A1E                          l2186 09E4                          l1740 13DE  
                        l1732 1390                          l1724 1350                          l1708 1C1C  
                        l1716 1CD2                          l1820 187A                          l1812 1822  
                        l1804 17E0                          l1900 115E                          l2364 0EA2  
                        l2356 0E68                          l2348 0E30                          l2292 0C88  
                        l2284 0C56                          l2276 0C36                          l2268 0BEE  
                        l2196 0A20                          l2188 09F4                          l1830 1BC0  
                        l1910 1D7A                          l1750 1448                          l1742 13E6  
                        l1734 13B0                          l1726 135E                          l1718 1CEA  
                        l1814 1836                          l1806 17F4                          l1902 116E  
                        l2366 0EA6                          l2294 0C9A                          l2278 0C48  
                        l2286 0C62                          l2198 0A32                          l1840 1BE2  
                        l1912 1D7C                          l1760 1492                          l1752 1468  
                        l1744 13FA                          l1736 13B4                          l1728 137E  
                        l1824 1C42                          l1816 183A                          l1808 1802  
                        l1920 11BC                          l2296 0CA2                          l2288 0C72  
                        l1842 1BE6                          l1914 1D7E                          l1906 1D74  
                        l1762 14B2                          l1754 146A                          l1746 1408  
                        l1738 13C0                          l1770 14E6                          l1826 1C5C  
                        l1690 1708                          l1818 1866                          l1850 0F22  
                        l1930 1228                          l1922 11CA                          l1836 1BC8  
                        l1828 1BB4                          l1916 1D80                          l1908 1D78  
                        l1756 147C                          l1748 141A                          l1780 1556  
                        l1772 1506                          l1692 171A                          l1860 0F7C  
                        l1852 0F32                          l1844 0EBA                          l1940 12DA  
                        l1932 1270                          l1924 11DC                          l1838 1BCC  
                        l1758 1482                          l1790 15CE                          l1782 155E  
                        l1774 150A                          l1766 14D4                          l1694 172C  
                        l1870 0FA6                          l1862 0F8A                          l1854 0F34  
                        l1846 0EDA                          l1942 12EE                          l1926 11E0  
                        l1918 1198                          l1960 1AA8                          l1792 15E0  
                        l1784 1572                          l1776 1518                          l1768 14D8  
                        l1696 1736                          l1880 10B2                          l1872 1028  
                        l1864 0F90                          l1856 0F4E                          l1848 0F02  
                        l1936 12A8                          l1928 1204                          l1952 1314  
                        l1970 1D94                          l1962 1AAC                          l1786 1580  
                        l1794 15E6                          l1778 1538                          l1698 1754  
                        l1890 1124                          l1882 10D0                          l1874 102E  
                        l1866 0F98                          l1858 0F6A                          l1954 1338  
                        l1938 12CC                          l1946 12FA                          l1972 1D96  
                        l1964 1AD0                          l1796 15F6                          l1788 15AE  
                        l1892 1132                          l1884 10EA                          l1876 1034  
                        l1868 0FA0                          l1948 1308                          l1980 19E8  
                        l1974 1D98                          l1990 1D00                          l1966 1AD4  
                        l1798 1616                          l1894 1138                          l1886 1104  
                        l1878 1098                          l1982 19F0                          ?_pad 0011  
                        l1976 1D9A                          l1968 1D90                          l1992 1D0C  
                        l1896 114A                          l1888 1112                          l1984 19FE  
                        l1978 1D9C                          l1994 1D12                          l1898 1156  
                        l1986 1A24                          l1996 1D18                          l1988 1CF8  
                        l1998 1D1E                          STR_1 0819                          STR_2 080E  
                        STR_3 0819                          STR_4 0818                          STR_5 0809  
                        STR_6 0801                          STR_7 0813                          STR_8 0819  
                        STR_9 080E                          u1000 171A                          u1001 1716  
                        u1010 172C                          u1011 1728                          u1100 1408  
                        u1020 1754                          u1101 1404                          u1021 1750  
                        u1110 1448                          u1030 178A                          u1111 1444  
                        u1031 1786                          u1120 1492                          u1040 1C40  
                        u1200 1802                          u1121 148E                          u1041 1C3C  
                        u1201 17FE                          u1130 14E6                          u1050 1CEA  
                        u1210 1858                          u1131 14E2                          u1051 1CE6  
                        u1211 1854                          u1060 135E                          u1140 1518  
                        u1220 1866                          u1300 0F4E                          u1061 135A  
                        u1141 1514                          u1221 1862                          u1301 0F4A  
                        u1070 1390                          u1150 1556                          u1230 1C5C  
                        u1310 0F7C                          u2007 1D68                          u1071 138C  
                        u1151 1552                          u1231 1C58                          u1311 0F78  
                        u1240 1BE2                          u1160 1580                          u1400 114A  
                        u1320 0F8A                          u2017 1B1E                          u1241 1BDE  
                        u1081 13BA                          u1161 157C                          u1401 1146  
                        u1321 0F86                          u1250 1BFC                          u1090 13DE  
                        u1170 15AE                          u1330 10B2                          u1410 11BC  
                        u1251 1BF8                          u1091 13DA                          u1171 15AA  
                        u1331 10AE                          u1411 11B8                          u1500 1D42  
                        u1180 15F6                          u1340 10D0                          u1260 0EEA  
                        u1420 1204                          u1501 1D3E                          u1181 15F2  
                        u1341 10CC                          u1261 0EE4                          u1421 1200  
                        u1510 1D50                          u1190 17E0                          u1350 10EA  
                        u1270 0EEC                          u1430 1228                          u1511 1D4C  
                        u1191 17DC                          u1351 10E6                          u1431 1224  
                        u1520 1B1C                          u1360 1104                          u1280 0F02  
                        u1440 12CC                          _LATD 000F8C                          u1521 1B18  
                        u1601 16AE                          u1361 1100                          u1281 0EFE  
                        u1441 12C8                          u1530 1B30                          u1450 1ACC  
                        u1610 16CC                          u1370 1112                          u1290 0F32  
                        u1531 1B2C                          u1611 16C8                          u1371 110E  
                        u1291 0F2E                          u1540 1B4C                          u1460 1AF4  
                        u1620 16FC                          u1380 1124                          u1700 0A1E  
                        u1541 1B48                          u1621 16F8                          u1381 1120  
                        u1701 0A1A                          u1550 1B5E                          u1470 1B04  
                        u1390 1132                          u1551 1B5A                          u1471 1B00  
                        u1631 1998                          u1391 112E                          u1711 0A2A  
                        u1560 1C94                          u1640 19B6                          u1480 1A40  
                        u1800 0B52                          u1720 0A56                          u1457 1AC2  
                        u1561 1C90                          u1641 19B2                          u1481 1A3C  
                        u1801 0B4E                          u1721 0A52                          u1490 1D34  
                        u1650 19E6                          u1570 165C                          u1730 0A68  
                        u1491 1D30                          u1467 1AEA                          u1651 19E2  
                        u1571 1658                          u1811 0B5E                          u1731 0A64  
                        u1580 1682                          u1900 0C86                          u1820 0B8A  
                        u1740 0AA4                          u1581 167E                          u1901 0C82  
                        u1821 0B86                          u1741 0AA0                          u1661 098A  
                        u1590 169E                          u1830 0B9C                          u1750 0AB8  
                        u1670 09B8                          u1591 169A                          u1911 0C92  
                        u1831 0B98                          u1751 0AB4                          u1671 09B4  
                        u1920 0CBE                          u1840 0BD8                          u1680 09CA  
                        u1921 0CBA                          u1841 0BD4                          u1761 0AC4  
                        u1681 09C6                          u1930 0CD0                          u1850 0BEC  
                        u1770 0AF0                          u1690 0A0C                          u1931 0CCC  
                        u1851 0BE8                          u1771 0AEC                          u1691 0A08  
                        u1940 0D04                          u1780 0B02                          u1941 0D00  
                        u1861 0BF8                          u1781 0AFE                          u1870 0C24  
                        u1790 0B3E                          u1951 0D16                          u1871 0C20  
                        u1791 0B3A                          u1960 0D42                          u1880 0C36  
                        u1961 0D3E                          u1881 0C32                          u1970 0D54  
                        u1890 0C72                          u1971 0D50                          u1891 0C6E  
                        u1980 0E92                          u1981 0E8E                          u1997 1D5C  
               ?_offBombillas 0001                          abs@a 0013                          _dbuf 00C4  
                        _main 081E                          _dtoa 0EBA                          _prec 00C2  
                        _nout 00BE                          pad@i 0018                          pad@p 0015  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001A  
                        fsr2l 000FD9                          start 0000               __end_of_MSdelay 1BFE  
            ??_DHT11_ReadData 0001                 _LCD_String_xy 1C82          __size_of_DHT11_Start 0020  
                ___param_bank 000000                main@T_Integral 01DE                         ??_abs 0015  
                       ??_pad 0017              __end_of_LCD_Char 1D8E              __end_of_LCD_Init 1D26  
             __end_of___aodiv 14D4                         ?_main 0001                         ?_dtoa 001C  
             __end_of___aomod 1638                         STR_10 0819                         STR_11 0818  
                       STR_12 0809                         STR_13 0801                         STR_14 0813  
                       _LATC0 007C58                         _LATC1 007C59                         _LATC2 007C5A  
                vfpfcnvrt@fmt 0042                         _SPBRG 000FAF                         _TRISA 000F92  
                       _TRISC 000F94                         _TRISD 000F95                         _TXREG 000FAD  
                       _flags 005E                         _fputc 1708                         _fputs 1BFE  
                       pad@fp 0011                         _width 00C0                         _putch 1DBE  
                       main@i 01CE                         dtoa@d 001E                         dtoa@i 003E  
                       dtoa@n 0036                         dtoa@p 0030                         dtoa@s 0034  
                       dtoa@w 0032                ??_offBombillas 0001                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         status 000FD8  
         __size_of_LCD_String 005E               __end_of_sprintf 1BB4                ?_LCD_String_xy 000A  
             __initialization 1894                  __end_of_main 0EBA                  __end_of_dtoa 1198  
                      ??_main 005E                        ??_dtoa 0026                 __activetblptr 000002  
               main@buffer_TX 0100                        _ADCON1 000FC1                        ?_fputc 0001  
                      ?_fputs 000A                        ?_putch 0001           _DHT11_CheckResponse 1D26  
            LCD_String_xy@msg 000B              LCD_String_xy@pos 000A              LCD_String_xy@row 000D  
                   ??_MSdelay 0003                        _OSCCON 000FD3                  vfprintf@cfmt 0056  
                   ??___aodiv 0011                     ??___aomod 0011                        _onLEDS 1638  
        ?_DHT11_CheckResponse 0001                        clear_0 18FA                        pad@buf 0013  
        __size_of_LCD_Command 001C                        dtoa@fp 001C                        _strlen 1CC2  
                      fputc@c 0001                        fputs@c 000E                        fputs@i 000F  
                      fputs@s 000A                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 1A4A                     ??_sprintf 005E                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 1904                     ?_LCD_Init 0001  
             ??_LCD_String_xy 000D                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                __pidataBANK0 1A4A                  __pidataBANK1 1DAA                  __pidataBANK2 190E  
       ??_DHT11_CheckResponse 0001                 __end_of_fputc 17D2                 __end_of_fputs 1C42  
               __end_of_putch 1DC0                  ??_LCD_String 000A          __end_of_offBombillas 19E8  
                     ??_fputc 0005                       ??_fputs 000E                       ??_putch 0001  
                  __pbssBANK0 00BE                    ??_LCD_Char 0007                    ??_LCD_Init 0008  
          __end_of_LCD_String 1B06                 offBombillas@i 0016                       ?_onLEDS 0001  
                     ?_strlen 0001            __size_of_vfpfcnvrt 01B4                       _MSdelay 1BB4  
               ??_DHT11_Start 0001                 LCD_String@msg 0008                       __Hparam 0000  
                     __Lparam 0000                       ___aodiv 134C                       ___aomod 14D4  
           offBombillas@F3540 0096               __size_of_onLEDS 00D0                     ?_vfprintf 0050  
                __psmallconst 0800                       __pcinit 1894                       __ramtop 0800  
                     __ptext0 081E                       __ptext1 1B62                       __ptext2 19E8  
                     __ptext3 1198                       __ptext4 0EBA                       __ptext5 17D2  
                     __ptext6 1CC2                       __ptext7 1BFE                       __ptext8 1708  
                     __ptext9 1DBE               __size_of_strlen 0036                  __size_of_abs 0040  
                __size_of_pad 00C2                       onLEDS@i 0017                       main@agr 01C8  
                     _sprintf 1B62          end_of_initialization 1904                       fputc@fp 0003  
              LCD_Command@cmd 0007                 __Lmediumconst 0000                       fputs@fp 000C  
           __end_of_vfpfcnvrt 134C         __size_of_offBombillas 0064                     _RCSTAbits 000FAB  
         __end_of_DHT11_Start 1D72                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 0056                       strlen@a 0003                       strlen@s 0001  
                   _PORTAbits 000F80                     _PORTCbits 000F82       __size_of_DHT11_ReadData 005C  
                   _TRISCbits 000F94                  _offBombillas 1984                     _TXSTAbits 000FAC  
           __size_of_LCD_Char 001C             __size_of_LCD_Init 002E            DHT11_ReadData@data 0002  
               ??_LCD_Command 0007                   vfpfcnvrt@ap 0044                   vfpfcnvrt@fp 0040  
                 vfpfcnvrt@ll 0048                   _BAUDCONbits 000FB8                __end_of_onLEDS 1708  
              __end_of_strlen 1CF8           start_initialization 1894                   __end_of_abs 1C82  
                 __end_of_pad 1894                   _DHT11_Start 1D52   __end_of_DHT11_CheckResponse 1D52  
       __end_of_LCD_String_xy 1CC2                   vfprintf@fmt 0052                      ??_onLEDS 0001  
                 __pdataBANK0 0060                   __pdataBANK1 01DF                   __pdataBANK2 0200  
                    ??_strlen 0003           __end_of_LCD_Command 1DAA                   __pbssCOMRAM 005E  
               __pcstackBANK0 00E4                 __pcstackBANK1 0100              ___aodiv@dividend 0001  
           main@buffer_TX_463 0124             main@buffer_TX_472 0175             main@buffer_TX_466 013F  
           main@buffer_TX_475 0190             main@buffer_TX_469 015A             main@buffer_TX_478 01AB  
                    ?_MSdelay 0001                     _dtoa$1052 002E                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013                _DHT11_ReadData 1B06  
           __size_of_vfprintf 0062                   __smallconst 0800         LCD_String_xy@location 000E  
                    ?_sprintf 0058                __size_of_fputc 00CA                __size_of_fputs 0044  
              __size_of_putch 0002                      MSdelay@i 0003                      MSdelay@j 0005  
                    _LCD_Char 1D72                      _LCD_Init 1CF8                     main@F3510 007B  
                   main@F3513 0060                     main@F3522 0224                     main@F3507 0200  
                   main@F3516 025A                     main@F3525 01DF                     main@F3519 023F  
      __end_of_DHT11_ReadData 1B62                   _LCD_Command 1D8E                     _vfpfcnvrt 1198  
                   main@i_470 01D4                     main@i_464 01D0                     main@i_473 01D6  
                   main@i_467 01D2                     main@i_476 01D8                     main@i_479 01DA  
                   main@value 01BE              onLEDS@T_Integral 0014                     copy_data0 18A8  
                   copy_data1 18C8                     copy_data2 18E8              __size_of_MSdelay 004A  
                    __Hrparam 0000                    vfprintf@ap 0054                      __Lrparam 0000  
                  vfprintf@fp 0050               ?_DHT11_ReadData 0001              __size_of___aodiv 0188  
            __size_of___aomod 0164                    ?_vfpfcnvrt 0040               DHT11_ReadData@i 0001  
             ___aodiv@divisor 0009               ___aodiv@counter 0011                    sprintf@fmt 005A  
                    __ptext10 1C42                      __ptext11 14D4                      __ptext20 1BB4  
                    __ptext12 134C                      __ptext21 1D52                      __ptext13 1638  
                    __ptext22 1B06                      __ptext14 1984                      __ptext23 1D26  
                    __ptext15 1C82                      __ptext16 1AA8                      __ptext17 1D72  
                    __ptext18 1CF8                      __ptext19 1D8E              __size_of_sprintf 0052  
               __size_of_main 069C                 __size_of_dtoa 02DE                   onLEDS@F3536 00AB  
                ?_DHT11_Start 0001                    MSdelay@val 0001                      _vfprintf 19E8  
                 onLEDS@valor 0015                      main@acum 01DC                    _LCD_String 1AA8  
            ___aomod@dividend 0001         offBombillas@buffer_TX 0001                     sprintf@ap 00E6  
             main@RH_Integral 01CB  __size_of_DHT11_CheckResponse 002C               ___aomod@divisor 0009  
                 ??_vfpfcnvrt 0046               ___aomod@counter 0011                main@RH_Decimal 01CA  
                    sprintf@f 00E8                      sprintf@s 0058        __size_of_LCD_String_xy 0040  
                ___aodiv@sign 0012                  ___aomod@sign 0012  
