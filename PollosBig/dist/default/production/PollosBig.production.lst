

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 21:30:50 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  0029FC                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _AM_PM
   112  0029FC  05                 	db	5
   113                           
   114                           ;initializer for _Clock_type
   115  0029FD  06                 	db	6
   116                           
   117                           	psect	idataBANK1
   118  0028F2                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for _days
   122  0028F2  53                 	db	83
   123  0028F3  4D                 	db	77
   124  0028F4  54                 	db	84
   125  0028F5  57                 	db	87
   126  0028F6  74                 	db	116
   127  0028F7  46                 	db	70
   128  0028F8  73                 	db	115
   129                           
   130                           ;initializer for _bombillaCar3
   131  0028F9  0E                 	db	14
   132  0028FA  11                 	db	17
   133  0028FB  11                 	db	17
   134  0028FC  11                 	db	17
   135  0028FD  0E                 	db	14
   136  0028FE  0E                 	db	14
   137  0028FF  00                 	db	0
   138  002900  00                 	db	0
   139                           
   140                           ;initializer for _bombillaCar2
   141  002901  0E                 	db	14
   142  002902  11                 	db	17
   143  002903  11                 	db	17
   144  002904  11                 	db	17
   145  002905  0E                 	db	14
   146  002906  0E                 	db	14
   147  002907  00                 	db	0
   148  002908  00                 	db	0
   149                           
   150                           ;initializer for _bombillaCar1
   151  002909  0E                 	db	14
   152  00290A  11                 	db	17
   153  00290B  11                 	db	17
   154  00290C  11                 	db	17
   155  00290D  0E                 	db	14
   156  00290E  0E                 	db	14
   157  00290F  00                 	db	0
   158  002910  00                 	db	0
   159                           
   160                           ;initializer for _bombillaCar0
   161  002911  0E                 	db	14
   162  002912  11                 	db	17
   163  002913  11                 	db	17
   164  002914  11                 	db	17
   165  002915  0E                 	db	14
   166  002916  0E                 	db	14
   167  002917  00                 	db	0
   168  002918  00                 	db	0
   169                           
   170                           	psect	idataBANK2
   171  002058                     __pidataBANK2:
   172                           	callstack 0
   173                           
   174                           ;initializer for encenderBombillas@F3601
   175  002058  53                 	db	83
   176  002059  65                 	db	101
   177  00205A  20                 	db	32
   178  00205B  65                 	db	101
   179  00205C  6E                 	db	110
   180  00205D  63                 	db	99
   181  00205E  65                 	db	101
   182  00205F  6E                 	db	110
   183  002060  64                 	db	100
   184  002061  69                 	db	105
   185  002062  6F                 	db	111
   186  002063  20                 	db	32
   187  002064  6C                 	db	108
   188  002065  61                 	db	97
   189  002066  20                 	db	32
   190  002067  62                 	db	98
   191  002068  6F                 	db	111
   192  002069  6D                 	db	109
   193  00206A  62                 	db	98
   194  00206B  69                 	db	105
   195  00206C  6C                 	db	108
   196  00206D  6C                 	db	108
   197  00206E  61                 	db	97
   198  00206F  20                 	db	32
   199  002070  33                 	db	51
   200  002071  0D                 	db	13
   201  002072  00                 	db	0
   202                           
   203                           ;initializer for encenderBombillas@F3598
   204  002073  53                 	db	83
   205  002074  65                 	db	101
   206  002075  20                 	db	32
   207  002076  65                 	db	101
   208  002077  6E                 	db	110
   209  002078  63                 	db	99
   210  002079  65                 	db	101
   211  00207A  6E                 	db	110
   212  00207B  64                 	db	100
   213  00207C  69                 	db	105
   214  00207D  6F                 	db	111
   215  00207E  20                 	db	32
   216  00207F  6C                 	db	108
   217  002080  61                 	db	97
   218  002081  20                 	db	32
   219  002082  62                 	db	98
   220  002083  6F                 	db	111
   221  002084  6D                 	db	109
   222  002085  62                 	db	98
   223  002086  69                 	db	105
   224  002087  6C                 	db	108
   225  002088  6C                 	db	108
   226  002089  61                 	db	97
   227  00208A  20                 	db	32
   228  00208B  32                 	db	50
   229  00208C  0D                 	db	13
   230  00208D  00                 	db	0
   231                           
   232                           ;initializer for encenderBombillas@F3595
   233  00208E  53                 	db	83
   234  00208F  65                 	db	101
   235  002090  20                 	db	32
   236  002091  65                 	db	101
   237  002092  6E                 	db	110
   238  002093  63                 	db	99
   239  002094  65                 	db	101
   240  002095  6E                 	db	110
   241  002096  64                 	db	100
   242  002097  69                 	db	105
   243  002098  6F                 	db	111
   244  002099  20                 	db	32
   245  00209A  6C                 	db	108
   246  00209B  61                 	db	97
   247  00209C  20                 	db	32
   248  00209D  62                 	db	98
   249  00209E  6F                 	db	111
   250  00209F  6D                 	db	109
   251  0020A0  62                 	db	98
   252  0020A1  69                 	db	105
   253  0020A2  6C                 	db	108
   254  0020A3  6C                 	db	108
   255  0020A4  61                 	db	97
   256  0020A5  20                 	db	32
   257  0020A6  31                 	db	49
   258  0020A7  0D                 	db	13
   259  0020A8  00                 	db	0
   260                           
   261                           ;initializer for mostrarFechaHora@F3618
   262  0020A9  52                 	db	82
   263  0020AA  65                 	db	101
   264  0020AB  67                 	db	103
   265  0020AC  69                 	db	105
   266  0020AD  73                 	db	115
   267  0020AE  74                 	db	116
   268  0020AF  72                 	db	114
   269  0020B0  61                 	db	97
   270  0020B1  6E                 	db	110
   271  0020B2  64                 	db	100
   272  0020B3  6F                 	db	111
   273  0020B4  20                 	db	32
   274  0020B5  48                 	db	72
   275  0020B6  6F                 	db	111
   276  0020B7  72                 	db	114
   277  0020B8  61                 	db	97
   278  0020B9  20                 	db	32
   279  0020BA  79                 	db	121
   280  0020BB  20                 	db	32
   281  0020BC  46                 	db	70
   282  0020BD  65                 	db	101
   283  0020BE  63                 	db	99
   284  0020BF  68                 	db	104
   285  0020C0  61                 	db	97
   286  0020C1  0D                 	db	13
   287  0020C2  00                 	db	0
   288                           
   289                           ;initializer for offBombillas@F3590
   290  0020C3  42                 	db	66
   291  0020C4  6F                 	db	111
   292  0020C5  6D                 	db	109
   293  0020C6  62                 	db	98
   294  0020C7  69                 	db	105
   295  0020C8  6C                 	db	108
   296  0020C9  6C                 	db	108
   297  0020CA  61                 	db	97
   298  0020CB  73                 	db	115
   299  0020CC  20                 	db	32
   300  0020CD  41                 	db	65
   301  0020CE  70                 	db	112
   302  0020CF  61                 	db	97
   303  0020D0  67                 	db	103
   304  0020D1  61                 	db	97
   305  0020D2  64                 	db	100
   306  0020D3  61                 	db	97
   307  0020D4  73                 	db	115
   308  0020D5  20                 	db	32
   309  0020D6  0D                 	db	13
   310  0020D7  00                 	db	0
   311                           
   312                           ;initializer for encenderBombillas@F3610
   313  0020D8  54                 	db	84
   314  0020D9  65                 	db	101
   315  0020DA  6D                 	db	109
   316  0020DB  70                 	db	112
   317  0020DC  65                 	db	101
   318  0020DD  72                 	db	114
   319  0020DE  61                 	db	97
   320  0020DF  74                 	db	116
   321  0020E0  75                 	db	117
   322  0020E1  72                 	db	114
   323  0020E2  61                 	db	97
   324  0020E3  20                 	db	32
   325  0020E4  41                 	db	65
   326  0020E5  6C                 	db	108
   327  0020E6  74                 	db	116
   328  0020E7  61                 	db	97
   329  0020E8  20                 	db	32
   330  0020E9  0D                 	db	13
   331  0020EA  00                 	db	0
   332                           
   333                           ;initializer for onLEDS@F3586
   334  0020EB  54                 	db	84
   335  0020EC  65                 	db	101
   336  0020ED  6D                 	db	109
   337  0020EE  70                 	db	112
   338  0020EF  65                 	db	101
   339  0020F0  72                 	db	114
   340  0020F1  61                 	db	97
   341  0020F2  74                 	db	116
   342  0020F3  75                 	db	117
   343  0020F4  72                 	db	114
   344  0020F5  61                 	db	97
   345  0020F6  20                 	db	32
   346  0020F7  49                 	db	73
   347  0020F8  64                 	db	100
   348  0020F9  65                 	db	101
   349  0020FA  61                 	db	97
   350  0020FB  6C                 	db	108
   351  0020FC  0D                 	db	13
   352  0020FD  00                 	db	0
   353                           
   354                           ;initializer for offLEDS@F3580
   355  0020FE  41                 	db	65
   356  0020FF  70                 	db	112
   357  002100  61                 	db	97
   358  002101  67                 	db	103
   359  002102  61                 	db	97
   360  002103  6E                 	db	110
   361  002104  64                 	db	100
   362  002105  6F                 	db	111
   363  002106  20                 	db	32
   364  002107  4C                 	db	76
   365  002108  45                 	db	69
   366  002109  44                 	db	68
   367  00210A  53                 	db	83
   368  00210B  0D                 	db	13
   369  00210C  00                 	db	0
   370                           
   371                           ;initializer for _bombillaCar4
   372  00210D  0E                 	db	14
   373  00210E  11                 	db	17
   374  00210F  11                 	db	17
   375  002110  11                 	db	17
   376  002111  0E                 	db	14
   377  002112  0E                 	db	14
   378  002113  00                 	db	0
   379  002114  00                 	db	0
   380                           
   381                           	psect	idataBANK3
   382  0021BC                     __pidataBANK3:
   383                           	callstack 0
   384                           
   385                           ;initializer for main@F3571
   386  0021BC  4C                 	db	76
   387  0021BD  61                 	db	97
   388  0021BE  20                 	db	32
   389  0021BF  68                 	db	104
   390  0021C0  6F                 	db	111
   391  0021C1  72                 	db	114
   392  0021C2  61                 	db	97
   393  0021C3  20                 	db	32
   394  0021C4  6E                 	db	110
   395  0021C5  6F                 	db	111
   396  0021C6  63                 	db	99
   397  0021C7  74                 	db	116
   398  0021C8  75                 	db	117
   399  0021C9  72                 	db	114
   400  0021CA  6E                 	db	110
   401  0021CB  61                 	db	97
   402  0021CC  20                 	db	32
   403  0021CD  65                 	db	101
   404  0021CE  6D                 	db	109
   405  0021CF  70                 	db	112
   406  0021D0  69                 	db	105
   407  0021D1  65                 	db	101
   408  0021D2  7A                 	db	122
   409  0021D3  61                 	db	97
   410  0021D4  20                 	db	32
   411  0021D5  61                 	db	97
   412  0021D6  20                 	db	32
   413  0021D7  6C                 	db	108
   414  0021D8  61                 	db	97
   415  0021D9  73                 	db	115
   416  0021DA  20                 	db	32
   417  0021DB  31                 	db	49
   418  0021DC  38                 	db	56
   419  0021DD  3A                 	db	58
   420  0021DE  30                 	db	48
   421  0021DF  30                 	db	48
   422  0021E0  0D                 	db	13
   423  0021E1  00                 	db	0
   424                           
   425                           ;initializer for main@F3568
   426  0021E2  4E                 	db	78
   427  0021E3  6F                 	db	111
   428  0021E4  20                 	db	32
   429  0021E5  73                 	db	115
   430  0021E6  65                 	db	101
   431  0021E7  20                 	db	32
   432  0021E8  68                 	db	104
   433  0021E9  61                 	db	97
   434  0021EA  20                 	db	32
   435  0021EB  70                 	db	112
   436  0021EC  72                 	db	114
   437  0021ED  65                 	db	101
   438  0021EE  6E                 	db	110
   439  0021EF  64                 	db	100
   440  0021F0  69                 	db	105
   441  0021F1  64                 	db	100
   442  0021F2  6F                 	db	111
   443  0021F3  20                 	db	32
   444  0021F4  6E                 	db	110
   445  0021F5  69                 	db	105
   446  0021F6  6E                 	db	110
   447  0021F7  67                 	db	103
   448  0021F8  75                 	db	117
   449  0021F9  6E                 	db	110
   450  0021FA  61                 	db	97
   451  0021FB  20                 	db	32
   452  0021FC  62                 	db	98
   453  0021FD  6F                 	db	111
   454  0021FE  6D                 	db	109
   455  0021FF  62                 	db	98
   456  002200  69                 	db	105
   457  002201  6C                 	db	108
   458  002202  6C                 	db	108
   459  002203  61                 	db	97
   460  002204  0D                 	db	13
   461  002205  00                 	db	0
   462                           
   463                           ;initializer for encenderBombillas@F3607
   464  002206  53                 	db	83
   465  002207  65                 	db	101
   466  002208  20                 	db	32
   467  002209  65                 	db	101
   468  00220A  6E                 	db	110
   469  00220B  63                 	db	99
   470  00220C  65                 	db	101
   471  00220D  6E                 	db	110
   472  00220E  64                 	db	100
   473  00220F  69                 	db	105
   474  002210  6F                 	db	111
   475  002211  20                 	db	32
   476  002212  6C                 	db	108
   477  002213  61                 	db	97
   478  002214  20                 	db	32
   479  002215  62                 	db	98
   480  002216  6F                 	db	111
   481  002217  6D                 	db	109
   482  002218  62                 	db	98
   483  002219  69                 	db	105
   484  00221A  6C                 	db	108
   485  00221B  6C                 	db	108
   486  00221C  61                 	db	97
   487  00221D  20                 	db	32
   488  00221E  35                 	db	53
   489  00221F  0D                 	db	13
   490  002220  00                 	db	0
   491                           
   492                           ;initializer for encenderBombillas@F3604
   493  002221  53                 	db	83
   494  002222  65                 	db	101
   495  002223  20                 	db	32
   496  002224  65                 	db	101
   497  002225  6E                 	db	110
   498  002226  63                 	db	99
   499  002227  65                 	db	101
   500  002228  6E                 	db	110
   501  002229  64                 	db	100
   502  00222A  69                 	db	105
   503  00222B  6F                 	db	111
   504  00222C  20                 	db	32
   505  00222D  6C                 	db	108
   506  00222E  61                 	db	97
   507  00222F  20                 	db	32
   508  002230  62                 	db	98
   509  002231  6F                 	db	111
   510  002232  6D                 	db	109
   511  002233  62                 	db	98
   512  002234  69                 	db	105
   513  002235  6C                 	db	108
   514  002236  6C                 	db	108
   515  002237  61                 	db	97
   516  002238  20                 	db	32
   517  002239  34                 	db	52
   518  00223A  0D                 	db	13
   519  00223B  00                 	db	0
   520  0000                     _PORTCbits	set	3970
   521  0000                     _TXREG	set	4013
   522  0000                     _ADCON1	set	4033
   523  0000                     _OSCCON	set	4051
   524  0000                     _SPBRG	set	4015
   525  0000                     _RCSTAbits	set	4011
   526  0000                     _BAUDCONbits	set	4024
   527  0000                     _TXSTAbits	set	4012
   528  0000                     _TRISCbits	set	3988
   529  0000                     _PORTAbits	set	3968
   530  0000                     _TRISA	set	3986
   531  0000                     _SSPCON2bits	set	4037
   532  0000                     _SSPADD	set	4040
   533  0000                     _SSPCON2	set	4037
   534  0000                     _SSPCON1	set	4038
   535  0000                     _SSPSTAT	set	4039
   536  0000                     _SSPBUF	set	4041
   537  0000                     _SSPSTATbits	set	4039
   538  0000                     _LATD	set	3980
   539  0000                     _TRISC	set	3988
   540  0000                     _TRISD	set	3989
   541  0000                     _LATC2	set	31834
   542  0000                     _ACKEN	set	32300
   543  0000                     _ACKDT	set	32301
   544  0000                     _PEN	set	32298
   545  0000                     _RSEN	set	32297
   546  0000                     _ACKSTAT	set	32302
   547  0000                     _SSPIF	set	31987
   548  0000                     _SSPIE	set	31979
   549  0000                     _TRISB1	set	31897
   550  0000                     _TRISB0	set	31896
   551  0000                     _RCEN	set	32299
   552  0000                     _LATC1	set	31833
   553  0000                     _LATC0	set	31832
   554                           
   555                           	psect	smallconst
   556  000800                     __psmallconst:
   557                           	callstack 0
   558  000800  00                 	db	0
   559  000801                     STR_1:
   560  000801  45                 	db	69	;'E'
   561  000802  52                 	db	82	;'R'
   562  000803  52                 	db	82	;'R'
   563  000804  4F                 	db	79	;'O'
   564  000805  52                 	db	82	;'R'
   565  000806  20                 	db	32
   566  000807  48                 	db	72	;'H'
   567  000808  4F                 	db	79	;'O'
   568  000809  52                 	db	82	;'R'
   569  00080A  41                 	db	65	;'A'
   570  00080B  20                 	db	32
   571  00080C  00                 	db	0
   572  00080D                     STR_23:
   573  00080D  43                 	db	67	;'C'
   574  00080E  61                 	db	97	;'a'
   575  00080F  6C                 	db	108	;'l'
   576  000810  20                 	db	32
   577  000811  25                 	db	37
   578  000812  78                 	db	120	;'x'
   579  000813  2D                 	db	45
   580  000814  00                 	db	0
   581  000815                     STR_19:
   582  000815  54                 	db	84	;'T'
   583  000816  69                 	db	105	;'i'
   584  000817  6D                 	db	109	;'m'
   585  000818  3A                 	db	58	;':'
   586  000819  25                 	db	37
   587  00081A  78                 	db	120	;'x'
   588  00081B  3A                 	db	58	;':'
   589  00081C  00                 	db	0
   590  00081D                     STR_2:
   591  00081D  44                 	db	68	;'D'
   592  00081E  49                 	db	73	;'I'
   593  00081F  55                 	db	85	;'U'
   594  000820  52                 	db	82	;'R'
   595  000821  4E                 	db	78	;'N'
   596  000822  41                 	db	65	;'A'
   597  000823  00                 	db	0
   598  000824                     STR_9:
   599  000824  4F                 	db	79	;'O'
   600  000825  4E                 	db	78	;'N'
   601  000826  20                 	db	32
   602  000827  42                 	db	66	;'B'
   603  000828  2E                 	db	46
   604  000829  00                 	db	0
   605  00082A                     STR_4:
   606  00082A  2E                 	db	46
   607  00082B  25                 	db	37
   608  00082C  64                 	db	100	;'d'
   609  00082D  20                 	db	32
   610  00082E  00                 	db	0
   611  00082F                     STR_17:
   612  00082F  25                 	db	37
   613  000830  78                 	db	120	;'x'
   614  000831  20                 	db	32
   615  000832  00                 	db	0
   616  000833                     STR_6:
   617  000833  2E                 	db	46
   618  000834  25                 	db	37
   619  000835  64                 	db	100	;'d'
   620  000836  00                 	db	0
   621  000837                     STR_29:
   622  000837  57                 	db	87	;'W'
   623  000838  65                 	db	101	;'e'
   624  000839  64                 	db	100	;'d'
   625  00083A  00                 	db	0
   626  00083B                     STR_28:
   627  00083B  54                 	db	84	;'T'
   628  00083C  75                 	db	117	;'u'
   629  00083D  65                 	db	101	;'e'
   630  00083E  00                 	db	0
   631  00083F                     STR_31:
   632  00083F  46                 	db	70	;'F'
   633  000840  72                 	db	114	;'r'
   634  000841  69                 	db	105	;'i'
   635  000842  00                 	db	0
   636  000843                     STR_27:
   637  000843  4D                 	db	77	;'M'
   638  000844  6F                 	db	111	;'o'
   639  000845  6E                 	db	110	;'n'
   640  000846  00                 	db	0
   641  000847                     STR_26:
   642  000847  53                 	db	83	;'S'
   643  000848  75                 	db	117	;'u'
   644  000849  6E                 	db	110	;'n'
   645  00084A  00                 	db	0
   646  00084B                     STR_32:
   647  00084B  53                 	db	83	;'S'
   648  00084C  61                 	db	97	;'a'
   649  00084D  74                 	db	116	;'t'
   650  00084E  00                 	db	0
   651  00084F                     STR_30:
   652  00084F  54                 	db	84	;'T'
   653  000850  68                 	db	104	;'h'
   654  000851  75                 	db	117	;'u'
   655  000852  00                 	db	0
   656  000853                     STR_16:
   657  000853  41                 	db	65	;'A'
   658  000854  4D                 	db	77	;'M'
   659  000855  00                 	db	0
   660  000856                     STR_15:
   661  000856  50                 	db	80	;'P'
   662  000857  4D                 	db	77	;'M'
   663  000858  00                 	db	0
   664  000859                     STR_10:
   665  000859  31                 	db	49	;'1'
   666  00085A  00                 	db	0
   667  00085B                     STR_11:
   668  00085B  32                 	db	50	;'2'
   669  00085C  00                 	db	0
   670  00085D                     STR_12:
   671  00085D  33                 	db	51	;'3'
   672  00085E  00                 	db	0
   673  00085F                     STR_13:
   674  00085F  34                 	db	52	;'4'
   675  000860  00                 	db	0
   676  000861                     STR_14:
   677  000861  35                 	db	53	;'5'
   678  000862  00                 	db	0
   679  000863                     STR_7:
   680  000863  48                 	db	72	;'H'
   681  000864  00                 	db	0
   682  000865                     STR_8:
   683  000865  54                 	db	84	;'T'
   684  000866  00                 	db	0
   685  000867  00                 	db	0	; dummy byte at the end
   686  0000                     
   687                           ; #config settings
   688                           
   689                           	psect	cinit
   690  002116                     __pcinit:
   691                           	callstack 0
   692  002116                     start_initialization:
   693                           	callstack 0
   694  002116                     __initialization:
   695                           	callstack 0
   696                           
   697                           ; Initialize objects allocated to BANK3 (128 bytes)
   698                           ; load TBLPTR registers with __pidataBANK3
   699  002116  0EBC               	movlw	low __pidataBANK3
   700  002118  6EF6               	movwf	tblptrl,c
   701  00211A  0E21               	movlw	high __pidataBANK3
   702  00211C  6EF7               	movwf	tblptrh,c
   703  00211E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   704  002120  6EF8               	movwf	tblptru,c
   705  002122  EE03  F000         	lfsr	0,__pdataBANK3
   706  002126  EE10 F080          	lfsr	1,128
   707  00212A                     copy_data0:
   708  00212A  0009               	tblrd		*+
   709  00212C  CFF5 FFEE          	movff	tablat,postinc0
   710  002130  50E5               	movf	postdec1,w,c
   711  002132  50E1               	movf	fsr1l,w,c
   712  002134  E1FA               	bnz	copy_data0
   713                           
   714                           ; Initialize objects allocated to BANK2 (189 bytes)
   715                           ; load TBLPTR registers with __pidataBANK2
   716  002136  0E58               	movlw	low __pidataBANK2
   717  002138  6EF6               	movwf	tblptrl,c
   718  00213A  0E20               	movlw	high __pidataBANK2
   719  00213C  6EF7               	movwf	tblptrh,c
   720  00213E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   721  002140  6EF8               	movwf	tblptru,c
   722  002142  EE02  F000         	lfsr	0,__pdataBANK2
   723  002146  EE10 F0BD          	lfsr	1,189
   724  00214A                     copy_data1:
   725  00214A  0009               	tblrd		*+
   726  00214C  CFF5 FFEE          	movff	tablat,postinc0
   727  002150  50E5               	movf	postdec1,w,c
   728  002152  50E1               	movf	fsr1l,w,c
   729  002154  E1FA               	bnz	copy_data1
   730                           
   731                           ; Initialize objects allocated to BANK1 (39 bytes)
   732                           ; load TBLPTR registers with __pidataBANK1
   733  002156  0EF2               	movlw	low __pidataBANK1
   734  002158  6EF6               	movwf	tblptrl,c
   735  00215A  0E28               	movlw	high __pidataBANK1
   736  00215C  6EF7               	movwf	tblptrh,c
   737  00215E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   738  002160  6EF8               	movwf	tblptru,c
   739  002162  EE01  F0D2         	lfsr	0,__pdataBANK1
   740  002166  EE10 F027          	lfsr	1,39
   741  00216A                     copy_data2:
   742  00216A  0009               	tblrd		*+
   743  00216C  CFF5 FFEE          	movff	tablat,postinc0
   744  002170  50E5               	movf	postdec1,w,c
   745  002172  50E1               	movf	fsr1l,w,c
   746  002174  E1FA               	bnz	copy_data2
   747                           
   748                           ; Initialize objects allocated to BANK0 (2 bytes)
   749                           ; load TBLPTR registers with __pidataBANK0
   750  002176  0EFC               	movlw	low __pidataBANK0
   751  002178  6EF6               	movwf	tblptrl,c
   752  00217A  0E29               	movlw	high __pidataBANK0
   753  00217C  6EF7               	movwf	tblptrh,c
   754  00217E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   755  002180  6EF8               	movwf	tblptru,c
   756  002182  0009               	tblrd		*+	;fetch initializer
   757  002184  CFF5 F0FE          	movff	tablat,__pdataBANK0
   758  002188  0009               	tblrd		*+	;fetch initializer
   759  00218A  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   760                           
   761                           ; Clear objects allocated to BANK2 (62 bytes)
   762  00218E  EE02  F0BD         	lfsr	0,__pbssBANK2
   763  002192  0E3E               	movlw	62
   764  002194                     clear_0:
   765  002194  6AEE               	clrf	postinc0,c
   766  002196  06E8               	decf	wreg,f,c
   767  002198  E1FD               	bnz	clear_0
   768                           
   769                           ; Clear objects allocated to BANK1 (44 bytes)
   770  00219A  EE01  F0A6         	lfsr	0,__pbssBANK1
   771  00219E  0E2C               	movlw	44
   772  0021A0                     clear_1:
   773  0021A0  6AEE               	clrf	postinc0,c
   774  0021A2  06E8               	decf	wreg,f,c
   775  0021A4  E1FD               	bnz	clear_1
   776                           
   777                           ; Clear objects allocated to BANK0 (28 bytes)
   778  0021A6  EE00  F0E2         	lfsr	0,__pbssBANK0
   779  0021AA  0E1C               	movlw	28
   780  0021AC                     clear_2:
   781  0021AC  6AEE               	clrf	postinc0,c
   782  0021AE  06E8               	decf	wreg,f,c
   783  0021B0  E1FD               	bnz	clear_2
   784  0021B2                     end_of_initialization:
   785                           	callstack 0
   786  0021B2                     __end_of__initialization:
   787                           	callstack 0
   788  0021B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   789  0021B4  6EF8               	movwf	tblptru,c
   790  0021B6  0100               	movlb	0
   791  0021B8  EFF7  F00B         	goto	_main	;jump to C main() function
   792                           
   793                           	psect	bssBANK0
   794  0000E2                     __pbssBANK0:
   795                           	callstack 0
   796  0000E2                     _width:
   797                           	callstack 0
   798  0000E2                     	ds	2
   799  0000E4                     _prec:
   800                           	callstack 0
   801  0000E4                     	ds	2
   802  0000E6                     _flags:
   803                           	callstack 0
   804  0000E6                     	ds	2
   805  0000E8                     _Year:
   806                           	callstack 0
   807  0000E8                     	ds	2
   808  0000EA                     _Month:
   809                           	callstack 0
   810  0000EA                     	ds	2
   811  0000EC                     _Date:
   812                           	callstack 0
   813  0000EC                     	ds	2
   814  0000EE                     _Day:
   815                           	callstack 0
   816  0000EE                     	ds	2
   817  0000F0                     _hour:
   818                           	callstack 0
   819  0000F0                     	ds	2
   820  0000F2                     _min:
   821                           	callstack 0
   822  0000F2                     	ds	2
   823  0000F4                     _sec:
   824                           	callstack 0
   825  0000F4                     	ds	2
   826  0000F6                     _banAgregar:
   827                           	callstack 0
   828  0000F6                     	ds	2
   829  0000F8                     _j:
   830                           	callstack 0
   831  0000F8                     	ds	1
   832  0000F9                     _valor2:
   833                           	callstack 0
   834  0000F9                     	ds	1
   835  0000FA                     _var_T_Integral:
   836                           	callstack 0
   837  0000FA                     	ds	1
   838  0000FB                     _var_T_Decimal:
   839                           	callstack 0
   840  0000FB                     	ds	1
   841  0000FC                     _var_RH_Integral:
   842                           	callstack 0
   843  0000FC                     	ds	1
   844  0000FD                     _var_RH_Decimal:
   845                           	callstack 0
   846  0000FD                     	ds	1
   847                           
   848                           	psect	dataBANK0
   849  0000FE                     __pdataBANK0:
   850                           	callstack 0
   851  0000FE                     _AM_PM:
   852                           	callstack 0
   853  0000FE                     	ds	1
   854  0000FF                     _Clock_type:
   855                           	callstack 0
   856  0000FF                     	ds	1
   857                           
   858                           	psect	bssBANK1
   859  0001A6                     __pbssBANK1:
   860                           	callstack 0
   861  0001A6                     _nout:
   862                           	callstack 0
   863  0001A6                     	ds	2
   864  0001A8                     _acumBom:
   865                           	callstack 0
   866  0001A8                     	ds	2
   867  0001AA                     _hours:
   868                           	callstack 0
   869  0001AA                     	ds	10
   870  0001B4                     _mins:
   871                           	callstack 0
   872  0001B4                     	ds	10
   873  0001BE                     _secs:
   874                           	callstack 0
   875  0001BE                     	ds	10
   876  0001C8                     _vec_value:
   877                           	callstack 0
   878  0001C8                     	ds	10
   879                           
   880                           	psect	dataBANK1
   881  0001D2                     __pdataBANK1:
   882                           	callstack 0
   883  0001D2                     _days:
   884                           	callstack 0
   885  0001D2                     	ds	7
   886  0001D9                     _bombillaCar3:
   887                           	callstack 0
   888  0001D9                     	ds	8
   889  0001E1                     _bombillaCar2:
   890                           	callstack 0
   891  0001E1                     	ds	8
   892  0001E9                     _bombillaCar1:
   893                           	callstack 0
   894  0001E9                     	ds	8
   895  0001F1                     _bombillaCar0:
   896                           	callstack 0
   897  0001F1                     	ds	8
   898                           
   899                           	psect	bssBANK2
   900  0002BD                     __pbssBANK2:
   901                           	callstack 0
   902  0002BD                     _dbuf:
   903                           	callstack 0
   904  0002BD                     	ds	32
   905  0002DD                     _year:
   906                           	callstack 0
   907  0002DD                     	ds	10
   908  0002E7                     _month:
   909                           	callstack 0
   910  0002E7                     	ds	10
   911  0002F1                     _date:
   912                           	callstack 0
   913  0002F1                     	ds	10
   914                           
   915                           	psect	dataBANK2
   916  000200                     __pdataBANK2:
   917                           	callstack 0
   918  000200                     encenderBombillas@F3601:
   919                           	callstack 0
   920  000200                     	ds	27
   921  00021B                     encenderBombillas@F3598:
   922                           	callstack 0
   923  00021B                     	ds	27
   924  000236                     encenderBombillas@F3595:
   925                           	callstack 0
   926  000236                     	ds	27
   927  000251                     mostrarFechaHora@F3618:
   928                           	callstack 0
   929  000251                     	ds	26
   930  00026B                     offBombillas@F3590:
   931                           	callstack 0
   932  00026B                     	ds	21
   933  000280                     encenderBombillas@F3610:
   934                           	callstack 0
   935  000280                     	ds	19
   936  000293                     onLEDS@F3586:
   937                           	callstack 0
   938  000293                     	ds	19
   939  0002A6                     offLEDS@F3580:
   940                           	callstack 0
   941  0002A6                     	ds	15
   942  0002B5                     _bombillaCar4:
   943                           	callstack 0
   944  0002B5                     	ds	8
   945                           
   946                           	psect	dataBANK3
   947  000300                     __pdataBANK3:
   948                           	callstack 0
   949  000300                     main@F3571:
   950                           	callstack 0
   951  000300                     	ds	38
   952  000326                     main@F3568:
   953                           	callstack 0
   954  000326                     	ds	36
   955  00034A                     encenderBombillas@F3607:
   956                           	callstack 0
   957  00034A                     	ds	27
   958  000365                     encenderBombillas@F3604:
   959                           	callstack 0
   960  000365                     	ds	27
   961                           
   962                           	psect	cstackBANK1
   963  000100                     __pcstackBANK1:
   964                           	callstack 0
   965  000100                     encenderBombillas@buffer_TX:
   966                           	callstack 0
   967                           
   968                           ; 27 bytes @ 0x0
   969  000100                     	ds	27
   970  00011B                     encenderBombillas@buffer_TX_798:
   971                           	callstack 0
   972                           
   973                           ; 27 bytes @ 0x1B
   974  00011B                     	ds	27
   975  000136                     encenderBombillas@buffer_TX_802:
   976                           	callstack 0
   977                           
   978                           ; 27 bytes @ 0x36
   979  000136                     	ds	27
   980  000151                     encenderBombillas@buffer_TX_807:
   981                           	callstack 0
   982                           
   983                           ; 27 bytes @ 0x51
   984  000151                     	ds	27
   985  00016C                     encenderBombillas@buffer_TX_811:
   986                           	callstack 0
   987                           
   988                           ; 27 bytes @ 0x6C
   989  00016C                     	ds	27
   990  000187                     encenderBombillas@buffer_TX_814:
   991                           	callstack 0
   992                           
   993                           ; 19 bytes @ 0x87
   994  000187                     	ds	19
   995  00019A                     encenderBombillas@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x9A
   999  00019A                     	ds	2
  1000  00019C                     encenderBombillas@i_799:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x9C
  1004  00019C                     	ds	2
  1005  00019E                     encenderBombillas@i_803:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x9E
  1009  00019E                     	ds	2
  1010  0001A0                     encenderBombillas@i_808:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0xA0
  1014  0001A0                     	ds	2
  1015  0001A2                     encenderBombillas@i_812:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0xA2
  1019  0001A2                     	ds	2
  1020  0001A4                     encenderBombillas@i_815:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0xA4
  1024  0001A4                     	ds	2
  1025                           
  1026                           	psect	cstackBANK0
  1027  000060                     __pcstackBANK0:
  1028                           	callstack 0
  1029  000060                     ?_vfprintf:
  1030                           	callstack 0
  1031  000060                     vfprintf@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x0
  1035  000060                     	ds	2
  1036  000062                     vfprintf@fmt:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  000062                     	ds	2
  1041  000064                     vfprintf@ap:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x4
  1045  000064                     	ds	2
  1046  000066                     ?_sprintf:
  1047                           	callstack 0
  1048  000066                     sprintf@s:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x6
  1052  000066                     	ds	2
  1053  000068                     sprintf@fmt:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x8
  1057  000068                     	ds	6
  1058  00006E                     sprintf@ap:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0xE
  1062  00006E                     	ds	2
  1063  000070                     sprintf@f:
  1064                           	callstack 0
  1065                           
  1066                           ; 6 bytes @ 0x10
  1067  000070                     	ds	6
  1068  000076                     ??_mostrarFechaHora:
  1069                           
  1070                           ; 1 bytes @ 0x16
  1071  000076                     	ds	2
  1072  000078                     mostrarFechaHora@buffer_TX:
  1073                           	callstack 0
  1074                           
  1075                           ; 26 bytes @ 0x18
  1076  000078                     	ds	26
  1077  000092                     mostrarFechaHora@i:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x32
  1081  000092                     	ds	2
  1082  000094                     main@buffer_TX_754:
  1083                           	callstack 0
  1084                           
  1085                           ; 38 bytes @ 0x34
  1086  000094                     	ds	38
  1087  0000BA                     main@buffer_TX:
  1088                           	callstack 0
  1089                           
  1090                           ; 36 bytes @ 0x5A
  1091  0000BA                     	ds	36
  1092  0000DE                     main@i:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x7E
  1096  0000DE                     	ds	2
  1097  0000E0                     main@i_755:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x80
  1101  0000E0                     	ds	2
  1102                           
  1103                           	psect	cstackCOMRAM
  1104  000001                     __pcstackCOMRAM:
  1105                           	callstack 0
  1106  000001                     ??_DHT11_Start:
  1107  000001                     ?_strlen:
  1108                           	callstack 0
  1109  000001                     ?_isupper:
  1110                           	callstack 0
  1111  000001                     ?_isalpha:
  1112                           	callstack 0
  1113  000001                     ?_islower:
  1114                           	callstack 0
  1115  000001                     ?___aodiv:
  1116                           	callstack 0
  1117  000001                     ?___aomod:
  1118                           	callstack 0
  1119  000001                     I2C_Read@flag:
  1120                           	callstack 0
  1121  000001                     I2C_Write@data:
  1122                           	callstack 0
  1123  000001                     DHT11_ReadData@i:
  1124                           	callstack 0
  1125  000001                     MSdelay@val:
  1126                           	callstack 0
  1127  000001                     isalpha@c:
  1128                           	callstack 0
  1129  000001                     isupper@c:
  1130                           	callstack 0
  1131  000001                     fputc@c:
  1132                           	callstack 0
  1133  000001                     strlen@s:
  1134                           	callstack 0
  1135  000001                     islower@c:
  1136                           	callstack 0
  1137  000001                     ___aodiv@dividend:
  1138                           	callstack 0
  1139  000001                     ___aomod@dividend:
  1140                           	callstack 0
  1141  000001                     offLEDS@buffer_TX:
  1142                           	callstack 0
  1143  000001                     onLEDS@buffer_TX:
  1144                           	callstack 0
  1145  000001                     offBombillas@buffer_TX:
  1146                           	callstack 0
  1147                           
  1148                           ; 21 bytes @ 0x0
  1149  000001                     	ds	1
  1150  000002                     I2C_Read@buffer:
  1151                           	callstack 0
  1152  000002                     I2C_Start@slave_write_address:
  1153                           	callstack 0
  1154  000002                     I2C_Repeated_Start@slave_read_address:
  1155                           	callstack 0
  1156  000002                     DHT11_ReadData@data:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x1
  1160  000002                     	ds	1
  1161  000003                     ??_isupper:
  1162  000003                     ??_isalpha:
  1163  000003                     ??_islower:
  1164  000003                     ??_RTC_Read_Clock:
  1165  000003                     ??_RTC_Read_Calendar:
  1166  000003                     MSdelay@i:
  1167                           	callstack 0
  1168  000003                     fputc@fp:
  1169                           	callstack 0
  1170  000003                     strlen@a:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2
  1174  000003                     	ds	1
  1175  000004                     RTC_Read_Clock@read_clock_address:
  1176                           	callstack 0
  1177  000004                     RTC_Read_Calendar@read_calendar_address:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x3
  1181  000004                     	ds	1
  1182  000005                     ??_fputc:
  1183  000005                     MSdelay@j:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x4
  1187  000005                     	ds	2
  1188  000007                     ?_toupper:
  1189                           	callstack 0
  1190  000007                     LCD_Command@cmd:
  1191                           	callstack 0
  1192  000007                     LCD_Char@dat:
  1193                           	callstack 0
  1194  000007                     toupper@c:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x6
  1198  000007                     	ds	1
  1199  000008                     LCD_Custom_Char@msg:
  1200                           	callstack 0
  1201  000008                     LCD_String@msg:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x7
  1205  000008                     	ds	1
  1206  000009                     ??_toupper:
  1207  000009                     ___aodiv@divisor:
  1208                           	callstack 0
  1209  000009                     ___aomod@divisor:
  1210                           	callstack 0
  1211                           
  1212                           ; 8 bytes @ 0x8
  1213  000009                     	ds	1
  1214  00000A                     LCD_Custom_Char@loc:
  1215                           	callstack 0
  1216  00000A                     LCD_String_xy@pos:
  1217                           	callstack 0
  1218  00000A                     fputs@s:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x9
  1222  00000A                     	ds	1
  1223  00000B                     LCD_Custom_Char@i:
  1224                           	callstack 0
  1225  00000B                     LCD_String_xy@msg:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0xA
  1229  00000B                     	ds	1
  1230  00000C                     fputs@fp:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0xB
  1234  00000C                     	ds	1
  1235  00000D                     LCD_String_xy@row:
  1236                           	callstack 0
  1237  00000D                     _toupper$1471:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0xC
  1241  00000D                     	ds	1
  1242  00000E                     LCD_String_xy@location:
  1243                           	callstack 0
  1244  00000E                     fputs@c:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0xD
  1248  00000E                     	ds	1
  1249  00000F                     fputs@i:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0xE
  1253  00000F                     	ds	1
  1254  000010                     offLEDS@i:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0xF
  1258  000010                     	ds	1
  1259  000011                     ?_pad:
  1260                           	callstack 0
  1261  000011                     ___aodiv@counter:
  1262                           	callstack 0
  1263  000011                     ___aomod@counter:
  1264                           	callstack 0
  1265  000011                     pad@fp:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x10
  1269  000011                     	ds	1
  1270  000012                     ___aodiv@sign:
  1271                           	callstack 0
  1272  000012                     ___aomod@sign:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x11
  1276  000012                     	ds	1
  1277  000013                     ?_abs:
  1278                           	callstack 0
  1279  000013                     pad@buf:
  1280                           	callstack 0
  1281  000013                     abs@a:
  1282                           	callstack 0
  1283  000013                     ___aodiv@quotient:
  1284                           	callstack 0
  1285                           
  1286                           ; 8 bytes @ 0x12
  1287  000013                     	ds	1
  1288  000014                     onLEDS@T_Integral:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x13
  1292  000014                     	ds	1
  1293  000015                     ??_abs:
  1294  000015                     onLEDS@valor:
  1295                           	callstack 0
  1296  000015                     pad@p:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x14
  1300  000015                     	ds	1
  1301  000016                     offBombillas@i:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x15
  1305  000016                     	ds	1
  1306  000017                     ??_pad:
  1307  000017                     onLEDS@i:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x16
  1311  000017                     	ds	1
  1312  000018                     pad@i:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x17
  1316  000018                     	ds	1
  1317  000019                     
  1318                           ; 1 bytes @ 0x18
  1319  000019                     	ds	1
  1320  00001A                     pad@w:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x19
  1324  00001A                     	ds	2
  1325  00001C                     ?_dtoa:
  1326                           	callstack 0
  1327  00001C                     ?_xtoa:
  1328                           	callstack 0
  1329  00001C                     dtoa@fp:
  1330                           	callstack 0
  1331  00001C                     xtoa@fp:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x1B
  1335  00001C                     	ds	2
  1336  00001E                     dtoa@d:
  1337                           	callstack 0
  1338  00001E                     xtoa@d:
  1339                           	callstack 0
  1340                           
  1341                           ; 8 bytes @ 0x1D
  1342  00001E                     	ds	8
  1343  000026                     ??_dtoa:
  1344  000026                     xtoa@x:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x25
  1348  000026                     	ds	1
  1349  000027                     ??_xtoa:
  1350                           
  1351                           ; 1 bytes @ 0x26
  1352  000027                     	ds	7
  1353  00002E                     _dtoa$1375:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x2D
  1357  00002E                     	ds	1
  1358  00002F                     _xtoa$1386:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x2E
  1362  00002F                     	ds	1
  1363  000030                     dtoa@p:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x2F
  1367  000030                     	ds	1
  1368  000031                     _xtoa$1387:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x30
  1372  000031                     	ds	1
  1373  000032                     dtoa@w:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x31
  1377  000032                     	ds	1
  1378  000033                     xtoa@p:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x32
  1382  000033                     	ds	1
  1383  000034                     dtoa@s:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x33
  1387  000034                     	ds	1
  1388  000035                     xtoa@w:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x34
  1392  000035                     	ds	1
  1393  000036                     dtoa@n:
  1394                           	callstack 0
  1395                           
  1396                           ; 8 bytes @ 0x35
  1397  000036                     	ds	1
  1398  000037                     xtoa@n:
  1399                           	callstack 0
  1400                           
  1401                           ; 8 bytes @ 0x36
  1402  000037                     	ds	7
  1403  00003E                     dtoa@i:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x3D
  1407  00003E                     	ds	1
  1408  00003F                     xtoa@i:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x3E
  1412  00003F                     	ds	2
  1413  000041                     xtoa@c:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x40
  1417  000041                     	ds	2
  1418  000043                     ?_vfpfcnvrt:
  1419                           	callstack 0
  1420  000043                     vfpfcnvrt@fp:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x42
  1424  000043                     	ds	2
  1425  000045                     vfpfcnvrt@fmt:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x44
  1429  000045                     	ds	2
  1430  000047                     vfpfcnvrt@ap:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x46
  1434  000047                     	ds	2
  1435  000049                     ??_vfpfcnvrt:
  1436                           
  1437                           ; 1 bytes @ 0x48
  1438  000049                     	ds	4
  1439  00004D                     vfpfcnvrt@ll:
  1440                           	callstack 0
  1441                           
  1442                           ; 8 bytes @ 0x4C
  1443  00004D                     	ds	8
  1444  000055                     vfpfcnvrt@llu:
  1445                           	callstack 0
  1446                           
  1447                           ; 8 bytes @ 0x54
  1448  000055                     	ds	8
  1449  00005D                     vfpfcnvrt@c:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x5C
  1453  00005D                     	ds	1
  1454  00005E                     vfprintf@cfmt:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x5D
  1458  00005E                     	ds	2
  1459  000060                     
  1460                           ; 1 bytes @ 0x5F
  1461 ;;
  1462 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1463 ;;
  1464 ;; *************** function _main *****************
  1465 ;; Defined at:
  1466 ;;		line 101 in file "Controlador.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               2  128[BANK0 ] int 
  1471 ;;  i               2  126[BANK0 ] int 
  1472 ;;  buffer_TX      38   52[BANK0 ] unsigned char [38]
  1473 ;;  buffer_TX      36   90[BANK0 ] unsigned char [36]
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0
  1484 ;;      Locals:         0      78       0       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1486 ;;      Totals:         0      78       0       0       0       0       0       0       0
  1487 ;;Total ram usage:       78 bytes
  1488 ;; Hardware stack levels required when called:    9
  1489 ;; This function calls:
  1490 ;;		_DHT11_CheckResponse
  1491 ;;		_DHT11_ReadData
  1492 ;;		_DHT11_Start
  1493 ;;		_I2C_Init
  1494 ;;		_LCD_Custom_Char
  1495 ;;		_LCD_Init
  1496 ;;		_LCD_String_xy
  1497 ;;		_MSdelay
  1498 ;;		_encenderBombillas
  1499 ;;		_imprimirTemHum
  1500 ;;		_mostrarFechaHora
  1501 ;;		_offBombillas
  1502 ;;		_offLEDS
  1503 ;;		_verificarHora
  1504 ;; This function is called by:
  1505 ;;		Startup code after reset
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text0
  1510  0017EE                     __ptext0:
  1511                           	callstack 0
  1512  0017EE                     _main:
  1513                           	callstack 22
  1514  0017EE                     
  1515                           ;Controlador.c: 102:     TRISA = 0;
  1516  0017EE  0E00               	movlw	0
  1517  0017F0  6E92               	movwf	146,c	;volatile
  1518  0017F2                     
  1519                           ;Controlador.c: 105:     PORTAbits.RA0 = 0;
  1520  0017F2  9080               	bcf	128,0,c	;volatile
  1521  0017F4                     
  1522                           ;Controlador.c: 106:     PORTAbits.RA1 = 0;
  1523  0017F4  9280               	bcf	128,1,c	;volatile
  1524  0017F6                     
  1525                           ;Controlador.c: 107:     PORTAbits.RA2 = 0;
  1526  0017F6  9480               	bcf	128,2,c	;volatile
  1527  0017F8                     
  1528                           ;Controlador.c: 108:     PORTAbits.RA3 = 0;
  1529  0017F8  9680               	bcf	128,3,c	;volatile
  1530  0017FA                     
  1531                           ;Controlador.c: 109:     PORTAbits.RA4 = 0;
  1532  0017FA  9880               	bcf	128,4,c	;volatile
  1533  0017FC                     
  1534                           ;Controlador.c: 112:     TRISCbits.RC6 = 0;
  1535  0017FC  9C94               	bcf	148,6,c	;volatile
  1536  0017FE                     
  1537                           ;Controlador.c: 113:     TXSTAbits.TX9 = 0;
  1538  0017FE  9CAC               	bcf	172,6,c	;volatile
  1539  001800                     
  1540                           ;Controlador.c: 114:     TXSTAbits.TXEN = 1;
  1541  001800  8AAC               	bsf	172,5,c	;volatile
  1542  001802                     
  1543                           ;Controlador.c: 115:     TXSTAbits.SYNC = 0;
  1544  001802  98AC               	bcf	172,4,c	;volatile
  1545  001804                     
  1546                           ;Controlador.c: 116:     TXSTAbits.BRGH = 0;
  1547  001804  94AC               	bcf	172,2,c	;volatile
  1548  001806                     
  1549                           ;Controlador.c: 117:     BAUDCONbits.BRG16 = 0;
  1550  001806  96B8               	bcf	184,3,c	;volatile
  1551  001808                     
  1552                           ;Controlador.c: 118:     RCSTAbits.SPEN = 1;
  1553  001808  8EAB               	bsf	171,7,c	;volatile
  1554                           
  1555                           ;Controlador.c: 119:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1556  00180A  0E0C               	movlw	12
  1557  00180C  6EAF               	movwf	175,c	;volatile
  1558                           
  1559                           ;Controlador.c: 121:     OSCCON = 0x72;
  1560  00180E  0E72               	movlw	114
  1561  001810  6ED3               	movwf	211,c	;volatile
  1562                           
  1563                           ;Controlador.c: 125:     ADCON1 = 0x0F;
  1564  001812  0E0F               	movlw	15
  1565  001814  6EC1               	movwf	193,c	;volatile
  1566  001816                     l3341:
  1567                           
  1568                           ;Controlador.c: 129:         LCD_Init();
  1569  001816  EC4C  F014         	call	_LCD_Init	;wreg free
  1570  00181A                     
  1571                           ;Controlador.c: 130:         I2C_Init();
  1572  00181A  ECCA  F014         	call	_I2C_Init	;wreg free
  1573  00181E                     
  1574                           ;Controlador.c: 131:         MSdelay(10);
  1575  00181E  0E00               	movlw	0
  1576  001820  6E02               	movwf	(MSdelay@val+1)^0,c
  1577  001822  0E0A               	movlw	10
  1578  001824  6E01               	movwf	MSdelay@val^0,c
  1579  001826  ECC2  F012         	call	_MSdelay	;wreg free
  1580  00182A                     
  1581                           ;Controlador.c: 133:         LCD_Custom_Char(1,bombillaCar0);
  1582  00182A  0EF1               	movlw	low _bombillaCar0
  1583  00182C  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1584  00182E  0E01               	movlw	high _bombillaCar0
  1585  001830  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1586  001832  0E01               	movlw	1
  1587  001834  ECE7  F012         	call	_LCD_Custom_Char
  1588  001838                     
  1589                           ;Controlador.c: 134:         LCD_Custom_Char(1,bombillaCar1);
  1590  001838  0EE9               	movlw	low _bombillaCar1
  1591  00183A  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1592  00183C  0E01               	movlw	high _bombillaCar1
  1593  00183E  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1594  001840  0E01               	movlw	1
  1595  001842  ECE7  F012         	call	_LCD_Custom_Char
  1596  001846                     
  1597                           ;Controlador.c: 135:         LCD_Custom_Char(1,bombillaCar2);
  1598  001846  0EE1               	movlw	low _bombillaCar2
  1599  001848  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1600  00184A  0E01               	movlw	high _bombillaCar2
  1601  00184C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1602  00184E  0E01               	movlw	1
  1603  001850  ECE7  F012         	call	_LCD_Custom_Char
  1604  001854                     
  1605                           ;Controlador.c: 136:         LCD_Custom_Char(1,bombillaCar3);
  1606  001854  0ED9               	movlw	low _bombillaCar3
  1607  001856  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1608  001858  0E01               	movlw	high _bombillaCar3
  1609  00185A  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1610  00185C  0E01               	movlw	1
  1611  00185E  ECE7  F012         	call	_LCD_Custom_Char
  1612  001862                     
  1613                           ;Controlador.c: 138:         verificarHora();
  1614  001862  ECB1  F011         	call	_verificarHora	;wreg free
  1615  001866                     
  1616                           ;Controlador.c: 140:         if (hour >= 19 || hour <=6) {
  1617  001866  0100               	movlb	0	; () banked
  1618  001868  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1619  00186A  EF42  F00C         	goto	u3080
  1620  00186E  51F1               	movf	(_hour+1)& (0+255),w,b
  1621  001870  E107               	bnz	u3081
  1622  001872  0E13               	movlw	19
  1623  001874  5DF0               	subwf	_hour& (0+255),w,b
  1624  001876  B0D8               	btfsc	status,0,c
  1625  001878  EF40  F00C         	goto	u3081
  1626  00187C  EF42  F00C         	goto	u3080
  1627  001880                     u3081:
  1628  001880  EF50  F00C         	goto	l3361
  1629  001884                     u3080:
  1630  001884                     
  1631                           ; BSR set to: 0
  1632  001884  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1633  001886  EF50  F00C         	goto	u3090
  1634  00188A  51F1               	movf	(_hour+1)& (0+255),w,b
  1635  00188C  E107               	bnz	u3091
  1636  00188E  0E07               	movlw	7
  1637  001890  5DF0               	subwf	_hour& (0+255),w,b
  1638  001892  B0D8               	btfsc	status,0,c
  1639  001894  EF4E  F00C         	goto	u3091
  1640  001898  EF50  F00C         	goto	u3090
  1641  00189C                     u3091:
  1642  00189C  EFCA  F00C         	goto	l3411
  1643  0018A0                     u3090:
  1644  0018A0                     l3361:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;Controlador.c: 141:             DHT11_Start();
  1648  0018A0  EC9E  F014         	call	_DHT11_Start	;wreg free
  1649  0018A4                     
  1650                           ;Controlador.c: 142:             DHT11_CheckResponse();
  1651  0018A4  EC63  F014         	call	_DHT11_CheckResponse	;wreg free
  1652  0018A8                     
  1653                           ;Controlador.c: 145:             var_RH_Integral = DHT11_ReadData();
  1654  0018A8  EC3E  F012         	call	_DHT11_ReadData	;wreg free
  1655  0018AC  0100               	movlb	0	; () banked
  1656  0018AE  6FFC               	movwf	_var_RH_Integral& (0+255),b
  1657  0018B0                     
  1658                           ; BSR set to: 0
  1659                           ;Controlador.c: 146:             var_RH_Decimal = DHT11_ReadData();
  1660  0018B0  EC3E  F012         	call	_DHT11_ReadData	;wreg free
  1661  0018B4  0100               	movlb	0	; () banked
  1662  0018B6  6FFD               	movwf	_var_RH_Decimal& (0+255),b
  1663  0018B8                     
  1664                           ; BSR set to: 0
  1665                           ;Controlador.c: 147:             var_T_Integral = DHT11_ReadData();
  1666  0018B8  EC3E  F012         	call	_DHT11_ReadData	;wreg free
  1667  0018BC  0100               	movlb	0	; () banked
  1668  0018BE  6FFA               	movwf	_var_T_Integral& (0+255),b
  1669  0018C0                     
  1670                           ; BSR set to: 0
  1671                           ;Controlador.c: 148:             var_T_Decimal = DHT11_ReadData();
  1672  0018C0  EC3E  F012         	call	_DHT11_ReadData	;wreg free
  1673  0018C4  0100               	movlb	0	; () banked
  1674  0018C6  6FFB               	movwf	_var_T_Decimal& (0+255),b
  1675  0018C8                     
  1676                           ; BSR set to: 0
  1677                           ;Controlador.c: 150:             imprimirTemHum();
  1678  0018C8  EC8A  F00E         	call	_imprimirTemHum	;wreg free
  1679  0018CC                     
  1680                           ;Controlador.c: 152:             char buffer_TX[] = "No se ha prendido ninguna bombilla\
      +                          r";
  1681  0018CC  EE23  F026         	lfsr	2,main@F3568
  1682  0018D0  EE10  F0BA         	lfsr	1,main@buffer_TX
  1683  0018D4  0E23               	movlw	35
  1684  0018D6                     u3101:
  1685  0018D6  CFDB FFE3          	movff	plusw2,plusw1
  1686  0018DA  06E8               	decf	wreg,f,c
  1687  0018DC  E2FC               	bc	u3101
  1688  0018DE                     
  1689                           ;Controlador.c: 153:             for (int i = 0; i < 35; i++) {
  1690  0018DE  0E00               	movlw	0
  1691  0018E0  0100               	movlb	0	; () banked
  1692  0018E2  6FDF               	movwf	(main@i+1)& (0+255),b
  1693  0018E4  0E00               	movlw	0
  1694  0018E6  6FDE               	movwf	main@i& (0+255),b
  1695  0018E8                     l298:
  1696                           
  1697                           ;Controlador.c: 155:                 while (!TXSTAbits.TRMT) {
  1698  0018E8  A2AC               	btfss	172,1,c	;volatile
  1699  0018EA  EF79  F00C         	goto	u3111
  1700  0018EE  EF7B  F00C         	goto	u3110
  1701  0018F2                     u3111:
  1702  0018F2  EF74  F00C         	goto	l298
  1703  0018F6                     u3110:
  1704  0018F6                     
  1705                           ;Controlador.c: 158:                 TXREG = buffer_TX[i];
  1706  0018F6  0EBA               	movlw	low main@buffer_TX
  1707  0018F8  0100               	movlb	0	; () banked
  1708  0018FA  25DE               	addwf	main@i& (0+255),w,b
  1709  0018FC  6ED9               	movwf	fsr2l,c
  1710  0018FE  0E00               	movlw	high main@buffer_TX
  1711  001900  21DF               	addwfc	(main@i+1)& (0+255),w,b
  1712  001902  6EDA               	movwf	fsr2h,c
  1713  001904  50DF               	movf	indf2,w,c
  1714  001906  6EAD               	movwf	173,c	;volatile
  1715  001908                     
  1716                           ; BSR set to: 0
  1717                           ;Controlador.c: 159:             }
  1718  001908  4BDE               	infsnz	main@i& (0+255),f,b
  1719  00190A  2BDF               	incf	(main@i+1)& (0+255),f,b
  1720  00190C                     
  1721                           ; BSR set to: 0
  1722  00190C  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  1723  00190E  EF92  F00C         	goto	u3121
  1724  001912  51DF               	movf	(main@i+1)& (0+255),w,b
  1725  001914  E109               	bnz	u3120
  1726  001916  0E23               	movlw	35
  1727  001918  5DDE               	subwf	main@i& (0+255),w,b
  1728  00191A  A0D8               	btfss	status,0,c
  1729  00191C  EF92  F00C         	goto	u3121
  1730  001920  EF94  F00C         	goto	u3120
  1731  001924                     u3121:
  1732  001924  EF74  F00C         	goto	l298
  1733  001928                     u3120:
  1734  001928                     l3389:
  1735                           
  1736                           ;Controlador.c: 160:             MSdelay(1000);
  1737  001928  0E03               	movlw	3
  1738  00192A  6E02               	movwf	(MSdelay@val+1)^0,c
  1739  00192C  0EE8               	movlw	232
  1740  00192E  6E01               	movwf	MSdelay@val^0,c
  1741  001930  ECC2  F012         	call	_MSdelay	;wreg free
  1742                           
  1743                           ;Controlador.c: 162:             while (banAgregar == 0) {
  1744  001934  EFA2  F00C         	goto	l3395
  1745  001938                     l3391:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Controlador.c: 164:                 encenderBombillas();
  1749  001938  EC34  F004         	call	_encenderBombillas	;wreg free
  1750                           
  1751                           ;Controlador.c: 165:                 imprimirTemHum();
  1752  00193C  EC8A  F00E         	call	_imprimirTemHum	;wreg free
  1753  001940  EF94  F00C         	goto	l3389
  1754  001944                     l3395:
  1755                           
  1756                           ;Controlador.c: 162:             while (banAgregar == 0) {
  1757  001944  0100               	movlb	0	; () banked
  1758  001946  51F6               	movf	_banAgregar& (0+255),w,b
  1759  001948  11F7               	iorwf	(_banAgregar+1)& (0+255),w,b
  1760  00194A  B4D8               	btfsc	status,2,c
  1761  00194C  EFAA  F00C         	goto	u3131
  1762  001950  EFAC  F00C         	goto	u3130
  1763  001954                     u3131:
  1764  001954  EF9C  F00C         	goto	l3391
  1765  001958                     u3130:
  1766  001958                     
  1767                           ; BSR set to: 0
  1768                           ;Controlador.c: 169:             mostrarFechaHora();
  1769  001958  EC39  F006         	call	_mostrarFechaHora	;wreg free
  1770  00195C                     
  1771                           ;Controlador.c: 170:             MSdelay(1000);
  1772  00195C  0E03               	movlw	3
  1773  00195E  6E02               	movwf	(MSdelay@val+1)^0,c
  1774  001960  0EE8               	movlw	232
  1775  001962  6E01               	movwf	MSdelay@val^0,c
  1776  001964  ECC2  F012         	call	_MSdelay	;wreg free
  1777  001968                     
  1778                           ;Controlador.c: 171:             banAgregar = 0;
  1779  001968  0E00               	movlw	0
  1780  00196A  0100               	movlb	0	; () banked
  1781  00196C  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  1782  00196E  0E00               	movlw	0
  1783  001970  6FF6               	movwf	_banAgregar& (0+255),b
  1784  001972                     
  1785                           ; BSR set to: 0
  1786                           ;Controlador.c: 172:             acumBom = 0;
  1787  001972  0E00               	movlw	0
  1788  001974  0101               	movlb	1	; () banked
  1789  001976  6FA9               	movwf	(_acumBom+1)& (0+255),b
  1790  001978  0E00               	movlw	0
  1791  00197A  6FA8               	movwf	_acumBom& (0+255),b
  1792  00197C                     
  1793                           ; BSR set to: 1
  1794                           ;Controlador.c: 173:             offBombillas();
  1795  00197C  EC1E  F011         	call	_offBombillas	;wreg free
  1796  001980                     
  1797                           ;Controlador.c: 174:             offLEDS();
  1798  001980  EC81  F011         	call	_offLEDS	;wreg free
  1799  001984                     
  1800                           ;Controlador.c: 175:             MSdelay(2000);
  1801  001984  0E07               	movlw	7
  1802  001986  6E02               	movwf	(MSdelay@val+1)^0,c
  1803  001988  0ED0               	movlw	208
  1804  00198A  6E01               	movwf	MSdelay@val^0,c
  1805  00198C  ECC2  F012         	call	_MSdelay	;wreg free
  1806                           
  1807                           ;Controlador.c: 177:         } else {
  1808  001990  EF0A  F00D         	goto	l3427
  1809  001994                     l3411:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;Controlador.c: 178:             LCD_String_xy(0, 0, "ERROR HORA ");
  1813  001994  0E00               	movlw	0
  1814  001996  6E0A               	movwf	LCD_String_xy@pos^0,c
  1815  001998  0E01               	movlw	low STR_1
  1816  00199A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1817  00199C  0E08               	movlw	high STR_1
  1818  00199E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1819  0019A0  0E00               	movlw	0
  1820  0019A2  EC70  F013         	call	_LCD_String_xy
  1821                           
  1822                           ;Controlador.c: 179:             LCD_String_xy(1, 0, "DIURNA");
  1823  0019A6  0E00               	movlw	0
  1824  0019A8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1825  0019AA  0E1D               	movlw	low STR_2
  1826  0019AC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1827  0019AE  0E08               	movlw	high STR_2
  1828  0019B0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1829  0019B2  0E01               	movlw	1
  1830  0019B4  EC70  F013         	call	_LCD_String_xy
  1831  0019B8                     
  1832                           ;Controlador.c: 180:             char buffer_TX[] = "La hora nocturna empieza a las 18:0
      +                          0\r";
  1833  0019B8  EE23  F000         	lfsr	2,main@F3571
  1834  0019BC  EE10  F094         	lfsr	1,main@buffer_TX_754
  1835  0019C0  0E25               	movlw	37
  1836  0019C2                     u3141:
  1837  0019C2  CFDB FFE3          	movff	plusw2,plusw1
  1838  0019C6  06E8               	decf	wreg,f,c
  1839  0019C8  E2FC               	bc	u3141
  1840  0019CA                     
  1841                           ;Controlador.c: 181:             for (int i = 0; i < 37; i++) {
  1842  0019CA  0E00               	movlw	0
  1843  0019CC  0100               	movlb	0	; () banked
  1844  0019CE  6FE1               	movwf	(main@i_755+1)& (0+255),b
  1845  0019D0  0E00               	movlw	0
  1846  0019D2  6FE0               	movwf	main@i_755& (0+255),b
  1847  0019D4                     l309:
  1848                           
  1849                           ;Controlador.c: 183:                 while (!TXSTAbits.TRMT) {
  1850  0019D4  A2AC               	btfss	172,1,c	;volatile
  1851  0019D6  EFEF  F00C         	goto	u3151
  1852  0019DA  EFF1  F00C         	goto	u3150
  1853  0019DE                     u3151:
  1854  0019DE  EFEA  F00C         	goto	l309
  1855  0019E2                     u3150:
  1856  0019E2                     
  1857                           ;Controlador.c: 186:                 TXREG = buffer_TX[i];
  1858  0019E2  0E94               	movlw	low main@buffer_TX_754
  1859  0019E4  0100               	movlb	0	; () banked
  1860  0019E6  25E0               	addwf	main@i_755& (0+255),w,b
  1861  0019E8  6ED9               	movwf	fsr2l,c
  1862  0019EA  0E00               	movlw	high main@buffer_TX_754
  1863  0019EC  21E1               	addwfc	(main@i_755+1)& (0+255),w,b
  1864  0019EE  6EDA               	movwf	fsr2h,c
  1865  0019F0  50DF               	movf	indf2,w,c
  1866  0019F2  6EAD               	movwf	173,c	;volatile
  1867  0019F4                     
  1868                           ; BSR set to: 0
  1869                           ;Controlador.c: 187:             }
  1870  0019F4  4BE0               	infsnz	main@i_755& (0+255),f,b
  1871  0019F6  2BE1               	incf	(main@i_755+1)& (0+255),f,b
  1872  0019F8                     
  1873                           ; BSR set to: 0
  1874  0019F8  BFE1               	btfsc	(main@i_755+1)& (0+255),7,b
  1875  0019FA  EF08  F00D         	goto	u3161
  1876  0019FE  51E1               	movf	(main@i_755+1)& (0+255),w,b
  1877  001A00  E109               	bnz	u3160
  1878  001A02  0E25               	movlw	37
  1879  001A04  5DE0               	subwf	main@i_755& (0+255),w,b
  1880  001A06  A0D8               	btfss	status,0,c
  1881  001A08  EF08  F00D         	goto	u3161
  1882  001A0C  EF0A  F00D         	goto	u3160
  1883  001A10                     u3161:
  1884  001A10  EFEA  F00C         	goto	l309
  1885  001A14                     u3160:
  1886  001A14                     l3427:
  1887                           
  1888                           ;Controlador.c: 189:         MSdelay(2000);
  1889  001A14  0E07               	movlw	7
  1890  001A16  6E02               	movwf	(MSdelay@val+1)^0,c
  1891  001A18  0ED0               	movlw	208
  1892  001A1A  6E01               	movwf	MSdelay@val^0,c
  1893  001A1C  ECC2  F012         	call	_MSdelay	;wreg free
  1894  001A20  EF0B  F00C         	goto	l3341
  1895  001A24  EF00  F000         	goto	start
  1896  001A28                     __end_of_main:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _verificarHora *****************
  1900 ;; Defined at:
  1901 ;;		line 516 in file "Controlador.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    4
  1922 ;; This function calls:
  1923 ;;		_I2C_Stop
  1924 ;;		_LCD_String_xy
  1925 ;;		_MSdelay
  1926 ;;		_RTC_Read_Clock
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text1
  1933  002362                     __ptext1:
  1934                           	callstack 0
  1935  002362                     _verificarHora:
  1936                           	callstack 26
  1937  002362                     
  1938                           ;Controlador.c: 517:     RTC_Read_Clock(0);
  1939  002362  0E00               	movlw	0
  1940  002364  EC0B  F013         	call	_RTC_Read_Clock
  1941  002368                     
  1942                           ;Controlador.c: 518:     I2C_Stop();
  1943  002368  ECD7  F014         	call	_I2C_Stop	;wreg free
  1944  00236C                     
  1945                           ;Controlador.c: 519:     MSdelay(1000);
  1946  00236C  0E03               	movlw	3
  1947  00236E  6E02               	movwf	(MSdelay@val+1)^0,c
  1948  002370  0EE8               	movlw	232
  1949  002372  6E01               	movwf	MSdelay@val^0,c
  1950  002374  ECC2  F012         	call	_MSdelay	;wreg free
  1951  002378                     
  1952                           ;Controlador.c: 520:     if (hour & (1 << Clock_type)) {
  1953  002378  0100               	movlb	0	; () banked
  1954  00237A  ADF0               	btfss	_hour& (0+255),6,b
  1955  00237C  EFC2  F011         	goto	u2561
  1956  002380  EFC4  F011         	goto	u2560
  1957  002384                     u2561:
  1958  002384  EFDF  F011         	goto	l472
  1959  002388                     u2560:
  1960  002388                     
  1961                           ; BSR set to: 0
  1962                           ;Controlador.c: 521:         if (hour & (1 << AM_PM)) {
  1963  002388  ABF0               	btfss	_hour& (0+255),5,b
  1964  00238A  EFC9  F011         	goto	u2571
  1965  00238E  EFCB  F011         	goto	u2570
  1966  002392                     u2571:
  1967  002392  EFD6  F011         	goto	l2967
  1968  002396                     u2570:
  1969  002396                     
  1970                           ; BSR set to: 0
  1971                           ;Controlador.c: 522:             LCD_String_xy(1, 14, "PM");
  1972  002396  0E0E               	movlw	14
  1973  002398  6E0A               	movwf	LCD_String_xy@pos^0,c
  1974  00239A  0E56               	movlw	low STR_15
  1975  00239C  6E0B               	movwf	LCD_String_xy@msg^0,c
  1976  00239E  0E08               	movlw	high STR_15
  1977  0023A0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1978  0023A2  0E01               	movlw	1
  1979  0023A4  EC70  F013         	call	_LCD_String_xy
  1980                           
  1981                           ;Controlador.c: 523:         } else {
  1982  0023A8  EFDF  F011         	goto	l472
  1983  0023AC                     l2967:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;Controlador.c: 524:             LCD_String_xy(1, 14, "AM");
  1987  0023AC  0E0E               	movlw	14
  1988  0023AE  6E0A               	movwf	LCD_String_xy@pos^0,c
  1989  0023B0  0E53               	movlw	low STR_16
  1990  0023B2  6E0B               	movwf	LCD_String_xy@msg^0,c
  1991  0023B4  0E08               	movlw	high STR_16
  1992  0023B6  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1993  0023B8  0E01               	movlw	1
  1994  0023BA  EC70  F013         	call	_LCD_String_xy
  1995  0023BE                     l472:
  1996  0023BE  0012               	return		;funcret
  1997  0023C0                     __end_of_verificarHora:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _offLEDS *****************
  2001 ;; Defined at:
  2002 ;;		line 229 in file "Controlador.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  i               2   15[COMRAM] int 
  2007 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2017 ;;      Params:         0       0       0       0       0       0       0       0       0
  2018 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2020 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2021 ;;Total ram usage:       17 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text2
  2031  002302                     __ptext2:
  2032                           	callstack 0
  2033  002302                     _offLEDS:
  2034                           	callstack 30
  2035  002302                     
  2036                           ;Controlador.c: 230:     PORTCbits.RC5 = 0;
  2037  002302  9A82               	bcf	130,5,c	;volatile
  2038                           
  2039                           ;Controlador.c: 231:     PORTCbits.RC4 = 0;
  2040  002304  9882               	bcf	130,4,c	;volatile
  2041                           
  2042                           ;Controlador.c: 232:     PORTAbits.RA5 = 0;
  2043  002306  9A80               	bcf	128,5,c	;volatile
  2044  002308                     
  2045                           ;Controlador.c: 234:     char buffer_TX[] = "Apagando LEDS\r";
  2046  002308  EE22  F0A6         	lfsr	2,offLEDS@F3580
  2047  00230C  EE10  F001         	lfsr	1,offLEDS@buffer_TX
  2048  002310  0E0E               	movlw	14
  2049  002312                     u3021:
  2050  002312  CFDB FFE3          	movff	plusw2,plusw1
  2051  002316  06E8               	decf	wreg,f,c
  2052  002318  E2FC               	bc	u3021
  2053  00231A                     
  2054                           ;Controlador.c: 235:     for (int i = 0; i < 15; i++) {
  2055  00231A  0E00               	movlw	0
  2056  00231C  6E11               	movwf	(offLEDS@i+1)^0,c
  2057  00231E  0E00               	movlw	0
  2058  002320  6E10               	movwf	offLEDS@i^0,c
  2059  002322                     l349:
  2060                           
  2061                           ;Controlador.c: 237:         while (!TXSTAbits.TRMT) {
  2062  002322  A2AC               	btfss	172,1,c	;volatile
  2063  002324  EF96  F011         	goto	u3031
  2064  002328  EF98  F011         	goto	u3030
  2065  00232C                     u3031:
  2066  00232C  EF91  F011         	goto	l349
  2067  002330                     u3030:
  2068  002330                     
  2069                           ;Controlador.c: 240:         TXREG = buffer_TX[i];
  2070  002330  0E01               	movlw	low offLEDS@buffer_TX
  2071  002332  2410               	addwf	offLEDS@i^0,w,c
  2072  002334  6ED9               	movwf	fsr2l,c
  2073  002336  0E00               	movlw	high offLEDS@buffer_TX
  2074  002338  2011               	addwfc	(offLEDS@i+1)^0,w,c
  2075  00233A  6EDA               	movwf	fsr2h,c
  2076  00233C  50DF               	movf	indf2,w,c
  2077  00233E  6EAD               	movwf	173,c	;volatile
  2078  002340                     
  2079                           ;Controlador.c: 241:     }
  2080  002340  4A10               	infsnz	offLEDS@i^0,f,c
  2081  002342  2A11               	incf	(offLEDS@i+1)^0,f,c
  2082  002344  BE11               	btfsc	(offLEDS@i+1)^0,7,c
  2083  002346  EFAE  F011         	goto	u3041
  2084  00234A  5011               	movf	(offLEDS@i+1)^0,w,c
  2085  00234C  E109               	bnz	u3040
  2086  00234E  0E0F               	movlw	15
  2087  002350  5C10               	subwf	offLEDS@i^0,w,c
  2088  002352  A0D8               	btfss	status,0,c
  2089  002354  EFAE  F011         	goto	u3041
  2090  002358  EFB0  F011         	goto	u3040
  2091  00235C                     u3041:
  2092  00235C  EF91  F011         	goto	l349
  2093  002360                     u3040:
  2094  002360  0012               	return		;funcret
  2095  002362                     __end_of_offLEDS:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _offBombillas *****************
  2099 ;; Defined at:
  2100 ;;		line 272 in file "Controlador.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  i               2   21[COMRAM] int 
  2105 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0
  2116 ;;      Locals:        23       0       0       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2118 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2119 ;;Total ram usage:       23 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text3
  2129  00223C                     __ptext3:
  2130                           	callstack 0
  2131  00223C                     _offBombillas:
  2132                           	callstack 30
  2133  00223C                     
  2134                           ;Controlador.c: 273:     PORTAbits.RA0 = 0;
  2135  00223C  9080               	bcf	128,0,c	;volatile
  2136                           
  2137                           ;Controlador.c: 274:     PORTAbits.RA1 = 0;
  2138  00223E  9280               	bcf	128,1,c	;volatile
  2139                           
  2140                           ;Controlador.c: 275:     PORTAbits.RA2 = 0;
  2141  002240  9480               	bcf	128,2,c	;volatile
  2142                           
  2143                           ;Controlador.c: 276:     PORTAbits.RA3 = 0;
  2144  002242  9680               	bcf	128,3,c	;volatile
  2145                           
  2146                           ;Controlador.c: 277:     PORTAbits.RA4 = 0;
  2147  002244  9880               	bcf	128,4,c	;volatile
  2148  002246                     
  2149                           ;Controlador.c: 278:     char buffer_TX[] = "Bombillas Apagadas \r";
  2150  002246  EE22  F06B         	lfsr	2,offBombillas@F3590
  2151  00224A  EE10  F001         	lfsr	1,offBombillas@buffer_TX
  2152  00224E  0E14               	movlw	20
  2153  002250                     u2991:
  2154  002250  CFDB FFE3          	movff	plusw2,plusw1
  2155  002254  06E8               	decf	wreg,f,c
  2156  002256  E2FC               	bc	u2991
  2157  002258                     
  2158                           ;Controlador.c: 279:     for (int i = 0; i < 20; i++) {
  2159  002258  0E00               	movlw	0
  2160  00225A  6E17               	movwf	(offBombillas@i+1)^0,c
  2161  00225C  0E00               	movlw	0
  2162  00225E  6E16               	movwf	offBombillas@i^0,c
  2163  002260                     l373:
  2164                           
  2165                           ;Controlador.c: 281:         while (!TXSTAbits.TRMT) {
  2166  002260  A2AC               	btfss	172,1,c	;volatile
  2167  002262  EF35  F011         	goto	u3001
  2168  002266  EF37  F011         	goto	u3000
  2169  00226A                     u3001:
  2170  00226A  EF30  F011         	goto	l373
  2171  00226E                     u3000:
  2172  00226E                     
  2173                           ;Controlador.c: 284:         TXREG = buffer_TX[i];
  2174  00226E  0E01               	movlw	low offBombillas@buffer_TX
  2175  002270  2416               	addwf	offBombillas@i^0,w,c
  2176  002272  6ED9               	movwf	fsr2l,c
  2177  002274  0E00               	movlw	high offBombillas@buffer_TX
  2178  002276  2017               	addwfc	(offBombillas@i+1)^0,w,c
  2179  002278  6EDA               	movwf	fsr2h,c
  2180  00227A  50DF               	movf	indf2,w,c
  2181  00227C  6EAD               	movwf	173,c	;volatile
  2182  00227E                     
  2183                           ;Controlador.c: 285:     }
  2184  00227E  4A16               	infsnz	offBombillas@i^0,f,c
  2185  002280  2A17               	incf	(offBombillas@i+1)^0,f,c
  2186  002282  BE17               	btfsc	(offBombillas@i+1)^0,7,c
  2187  002284  EF4D  F011         	goto	u3011
  2188  002288  5017               	movf	(offBombillas@i+1)^0,w,c
  2189  00228A  E109               	bnz	u3010
  2190  00228C  0E14               	movlw	20
  2191  00228E  5C16               	subwf	offBombillas@i^0,w,c
  2192  002290  A0D8               	btfss	status,0,c
  2193  002292  EF4D  F011         	goto	u3011
  2194  002296  EF4F  F011         	goto	u3010
  2195  00229A                     u3011:
  2196  00229A  EF30  F011         	goto	l373
  2197  00229E                     u3010:
  2198  00229E  0012               	return		;funcret
  2199  0022A0                     __end_of_offBombillas:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _mostrarFechaHora *****************
  2203 ;; Defined at:
  2204 ;;		line 438 in file "Controlador.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  i               2   50[BANK0 ] int 
  2209 ;;  buffer_TX      26   24[BANK0 ] unsigned char [26]
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2221 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2222 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2223 ;;Total ram usage:       30 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    8
  2226 ;; This function calls:
  2227 ;;		_I2C_Stop
  2228 ;;		_LCD_Init
  2229 ;;		_LCD_String
  2230 ;;		_LCD_String_xy
  2231 ;;		_MSdelay
  2232 ;;		_RTC_Read_Calendar
  2233 ;;		_RTC_Read_Clock
  2234 ;;		_sprintf
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text4
  2241  000C72                     __ptext4:
  2242                           	callstack 0
  2243  000C72                     _mostrarFechaHora:
  2244                           	callstack 22
  2245  000C72                     
  2246                           ;Controlador.c: 439:     LCD_Init();
  2247  000C72  EC4C  F014         	call	_LCD_Init	;wreg free
  2248                           
  2249                           ;Controlador.c: 440:     RTC_Read_Clock(0);
  2250  000C76  0E00               	movlw	0
  2251  000C78  EC0B  F013         	call	_RTC_Read_Clock
  2252  000C7C                     
  2253                           ;Controlador.c: 441:     I2C_Stop();
  2254  000C7C  ECD7  F014         	call	_I2C_Stop	;wreg free
  2255  000C80                     
  2256                           ;Controlador.c: 442:     MSdelay(1000);
  2257  000C80  0E03               	movlw	3
  2258  000C82  6E02               	movwf	(MSdelay@val+1)^0,c
  2259  000C84  0EE8               	movlw	232
  2260  000C86  6E01               	movwf	MSdelay@val^0,c
  2261  000C88  ECC2  F012         	call	_MSdelay	;wreg free
  2262  000C8C                     
  2263                           ;Controlador.c: 443:     if (hour & (1 << Clock_type)) {
  2264  000C8C  0100               	movlb	0	; () banked
  2265  000C8E  ADF0               	btfss	_hour& (0+255),6,b
  2266  000C90  EF4C  F006         	goto	u2941
  2267  000C94  EF4E  F006         	goto	u2940
  2268  000C98                     u2941:
  2269  000C98  EFB1  F006         	goto	l3207
  2270  000C9C                     u2940:
  2271  000C9C                     
  2272                           ; BSR set to: 0
  2273                           ;Controlador.c: 445:         if (hour & (1 << AM_PM)) {
  2274  000C9C  ABF0               	btfss	_hour& (0+255),5,b
  2275  000C9E  EF53  F006         	goto	u2951
  2276  000CA2  EF55  F006         	goto	u2950
  2277  000CA6                     u2951:
  2278  000CA6  EF60  F006         	goto	l3191
  2279  000CAA                     u2950:
  2280  000CAA                     
  2281                           ; BSR set to: 0
  2282                           ;Controlador.c: 446:             LCD_String_xy(1, 14, "PM");
  2283  000CAA  0E0E               	movlw	14
  2284  000CAC  6E0A               	movwf	LCD_String_xy@pos^0,c
  2285  000CAE  0E56               	movlw	low STR_15
  2286  000CB0  6E0B               	movwf	LCD_String_xy@msg^0,c
  2287  000CB2  0E08               	movlw	high STR_15
  2288  000CB4  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2289  000CB6  0E01               	movlw	1
  2290  000CB8  EC70  F013         	call	_LCD_String_xy
  2291                           
  2292                           ;Controlador.c: 447:         } else {
  2293  000CBC  EF69  F006         	goto	l3193
  2294  000CC0                     l3191:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;Controlador.c: 448:             LCD_String_xy(1, 14, "AM");
  2298  000CC0  0E0E               	movlw	14
  2299  000CC2  6E0A               	movwf	LCD_String_xy@pos^0,c
  2300  000CC4  0E53               	movlw	low STR_16
  2301  000CC6  6E0B               	movwf	LCD_String_xy@msg^0,c
  2302  000CC8  0E08               	movlw	high STR_16
  2303  000CCA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2304  000CCC  0E01               	movlw	1
  2305  000CCE  EC70  F013         	call	_LCD_String_xy
  2306  000CD2                     l3193:
  2307                           
  2308                           ;Controlador.c: 451:         hour = hour & (0x1f);
  2309  000CD2  0E1F               	movlw	31
  2310  000CD4  0100               	movlb	0	; () banked
  2311  000CD6  15F0               	andwf	_hour& (0+255),w,b
  2312  000CD8  6FF0               	movwf	_hour& (0+255),b
  2313  000CDA  6BF1               	clrf	(_hour+1)& (0+255),b
  2314  000CDC                     
  2315                           ; BSR set to: 0
  2316                           ;Controlador.c: 452:         sprintf(secs, "%x ", sec);
  2317  000CDC  0EBE               	movlw	low _secs
  2318  000CDE  6F66               	movwf	sprintf@s& (0+255),b
  2319  000CE0  0E01               	movlw	high _secs
  2320  000CE2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2321  000CE4  0E2F               	movlw	low STR_17
  2322  000CE6  6F68               	movwf	sprintf@fmt& (0+255),b
  2323  000CE8  0E08               	movlw	high STR_17
  2324  000CEA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2325  000CEC  C0F4  F06A         	movff	_sec,?_sprintf+4
  2326  000CF0  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2327  000CF4  EC99  F012         	call	_sprintf	;wreg free
  2328  000CF8                     
  2329                           ;Controlador.c: 453:         sprintf(mins, "%x:", min);
  2330  000CF8  0EB4               	movlw	low _mins
  2331  000CFA  0100               	movlb	0	; () banked
  2332  000CFC  6F66               	movwf	sprintf@s& (0+255),b
  2333  000CFE  0E01               	movlw	high _mins
  2334  000D00  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2335  000D02  0E19               	movlw	low (STR_19+4)
  2336  000D04  6F68               	movwf	sprintf@fmt& (0+255),b
  2337  000D06  0E08               	movlw	high (STR_19+4)
  2338  000D08  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2339  000D0A  C0F2  F06A         	movff	_min,?_sprintf+4
  2340  000D0E  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2341  000D12  EC99  F012         	call	_sprintf	;wreg free
  2342  000D16                     
  2343                           ;Controlador.c: 454:         sprintf(hours, "Tim:%x:", hour);
  2344  000D16  0EAA               	movlw	low _hours
  2345  000D18  0100               	movlb	0	; () banked
  2346  000D1A  6F66               	movwf	sprintf@s& (0+255),b
  2347  000D1C  0E01               	movlw	high _hours
  2348  000D1E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2349  000D20  0E15               	movlw	low STR_19
  2350  000D22  6F68               	movwf	sprintf@fmt& (0+255),b
  2351  000D24  0E08               	movlw	high STR_19
  2352  000D26  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2353  000D28  C0F0  F06A         	movff	_hour,?_sprintf+4
  2354  000D2C  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2355  000D30  EC99  F012         	call	_sprintf	;wreg free
  2356  000D34                     
  2357                           ;Controlador.c: 455:         LCD_String_xy(0, 0, hours);
  2358  000D34  0E00               	movlw	0
  2359  000D36  6E0A               	movwf	LCD_String_xy@pos^0,c
  2360  000D38  0EAA               	movlw	low _hours
  2361  000D3A  6E0B               	movwf	LCD_String_xy@msg^0,c
  2362  000D3C  0E01               	movlw	high _hours
  2363  000D3E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2364  000D40  0E00               	movlw	0
  2365  000D42  EC70  F013         	call	_LCD_String_xy
  2366  000D46                     l3203:
  2367                           
  2368                           ;Controlador.c: 456:         LCD_String(mins);
  2369  000D46  0EB4               	movlw	low _mins
  2370  000D48  6E08               	movwf	LCD_String@msg^0,c
  2371  000D4A  0E01               	movlw	high _mins
  2372  000D4C  6E09               	movwf	(LCD_String@msg+1)^0,c
  2373  000D4E  EC0F  F012         	call	_LCD_String	;wreg free
  2374  000D52                     
  2375                           ;Controlador.c: 457:         LCD_String(secs);
  2376  000D52  0EBE               	movlw	low _secs
  2377  000D54  6E08               	movwf	LCD_String@msg^0,c
  2378  000D56  0E01               	movlw	high _secs
  2379  000D58  6E09               	movwf	(LCD_String@msg+1)^0,c
  2380  000D5A  EC0F  F012         	call	_LCD_String	;wreg free
  2381                           
  2382                           ;Controlador.c: 458:     } else {
  2383  000D5E  EFEC  F006         	goto	l3221
  2384  000D62                     l3207:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;Controlador.c: 460:         hour = hour & (0x3f);
  2388  000D62  0E3F               	movlw	63
  2389  000D64  15F0               	andwf	_hour& (0+255),w,b
  2390  000D66  6FF0               	movwf	_hour& (0+255),b
  2391  000D68  6BF1               	clrf	(_hour+1)& (0+255),b
  2392  000D6A                     
  2393                           ; BSR set to: 0
  2394                           ;Controlador.c: 461:         sprintf(secs, "%x ", sec);
  2395  000D6A  0EBE               	movlw	low _secs
  2396  000D6C  6F66               	movwf	sprintf@s& (0+255),b
  2397  000D6E  0E01               	movlw	high _secs
  2398  000D70  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2399  000D72  0E2F               	movlw	low STR_17
  2400  000D74  6F68               	movwf	sprintf@fmt& (0+255),b
  2401  000D76  0E08               	movlw	high STR_17
  2402  000D78  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2403  000D7A  C0F4  F06A         	movff	_sec,?_sprintf+4
  2404  000D7E  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2405  000D82  EC99  F012         	call	_sprintf	;wreg free
  2406  000D86                     
  2407                           ;Controlador.c: 462:         sprintf(mins, "%x:", min);
  2408  000D86  0EB4               	movlw	low _mins
  2409  000D88  0100               	movlb	0	; () banked
  2410  000D8A  6F66               	movwf	sprintf@s& (0+255),b
  2411  000D8C  0E01               	movlw	high _mins
  2412  000D8E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2413  000D90  0E19               	movlw	low (STR_19+4)
  2414  000D92  6F68               	movwf	sprintf@fmt& (0+255),b
  2415  000D94  0E08               	movlw	high (STR_19+4)
  2416  000D96  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2417  000D98  C0F2  F06A         	movff	_min,?_sprintf+4
  2418  000D9C  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2419  000DA0  EC99  F012         	call	_sprintf	;wreg free
  2420  000DA4                     
  2421                           ;Controlador.c: 463:         sprintf(hours, "Tim:%x:", hour);
  2422  000DA4  0EAA               	movlw	low _hours
  2423  000DA6  0100               	movlb	0	; () banked
  2424  000DA8  6F66               	movwf	sprintf@s& (0+255),b
  2425  000DAA  0E01               	movlw	high _hours
  2426  000DAC  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2427  000DAE  0E15               	movlw	low STR_19
  2428  000DB0  6F68               	movwf	sprintf@fmt& (0+255),b
  2429  000DB2  0E08               	movlw	high STR_19
  2430  000DB4  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2431  000DB6  C0F0  F06A         	movff	_hour,?_sprintf+4
  2432  000DBA  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2433  000DBE  EC99  F012         	call	_sprintf	;wreg free
  2434  000DC2                     
  2435                           ;Controlador.c: 464:         LCD_String_xy(0, 0, hours);
  2436  000DC2  0E00               	movlw	0
  2437  000DC4  6E0A               	movwf	LCD_String_xy@pos^0,c
  2438  000DC6  0EAA               	movlw	low _hours
  2439  000DC8  6E0B               	movwf	LCD_String_xy@msg^0,c
  2440  000DCA  0E01               	movlw	high _hours
  2441  000DCC  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2442  000DCE  0E00               	movlw	0
  2443  000DD0  EC70  F013         	call	_LCD_String_xy
  2444  000DD4  EFA3  F006         	goto	l3203
  2445  000DD8                     l3221:
  2446                           
  2447                           ;Controlador.c: 469:     RTC_Read_Calendar(3);
  2448  000DD8  0E03               	movlw	3
  2449  000DDA  EC6C  F012         	call	_RTC_Read_Calendar
  2450  000DDE                     
  2451                           ;Controlador.c: 470:     I2C_Stop();
  2452  000DDE  ECD7  F014         	call	_I2C_Stop	;wreg free
  2453  000DE2                     
  2454                           ;Controlador.c: 471:     sprintf(date, "Cal %x-", Date);
  2455  000DE2  0EF1               	movlw	low _date
  2456  000DE4  0100               	movlb	0	; () banked
  2457  000DE6  6F66               	movwf	sprintf@s& (0+255),b
  2458  000DE8  0E02               	movlw	high _date
  2459  000DEA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2460  000DEC  0E0D               	movlw	low STR_23
  2461  000DEE  6F68               	movwf	sprintf@fmt& (0+255),b
  2462  000DF0  0E08               	movlw	high STR_23
  2463  000DF2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2464  000DF4  C0EC  F06A         	movff	_Date,?_sprintf+4
  2465  000DF8  C0ED  F06B         	movff	_Date+1,?_sprintf+5
  2466  000DFC  EC99  F012         	call	_sprintf	;wreg free
  2467  000E00                     
  2468                           ;Controlador.c: 472:     sprintf(month, "%x-", Month);
  2469  000E00  0EE7               	movlw	low _month
  2470  000E02  0100               	movlb	0	; () banked
  2471  000E04  6F66               	movwf	sprintf@s& (0+255),b
  2472  000E06  0E02               	movlw	high _month
  2473  000E08  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2474  000E0A  0E11               	movlw	low (STR_23+4)
  2475  000E0C  6F68               	movwf	sprintf@fmt& (0+255),b
  2476  000E0E  0E08               	movlw	high (STR_23+4)
  2477  000E10  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2478  000E12  C0EA  F06A         	movff	_Month,?_sprintf+4
  2479  000E16  C0EB  F06B         	movff	_Month+1,?_sprintf+5
  2480  000E1A  EC99  F012         	call	_sprintf	;wreg free
  2481  000E1E                     
  2482                           ;Controlador.c: 473:     sprintf(year, "%x ", Year);
  2483  000E1E  0EDD               	movlw	low _year
  2484  000E20  0100               	movlb	0	; () banked
  2485  000E22  6F66               	movwf	sprintf@s& (0+255),b
  2486  000E24  0E02               	movlw	high _year
  2487  000E26  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2488  000E28  0E2F               	movlw	low STR_17
  2489  000E2A  6F68               	movwf	sprintf@fmt& (0+255),b
  2490  000E2C  0E08               	movlw	high STR_17
  2491  000E2E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2492  000E30  C0E8  F06A         	movff	_Year,?_sprintf+4
  2493  000E34  C0E9  F06B         	movff	_Year+1,?_sprintf+5
  2494  000E38  EC99  F012         	call	_sprintf	;wreg free
  2495  000E3C                     
  2496                           ;Controlador.c: 474:     LCD_String_xy(2, 0, date);
  2497  000E3C  0E00               	movlw	0
  2498  000E3E  6E0A               	movwf	LCD_String_xy@pos^0,c
  2499  000E40  0EF1               	movlw	low _date
  2500  000E42  6E0B               	movwf	LCD_String_xy@msg^0,c
  2501  000E44  0E02               	movlw	high _date
  2502  000E46  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2503  000E48  0E02               	movlw	2
  2504  000E4A  EC70  F013         	call	_LCD_String_xy
  2505  000E4E                     
  2506                           ;Controlador.c: 475:     LCD_String(month);
  2507  000E4E  0EE7               	movlw	low _month
  2508  000E50  6E08               	movwf	LCD_String@msg^0,c
  2509  000E52  0E02               	movlw	high _month
  2510  000E54  6E09               	movwf	(LCD_String@msg+1)^0,c
  2511  000E56  EC0F  F012         	call	_LCD_String	;wreg free
  2512  000E5A                     
  2513                           ;Controlador.c: 476:     LCD_String(year);
  2514  000E5A  0EDD               	movlw	low _year
  2515  000E5C  6E08               	movwf	LCD_String@msg^0,c
  2516  000E5E  0E02               	movlw	high _year
  2517  000E60  6E09               	movwf	(LCD_String@msg+1)^0,c
  2518  000E62  EC0F  F012         	call	_LCD_String	;wreg free
  2519                           
  2520                           ;Controlador.c: 479:     switch (days[Day]) {
  2521  000E66  EF6D  F007         	goto	l3253
  2522  000E6A                     l3237:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;Controlador.c: 481:             LCD_String("Sun");
  2526  000E6A  0E47               	movlw	low STR_26
  2527  000E6C  6E08               	movwf	LCD_String@msg^0,c
  2528  000E6E  0E08               	movlw	high STR_26
  2529  000E70  6E09               	movwf	(LCD_String@msg+1)^0,c
  2530  000E72  EC0F  F012         	call	_LCD_String	;wreg free
  2531                           
  2532                           ;Controlador.c: 482:             break;
  2533  000E76  EF9D  F007         	goto	l3255
  2534  000E7A                     l3239:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;Controlador.c: 484:             LCD_String("Mon");
  2538  000E7A  0E43               	movlw	low STR_27
  2539  000E7C  6E08               	movwf	LCD_String@msg^0,c
  2540  000E7E  0E08               	movlw	high STR_27
  2541  000E80  6E09               	movwf	(LCD_String@msg+1)^0,c
  2542  000E82  EC0F  F012         	call	_LCD_String	;wreg free
  2543                           
  2544                           ;Controlador.c: 485:             break;
  2545  000E86  EF9D  F007         	goto	l3255
  2546  000E8A                     l3241:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;Controlador.c: 487:             LCD_String("Tue");
  2550  000E8A  0E3B               	movlw	low STR_28
  2551  000E8C  6E08               	movwf	LCD_String@msg^0,c
  2552  000E8E  0E08               	movlw	high STR_28
  2553  000E90  6E09               	movwf	(LCD_String@msg+1)^0,c
  2554  000E92  EC0F  F012         	call	_LCD_String	;wreg free
  2555                           
  2556                           ;Controlador.c: 488:             break;
  2557  000E96  EF9D  F007         	goto	l3255
  2558  000E9A                     l3243:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;Controlador.c: 490:             LCD_String("Wed");
  2562  000E9A  0E37               	movlw	low STR_29
  2563  000E9C  6E08               	movwf	LCD_String@msg^0,c
  2564  000E9E  0E08               	movlw	high STR_29
  2565  000EA0  6E09               	movwf	(LCD_String@msg+1)^0,c
  2566  000EA2  EC0F  F012         	call	_LCD_String	;wreg free
  2567                           
  2568                           ;Controlador.c: 491:             break;
  2569  000EA6  EF9D  F007         	goto	l3255
  2570  000EAA                     l3245:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;Controlador.c: 493:             LCD_String("Thu");
  2574  000EAA  0E4F               	movlw	low STR_30
  2575  000EAC  6E08               	movwf	LCD_String@msg^0,c
  2576  000EAE  0E08               	movlw	high STR_30
  2577  000EB0  6E09               	movwf	(LCD_String@msg+1)^0,c
  2578  000EB2  EC0F  F012         	call	_LCD_String	;wreg free
  2579                           
  2580                           ;Controlador.c: 494:             break;
  2581  000EB6  EF9D  F007         	goto	l3255
  2582  000EBA                     l3247:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;Controlador.c: 496:             LCD_String("Fri");
  2586  000EBA  0E3F               	movlw	low STR_31
  2587  000EBC  6E08               	movwf	LCD_String@msg^0,c
  2588  000EBE  0E08               	movlw	high STR_31
  2589  000EC0  6E09               	movwf	(LCD_String@msg+1)^0,c
  2590  000EC2  EC0F  F012         	call	_LCD_String	;wreg free
  2591                           
  2592                           ;Controlador.c: 497:             break;
  2593  000EC6  EF9D  F007         	goto	l3255
  2594  000ECA                     l3249:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;Controlador.c: 499:             LCD_String("Sat");
  2598  000ECA  0E4B               	movlw	low STR_32
  2599  000ECC  6E08               	movwf	LCD_String@msg^0,c
  2600  000ECE  0E08               	movlw	high STR_32
  2601  000ED0  6E09               	movwf	(LCD_String@msg+1)^0,c
  2602  000ED2  EC0F  F012         	call	_LCD_String	;wreg free
  2603                           
  2604                           ;Controlador.c: 500:             break;
  2605  000ED6  EF9D  F007         	goto	l3255
  2606  000EDA                     l3253:
  2607  000EDA  0ED2               	movlw	low _days
  2608  000EDC  0100               	movlb	0	; () banked
  2609  000EDE  25EE               	addwf	_Day& (0+255),w,b
  2610  000EE0  6ED9               	movwf	fsr2l,c
  2611  000EE2  0E01               	movlw	high _days
  2612  000EE4  21EF               	addwfc	(_Day+1)& (0+255),w,b
  2613  000EE6  6EDA               	movwf	fsr2h,c
  2614  000EE8  50DF               	movf	indf2,w,c
  2615  000EEA  6F76               	movwf	??_mostrarFechaHora& (0+255),b
  2616  000EEC  6B77               	clrf	(??_mostrarFechaHora+1)& (0+255),b
  2617                           
  2618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2619                           ; Switch size 1, requested type "simple"
  2620                           ; Number of cases is 1, Range of values is 0 to 0
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte            4     3 (average)
  2624                           ;	Chosen strategy is simple_byte
  2625  000EEE  5177               	movf	(??_mostrarFechaHora+1)& (0+255),w,b
  2626  000EF0  0A00               	xorlw	0	; case 0
  2627  000EF2  B4D8               	btfsc	status,2,c
  2628  000EF4  EF7E  F007         	goto	l3449
  2629  000EF8  EF9D  F007         	goto	l3255
  2630  000EFC                     l3449:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ; Switch size 1, requested type "simple"
  2634                           ; Number of cases is 7, Range of values is 70 to 116
  2635                           ; switch strategies available:
  2636                           ; Name         Instructions Cycles
  2637                           ; simple_byte           22    12 (average)
  2638                           ;	Chosen strategy is simple_byte
  2639  000EFC  5176               	movf	??_mostrarFechaHora& (0+255),w,b
  2640  000EFE  0A46               	xorlw	70	; case 70
  2641  000F00  B4D8               	btfsc	status,2,c
  2642  000F02  EF5D  F007         	goto	l3247
  2643  000F06  0A0B               	xorlw	11	; case 77
  2644  000F08  B4D8               	btfsc	status,2,c
  2645  000F0A  EF3D  F007         	goto	l3239
  2646  000F0E  0A1E               	xorlw	30	; case 83
  2647  000F10  B4D8               	btfsc	status,2,c
  2648  000F12  EF35  F007         	goto	l3237
  2649  000F16  0A07               	xorlw	7	; case 84
  2650  000F18  B4D8               	btfsc	status,2,c
  2651  000F1A  EF45  F007         	goto	l3241
  2652  000F1E  0A03               	xorlw	3	; case 87
  2653  000F20  B4D8               	btfsc	status,2,c
  2654  000F22  EF4D  F007         	goto	l3243
  2655  000F26  0A24               	xorlw	36	; case 115
  2656  000F28  B4D8               	btfsc	status,2,c
  2657  000F2A  EF65  F007         	goto	l3249
  2658  000F2E  0A07               	xorlw	7	; case 116
  2659  000F30  B4D8               	btfsc	status,2,c
  2660  000F32  EF55  F007         	goto	l3245
  2661  000F36  EF9D  F007         	goto	l3255
  2662  000F3A                     l3255:
  2663                           
  2664                           ;Controlador.c: 505:     char buffer_TX[] = "Registrando Hora y Fecha\r";
  2665  000F3A  EE22  F051         	lfsr	2,mostrarFechaHora@F3618
  2666  000F3E  EE10  F078         	lfsr	1,mostrarFechaHora@buffer_TX
  2667  000F42  0E19               	movlw	25
  2668  000F44                     u2961:
  2669  000F44  CFDB FFE3          	movff	plusw2,plusw1
  2670  000F48  06E8               	decf	wreg,f,c
  2671  000F4A  E2FC               	bc	u2961
  2672  000F4C                     
  2673                           ;Controlador.c: 506:     for (int i = 0; i < 25; i++) {
  2674  000F4C  0E00               	movlw	0
  2675  000F4E  0100               	movlb	0	; () banked
  2676  000F50  6F93               	movwf	(mostrarFechaHora@i+1)& (0+255),b
  2677  000F52  0E00               	movlw	0
  2678  000F54  6F92               	movwf	mostrarFechaHora@i& (0+255),b
  2679  000F56                     l463:
  2680                           
  2681                           ;Controlador.c: 508:         while (!TXSTAbits.TRMT) {
  2682  000F56  A2AC               	btfss	172,1,c	;volatile
  2683  000F58  EFB0  F007         	goto	u2971
  2684  000F5C  EFB2  F007         	goto	u2970
  2685  000F60                     u2971:
  2686  000F60  EFAB  F007         	goto	l463
  2687  000F64                     u2970:
  2688  000F64                     
  2689                           ;Controlador.c: 511:         TXREG = buffer_TX[i];
  2690  000F64  0E78               	movlw	low mostrarFechaHora@buffer_TX
  2691  000F66  0100               	movlb	0	; () banked
  2692  000F68  2592               	addwf	mostrarFechaHora@i& (0+255),w,b
  2693  000F6A  6ED9               	movwf	fsr2l,c
  2694  000F6C  0E00               	movlw	high mostrarFechaHora@buffer_TX
  2695  000F6E  2193               	addwfc	(mostrarFechaHora@i+1)& (0+255),w,b
  2696  000F70  6EDA               	movwf	fsr2h,c
  2697  000F72  50DF               	movf	indf2,w,c
  2698  000F74  6EAD               	movwf	173,c	;volatile
  2699  000F76                     
  2700                           ; BSR set to: 0
  2701                           ;Controlador.c: 512:     }
  2702  000F76  4B92               	infsnz	mostrarFechaHora@i& (0+255),f,b
  2703  000F78  2B93               	incf	(mostrarFechaHora@i+1)& (0+255),f,b
  2704  000F7A                     
  2705                           ; BSR set to: 0
  2706  000F7A  BF93               	btfsc	(mostrarFechaHora@i+1)& (0+255),7,b
  2707  000F7C  EFC9  F007         	goto	u2981
  2708  000F80  5193               	movf	(mostrarFechaHora@i+1)& (0+255),w,b
  2709  000F82  E109               	bnz	u2980
  2710  000F84  0E19               	movlw	25
  2711  000F86  5D92               	subwf	mostrarFechaHora@i& (0+255),w,b
  2712  000F88  A0D8               	btfss	status,0,c
  2713  000F8A  EFC9  F007         	goto	u2981
  2714  000F8E  EFCB  F007         	goto	u2980
  2715  000F92                     u2981:
  2716  000F92  EFAB  F007         	goto	l463
  2717  000F96                     u2980:
  2718  000F96                     
  2719                           ; BSR set to: 0
  2720  000F96  0012               	return		;funcret
  2721  000F98                     __end_of_mostrarFechaHora:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _RTC_Read_Clock *****************
  2725 ;; Defined at:
  2726 ;;		line 417 in file "Controlador.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  read_clock_a    1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2742 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    3
  2747 ;; This function calls:
  2748 ;;		_I2C_Read
  2749 ;;		_I2C_Repeated_Start
  2750 ;;		_I2C_Start
  2751 ;;		_I2C_Write
  2752 ;; This function is called by:
  2753 ;;		_mostrarFechaHora
  2754 ;;		_verificarHora
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text5
  2759  002616                     __ptext5:
  2760                           	callstack 0
  2761  002616                     _RTC_Read_Clock:
  2762                           	callstack 26
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;incstack = 0
  2766                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2767  002616  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2768  002618                     
  2769                           ;Controlador.c: 418:     I2C_Start(0xD0);
  2770  002618  0ED0               	movlw	208
  2771  00261A  EC1E  F014         	call	_I2C_Start
  2772                           
  2773                           ;Controlador.c: 419:     I2C_Write(read_clock_address);
  2774  00261E  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2775  002620  EC8D  F014         	call	_I2C_Write
  2776                           
  2777                           ;Controlador.c: 420:     I2C_Repeated_Start(0xD1);
  2778  002624  0ED1               	movlw	209
  2779  002626  EC35  F014         	call	_I2C_Repeated_Start
  2780  00262A                     
  2781                           ;Controlador.c: 421:     sec = I2C_Read(0);
  2782  00262A  0E00               	movlw	0
  2783  00262C  ECAE  F013         	call	_I2C_Read
  2784  002630  6E03               	movwf	??_RTC_Read_Clock^0,c
  2785  002632  5003               	movf	??_RTC_Read_Clock^0,w,c
  2786  002634  0100               	movlb	0	; () banked
  2787  002636  6FF4               	movwf	_sec& (0+255),b
  2788  002638  6BF5               	clrf	(_sec+1)& (0+255),b
  2789  00263A                     
  2790                           ; BSR set to: 0
  2791                           ;Controlador.c: 422:     min = I2C_Read(0);
  2792  00263A  0E00               	movlw	0
  2793  00263C  ECAE  F013         	call	_I2C_Read
  2794  002640  6E03               	movwf	??_RTC_Read_Clock^0,c
  2795  002642  5003               	movf	??_RTC_Read_Clock^0,w,c
  2796  002644  0100               	movlb	0	; () banked
  2797  002646  6FF2               	movwf	_min& (0+255),b
  2798  002648  6BF3               	clrf	(_min+1)& (0+255),b
  2799  00264A                     
  2800                           ; BSR set to: 0
  2801                           ;Controlador.c: 423:     hour = I2C_Read(1);
  2802  00264A  0E01               	movlw	1
  2803  00264C  ECAE  F013         	call	_I2C_Read
  2804  002650  6E03               	movwf	??_RTC_Read_Clock^0,c
  2805  002652  5003               	movf	??_RTC_Read_Clock^0,w,c
  2806  002654  0100               	movlb	0	; () banked
  2807  002656  6FF0               	movwf	_hour& (0+255),b
  2808  002658  6BF1               	clrf	(_hour+1)& (0+255),b
  2809  00265A                     
  2810                           ; BSR set to: 0
  2811  00265A  0012               	return		;funcret
  2812  00265C                     __end_of_RTC_Read_Clock:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _RTC_Read_Calendar *****************
  2816 ;; Defined at:
  2817 ;;		line 427 in file "Controlador.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  read_calenda    1    wreg     unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0
  2832 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2834 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    3
  2838 ;; This function calls:
  2839 ;;		_I2C_Read
  2840 ;;		_I2C_Repeated_Start
  2841 ;;		_I2C_Start
  2842 ;;		_I2C_Stop
  2843 ;;		_I2C_Write
  2844 ;; This function is called by:
  2845 ;;		_mostrarFechaHora
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text6
  2850  0024D8                     __ptext6:
  2851                           	callstack 0
  2852  0024D8                     _RTC_Read_Calendar:
  2853                           	callstack 26
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;incstack = 0
  2857                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2858  0024D8  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2859  0024DA                     
  2860                           ;Controlador.c: 428:     I2C_Start(0xD0);
  2861  0024DA  0ED0               	movlw	208
  2862  0024DC  EC1E  F014         	call	_I2C_Start
  2863                           
  2864                           ;Controlador.c: 429:     I2C_Write(read_calendar_address);
  2865  0024E0  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2866  0024E2  EC8D  F014         	call	_I2C_Write
  2867                           
  2868                           ;Controlador.c: 430:     I2C_Repeated_Start(0xD1);
  2869  0024E6  0ED1               	movlw	209
  2870  0024E8  EC35  F014         	call	_I2C_Repeated_Start
  2871  0024EC                     
  2872                           ;Controlador.c: 431:     Day = I2C_Read(0);
  2873  0024EC  0E00               	movlw	0
  2874  0024EE  ECAE  F013         	call	_I2C_Read
  2875  0024F2  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2876  0024F4  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2877  0024F6  0100               	movlb	0	; () banked
  2878  0024F8  6FEE               	movwf	_Day& (0+255),b
  2879  0024FA  6BEF               	clrf	(_Day+1)& (0+255),b
  2880  0024FC                     
  2881                           ; BSR set to: 0
  2882                           ;Controlador.c: 432:     Date = I2C_Read(0);
  2883  0024FC  0E00               	movlw	0
  2884  0024FE  ECAE  F013         	call	_I2C_Read
  2885  002502  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2886  002504  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2887  002506  0100               	movlb	0	; () banked
  2888  002508  6FEC               	movwf	_Date& (0+255),b
  2889  00250A  6BED               	clrf	(_Date+1)& (0+255),b
  2890  00250C                     
  2891                           ; BSR set to: 0
  2892                           ;Controlador.c: 433:     Month = I2C_Read(0);
  2893  00250C  0E00               	movlw	0
  2894  00250E  ECAE  F013         	call	_I2C_Read
  2895  002512  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2896  002514  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2897  002516  0100               	movlb	0	; () banked
  2898  002518  6FEA               	movwf	_Month& (0+255),b
  2899  00251A  6BEB               	clrf	(_Month+1)& (0+255),b
  2900  00251C                     
  2901                           ; BSR set to: 0
  2902                           ;Controlador.c: 434:     Year = I2C_Read(1);
  2903  00251C  0E01               	movlw	1
  2904  00251E  ECAE  F013         	call	_I2C_Read
  2905  002522  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2906  002524  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2907  002526  0100               	movlb	0	; () banked
  2908  002528  6FE8               	movwf	_Year& (0+255),b
  2909  00252A  6BE9               	clrf	(_Year+1)& (0+255),b
  2910  00252C                     
  2911                           ; BSR set to: 0
  2912                           ;Controlador.c: 435:     I2C_Stop();
  2913  00252C  ECD7  F014         	call	_I2C_Stop	;wreg free
  2914  002530  0012               	return		;funcret
  2915  002532                     __end_of_RTC_Read_Calendar:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _I2C_Stop *****************
  2919 ;; Defined at:
  2920 ;;		line 140 in file "./I2C_Master_File.h"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_RTC_Read_Calendar
  2944 ;;		_mostrarFechaHora
  2945 ;;		_verificarHora
  2946 ;;		_I2C_Start_Wait
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text7
  2951  0029AE                     __ptext7:
  2952                           	callstack 0
  2953  0029AE                     _I2C_Stop:
  2954                           	callstack 29
  2955  0029AE                     
  2956                           ;./I2C_Master_File.h: 142:     PEN = 1;
  2957  0029AE  84C5               	bsf	4037,2,c	;volatile
  2958  0029B0                     l204:
  2959  0029B0  B4C5               	btfsc	4037,2,c	;volatile
  2960  0029B2  EFDD  F014         	goto	u2411
  2961  0029B6  EFDF  F014         	goto	u2410
  2962  0029BA                     u2411:
  2963  0029BA  EFD8  F014         	goto	l204
  2964  0029BE                     u2410:
  2965  0029BE                     
  2966                           ;./I2C_Master_File.h: 144:     if(!SSPSTATbits.P);
  2967  0029BE  50C7               	movf	199,w,c	;volatile
  2968  0029C0  0012               	return		;funcret
  2969  0029C2                     __end_of_I2C_Stop:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _I2C_Start *****************
  2973 ;; Defined at:
  2974 ;;		line 115 in file "./I2C_Master_File.h"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  slave_write_    1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      unsigned char 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2991 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    2
  2995 ;; This function calls:
  2996 ;;		_I2C_Write
  2997 ;; This function is called by:
  2998 ;;		_RTC_Read_Clock
  2999 ;;		_RTC_Read_Calendar
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text8
  3004  00283C                     __ptext8:
  3005                           	callstack 0
  3006  00283C                     _I2C_Start:
  3007                           	callstack 26
  3008                           
  3009                           ;incstack = 0
  3010                           ;I2C_Start@slave_write_address stored from wreg
  3011  00283C  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3012  00283E                     
  3013                           ;./I2C_Master_File.h: 115: char I2C_Start(char slave_write_address);./I2C_Master_File.h:
      +                           116: {;./I2C_Master_File.h: 117:     SSPCON2bits.SEN=1;
  3014  00283E  80C5               	bsf	197,0,c	;volatile
  3015  002840                     l188:
  3016  002840  B0C5               	btfsc	197,0,c	;volatile
  3017  002842  EF25  F014         	goto	u2421
  3018  002846  EF27  F014         	goto	u2420
  3019  00284A                     u2421:
  3020  00284A  EF20  F014         	goto	l188
  3021  00284E                     u2420:
  3022  00284E                     
  3023                           ;./I2C_Master_File.h: 119:  SSPIF=0;
  3024  00284E  969E               	bcf	3998,3,c	;volatile
  3025                           
  3026                           ;./I2C_Master_File.h: 120:     if(!SSPSTATbits.S)
  3027  002850  B6C7               	btfsc	199,3,c	;volatile
  3028  002852  EF2D  F014         	goto	u2431
  3029  002856  EF2F  F014         	goto	u2430
  3030  00285A                     u2431:
  3031  00285A  EF31  F014         	goto	l2823
  3032  00285E                     u2430:
  3033  00285E  EF34  F014         	goto	l192
  3034  002862                     l2823:
  3035                           
  3036                           ;./I2C_Master_File.h: 122:     return (I2C_Write(slave_write_address));;	Return value of
      +                           _I2C_Start is never used
  3037  002862  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3038  002864  EC8D  F014         	call	_I2C_Write
  3039  002868                     l192:
  3040  002868  0012               	return		;funcret
  3041  00286A                     __end_of_I2C_Start:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _I2C_Repeated_Start *****************
  3045 ;; Defined at:
  3046 ;;		line 126 in file "./I2C_Master_File.h"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  slave_read_a    1    wreg     unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0
  3061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        1 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    2
  3067 ;; This function calls:
  3068 ;;		_I2C_Write
  3069 ;; This function is called by:
  3070 ;;		_RTC_Read_Clock
  3071 ;;		_RTC_Read_Calendar
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text9
  3076  00286A                     __ptext9:
  3077                           	callstack 0
  3078  00286A                     _I2C_Repeated_Start:
  3079                           	callstack 26
  3080                           
  3081                           ;incstack = 0
  3082                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3083  00286A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3084  00286C                     
  3085                           ;./I2C_Master_File.h: 126: char I2C_Repeated_Start(char slave_read_address);./I2C_Master
      +                          _File.h: 127: {;./I2C_Master_File.h: 128:     RSEN = 1;
  3086  00286C  82C5               	bsf	4037,1,c	;volatile
  3087  00286E                     l195:
  3088  00286E  B2C5               	btfsc	4037,1,c	;volatile
  3089  002870  EF3C  F014         	goto	u2441
  3090  002874  EF3E  F014         	goto	u2440
  3091  002878                     u2441:
  3092  002878  EF37  F014         	goto	l195
  3093  00287C                     u2440:
  3094  00287C                     
  3095                           ;./I2C_Master_File.h: 130:     SSPIF = 0;
  3096  00287C  969E               	bcf	3998,3,c	;volatile
  3097                           
  3098                           ;./I2C_Master_File.h: 131:  if(!SSPSTATbits.S)
  3099  00287E  B6C7               	btfsc	199,3,c	;volatile
  3100  002880  EF44  F014         	goto	u2451
  3101  002884  EF46  F014         	goto	u2450
  3102  002888                     u2451:
  3103  002888  EF48  F014         	goto	l2831
  3104  00288C                     u2450:
  3105  00288C  EF4B  F014         	goto	l199
  3106  002890                     l2831:
  3107                           
  3108                           ;./I2C_Master_File.h: 133:     I2C_Write(slave_read_address);
  3109  002890  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3110  002892  EC8D  F014         	call	_I2C_Write
  3111  002896                     l199:
  3112  002896  0012               	return		;funcret
  3113  002898                     __end_of_I2C_Repeated_Start:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _I2C_Write *****************
  3117 ;; Defined at:
  3118 ;;		line 148 in file "./I2C_Master_File.h"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  data            1    wreg     unsigned char 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  data            1    0[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      unsigned char 
  3125 ;; Registers used:
  3126 ;;		wreg, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0
  3133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3136 ;;Total ram usage:        1 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    1
  3139 ;; This function calls:
  3140 ;;		_I2C_Ready
  3141 ;; This function is called by:
  3142 ;;		_I2C_Start
  3143 ;;		_I2C_Repeated_Start
  3144 ;;		_RTC_Read_Clock
  3145 ;;		_RTC_Read_Calendar
  3146 ;;		_I2C_Start_Wait
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text10
  3151  00291A                     __ptext10:
  3152                           	callstack 0
  3153  00291A                     _I2C_Write:
  3154                           	callstack 27
  3155                           
  3156                           ;incstack = 0
  3157                           ;I2C_Write@data stored from wreg
  3158  00291A  6E01               	movwf	I2C_Write@data^0,c
  3159  00291C                     
  3160                           ;./I2C_Master_File.h: 148: char I2C_Write(unsigned char data);./I2C_Master_File.h: 149: 
      +                          {;./I2C_Master_File.h: 150:       SSPBUF = data;
  3161  00291C  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3162  002920                     
  3163                           ;./I2C_Master_File.h: 151:       I2C_Ready();
  3164  002920  ECF5  F014         	call	_I2C_Ready	;wreg free
  3165  002924                     
  3166                           ;./I2C_Master_File.h: 152:       if (ACKSTAT)
  3167  002924  ACC5               	btfss	4037,6,c	;volatile
  3168  002926  EF97  F014         	goto	u2291
  3169  00292A  EF99  F014         	goto	u2290
  3170  00292E                     u2291:
  3171  00292E  EF9C  F014         	goto	l2725
  3172  002932                     u2290:
  3173  002932                     
  3174                           ;./I2C_Master_File.h: 153:         return 1;
  3175  002932  0E01               	movlw	1
  3176  002934  EF9D  F014         	goto	l212
  3177  002938                     l2725:
  3178                           
  3179                           ;./I2C_Master_File.h: 155:         return 2;
  3180  002938  0E02               	movlw	2
  3181  00293A                     l212:
  3182  00293A  0012               	return		;funcret
  3183  00293C                     __end_of_I2C_Write:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _I2C_Read *****************
  3187 ;; Defined at:
  3188 ;;		line 59 in file "./I2C_Master_File.h"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  flag            1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  flag            1    0[COMRAM] unsigned char 
  3193 ;;  buffer          1    1[COMRAM] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      unsigned char 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0
  3204 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3206 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    1
  3210 ;; This function calls:
  3211 ;;		_I2C_Ack
  3212 ;;		_I2C_Nack
  3213 ;;		_I2C_Ready
  3214 ;; This function is called by:
  3215 ;;		_RTC_Read_Clock
  3216 ;;		_RTC_Read_Calendar
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text11
  3221  00275C                     __ptext11:
  3222                           	callstack 0
  3223  00275C                     _I2C_Read:
  3224                           	callstack 27
  3225                           
  3226                           ;incstack = 0
  3227                           ;I2C_Read@flag stored from wreg
  3228  00275C  6E01               	movwf	I2C_Read@flag^0,c
  3229  00275E                     
  3230                           ;./I2C_Master_File.h: 59: char I2C_Read(char flag);./I2C_Master_File.h: 61: {;./I2C_Mast
      +                          er_File.h: 62:         char buffer;;./I2C_Master_File.h: 63:         RCEN = 1;
  3231  00275E  86C5               	bsf	4037,3,c	;volatile
  3232  002760                     l160:
  3233  002760  A0C7               	btfss	199,0,c	;volatile
  3234  002762  EFB5  F013         	goto	u2391
  3235  002766  EFB7  F013         	goto	u2390
  3236  00276A                     u2391:
  3237  00276A  EFB0  F013         	goto	l160
  3238  00276E                     u2390:
  3239  00276E                     
  3240                           ;./I2C_Master_File.h: 66:         buffer = SSPBUF;
  3241  00276E  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3242  002772                     
  3243                           ;./I2C_Master_File.h: 68:         if(flag==0)
  3244  002772  5001               	movf	I2C_Read@flag^0,w,c
  3245  002774  A4D8               	btfss	status,2,c
  3246  002776  EFBF  F013         	goto	u2401
  3247  00277A  EFC1  F013         	goto	u2400
  3248  00277E                     u2401:
  3249  00277E  EFC5  F013         	goto	l2811
  3250  002782                     u2400:
  3251  002782                     
  3252                           ;./I2C_Master_File.h: 69:             I2C_Ack();
  3253  002782  ECEB  F014         	call	_I2C_Ack	;wreg free
  3254  002786  EFC7  F013         	goto	l164
  3255  00278A                     l2811:
  3256                           
  3257                           ;./I2C_Master_File.h: 71:             I2C_Nack();
  3258  00278A  ECE1  F014         	call	_I2C_Nack	;wreg free
  3259  00278E                     l164:
  3260                           
  3261                           ;./I2C_Master_File.h: 72:         I2C_Ready();
  3262  00278E  ECF5  F014         	call	_I2C_Ready	;wreg free
  3263  002792                     
  3264                           ;./I2C_Master_File.h: 73:         return(buffer);
  3265  002792  5002               	movf	I2C_Read@buffer^0,w,c
  3266  002794  0012               	return		;funcret
  3267  002796                     __end_of_I2C_Read:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _I2C_Ready *****************
  3271 ;; Defined at:
  3272 ;;		line 90 in file "./I2C_Master_File.h"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		None
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_I2C_Read
  3296 ;;		_I2C_Write
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text12
  3301  0029EA                     __ptext12:
  3302                           	callstack 0
  3303  0029EA                     _I2C_Ready:
  3304                           	callstack 27
  3305  0029EA                     l171:
  3306  0029EA  A69E               	btfss	3998,3,c	;volatile
  3307  0029EC  EFFA  F014         	goto	u1941
  3308  0029F0  EFFC  F014         	goto	u1940
  3309  0029F4                     u1941:
  3310  0029F4  EFF5  F014         	goto	l171
  3311  0029F8                     u1940:
  3312  0029F8                     
  3313                           ;./I2C_Master_File.h: 93:     SSPIF=0;
  3314  0029F8  969E               	bcf	3998,3,c	;volatile
  3315  0029FA  0012               	return		;funcret
  3316  0029FC                     __end_of_I2C_Ready:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function _I2C_Nack *****************
  3320 ;; Defined at:
  3321 ;;		line 165 in file "./I2C_Master_File.h"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		None
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_I2C_Read
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text13
  3349  0029C2                     __ptext13:
  3350                           	callstack 0
  3351  0029C2                     _I2C_Nack:
  3352                           	callstack 27
  3353  0029C2                     
  3354                           ;./I2C_Master_File.h: 167:     ACKDT=1;
  3355  0029C2  8AC5               	bsf	4037,5,c	;volatile
  3356                           
  3357                           ;./I2C_Master_File.h: 168:  ACKEN=1;
  3358  0029C4  88C5               	bsf	4037,4,c	;volatile
  3359  0029C6                     l222:
  3360  0029C6  B8C5               	btfsc	4037,4,c	;volatile
  3361  0029C8  EFE8  F014         	goto	u2281
  3362  0029CC  EFEA  F014         	goto	u2280
  3363  0029D0                     u2281:
  3364  0029D0  EFE3  F014         	goto	l222
  3365  0029D4                     u2280:
  3366  0029D4  0012               	return		;funcret
  3367  0029D6                     __end_of_I2C_Nack:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _I2C_Ack *****************
  3371 ;; Defined at:
  3372 ;;		line 158 in file "./I2C_Master_File.h"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		None
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_I2C_Read
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text14
  3400  0029D6                     __ptext14:
  3401                           	callstack 0
  3402  0029D6                     _I2C_Ack:
  3403                           	callstack 27
  3404  0029D6                     
  3405                           ;./I2C_Master_File.h: 160:     ACKDT=0;
  3406  0029D6  9AC5               	bcf	4037,5,c	;volatile
  3407                           
  3408                           ;./I2C_Master_File.h: 161:  ACKEN=1;
  3409  0029D8  88C5               	bsf	4037,4,c	;volatile
  3410  0029DA                     l216:
  3411  0029DA  B8C5               	btfsc	4037,4,c	;volatile
  3412  0029DC  EFF2  F014         	goto	u2271
  3413  0029E0  EFF4  F014         	goto	u2270
  3414  0029E4                     u2271:
  3415  0029E4  EFED  F014         	goto	l216
  3416  0029E8                     u2270:
  3417  0029E8  0012               	return		;funcret
  3418  0029EA                     __end_of_I2C_Ack:
  3419                           	callstack 0
  3420                           
  3421 ;; *************** function _LCD_Init *****************
  3422 ;; Defined at:
  3423 ;;		line 37 in file "LCD_16x2.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		_LCD_Command
  3446 ;;		_MSdelay
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;;		_mostrarFechaHora
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text15
  3454  002898                     __ptext15:
  3455                           	callstack 0
  3456  002898                     _LCD_Init:
  3457                           	callstack 27
  3458  002898                     
  3459                           ;LCD_16x2.c: 39:     TRISD = 0x00;
  3460  002898  0E00               	movlw	0
  3461  00289A  6E95               	movwf	149,c	;volatile
  3462                           
  3463                           ;LCD_16x2.c: 40:     TRISC = 0x00;
  3464  00289C  0E00               	movlw	0
  3465  00289E  6E94               	movwf	148,c	;volatile
  3466  0028A0                     
  3467                           ;LCD_16x2.c: 41:     MSdelay(20);
  3468  0028A0  0E00               	movlw	0
  3469  0028A2  6E02               	movwf	(MSdelay@val+1)^0,c
  3470  0028A4  0E14               	movlw	20
  3471  0028A6  6E01               	movwf	MSdelay@val^0,c
  3472  0028A8  ECC2  F012         	call	_MSdelay	;wreg free
  3473  0028AC                     
  3474                           ;LCD_16x2.c: 42:  LCD_Command(0x38);
  3475  0028AC  0E38               	movlw	56
  3476  0028AE  ECAE  F014         	call	_LCD_Command
  3477  0028B2                     
  3478                           ;LCD_16x2.c: 43:     LCD_Command(0x0c);
  3479  0028B2  0E0C               	movlw	12
  3480  0028B4  ECAE  F014         	call	_LCD_Command
  3481  0028B8                     
  3482                           ;LCD_16x2.c: 44:     LCD_Command(0x06);
  3483  0028B8  0E06               	movlw	6
  3484  0028BA  ECAE  F014         	call	_LCD_Command
  3485  0028BE                     
  3486                           ;LCD_16x2.c: 45:  LCD_Command(0x01);
  3487  0028BE  0E01               	movlw	1
  3488  0028C0  ECAE  F014         	call	_LCD_Command
  3489  0028C4  0012               	return		;funcret
  3490  0028C6                     __end_of_LCD_Init:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function _imprimirTemHum *****************
  3494 ;; Defined at:
  3495 ;;		line 289 in file "Controlador.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    8
  3516 ;; This function calls:
  3517 ;;		_LCD_Char
  3518 ;;		_LCD_String
  3519 ;;		_LCD_String_xy
  3520 ;;		_sprintf
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text16
  3527  001D14                     __ptext16:
  3528                           	callstack 0
  3529  001D14                     _imprimirTemHum:
  3530                           	callstack 22
  3531  001D14                     
  3532                           ;Controlador.c: 291:     sprintf(vec_value, "%d", var_RH_Integral);
  3533  001D14  0EC8               	movlw	low _vec_value
  3534  001D16  0100               	movlb	0	; () banked
  3535  001D18  6F66               	movwf	sprintf@s& (0+255),b
  3536  001D1A  0E01               	movlw	high _vec_value
  3537  001D1C  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3538  001D1E  0E34               	movlw	low (STR_6+1)
  3539  001D20  6F68               	movwf	sprintf@fmt& (0+255),b
  3540  001D22  0E08               	movlw	high (STR_6+1)
  3541  001D24  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3542  001D26  C0FC  F06A         	movff	_var_RH_Integral,?_sprintf+4
  3543  001D2A  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3544  001D2C  EC99  F012         	call	_sprintf	;wreg free
  3545  001D30                     
  3546                           ;Controlador.c: 292:     LCD_String_xy(0, 9, vec_value);
  3547  001D30  0E09               	movlw	9
  3548  001D32  6E0A               	movwf	LCD_String_xy@pos^0,c
  3549  001D34  0EC8               	movlw	low _vec_value
  3550  001D36  6E0B               	movwf	LCD_String_xy@msg^0,c
  3551  001D38  0E01               	movlw	high _vec_value
  3552  001D3A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3553  001D3C  0E00               	movlw	0
  3554  001D3E  EC70  F013         	call	_LCD_String_xy
  3555  001D42                     
  3556                           ;Controlador.c: 293:     sprintf(vec_value, ".%d ", var_RH_Decimal);
  3557  001D42  0EC8               	movlw	low _vec_value
  3558  001D44  0100               	movlb	0	; () banked
  3559  001D46  6F66               	movwf	sprintf@s& (0+255),b
  3560  001D48  0E01               	movlw	high _vec_value
  3561  001D4A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3562  001D4C  0E2A               	movlw	low STR_4
  3563  001D4E  6F68               	movwf	sprintf@fmt& (0+255),b
  3564  001D50  0E08               	movlw	high STR_4
  3565  001D52  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3566  001D54  C0FD  F06A         	movff	_var_RH_Decimal,?_sprintf+4
  3567  001D58  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3568  001D5A  EC99  F012         	call	_sprintf	;wreg free
  3569                           
  3570                           ;Controlador.c: 294:     LCD_String(vec_value);
  3571  001D5E  0EC8               	movlw	low _vec_value
  3572  001D60  6E08               	movwf	LCD_String@msg^0,c
  3573  001D62  0E01               	movlw	high _vec_value
  3574  001D64  6E09               	movwf	(LCD_String@msg+1)^0,c
  3575  001D66  EC0F  F012         	call	_LCD_String	;wreg free
  3576  001D6A                     
  3577                           ;Controlador.c: 295:     LCD_Char('%');
  3578  001D6A  0E25               	movlw	37
  3579  001D6C  ECBC  F014         	call	_LCD_Char
  3580  001D70                     
  3581                           ;Controlador.c: 298:     sprintf(vec_value, "%d", var_T_Integral);
  3582  001D70  0EC8               	movlw	low _vec_value
  3583  001D72  0100               	movlb	0	; () banked
  3584  001D74  6F66               	movwf	sprintf@s& (0+255),b
  3585  001D76  0E01               	movlw	high _vec_value
  3586  001D78  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3587  001D7A  0E34               	movlw	low (STR_6+1)
  3588  001D7C  6F68               	movwf	sprintf@fmt& (0+255),b
  3589  001D7E  0E08               	movlw	high (STR_6+1)
  3590  001D80  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3591  001D82  C0FA  F06A         	movff	_var_T_Integral,?_sprintf+4
  3592  001D86  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3593  001D88  EC99  F012         	call	_sprintf	;wreg free
  3594  001D8C                     
  3595                           ;Controlador.c: 299:     LCD_String_xy(0, 0, vec_value);
  3596  001D8C  0E00               	movlw	0
  3597  001D8E  6E0A               	movwf	LCD_String_xy@pos^0,c
  3598  001D90  0EC8               	movlw	low _vec_value
  3599  001D92  6E0B               	movwf	LCD_String_xy@msg^0,c
  3600  001D94  0E01               	movlw	high _vec_value
  3601  001D96  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3602  001D98  0E00               	movlw	0
  3603  001D9A  EC70  F013         	call	_LCD_String_xy
  3604  001D9E                     
  3605                           ;Controlador.c: 300:     sprintf(vec_value, ".%d", var_T_Decimal);
  3606  001D9E  0EC8               	movlw	low _vec_value
  3607  001DA0  0100               	movlb	0	; () banked
  3608  001DA2  6F66               	movwf	sprintf@s& (0+255),b
  3609  001DA4  0E01               	movlw	high _vec_value
  3610  001DA6  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3611  001DA8  0E33               	movlw	low STR_6
  3612  001DAA  6F68               	movwf	sprintf@fmt& (0+255),b
  3613  001DAC  0E08               	movlw	high STR_6
  3614  001DAE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3615  001DB0  C0FB  F06A         	movff	_var_T_Decimal,?_sprintf+4
  3616  001DB4  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3617  001DB6  EC99  F012         	call	_sprintf	;wreg free
  3618  001DBA                     
  3619                           ;Controlador.c: 301:     LCD_String(vec_value);
  3620  001DBA  0EC8               	movlw	low _vec_value
  3621  001DBC  6E08               	movwf	LCD_String@msg^0,c
  3622  001DBE  0E01               	movlw	high _vec_value
  3623  001DC0  6E09               	movwf	(LCD_String@msg+1)^0,c
  3624  001DC2  EC0F  F012         	call	_LCD_String	;wreg free
  3625  001DC6                     
  3626                           ;Controlador.c: 302:     LCD_Char(0xdf);
  3627  001DC6  0EDF               	movlw	223
  3628  001DC8  ECBC  F014         	call	_LCD_Char
  3629  001DCC                     
  3630                           ;Controlador.c: 303:     LCD_Char('C');
  3631  001DCC  0E43               	movlw	67
  3632  001DCE  ECBC  F014         	call	_LCD_Char
  3633  001DD2                     
  3634                           ;Controlador.c: 305:     LCD_String_xy(0, 15, "H");
  3635  001DD2  0E0F               	movlw	15
  3636  001DD4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3637  001DD6  0E63               	movlw	low STR_7
  3638  001DD8  6E0B               	movwf	LCD_String_xy@msg^0,c
  3639  001DDA  0E08               	movlw	high STR_7
  3640  001DDC  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3641  001DDE  0E00               	movlw	0
  3642  001DE0  EC70  F013         	call	_LCD_String_xy
  3643  001DE4                     
  3644                           ;Controlador.c: 306:     LCD_String_xy(0, 6, "T");
  3645  001DE4  0E06               	movlw	6
  3646  001DE6  6E0A               	movwf	LCD_String_xy@pos^0,c
  3647  001DE8  0E65               	movlw	low STR_8
  3648  001DEA  6E0B               	movwf	LCD_String_xy@msg^0,c
  3649  001DEC  0E08               	movlw	high STR_8
  3650  001DEE  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3651  001DF0  0E00               	movlw	0
  3652  001DF2  EC70  F013         	call	_LCD_String_xy
  3653  001DF6  0012               	return		;funcret
  3654  001DF8                     __end_of_imprimirTemHum:
  3655                           	callstack 0
  3656                           
  3657 ;; *************** function _sprintf *****************
  3658 ;; Defined at:
  3659 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  s               2    6[BANK0 ] PTR unsigned char 
  3662 ;;		 -> year(10), month(10), date(10), hours(10), 
  3663 ;;		 -> mins(10), secs(10), vec_value(10), 
  3664 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3665 ;;		 -> STR_25(4), STR_24(4), STR_23(8), STR_22(8), 
  3666 ;;		 -> STR_21(4), STR_20(4), STR_19(8), STR_18(4), 
  3667 ;;		 -> STR_17(4), STR_6(4), STR_5(3), STR_4(5), 
  3668 ;;		 -> STR_3(3), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  f               6   16[BANK0 ] struct _IO_FILE
  3671 ;;  ap              2   14[BANK0 ] PTR void [1]
  3672 ;;		 -> ?_sprintf(2), 
  3673 ;;  ret             2    0        int 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2    6[BANK0 ] int 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         0       6       0       0       0       0       0       0       0
  3684 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3687 ;;Total ram usage:       16 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    7
  3690 ;; This function calls:
  3691 ;;		_vfprintf
  3692 ;; This function is called by:
  3693 ;;		_imprimirTemHum
  3694 ;;		_mostrarFechaHora
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text17
  3699  002532                     __ptext17:
  3700                           	callstack 0
  3701  002532                     _sprintf:
  3702                           	callstack 22
  3703  002532  0E6A               	movlw	low (?_sprintf+4)
  3704  002534  0100               	movlb	0	; () banked
  3705  002536  6F6E               	movwf	sprintf@ap& (0+255),b
  3706  002538  0E00               	movlw	high (?_sprintf+4)
  3707  00253A  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  3708  00253C  C066  F070         	movff	sprintf@s,sprintf@f
  3709  002540  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  3710  002544                     
  3711                           ; BSR set to: 0
  3712  002544  0E00               	movlw	0
  3713  002546  6F73               	movwf	(sprintf@f+3)& (0+255),b
  3714  002548  0E00               	movlw	0
  3715  00254A  6F72               	movwf	(sprintf@f+2)& (0+255),b
  3716  00254C                     
  3717                           ; BSR set to: 0
  3718  00254C  0E00               	movlw	0
  3719  00254E  6F75               	movwf	(sprintf@f+5)& (0+255),b
  3720  002550  0E00               	movlw	0
  3721  002552  6F74               	movwf	(sprintf@f+4)& (0+255),b
  3722  002554                     
  3723                           ; BSR set to: 0
  3724  002554  0E70               	movlw	low sprintf@f
  3725  002556  6F60               	movwf	vfprintf@fp& (0+255),b
  3726  002558  0E00               	movlw	high sprintf@f
  3727  00255A  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3728  00255C  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  3729  002560  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3730  002564  0E6E               	movlw	low sprintf@ap
  3731  002566  6F64               	movwf	vfprintf@ap& (0+255),b
  3732  002568  0E00               	movlw	high sprintf@ap
  3733  00256A  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3734  00256C  EC50  F011         	call	_vfprintf	;wreg free
  3735  002570  0100               	movlb	0	; () banked
  3736  002572  5172               	movf	(sprintf@f+2)& (0+255),w,b
  3737  002574  2566               	addwf	sprintf@s& (0+255),w,b
  3738  002576  6ED9               	movwf	fsr2l,c
  3739  002578  5173               	movf	(sprintf@f+3)& (0+255),w,b
  3740  00257A  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  3741  00257C  6EDA               	movwf	fsr2h,c
  3742  00257E  0E00               	movlw	0
  3743  002580  6EDF               	movwf	indf2,c
  3744  002582                     
  3745                           ; BSR set to: 0
  3746  002582  0012               	return		;funcret
  3747  002584                     __end_of_sprintf:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _vfprintf *****************
  3751 ;; Defined at:
  3752 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3755 ;;		 -> sprintf@f(6), 
  3756 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3757 ;;		 -> STR_25(4), STR_24(4), STR_23(8), STR_22(8), 
  3758 ;;		 -> STR_21(4), STR_20(4), STR_19(8), STR_18(4), 
  3759 ;;		 -> STR_17(4), STR_6(4), STR_5(3), STR_4(5), 
  3760 ;;		 -> STR_3(3), 
  3761 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3762 ;;		 -> sprintf@ap(2), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3765 ;;		 -> STR_25(4), STR_24(4), STR_23(8), STR_22(8), 
  3766 ;;		 -> STR_21(4), STR_20(4), STR_19(8), STR_18(4), 
  3767 ;;		 -> STR_17(4), STR_6(4), STR_5(3), STR_4(5), 
  3768 ;;		 -> STR_3(3), 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    0[BANK0 ] int 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       6       0       0       0       0       0       0       0
  3779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        8 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    6
  3785 ;; This function calls:
  3786 ;;		_vfpfcnvrt
  3787 ;; This function is called by:
  3788 ;;		_sprintf
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text18
  3793  0022A0                     __ptext18:
  3794                           	callstack 0
  3795  0022A0                     _vfprintf:
  3796                           	callstack 22
  3797  0022A0                     
  3798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3799  0022A0  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  3800  0022A4  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3801  0022A8                     
  3802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3803  0022A8  0E00               	movlw	0
  3804  0022AA  0101               	movlb	1	; () banked
  3805  0022AC  6FA7               	movwf	(_nout+1)& (0+255),b
  3806  0022AE  0E00               	movlw	0
  3807  0022B0  6FA6               	movwf	_nout& (0+255),b
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3810  0022B2  EF6E  F011         	goto	l2845
  3811  0022B6                     l2843:
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3815  0022B6  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3816  0022BA  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3817  0022BE  0E5E               	movlw	low vfprintf@cfmt
  3818  0022C0  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3819  0022C2  0E00               	movlw	high vfprintf@cfmt
  3820  0022C4  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3821  0022C6  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3822  0022CA  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3823  0022CE  ECAB  F00A         	call	_vfpfcnvrt	;wreg free
  3824  0022D2  5043               	movf	?_vfpfcnvrt^0,w,c
  3825  0022D4  0101               	movlb	1	; () banked
  3826  0022D6  27A6               	addwf	_nout& (0+255),f,b
  3827  0022D8  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3828  0022DA  23A7               	addwfc	(_nout+1)& (0+255),f,b
  3829  0022DC                     l2845:
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3833  0022DC  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3834  0022E0  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3835  0022E4                     	if	0	;tblptru may be non-zero
  3836  0022E4                     	endif
  3837  0022E4                     	if	0	;tblptru may be non-zero
  3838  0022E4                     	endif
  3839  0022E4  0008               	tblrd		*
  3840  0022E6  50F5               	movf	tablat,w,c
  3841  0022E8  0900               	iorlw	0
  3842  0022EA  A4D8               	btfss	status,2,c
  3843  0022EC  EF7A  F011         	goto	u2461
  3844  0022F0  EF7C  F011         	goto	u2460
  3845  0022F4                     u2461:
  3846  0022F4  EF5B  F011         	goto	l2843
  3847  0022F8                     u2460:
  3848  0022F8                     
  3849                           ; BSR set to: 1
  3850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3851  0022F8  C1A6  F060         	movff	_nout,?_vfprintf
  3852  0022FC  C1A7  F061         	movff	_nout+1,?_vfprintf+1
  3853  002300                     
  3854                           ; BSR set to: 1
  3855  002300  0012               	return		;funcret
  3856  002302                     __end_of_vfprintf:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _vfpfcnvrt *****************
  3860 ;; Defined at:
  3861 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3864 ;;		 -> sprintf@f(6), 
  3865 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3866 ;;		 -> vfprintf@cfmt(2), 
  3867 ;;  ap              2   70[COMRAM] PTR PTR void 
  3868 ;;		 -> sprintf@ap(2), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  llu             8   84[COMRAM] unsigned long long 
  3871 ;;  ll              8   76[COMRAM] long long 
  3872 ;;  f               4    0        long long 
  3873 ;;  vp              3    0        PTR void 
  3874 ;;  ct              3    0        unsigned char [3]
  3875 ;;  cp              3    0        PTR unsigned char 
  3876 ;;  i               2    0        int 
  3877 ;;  done            2    0        int 
  3878 ;;  c               1   92[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2   66[COMRAM] int 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3888 ;;      Params:         6       0       0       0       0       0       0       0       0
  3889 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3890 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3891 ;;      Totals:        27       0       0       0       0       0       0       0       0
  3892 ;;Total ram usage:       27 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    5
  3895 ;; This function calls:
  3896 ;;		_dtoa
  3897 ;;		_fputc
  3898 ;;		_xtoa
  3899 ;; This function is called by:
  3900 ;;		_vfprintf
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text19
  3905  001556                     __ptext19:
  3906                           	callstack 0
  3907  001556                     _vfpfcnvrt:
  3908                           	callstack 22
  3909  001556                     
  3910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3911  001556  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3912  00155A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3913  00155E  CFDE FFF6          	movff	postinc2,tblptrl
  3914  001562  CFDD FFF7          	movff	postdec2,tblptrh
  3915  001566                     	if	0	;tblptru may be non-zero
  3916  001566                     	endif
  3917  001566                     	if	0	;tblptru may be non-zero
  3918  001566                     	endif
  3919  001566  0008               	tblrd		*
  3920  001568  50F5               	movf	tablat,w,c
  3921  00156A  0A25               	xorlw	37
  3922  00156C  A4D8               	btfss	status,2,c
  3923  00156E  EFBB  F00A         	goto	u2301
  3924  001572  EFBD  F00A         	goto	u2300
  3925  001576                     u2301:
  3926  001576  EFDB  F00B         	goto	l2777
  3927  00157A                     u2300:
  3928  00157A                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3930  00157A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3931  00157E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3932  001582  2ADE               	incf	postinc2,f,c
  3933  001584  0E00               	movlw	0
  3934  001586  22DD               	addwfc	postdec2,f,c
  3935  001588                     
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3937  001588  0E00               	movlw	0
  3938  00158A  0100               	movlb	0	; () banked
  3939  00158C  6FE3               	movwf	(_width+1)& (0+255),b
  3940  00158E  0E00               	movlw	0
  3941  001590  6FE2               	movwf	_width& (0+255),b
  3942  001592  C0E2  F0E6         	movff	_width,_flags
  3943  001596  C0E3  F0E7         	movff	_width+1,_flags+1
  3944  00159A                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3947  00159A  69E4               	setf	_prec& (0+255),b
  3948  00159C  69E5               	setf	(_prec+1)& (0+255),b
  3949  00159E                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3952  00159E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3953  0015A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3954  0015A6  CFDE FFF6          	movff	postinc2,tblptrl
  3955  0015AA  CFDD FFF7          	movff	postdec2,tblptrh
  3956  0015AE                     	if	0	;tblptru may be non-zero
  3957  0015AE                     	endif
  3958  0015AE                     	if	0	;tblptru may be non-zero
  3959  0015AE                     	endif
  3960  0015AE  0008               	tblrd		*
  3961  0015B0  50F5               	movf	tablat,w,c
  3962  0015B2  0A64               	xorlw	100
  3963  0015B4  B4D8               	btfsc	status,2,c
  3964  0015B6  EFDF  F00A         	goto	u2311
  3965  0015BA  EFE1  F00A         	goto	u2310
  3966  0015BE                     u2311:
  3967  0015BE  EFF3  F00A         	goto	l2741
  3968  0015C2                     u2310:
  3969  0015C2                     
  3970                           ; BSR set to: 0
  3971  0015C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3972  0015C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3973  0015CA  CFDE FFF6          	movff	postinc2,tblptrl
  3974  0015CE  CFDD FFF7          	movff	postdec2,tblptrh
  3975  0015D2                     	if	0	;tblptru may be non-zero
  3976  0015D2                     	endif
  3977  0015D2                     	if	0	;tblptru may be non-zero
  3978  0015D2                     	endif
  3979  0015D2  0008               	tblrd		*
  3980  0015D4  50F5               	movf	tablat,w,c
  3981  0015D6  0A69               	xorlw	105
  3982  0015D8  A4D8               	btfss	status,2,c
  3983  0015DA  EFF1  F00A         	goto	u2321
  3984  0015DE  EFF3  F00A         	goto	u2320
  3985  0015E2                     u2321:
  3986  0015E2  EF33  F00B         	goto	l2747
  3987  0015E6                     u2320:
  3988  0015E6                     l2741:
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3992  0015E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3993  0015EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3994  0015EE  2ADE               	incf	postinc2,f,c
  3995  0015F0  0E00               	movlw	0
  3996  0015F2  22DD               	addwfc	postdec2,f,c
  3997                           
  3998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3999  0015F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4000  0015F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4001  0015FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4002  001600  0E02               	movlw	2
  4003  001602  26DE               	addwf	postinc2,f,c
  4004  001604  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4005  001608  0E00               	movlw	0
  4006  00160A  22DD               	addwfc	postdec2,f,c
  4007  00160C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4008  001610  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4009  001614  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  4010  001618  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  4011  00161C  0E00               	movlw	0
  4012  00161E  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4013  001620  0EFF               	movlw	-1
  4014  001622  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  4015  001624  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  4016  001626  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  4017  001628  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  4018  00162A  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  4019  00162C  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  4020  00162E                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4023  00162E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4024  001632  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4025  001636  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4026  00163A  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4027  00163E  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4028  001642  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4029  001646  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4030  00164A  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4031  00164E  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4032  001652  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4033  001656  ECCC  F007         	call	_dtoa	;wreg free
  4034  00165A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4035  00165E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4036  001662  EFF6  F00B         	goto	l1254
  4037  001666                     l2747:
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4041  001666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4042  00166A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4043  00166E  CFDE FFF6          	movff	postinc2,tblptrl
  4044  001672  CFDD FFF7          	movff	postdec2,tblptrh
  4045  001676                     	if	0	;tblptru may be non-zero
  4046  001676                     	endif
  4047  001676                     	if	0	;tblptru may be non-zero
  4048  001676                     	endif
  4049  001676  0008               	tblrd		*
  4050  001678  50F5               	movf	tablat,w,c
  4051  00167A  0A78               	xorlw	120
  4052  00167C  B4D8               	btfsc	status,2,c
  4053  00167E  EF43  F00B         	goto	u2331
  4054  001682  EF45  F00B         	goto	u2330
  4055  001686                     u2331:
  4056  001686  EF57  F00B         	goto	l2751
  4057  00168A                     u2330:
  4058  00168A                     
  4059                           ; BSR set to: 0
  4060  00168A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4061  00168E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4062  001692  CFDE FFF6          	movff	postinc2,tblptrl
  4063  001696  CFDD FFF7          	movff	postdec2,tblptrh
  4064  00169A                     	if	0	;tblptru may be non-zero
  4065  00169A                     	endif
  4066  00169A                     	if	0	;tblptru may be non-zero
  4067  00169A                     	endif
  4068  00169A  0008               	tblrd		*
  4069  00169C  50F5               	movf	tablat,w,c
  4070  00169E  0A58               	xorlw	88
  4071  0016A0  A4D8               	btfss	status,2,c
  4072  0016A2  EF55  F00B         	goto	u2341
  4073  0016A6  EF57  F00B         	goto	u2340
  4074  0016AA                     u2341:
  4075  0016AA  EFA5  F00B         	goto	l2761
  4076  0016AE                     u2340:
  4077  0016AE                     l2751:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  4081  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4082  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4083  0016B6  CFDE FFF6          	movff	postinc2,tblptrl
  4084  0016BA  CFDD FFF7          	movff	postdec2,tblptrh
  4085  0016BE                     	if	0	;tblptru may be non-zero
  4086  0016BE                     	endif
  4087  0016BE                     	if	0	;tblptru may be non-zero
  4088  0016BE                     	endif
  4089  0016BE  0008               	tblrd		*
  4090  0016C0  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  4091  0016C4                     
  4092                           ; BSR set to: 0
  4093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  4094  0016C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4095  0016C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4096  0016CC  2ADE               	incf	postinc2,f,c
  4097  0016CE  0E00               	movlw	0
  4098  0016D0  22DD               	addwfc	postdec2,f,c
  4099  0016D2                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4102  0016D2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4103  0016D6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4104  0016DA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4105  0016DE  0E02               	movlw	2
  4106  0016E0  26DE               	addwf	postinc2,f,c
  4107  0016E2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4108  0016E6  0E00               	movlw	0
  4109  0016E8  22DD               	addwfc	postdec2,f,c
  4110  0016EA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4111  0016EE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4112  0016F2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4113  0016F6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4114  0016FA  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4115  0016FE  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4116  001702  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  4117  001704  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  4118  001706  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  4119  001708  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  4120  00170A  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  4121  00170C  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  4122  00170E                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  4125  00170E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4126  001712  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4127  001716  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4128  00171A  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4129  00171E  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4130  001722  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4131  001726  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4132  00172A  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4133  00172E  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4134  001732  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4135  001736  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  4136  00173A  EC3E  F009         	call	_xtoa	;wreg free
  4137  00173E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4138  001742  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4139  001746  EFF6  F00B         	goto	l1254
  4140  00174A                     l2761:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4144  00174A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4145  00174E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4146  001752  CFDE FFF6          	movff	postinc2,tblptrl
  4147  001756  CFDD FFF7          	movff	postdec2,tblptrh
  4148  00175A                     	if	0	;tblptru may be non-zero
  4149  00175A                     	endif
  4150  00175A                     	if	0	;tblptru may be non-zero
  4151  00175A                     	endif
  4152  00175A  0008               	tblrd		*
  4153  00175C  50F5               	movf	tablat,w,c
  4154  00175E  0A25               	xorlw	37
  4155  001760  A4D8               	btfss	status,2,c
  4156  001762  EFB5  F00B         	goto	u2351
  4157  001766  EFB7  F00B         	goto	u2350
  4158  00176A                     u2351:
  4159  00176A  EFCE  F00B         	goto	l2771
  4160  00176E                     u2350:
  4161  00176E                     
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4164  00176E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4165  001772  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4166  001776  2ADE               	incf	postinc2,f,c
  4167  001778  0E00               	movlw	0
  4168  00177A  22DD               	addwfc	postdec2,f,c
  4169  00177C                     
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4172  00177C  0E00               	movlw	0
  4173  00177E  6E02               	movwf	(fputc@c+1)^0,c
  4174  001780  0E25               	movlw	37
  4175  001782  6E01               	movwf	fputc@c^0,c
  4176  001784  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4177  001788  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4178  00178C  EC64  F00F         	call	_fputc	;wreg free
  4179  001790                     l2767:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4182  001790  0E00               	movlw	0
  4183  001792  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4184  001794  0E01               	movlw	1
  4185  001796  6E43               	movwf	?_vfpfcnvrt^0,c
  4186  001798  EFF6  F00B         	goto	l1254
  4187  00179C                     l2771:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4191  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4192  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4193  0017A4  2ADE               	incf	postinc2,f,c
  4194  0017A6  0E00               	movlw	0
  4195  0017A8  22DD               	addwfc	postdec2,f,c
  4196  0017AA                     
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4199  0017AA  0E00               	movlw	0
  4200  0017AC  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4201  0017AE  0E00               	movlw	0
  4202  0017B0  6E43               	movwf	?_vfpfcnvrt^0,c
  4203  0017B2  EFF6  F00B         	goto	l1254
  4204  0017B6                     l2777:
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4207  0017B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4208  0017BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4209  0017BE  CFDE FFF6          	movff	postinc2,tblptrl
  4210  0017C2  CFDD FFF7          	movff	postdec2,tblptrh
  4211  0017C6                     	if	0	;tblptru may be non-zero
  4212  0017C6                     	endif
  4213  0017C6                     	if	0	;tblptru may be non-zero
  4214  0017C6                     	endif
  4215  0017C6  0008               	tblrd		*
  4216  0017C8  50F5               	movf	tablat,w,c
  4217  0017CA  6E01               	movwf	fputc@c^0,c
  4218  0017CC  6A02               	clrf	(fputc@c+1)^0,c
  4219  0017CE  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4220  0017D2  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4221  0017D6  EC64  F00F         	call	_fputc	;wreg free
  4222  0017DA                     
  4223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4224  0017DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4225  0017DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4226  0017E2  2ADE               	incf	postinc2,f,c
  4227  0017E4  0E00               	movlw	0
  4228  0017E6  22DD               	addwfc	postdec2,f,c
  4229  0017E8  EFC8  F00B         	goto	l2767
  4230  0017EC                     l1254:
  4231  0017EC  0012               	return		;funcret
  4232  0017EE                     __end_of_vfpfcnvrt:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _xtoa *****************
  4236 ;; Defined at:
  4237 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4240 ;;		 -> sprintf@f(6), 
  4241 ;;  d               8   29[COMRAM] unsigned long long 
  4242 ;;  x               1   37[COMRAM] unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  n               8   54[COMRAM] unsigned long long 
  4245 ;;  c               2   64[COMRAM] int 
  4246 ;;  i               2   62[COMRAM] int 
  4247 ;;  w               2   52[COMRAM] int 
  4248 ;;  p               2   50[COMRAM] int 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2   27[COMRAM] int 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:        11       0       0       0       0       0       0       0       0
  4259 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4261 ;;      Totals:        39       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:       39 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    4
  4265 ;; This function calls:
  4266 ;;		_isalpha
  4267 ;;		_isupper
  4268 ;;		_pad
  4269 ;;		_toupper
  4270 ;; This function is called by:
  4271 ;;		_vfpfcnvrt
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text20
  4276  00127C                     __ptext20:
  4277                           	callstack 0
  4278  00127C                     _xtoa:
  4279                           	callstack 22
  4280  00127C                     
  4281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4282  00127C  0100               	movlb	0	; () banked
  4283  00127E  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4284  001280  EF44  F009         	goto	u2101
  4285  001284  EF46  F009         	goto	u2100
  4286  001288                     u2101:
  4287  001288  EF47  F009         	goto	l2635
  4288  00128C                     u2100:
  4289  00128C                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4292  00128C  93E6               	bcf	_flags& (0+255),1,b
  4293  00128E                     l2635:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4297  00128E  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4298  001290  EF54  F009         	goto	u2110
  4299  001294  51E5               	movf	(_prec+1)& (0+255),w,b
  4300  001296  E106               	bnz	u2111
  4301  001298  05E4               	decf	_prec& (0+255),w,b
  4302  00129A  B0D8               	btfsc	status,0,c
  4303  00129C  EF52  F009         	goto	u2111
  4304  0012A0  EF54  F009         	goto	u2110
  4305  0012A4                     u2111:
  4306  0012A4  EF5A  F009         	goto	l1222
  4307  0012A8                     u2110:
  4308  0012A8                     
  4309                           ; BSR set to: 0
  4310  0012A8  0E00               	movlw	0
  4311  0012AA  6E34               	movwf	(xtoa@p+1)^0,c
  4312  0012AC  0E01               	movlw	1
  4313  0012AE  6E33               	movwf	xtoa@p^0,c
  4314  0012B0  EF5E  F009         	goto	l1224
  4315  0012B4                     l1222:
  4316                           
  4317                           ; BSR set to: 0
  4318  0012B4  C0E4  F033         	movff	_prec,xtoa@p
  4319  0012B8  C0E5  F034         	movff	_prec+1,xtoa@p+1
  4320  0012BC                     l1224:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4324  0012BC  C0E2  F035         	movff	_width,xtoa@w
  4325  0012C0  C0E3  F036         	movff	_width+1,xtoa@w+1
  4326                           
  4327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4328  0012C4  A9E6               	btfss	_flags& (0+255),4,b
  4329  0012C6  EF67  F009         	goto	u2121
  4330  0012CA  EF69  F009         	goto	u2120
  4331  0012CE                     u2121:
  4332  0012CE  EF6D  F009         	goto	l2641
  4333  0012D2                     u2120:
  4334  0012D2                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4337  0012D2  0EFE               	movlw	254
  4338  0012D4  2635               	addwf	xtoa@w^0,f,c
  4339  0012D6  0EFF               	movlw	255
  4340  0012D8  2236               	addwfc	(xtoa@w+1)^0,f,c
  4341  0012DA                     l2641:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4345  0012DA  C01E  F037         	movff	xtoa@d,xtoa@n
  4346  0012DE  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4347  0012E2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4348  0012E6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4349  0012EA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4350  0012EE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4351  0012F2  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4352  0012F6  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4353  0012FA                     
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4356  0012FA  0E00               	movlw	0
  4357  0012FC  6E40               	movwf	(xtoa@i+1)^0,c
  4358  0012FE  0E1F               	movlw	31
  4359  001300  6E3F               	movwf	xtoa@i^0,c
  4360  001302                     
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4363  001302  0E00               	movlw	0
  4364  001304  0102               	movlb	2	; () banked
  4365  001306  6FDC               	movwf	(_dbuf+31)& (0+255),b
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4368  001308  EF39  F00A         	goto	l2677
  4369  00130C                     l2647:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  4372  00130C  063F               	decf	xtoa@i^0,f,c
  4373  00130E  A0D8               	btfss	status,0,c
  4374  001310  0640               	decf	(xtoa@i+1)^0,f,c
  4375  001312                     
  4376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4377  001312  0E0F               	movlw	15
  4378  001314  1437               	andwf	xtoa@n^0,w,c
  4379  001316  6E41               	movwf	xtoa@c^0,c
  4380  001318  6A42               	clrf	(xtoa@c+1)^0,c
  4381  00131A                     
  4382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4383  00131A  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4384  00131C  EF99  F009         	goto	u2131
  4385  001320  5042               	movf	(xtoa@c+1)^0,w,c
  4386  001322  E109               	bnz	u2130
  4387  001324  0E0A               	movlw	10
  4388  001326  5C41               	subwf	xtoa@c^0,w,c
  4389  001328  A0D8               	btfss	status,0,c
  4390  00132A  EF99  F009         	goto	u2131
  4391  00132E  EF9B  F009         	goto	u2130
  4392  001332                     u2131:
  4393  001332  EFA3  F009         	goto	l2655
  4394  001336                     u2130:
  4395  001336  0E57               	movlw	87
  4396  001338  2441               	addwf	xtoa@c^0,w,c
  4397  00133A  6E41               	movwf	xtoa@c^0,c
  4398  00133C  0E00               	movlw	0
  4399  00133E  2042               	addwfc	(xtoa@c+1)^0,w,c
  4400  001340  6E42               	movwf	(xtoa@c+1)^0,c
  4401  001342  EFA9  F009         	goto	l1231
  4402  001346                     l2655:
  4403  001346  0E30               	movlw	48
  4404  001348  2441               	addwf	xtoa@c^0,w,c
  4405  00134A  6E41               	movwf	xtoa@c^0,c
  4406  00134C  0E00               	movlw	0
  4407  00134E  2042               	addwfc	(xtoa@c+1)^0,w,c
  4408  001350  6E42               	movwf	(xtoa@c+1)^0,c
  4409  001352                     l1231:
  4410  001352  0EBF               	movlw	191
  4411  001354  6E27               	movwf	??_xtoa^0,c
  4412  001356  0EFF               	movlw	255
  4413  001358  6E28               	movwf	(??_xtoa+1)^0,c
  4414  00135A  5026               	movf	xtoa@x^0,w,c
  4415  00135C  6E29               	movwf	(??_xtoa+2)^0,c
  4416  00135E  6A2A               	clrf	(??_xtoa+3)^0,c
  4417  001360  5027               	movf	??_xtoa^0,w,c
  4418  001362  2629               	addwf	(??_xtoa+2)^0,f,c
  4419  001364  5028               	movf	(??_xtoa+1)^0,w,c
  4420  001366  222A               	addwfc	(??_xtoa+3)^0,f,c
  4421  001368  502A               	movf	(??_xtoa+3)^0,w,c
  4422  00136A  E10A               	bnz	u2140
  4423  00136C  0E1A               	movlw	26
  4424  00136E  5C29               	subwf	(??_xtoa+2)^0,w,c
  4425  001370  A0D8               	btfss	status,0,c
  4426  001372  EFBD  F009         	goto	u2141
  4427  001376  EFC0  F009         	goto	u2140
  4428  00137A                     u2141:
  4429  00137A  0E01               	movlw	1
  4430  00137C  EFC1  F009         	goto	u2150
  4431  001380                     u2140:
  4432  001380  0E00               	movlw	0
  4433  001382                     u2150:
  4434  001382  6E2F               	movwf	_xtoa$1386^0,c
  4435  001384  6A30               	clrf	(_xtoa$1386+1)^0,c
  4436  001386  502F               	movf	_xtoa$1386^0,w,c
  4437  001388  1030               	iorwf	(_xtoa$1386+1)^0,w,c
  4438  00138A  B4D8               	btfsc	status,2,c
  4439  00138C  EFCA  F009         	goto	u2161
  4440  001390  EFCC  F009         	goto	u2160
  4441  001394                     u2161:
  4442  001394  EFFC  F009         	goto	l2669
  4443  001398                     u2160:
  4444  001398  0E9F               	movlw	159
  4445  00139A  6E27               	movwf	??_xtoa^0,c
  4446  00139C  0EFF               	movlw	255
  4447  00139E  6E28               	movwf	(??_xtoa+1)^0,c
  4448  0013A0  0E20               	movlw	32
  4449  0013A2  1041               	iorwf	xtoa@c^0,w,c
  4450  0013A4  6E29               	movwf	(??_xtoa+2)^0,c
  4451  0013A6  0E00               	movlw	0
  4452  0013A8  1042               	iorwf	(xtoa@c+1)^0,w,c
  4453  0013AA  6E2A               	movwf	(??_xtoa+3)^0,c
  4454  0013AC  5027               	movf	??_xtoa^0,w,c
  4455  0013AE  2629               	addwf	(??_xtoa+2)^0,f,c
  4456  0013B0  5028               	movf	(??_xtoa+1)^0,w,c
  4457  0013B2  222A               	addwfc	(??_xtoa+3)^0,f,c
  4458  0013B4  502A               	movf	(??_xtoa+3)^0,w,c
  4459  0013B6  E10A               	bnz	u2170
  4460  0013B8  0E1A               	movlw	26
  4461  0013BA  5C29               	subwf	(??_xtoa+2)^0,w,c
  4462  0013BC  A0D8               	btfss	status,0,c
  4463  0013BE  EFE3  F009         	goto	u2171
  4464  0013C2  EFE6  F009         	goto	u2170
  4465  0013C6                     u2171:
  4466  0013C6  0E01               	movlw	1
  4467  0013C8  EFE7  F009         	goto	u2180
  4468  0013CC                     u2170:
  4469  0013CC  0E00               	movlw	0
  4470  0013CE                     u2180:
  4471  0013CE  6E31               	movwf	_xtoa$1387^0,c
  4472  0013D0  6A32               	clrf	(_xtoa$1387+1)^0,c
  4473  0013D2  5031               	movf	_xtoa$1387^0,w,c
  4474  0013D4  1032               	iorwf	(_xtoa$1387+1)^0,w,c
  4475  0013D6  B4D8               	btfsc	status,2,c
  4476  0013D8  EFF0  F009         	goto	u2191
  4477  0013DC  EFF2  F009         	goto	u2190
  4478  0013E0                     u2191:
  4479  0013E0  EFFC  F009         	goto	l2669
  4480  0013E4                     u2190:
  4481  0013E4                     
  4482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4483  0013E4  C041  F007         	movff	xtoa@c,toupper@c
  4484  0013E8  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4485  0013EC  ECE0  F011         	call	_toupper	;wreg free
  4486  0013F0  C007  F041         	movff	?_toupper,xtoa@c
  4487  0013F4  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4488  0013F8                     l2669:
  4489                           
  4490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4491  0013F8  0EBD               	movlw	low _dbuf
  4492  0013FA  243F               	addwf	xtoa@i^0,w,c
  4493  0013FC  6ED9               	movwf	fsr2l,c
  4494  0013FE  0E02               	movlw	high _dbuf
  4495  001400  2040               	addwfc	(xtoa@i+1)^0,w,c
  4496  001402  6EDA               	movwf	fsr2h,c
  4497  001404  C041  FFDF         	movff	xtoa@c,indf2
  4498  001408                     
  4499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  4500  001408  0633               	decf	xtoa@p^0,f,c
  4501  00140A  A0D8               	btfss	status,0,c
  4502  00140C  0634               	decf	(xtoa@p+1)^0,f,c
  4503  00140E                     
  4504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  4505  00140E  0635               	decf	xtoa@w^0,f,c
  4506  001410  A0D8               	btfss	status,0,c
  4507  001412  0636               	decf	(xtoa@w+1)^0,f,c
  4508  001414                     
  4509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4510  001414  C037  F027         	movff	xtoa@n,??_xtoa
  4511  001418  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4512  00141C  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4513  001420  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4514  001424  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4515  001428  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4516  00142C  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4517  001430  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4518  001434  0E05               	movlw	5
  4519  001436  EF26  F00A         	goto	u2200
  4520  00143A                     u2205:
  4521  00143A  90D8               	bcf	status,0,c
  4522  00143C  322E               	rrcf	(??_xtoa+7)^0,f,c
  4523  00143E  322D               	rrcf	(??_xtoa+6)^0,f,c
  4524  001440  322C               	rrcf	(??_xtoa+5)^0,f,c
  4525  001442  322B               	rrcf	(??_xtoa+4)^0,f,c
  4526  001444  322A               	rrcf	(??_xtoa+3)^0,f,c
  4527  001446  3229               	rrcf	(??_xtoa+2)^0,f,c
  4528  001448  3228               	rrcf	(??_xtoa+1)^0,f,c
  4529  00144A  3227               	rrcf	??_xtoa^0,f,c
  4530  00144C                     u2200:
  4531  00144C  2EE8               	decfsz	wreg,f,c
  4532  00144E  EF1D  F00A         	goto	u2205
  4533  001452  C027  F037         	movff	??_xtoa,xtoa@n
  4534  001456  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4535  00145A  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4536  00145E  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4537  001462  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4538  001466  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4539  00146A  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4540  00146E  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4541  001472                     l2677:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4544  001472  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4545  001474  EF45  F00A         	goto	u2211
  4546  001478  5040               	movf	(xtoa@i+1)^0,w,c
  4547  00147A  E109               	bnz	u2210
  4548  00147C  0E02               	movlw	2
  4549  00147E  5C3F               	subwf	xtoa@i^0,w,c
  4550  001480  A0D8               	btfss	status,0,c
  4551  001482  EF45  F00A         	goto	u2211
  4552  001486  EF47  F00A         	goto	u2210
  4553  00148A                     u2211:
  4554  00148A  EF78  F00A         	goto	l1245
  4555  00148E                     u2210:
  4556  00148E  5037               	movf	xtoa@n^0,w,c
  4557  001490  1038               	iorwf	(xtoa@n+1)^0,w,c
  4558  001492  1039               	iorwf	(xtoa@n+2)^0,w,c
  4559  001494  103A               	iorwf	(xtoa@n+3)^0,w,c
  4560  001496  103B               	iorwf	(xtoa@n+4)^0,w,c
  4561  001498  103C               	iorwf	(xtoa@n+5)^0,w,c
  4562  00149A  103D               	iorwf	(xtoa@n+6)^0,w,c
  4563  00149C  103E               	iorwf	(xtoa@n+7)^0,w,c
  4564  00149E  A4D8               	btfss	status,2,c
  4565  0014A0  EF54  F00A         	goto	u2221
  4566  0014A4  EF56  F00A         	goto	u2220
  4567  0014A8                     u2221:
  4568  0014A8  EF86  F009         	goto	l2647
  4569  0014AC                     u2220:
  4570  0014AC  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4571  0014AE  EF63  F00A         	goto	u2230
  4572  0014B2  5034               	movf	(xtoa@p+1)^0,w,c
  4573  0014B4  E106               	bnz	u2231
  4574  0014B6  0433               	decf	xtoa@p^0,w,c
  4575  0014B8  B0D8               	btfsc	status,0,c
  4576  0014BA  EF61  F00A         	goto	u2231
  4577  0014BE  EF63  F00A         	goto	u2230
  4578  0014C2                     u2231:
  4579  0014C2  EF86  F009         	goto	l2647
  4580  0014C6                     u2230:
  4581  0014C6  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4582  0014C8  EF6E  F00A         	goto	u2241
  4583  0014CC  5036               	movf	(xtoa@w+1)^0,w,c
  4584  0014CE  E108               	bnz	u2240
  4585  0014D0  0435               	decf	xtoa@w^0,w,c
  4586  0014D2  A0D8               	btfss	status,0,c
  4587  0014D4  EF6E  F00A         	goto	u2241
  4588  0014D8  EF70  F00A         	goto	u2240
  4589  0014DC                     u2241:
  4590  0014DC  EF78  F00A         	goto	l1245
  4591  0014E0                     u2240:
  4592  0014E0  0100               	movlb	0	; () banked
  4593  0014E2  B3E6               	btfsc	_flags& (0+255),1,b
  4594  0014E4  EF76  F00A         	goto	u2251
  4595  0014E8  EF78  F00A         	goto	u2250
  4596  0014EC                     u2251:
  4597  0014EC  EF86  F009         	goto	l2647
  4598  0014F0                     u2250:
  4599  0014F0                     l1245:
  4600                           
  4601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4602  0014F0  0100               	movlb	0	; () banked
  4603  0014F2  A9E6               	btfss	_flags& (0+255),4,b
  4604  0014F4  EF7E  F00A         	goto	u2261
  4605  0014F8  EF80  F00A         	goto	u2260
  4606  0014FC                     u2261:
  4607  0014FC  EF96  F00A         	goto	l2693
  4608  001500                     u2260:
  4609  001500                     
  4610                           ; BSR set to: 0
  4611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  4612  001500  063F               	decf	xtoa@i^0,f,c
  4613  001502  A0D8               	btfss	status,0,c
  4614  001504  0640               	decf	(xtoa@i+1)^0,f,c
  4615  001506                     
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4618  001506  0EBD               	movlw	low _dbuf
  4619  001508  243F               	addwf	xtoa@i^0,w,c
  4620  00150A  6ED9               	movwf	fsr2l,c
  4621  00150C  0E02               	movlw	high _dbuf
  4622  00150E  2040               	addwfc	(xtoa@i+1)^0,w,c
  4623  001510  6EDA               	movwf	fsr2h,c
  4624  001512  C026  FFDF         	movff	xtoa@x,indf2
  4625  001516                     
  4626                           ; BSR set to: 0
  4627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  4628  001516  063F               	decf	xtoa@i^0,f,c
  4629  001518  A0D8               	btfss	status,0,c
  4630  00151A  0640               	decf	(xtoa@i+1)^0,f,c
  4631                           
  4632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4633  00151C  0EBD               	movlw	low _dbuf
  4634  00151E  243F               	addwf	xtoa@i^0,w,c
  4635  001520  6ED9               	movwf	fsr2l,c
  4636  001522  0E02               	movlw	high _dbuf
  4637  001524  2040               	addwfc	(xtoa@i+1)^0,w,c
  4638  001526  6EDA               	movwf	fsr2h,c
  4639  001528  0E30               	movlw	48
  4640  00152A  6EDF               	movwf	indf2,c
  4641  00152C                     l2693:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4645  00152C  C01C  F011         	movff	xtoa@fp,pad@fp
  4646  001530  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4647  001534  0EBD               	movlw	low _dbuf
  4648  001536  243F               	addwf	xtoa@i^0,w,c
  4649  001538  6E13               	movwf	pad@buf^0,c
  4650  00153A  0E02               	movlw	high _dbuf
  4651  00153C  2040               	addwfc	(xtoa@i+1)^0,w,c
  4652  00153E  6E14               	movwf	(pad@buf+1)^0,c
  4653  001540  C035  F015         	movff	xtoa@w,pad@p
  4654  001544  C036  F016         	movff	xtoa@w+1,pad@p+1
  4655  001548  ECC9  F00F         	call	_pad	;wreg free
  4656  00154C  C011  F01C         	movff	?_pad,?_xtoa
  4657  001550  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4658  001554  0012               	return		;funcret
  4659  001556                     __end_of_xtoa:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _toupper *****************
  4663 ;; Defined at:
  4664 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  c               2    6[COMRAM] int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    6[COMRAM] int 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         2       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        8 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    1
  4685 ;; This function calls:
  4686 ;;		_islower
  4687 ;; This function is called by:
  4688 ;;		_xtoa
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text21
  4693  0023C0                     __ptext21:
  4694                           	callstack 0
  4695  0023C0                     _toupper:
  4696                           	callstack 24
  4697  0023C0  0E9F               	movlw	159
  4698  0023C2  6E09               	movwf	??_toupper^0,c
  4699  0023C4  0EFF               	movlw	255
  4700  0023C6  6E0A               	movwf	(??_toupper+1)^0,c
  4701  0023C8  C007  F00B         	movff	toupper@c,??_toupper+2
  4702  0023CC  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4703  0023D0  5009               	movf	??_toupper^0,w,c
  4704  0023D2  260B               	addwf	(??_toupper+2)^0,f,c
  4705  0023D4  500A               	movf	(??_toupper+1)^0,w,c
  4706  0023D6  220C               	addwfc	(??_toupper+3)^0,f,c
  4707  0023D8  500C               	movf	(??_toupper+3)^0,w,c
  4708  0023DA  E10A               	bnz	u1890
  4709  0023DC  0E1A               	movlw	26
  4710  0023DE  5C0B               	subwf	(??_toupper+2)^0,w,c
  4711  0023E0  A0D8               	btfss	status,0,c
  4712  0023E2  EFF5  F011         	goto	u1891
  4713  0023E6  EFF8  F011         	goto	u1890
  4714  0023EA                     u1891:
  4715  0023EA  0E01               	movlw	1
  4716  0023EC  EFF9  F011         	goto	u1900
  4717  0023F0                     u1890:
  4718  0023F0  0E00               	movlw	0
  4719  0023F2                     u1900:
  4720  0023F2  6E0D               	movwf	_toupper$1471^0,c
  4721  0023F4  6A0E               	clrf	(_toupper$1471+1)^0,c
  4722  0023F6  500D               	movf	_toupper$1471^0,w,c
  4723  0023F8  100E               	iorwf	(_toupper$1471+1)^0,w,c
  4724  0023FA  B4D8               	btfsc	status,2,c
  4725  0023FC  EF02  F012         	goto	u1911
  4726  002400  EF04  F012         	goto	u1910
  4727  002404                     u1911:
  4728  002404  EF0A  F012         	goto	l1317
  4729  002408                     u1910:
  4730  002408  0E5F               	movlw	95
  4731  00240A  1407               	andwf	toupper@c^0,w,c
  4732  00240C  6E07               	movwf	?_toupper^0,c
  4733  00240E  6A08               	clrf	(?_toupper+1)^0,c
  4734  002410  EF0E  F012         	goto	l1322
  4735  002414                     l1317:
  4736  002414  C007  F007         	movff	toupper@c,?_toupper
  4737  002418  C008  F008         	movff	toupper@c+1,?_toupper+1
  4738  00241C                     l1322:
  4739  00241C  0012               	return		;funcret
  4740  00241E                     __end_of_toupper:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function _islower *****************
  4744 ;; Defined at:
  4745 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  c               2    0[COMRAM] int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  2    0[COMRAM] int 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         2       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4761 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        6 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_toupper
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text22
  4773  002796                     __ptext22:
  4774                           	callstack 0
  4775  002796                     _islower:
  4776                           	callstack 24
  4777  002796  0E9F               	movlw	159
  4778  002798  6E03               	movwf	??_islower^0,c
  4779  00279A  0EFF               	movlw	255
  4780  00279C  6E04               	movwf	(??_islower+1)^0,c
  4781  00279E  C001  F005         	movff	islower@c,??_islower+2
  4782  0027A2  C002  F006         	movff	islower@c+1,??_islower+3
  4783  0027A6  5003               	movf	??_islower^0,w,c
  4784  0027A8  2605               	addwf	(??_islower+2)^0,f,c
  4785  0027AA  5004               	movf	(??_islower+1)^0,w,c
  4786  0027AC  2206               	addwfc	(??_islower+3)^0,f,c
  4787  0027AE  5006               	movf	(??_islower+3)^0,w,c
  4788  0027B0  E10A               	bnz	u1650
  4789  0027B2  0E1A               	movlw	26
  4790  0027B4  5C05               	subwf	(??_islower+2)^0,w,c
  4791  0027B6  A0D8               	btfss	status,0,c
  4792  0027B8  EFE0  F013         	goto	u1651
  4793  0027BC  EFE3  F013         	goto	u1650
  4794  0027C0                     u1651:
  4795  0027C0  0E01               	movlw	1
  4796  0027C2  EFE4  F013         	goto	u1660
  4797  0027C6                     u1650:
  4798  0027C6  0E00               	movlw	0
  4799  0027C8                     u1660:
  4800  0027C8  6E01               	movwf	?_islower^0,c
  4801  0027CA  6A02               	clrf	(?_islower+1)^0,c
  4802  0027CC  0012               	return		;funcret
  4803  0027CE                     __end_of_islower:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _isupper *****************
  4807 ;; Defined at:
  4808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  c               2    0[COMRAM] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2    0[COMRAM] int 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4822 ;;      Params:         2       0       0       0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4824 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4825 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4826 ;;Total ram usage:        6 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_xtoa
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text23
  4836  0027CE                     __ptext23:
  4837                           	callstack 0
  4838  0027CE                     _isupper:
  4839                           	callstack 25
  4840  0027CE  0EBF               	movlw	191
  4841  0027D0  6E03               	movwf	??_isupper^0,c
  4842  0027D2  0EFF               	movlw	255
  4843  0027D4  6E04               	movwf	(??_isupper+1)^0,c
  4844  0027D6  C001  F005         	movff	isupper@c,??_isupper+2
  4845  0027DA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4846  0027DE  5003               	movf	??_isupper^0,w,c
  4847  0027E0  2605               	addwf	(??_isupper+2)^0,f,c
  4848  0027E2  5004               	movf	(??_isupper+1)^0,w,c
  4849  0027E4  2206               	addwfc	(??_isupper+3)^0,f,c
  4850  0027E6  5006               	movf	(??_isupper+3)^0,w,c
  4851  0027E8  E10A               	bnz	u1850
  4852  0027EA  0E1A               	movlw	26
  4853  0027EC  5C05               	subwf	(??_isupper+2)^0,w,c
  4854  0027EE  A0D8               	btfss	status,0,c
  4855  0027F0  EFFC  F013         	goto	u1851
  4856  0027F4  EFFF  F013         	goto	u1850
  4857  0027F8                     u1851:
  4858  0027F8  0E01               	movlw	1
  4859  0027FA  EF00  F014         	goto	u1860
  4860  0027FE                     u1850:
  4861  0027FE  0E00               	movlw	0
  4862  002800                     u1860:
  4863  002800  6E01               	movwf	?_isupper^0,c
  4864  002802  6A02               	clrf	(?_isupper+1)^0,c
  4865  002804  0012               	return		;funcret
  4866  002806                     __end_of_isupper:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _isalpha *****************
  4870 ;; Defined at:
  4871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  c               2    0[COMRAM] int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  2    0[COMRAM] int 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4885 ;;      Params:         2       0       0       0       0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4887 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4888 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4889 ;;Total ram usage:        6 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_xtoa
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text24
  4899  002720                     __ptext24:
  4900                           	callstack 0
  4901  002720                     _isalpha:
  4902                           	callstack 25
  4903  002720  0E9F               	movlw	159
  4904  002722  6E03               	movwf	??_isalpha^0,c
  4905  002724  0EFF               	movlw	255
  4906  002726  6E04               	movwf	(??_isalpha+1)^0,c
  4907  002728  0E20               	movlw	32
  4908  00272A  1001               	iorwf	isalpha@c^0,w,c
  4909  00272C  6E05               	movwf	(??_isalpha+2)^0,c
  4910  00272E  0E00               	movlw	0
  4911  002730  1002               	iorwf	(isalpha@c+1)^0,w,c
  4912  002732  6E06               	movwf	(??_isalpha+3)^0,c
  4913  002734  5003               	movf	??_isalpha^0,w,c
  4914  002736  2605               	addwf	(??_isalpha+2)^0,f,c
  4915  002738  5004               	movf	(??_isalpha+1)^0,w,c
  4916  00273A  2206               	addwfc	(??_isalpha+3)^0,f,c
  4917  00273C  5006               	movf	(??_isalpha+3)^0,w,c
  4918  00273E  E10A               	bnz	u1870
  4919  002740  0E1A               	movlw	26
  4920  002742  5C05               	subwf	(??_isalpha+2)^0,w,c
  4921  002744  A0D8               	btfss	status,0,c
  4922  002746  EFA7  F013         	goto	u1871
  4923  00274A  EFAA  F013         	goto	u1870
  4924  00274E                     u1871:
  4925  00274E  0E01               	movlw	1
  4926  002750  EFAB  F013         	goto	u1880
  4927  002754                     u1870:
  4928  002754  0E00               	movlw	0
  4929  002756                     u1880:
  4930  002756  6E01               	movwf	?_isalpha^0,c
  4931  002758  6A02               	clrf	(?_isalpha+1)^0,c
  4932  00275A  0012               	return		;funcret
  4933  00275C                     __end_of_isalpha:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _dtoa *****************
  4937 ;; Defined at:
  4938 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4941 ;;		 -> sprintf@f(6), 
  4942 ;;  d               8   29[COMRAM] long long 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  n               8   53[COMRAM] long long 
  4945 ;;  i               2   61[COMRAM] int 
  4946 ;;  s               2   51[COMRAM] int 
  4947 ;;  w               2   49[COMRAM] int 
  4948 ;;  p               2   47[COMRAM] int 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   27[COMRAM] int 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4958 ;;      Params:        10       0       0       0       0       0       0       0       0
  4959 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4960 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4961 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4962 ;;Total ram usage:       36 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    4
  4965 ;; This function calls:
  4966 ;;		___aodiv
  4967 ;;		___aomod
  4968 ;;		_abs
  4969 ;;		_pad
  4970 ;; This function is called by:
  4971 ;;		_vfpfcnvrt
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text25
  4976  000F98                     __ptext25:
  4977                           	callstack 0
  4978  000F98                     _dtoa:
  4979                           	callstack 22
  4980  000F98                     
  4981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4982  000F98  C01E  F036         	movff	dtoa@d,dtoa@n
  4983  000F9C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4984  000FA0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4985  000FA4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4986  000FA8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4987  000FAC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4988  000FB0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4989  000FB4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4990  000FB8                     
  4991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4992  000FB8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4993  000FBA  EFE1  F007         	goto	u1951
  4994  000FBE  EFE4  F007         	goto	u1950
  4995  000FC2                     u1951:
  4996  000FC2  0E01               	movlw	1
  4997  000FC4  EFE5  F007         	goto	u1960
  4998  000FC8                     u1950:
  4999  000FC8  0E00               	movlw	0
  5000  000FCA                     u1960:
  5001  000FCA  6E34               	movwf	dtoa@s^0,c
  5002  000FCC  6A35               	clrf	(dtoa@s+1)^0,c
  5003                           
  5004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5005  000FCE  5034               	movf	dtoa@s^0,w,c
  5006  000FD0  1035               	iorwf	(dtoa@s+1)^0,w,c
  5007  000FD2  B4D8               	btfsc	status,2,c
  5008  000FD4  EFEE  F007         	goto	u1971
  5009  000FD8  EFF0  F007         	goto	u1970
  5010  000FDC                     u1971:
  5011  000FDC  EF00  F008         	goto	l2575
  5012  000FE0                     u1970:
  5013  000FE0                     
  5014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5015  000FE0  1E3D               	comf	(dtoa@n+7)^0,f,c
  5016  000FE2  1E3C               	comf	(dtoa@n+6)^0,f,c
  5017  000FE4  1E3B               	comf	(dtoa@n+5)^0,f,c
  5018  000FE6  1E3A               	comf	(dtoa@n+4)^0,f,c
  5019  000FE8  1E39               	comf	(dtoa@n+3)^0,f,c
  5020  000FEA  1E38               	comf	(dtoa@n+2)^0,f,c
  5021  000FEC  1E37               	comf	(dtoa@n+1)^0,f,c
  5022  000FEE  6C36               	negf	dtoa@n^0,c
  5023  000FF0  0E00               	movlw	0
  5024  000FF2  2237               	addwfc	(dtoa@n+1)^0,f,c
  5025  000FF4  2238               	addwfc	(dtoa@n+2)^0,f,c
  5026  000FF6  2239               	addwfc	(dtoa@n+3)^0,f,c
  5027  000FF8  223A               	addwfc	(dtoa@n+4)^0,f,c
  5028  000FFA  223B               	addwfc	(dtoa@n+5)^0,f,c
  5029  000FFC  223C               	addwfc	(dtoa@n+6)^0,f,c
  5030  000FFE  223D               	addwfc	(dtoa@n+7)^0,f,c
  5031  001000                     l2575:
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5034  001000  0100               	movlb	0	; () banked
  5035  001002  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  5036  001004  EF06  F008         	goto	u1981
  5037  001008  EF08  F008         	goto	u1980
  5038  00100C                     u1981:
  5039  00100C  EF09  F008         	goto	l2579
  5040  001010                     u1980:
  5041  001010                     
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5044  001010  93E6               	bcf	_flags& (0+255),1,b
  5045  001012                     l2579:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5049  001012  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  5050  001014  EF16  F008         	goto	u1990
  5051  001018  51E5               	movf	(_prec+1)& (0+255),w,b
  5052  00101A  E106               	bnz	u1991
  5053  00101C  05E4               	decf	_prec& (0+255),w,b
  5054  00101E  B0D8               	btfsc	status,0,c
  5055  001020  EF14  F008         	goto	u1991
  5056  001024  EF16  F008         	goto	u1990
  5057  001028                     u1991:
  5058  001028  EF1C  F008         	goto	l1197
  5059  00102C                     u1990:
  5060  00102C                     
  5061                           ; BSR set to: 0
  5062  00102C  0E00               	movlw	0
  5063  00102E  6E31               	movwf	(dtoa@p+1)^0,c
  5064  001030  0E01               	movlw	1
  5065  001032  6E30               	movwf	dtoa@p^0,c
  5066  001034  EF20  F008         	goto	l1199
  5067  001038                     l1197:
  5068                           
  5069                           ; BSR set to: 0
  5070  001038  C0E4  F030         	movff	_prec,dtoa@p
  5071  00103C  C0E5  F031         	movff	_prec+1,dtoa@p+1
  5072  001040                     l1199:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5076  001040  C0E2  F032         	movff	_width,dtoa@w
  5077  001044  C0E3  F033         	movff	_width+1,dtoa@w+1
  5078  001048                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5081  001048  5034               	movf	dtoa@s^0,w,c
  5082  00104A  1035               	iorwf	(dtoa@s+1)^0,w,c
  5083  00104C  A4D8               	btfss	status,2,c
  5084  00104E  EF2B  F008         	goto	u2001
  5085  001052  EF2D  F008         	goto	u2000
  5086  001056                     u2001:
  5087  001056  EF34  F008         	goto	l2587
  5088  00105A                     u2000:
  5089  00105A                     
  5090                           ; BSR set to: 0
  5091  00105A  A5E6               	btfss	_flags& (0+255),2,b
  5092  00105C  EF32  F008         	goto	u2011
  5093  001060  EF34  F008         	goto	u2010
  5094  001064                     u2011:
  5095  001064  EF37  F008         	goto	l2589
  5096  001068                     u2010:
  5097  001068                     l2587:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5101  001068  0632               	decf	dtoa@w^0,f,c
  5102  00106A  A0D8               	btfss	status,0,c
  5103  00106C  0633               	decf	(dtoa@w+1)^0,f,c
  5104  00106E                     l2589:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5108  00106E  0E00               	movlw	0
  5109  001070  6E3F               	movwf	(dtoa@i+1)^0,c
  5110  001072  0E1F               	movlw	31
  5111  001074  6E3E               	movwf	dtoa@i^0,c
  5112  001076                     
  5113                           ; BSR set to: 0
  5114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5115  001076  0E00               	movlw	0
  5116  001078  0102               	movlb	2	; () banked
  5117  00107A  6FDC               	movwf	(_dbuf+31)& (0+255),b
  5118                           
  5119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5120  00107C  EFBC  F008         	goto	l2603
  5121  001080                     l2593:
  5122                           
  5123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5124  001080  063E               	decf	dtoa@i^0,f,c
  5125  001082  A0D8               	btfss	status,0,c
  5126  001084  063F               	decf	(dtoa@i+1)^0,f,c
  5127  001086                     
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5129  001086  0EBD               	movlw	low _dbuf
  5130  001088  243E               	addwf	dtoa@i^0,w,c
  5131  00108A  6ED9               	movwf	fsr2l,c
  5132  00108C  0E02               	movlw	high _dbuf
  5133  00108E  203F               	addwfc	(dtoa@i+1)^0,w,c
  5134  001090  6EDA               	movwf	fsr2h,c
  5135  001092  C036  F001         	movff	dtoa@n,___aomod@dividend
  5136  001096  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5137  00109A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5138  00109E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5139  0010A2  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5140  0010A6  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5141  0010AA  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5142  0010AE  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5143  0010B2  0E0A               	movlw	10
  5144  0010B4  6E09               	movwf	___aomod@divisor^0,c
  5145  0010B6  0E00               	movlw	0
  5146  0010B8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5147  0010BA  0E00               	movlw	0
  5148  0010BC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5149  0010BE  0E00               	movlw	0
  5150  0010C0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5151  0010C2  0E00               	movlw	0
  5152  0010C4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5153  0010C6  0E00               	movlw	0
  5154  0010C8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5155  0010CA  0E00               	movlw	0
  5156  0010CC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5157  0010CE  0E00               	movlw	0
  5158  0010D0  6E10               	movwf	(___aomod@divisor+7)^0,c
  5159  0010D2  ECD8  F00D         	call	___aomod	;wreg free
  5160  0010D6  C001  F026         	movff	?___aomod,??_dtoa
  5161  0010DA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5162  0010DE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5163  0010E2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5164  0010E6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5165  0010EA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5166  0010EE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5167  0010F2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5168  0010F6  C026  F013         	movff	??_dtoa,abs@a
  5169  0010FA  C028  F014         	movff	??_dtoa+2,abs@a+1
  5170  0010FE  EC50  F013         	call	_abs	;wreg free
  5171  001102  5013               	movf	?_abs^0,w,c
  5172  001104  0F30               	addlw	48
  5173  001106  6EDF               	movwf	indf2,c
  5174  001108                     
  5175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5176  001108  0630               	decf	dtoa@p^0,f,c
  5177  00110A  A0D8               	btfss	status,0,c
  5178  00110C  0631               	decf	(dtoa@p+1)^0,f,c
  5179  00110E                     
  5180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5181  00110E  0632               	decf	dtoa@w^0,f,c
  5182  001110  A0D8               	btfss	status,0,c
  5183  001112  0633               	decf	(dtoa@w+1)^0,f,c
  5184  001114                     
  5185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5186  001114  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5187  001118  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5188  00111C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5189  001120  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5190  001124  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5191  001128  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5192  00112C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5193  001130  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5194  001134  0E0A               	movlw	10
  5195  001136  6E09               	movwf	___aodiv@divisor^0,c
  5196  001138  0E00               	movlw	0
  5197  00113A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5198  00113C  0E00               	movlw	0
  5199  00113E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5200  001140  0E00               	movlw	0
  5201  001142  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5202  001144  0E00               	movlw	0
  5203  001146  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5204  001148  0E00               	movlw	0
  5205  00114A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5206  00114C  0E00               	movlw	0
  5207  00114E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5208  001150  0E00               	movlw	0
  5209  001152  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5210  001154  EC14  F00D         	call	___aodiv	;wreg free
  5211  001158  C001  F036         	movff	?___aodiv,dtoa@n
  5212  00115C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5213  001160  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5214  001164  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5215  001168  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5216  00116C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5217  001170  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5218  001174  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5219  001178                     l2603:
  5220                           
  5221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5222  001178  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5223  00117A  EFC7  F008         	goto	u2021
  5224  00117E  503F               	movf	(dtoa@i+1)^0,w,c
  5225  001180  E108               	bnz	u2020
  5226  001182  043E               	decf	dtoa@i^0,w,c
  5227  001184  A0D8               	btfss	status,0,c
  5228  001186  EFC7  F008         	goto	u2021
  5229  00118A  EFC9  F008         	goto	u2020
  5230  00118E                     u2021:
  5231  00118E  EFFA  F008         	goto	l2613
  5232  001192                     u2020:
  5233  001192  5036               	movf	dtoa@n^0,w,c
  5234  001194  1037               	iorwf	(dtoa@n+1)^0,w,c
  5235  001196  1038               	iorwf	(dtoa@n+2)^0,w,c
  5236  001198  1039               	iorwf	(dtoa@n+3)^0,w,c
  5237  00119A  103A               	iorwf	(dtoa@n+4)^0,w,c
  5238  00119C  103B               	iorwf	(dtoa@n+5)^0,w,c
  5239  00119E  103C               	iorwf	(dtoa@n+6)^0,w,c
  5240  0011A0  103D               	iorwf	(dtoa@n+7)^0,w,c
  5241  0011A2  A4D8               	btfss	status,2,c
  5242  0011A4  EFD6  F008         	goto	u2031
  5243  0011A8  EFD8  F008         	goto	u2030
  5244  0011AC                     u2031:
  5245  0011AC  EF40  F008         	goto	l2593
  5246  0011B0                     u2030:
  5247  0011B0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5248  0011B2  EFE5  F008         	goto	u2040
  5249  0011B6  5031               	movf	(dtoa@p+1)^0,w,c
  5250  0011B8  E106               	bnz	u2041
  5251  0011BA  0430               	decf	dtoa@p^0,w,c
  5252  0011BC  B0D8               	btfsc	status,0,c
  5253  0011BE  EFE3  F008         	goto	u2041
  5254  0011C2  EFE5  F008         	goto	u2040
  5255  0011C6                     u2041:
  5256  0011C6  EF40  F008         	goto	l2593
  5257  0011CA                     u2040:
  5258  0011CA  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5259  0011CC  EFF0  F008         	goto	u2051
  5260  0011D0  5033               	movf	(dtoa@w+1)^0,w,c
  5261  0011D2  E108               	bnz	u2050
  5262  0011D4  0432               	decf	dtoa@w^0,w,c
  5263  0011D6  A0D8               	btfss	status,0,c
  5264  0011D8  EFF0  F008         	goto	u2051
  5265  0011DC  EFF2  F008         	goto	u2050
  5266  0011E0                     u2051:
  5267  0011E0  EFFA  F008         	goto	l2613
  5268  0011E4                     u2050:
  5269  0011E4  0100               	movlb	0	; () banked
  5270  0011E6  B3E6               	btfsc	_flags& (0+255),1,b
  5271  0011E8  EFF8  F008         	goto	u2061
  5272  0011EC  EFFA  F008         	goto	u2060
  5273  0011F0                     u2061:
  5274  0011F0  EF40  F008         	goto	l2593
  5275  0011F4                     u2060:
  5276  0011F4                     l2613:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5279  0011F4  5034               	movf	dtoa@s^0,w,c
  5280  0011F6  1035               	iorwf	(dtoa@s+1)^0,w,c
  5281  0011F8  A4D8               	btfss	status,2,c
  5282  0011FA  EF01  F009         	goto	u2071
  5283  0011FE  EF03  F009         	goto	u2070
  5284  001202                     u2071:
  5285  001202  EF0B  F009         	goto	l2617
  5286  001206                     u2070:
  5287  001206  0100               	movlb	0	; () banked
  5288  001208  A5E6               	btfss	_flags& (0+255),2,b
  5289  00120A  EF09  F009         	goto	u2081
  5290  00120E  EF0B  F009         	goto	u2080
  5291  001212                     u2081:
  5292  001212  EF29  F009         	goto	l2627
  5293  001216                     u2080:
  5294  001216                     l2617:
  5295                           
  5296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5297  001216  063E               	decf	dtoa@i^0,f,c
  5298  001218  A0D8               	btfss	status,0,c
  5299  00121A  063F               	decf	(dtoa@i+1)^0,f,c
  5300  00121C                     
  5301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5302  00121C  5034               	movf	dtoa@s^0,w,c
  5303  00121E  1035               	iorwf	(dtoa@s+1)^0,w,c
  5304  001220  A4D8               	btfss	status,2,c
  5305  001222  EF15  F009         	goto	u2091
  5306  001226  EF17  F009         	goto	u2090
  5307  00122A                     u2091:
  5308  00122A  EF1D  F009         	goto	l2623
  5309  00122E                     u2090:
  5310  00122E  0E00               	movlw	0
  5311  001230  6E2F               	movwf	(_dtoa$1375+1)^0,c
  5312  001232  0E2B               	movlw	43
  5313  001234  6E2E               	movwf	_dtoa$1375^0,c
  5314  001236  EF21  F009         	goto	l2625
  5315  00123A                     l2623:
  5316  00123A  0E00               	movlw	0
  5317  00123C  6E2F               	movwf	(_dtoa$1375+1)^0,c
  5318  00123E  0E2D               	movlw	45
  5319  001240  6E2E               	movwf	_dtoa$1375^0,c
  5320  001242                     l2625:
  5321  001242  0EBD               	movlw	low _dbuf
  5322  001244  243E               	addwf	dtoa@i^0,w,c
  5323  001246  6ED9               	movwf	fsr2l,c
  5324  001248  0E02               	movlw	high _dbuf
  5325  00124A  203F               	addwfc	(dtoa@i+1)^0,w,c
  5326  00124C  6EDA               	movwf	fsr2h,c
  5327  00124E  C02E  FFDF         	movff	_dtoa$1375,indf2
  5328  001252                     l2627:
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5331  001252  C01C  F011         	movff	dtoa@fp,pad@fp
  5332  001256  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5333  00125A  0EBD               	movlw	low _dbuf
  5334  00125C  243E               	addwf	dtoa@i^0,w,c
  5335  00125E  6E13               	movwf	pad@buf^0,c
  5336  001260  0E02               	movlw	high _dbuf
  5337  001262  203F               	addwfc	(dtoa@i+1)^0,w,c
  5338  001264  6E14               	movwf	(pad@buf+1)^0,c
  5339  001266  C032  F015         	movff	dtoa@w,pad@p
  5340  00126A  C033  F016         	movff	dtoa@w+1,pad@p+1
  5341  00126E  ECC9  F00F         	call	_pad	;wreg free
  5342  001272  C011  F01C         	movff	?_pad,?_dtoa
  5343  001276  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5344  00127A  0012               	return		;funcret
  5345  00127C                     __end_of_dtoa:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _pad *****************
  5349 ;; Defined at:
  5350 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5353 ;;		 -> sprintf@f(6), 
  5354 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5355 ;;		 -> dbuf(32), 
  5356 ;;  p               2   20[COMRAM] int 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  w               2   25[COMRAM] int 
  5359 ;;  i               2   23[COMRAM] int 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  2   16[COMRAM] int 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5369 ;;      Params:         6       0       0       0       0       0       0       0       0
  5370 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5371 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5372 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5373 ;;Total ram usage:       11 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    3
  5376 ;; This function calls:
  5377 ;;		_fputc
  5378 ;;		_fputs
  5379 ;;		_strlen
  5380 ;; This function is called by:
  5381 ;;		_dtoa
  5382 ;;		_xtoa
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text26
  5387  001F92                     __ptext26:
  5388                           	callstack 0
  5389  001F92                     _pad:
  5390                           	callstack 22
  5391  001F92                     
  5392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5393  001F92  0100               	movlb	0	; () banked
  5394  001F94  A1E6               	btfss	_flags& (0+255),0,b
  5395  001F96  EFCF  F00F         	goto	u1801
  5396  001F9A  EFD1  F00F         	goto	u1800
  5397  001F9E                     u1801:
  5398  001F9E  EFDB  F00F         	goto	l2511
  5399  001FA2                     u1800:
  5400  001FA2                     
  5401                           ; BSR set to: 0
  5402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5403  001FA2  C013  F00A         	movff	pad@buf,fputs@s
  5404  001FA6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5405  001FAA  C011  F00C         	movff	pad@fp,fputs@fp
  5406  001FAE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5407  001FB2  EC2E  F013         	call	_fputs	;wreg free
  5408  001FB6                     l2511:
  5409                           
  5410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5411  001FB6  BE16               	btfsc	(pad@p+1)^0,7,c
  5412  001FB8  EFE0  F00F         	goto	u1811
  5413  001FBC  EFE2  F00F         	goto	u1810
  5414  001FC0                     u1811:
  5415  001FC0  EFE8  F00F         	goto	l2515
  5416  001FC4                     u1810:
  5417  001FC4  C015  F01A         	movff	pad@p,pad@w
  5418  001FC8  C016  F01B         	movff	pad@p+1,pad@w+1
  5419  001FCC  EFEC  F00F         	goto	l1186
  5420  001FD0                     l2515:
  5421  001FD0  0E00               	movlw	0
  5422  001FD2  6E1B               	movwf	(pad@w+1)^0,c
  5423  001FD4  0E00               	movlw	0
  5424  001FD6  6E1A               	movwf	pad@w^0,c
  5425  001FD8                     l1186:
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5428  001FD8  0E00               	movlw	0
  5429  001FDA  6E19               	movwf	(pad@i+1)^0,c
  5430  001FDC  0E00               	movlw	0
  5431  001FDE  6E18               	movwf	pad@i^0,c
  5432                           
  5433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5434  001FE0  EFFE  F00F         	goto	l2521
  5435  001FE4                     l2517:
  5436                           
  5437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5438  001FE4  0E00               	movlw	0
  5439  001FE6  6E02               	movwf	(fputc@c+1)^0,c
  5440  001FE8  0E20               	movlw	32
  5441  001FEA  6E01               	movwf	fputc@c^0,c
  5442  001FEC  C011  F003         	movff	pad@fp,fputc@fp
  5443  001FF0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5444  001FF4  EC64  F00F         	call	_fputc	;wreg free
  5445  001FF8                     
  5446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5447  001FF8  4A18               	infsnz	pad@i^0,f,c
  5448  001FFA  2A19               	incf	(pad@i+1)^0,f,c
  5449  001FFC                     l2521:
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5452  001FFC  501A               	movf	pad@w^0,w,c
  5453  001FFE  5C18               	subwf	pad@i^0,w,c
  5454  002000  5019               	movf	(pad@i+1)^0,w,c
  5455  002002  0A80               	xorlw	128
  5456  002004  6E17               	movwf	??_pad^0,c
  5457  002006  501B               	movf	(pad@w+1)^0,w,c
  5458  002008  0A80               	xorlw	128
  5459  00200A  5817               	subwfb	??_pad^0,w,c
  5460  00200C  A0D8               	btfss	status,0,c
  5461  00200E  EF0B  F010         	goto	u1821
  5462  002012  EF0D  F010         	goto	u1820
  5463  002016                     u1821:
  5464  002016  EFF2  F00F         	goto	l2517
  5465  00201A                     u1820:
  5466  00201A                     
  5467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5468  00201A  0100               	movlb	0	; () banked
  5469  00201C  B1E6               	btfsc	_flags& (0+255),0,b
  5470  00201E  EF13  F010         	goto	u1831
  5471  002022  EF15  F010         	goto	u1830
  5472  002026                     u1831:
  5473  002026  EF1F  F010         	goto	l2525
  5474  00202A                     u1830:
  5475  00202A                     
  5476                           ; BSR set to: 0
  5477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5478  00202A  C013  F00A         	movff	pad@buf,fputs@s
  5479  00202E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5480  002032  C011  F00C         	movff	pad@fp,fputs@fp
  5481  002036  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5482  00203A  EC2E  F013         	call	_fputs	;wreg free
  5483  00203E                     l2525:
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5486  00203E  C013  F001         	movff	pad@buf,strlen@s
  5487  002042  C014  F002         	movff	pad@buf+1,strlen@s+1
  5488  002046  EC03  F014         	call	_strlen	;wreg free
  5489  00204A  501A               	movf	pad@w^0,w,c
  5490  00204C  2401               	addwf	?_strlen^0,w,c
  5491  00204E  6E11               	movwf	?_pad^0,c
  5492  002050  501B               	movf	(pad@w+1)^0,w,c
  5493  002052  2002               	addwfc	(?_strlen+1)^0,w,c
  5494  002054  6E12               	movwf	(?_pad+1)^0,c
  5495  002056  0012               	return		;funcret
  5496  002058                     __end_of_pad:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function _strlen *****************
  5500 ;; Defined at:
  5501 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5504 ;;		 -> dbuf(32), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5507 ;;		 -> dbuf(32), 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  2    0[COMRAM] unsigned int 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5517 ;;      Params:         2       0       0       0       0       0       0       0       0
  5518 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        4 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_pad
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text27
  5531  002806                     __ptext27:
  5532                           	callstack 0
  5533  002806                     _strlen:
  5534                           	callstack 24
  5535  002806  C001  F003         	movff	strlen@s,strlen@a
  5536  00280A  C002  F004         	movff	strlen@s+1,strlen@a+1
  5537  00280E  EF0B  F014         	goto	l2417
  5538  002812                     l2415:
  5539  002812  4A01               	infsnz	strlen@s^0,f,c
  5540  002814  2A02               	incf	(strlen@s+1)^0,f,c
  5541  002816                     l2417:
  5542  002816  C001  FFD9         	movff	strlen@s,fsr2l
  5543  00281A  C002  FFDA         	movff	strlen@s+1,fsr2h
  5544  00281E  50DF               	movf	indf2,w,c
  5545  002820  A4D8               	btfss	status,2,c
  5546  002822  EF15  F014         	goto	u1641
  5547  002826  EF17  F014         	goto	u1640
  5548  00282A                     u1641:
  5549  00282A  EF09  F014         	goto	l2415
  5550  00282E                     u1640:
  5551  00282E  5003               	movf	strlen@a^0,w,c
  5552  002830  5C01               	subwf	strlen@s^0,w,c
  5553  002832  6E01               	movwf	?_strlen^0,c
  5554  002834  5004               	movf	(strlen@a+1)^0,w,c
  5555  002836  5802               	subwfb	(strlen@s+1)^0,w,c
  5556  002838  6E02               	movwf	(?_strlen+1)^0,c
  5557  00283A  0012               	return		;funcret
  5558  00283C                     __end_of_strlen:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function _fputs *****************
  5562 ;; Defined at:
  5563 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5566 ;;		 -> dbuf(32), 
  5567 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5568 ;;		 -> sprintf@f(6), 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  i               2   14[COMRAM] int 
  5571 ;;  c               1   13[COMRAM] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2    9[COMRAM] int 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5581 ;;      Params:         4       0       0       0       0       0       0       0       0
  5582 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5584 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5585 ;;Total ram usage:        7 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    2
  5588 ;; This function calls:
  5589 ;;		_fputc
  5590 ;; This function is called by:
  5591 ;;		_pad
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text28
  5596  00265C                     __ptext28:
  5597                           	callstack 0
  5598  00265C                     _fputs:
  5599                           	callstack 22
  5600  00265C  0E00               	movlw	0
  5601  00265E  6E10               	movwf	(fputs@i+1)^0,c
  5602  002660  0E00               	movlw	0
  5603  002662  6E0F               	movwf	fputs@i^0,c
  5604  002664  EF3F  F013         	goto	l2411
  5605  002668                     l2407:
  5606  002668  C00E  F001         	movff	fputs@c,fputc@c
  5607  00266C  6A02               	clrf	(fputc@c+1)^0,c
  5608  00266E  C00C  F003         	movff	fputs@fp,fputc@fp
  5609  002672  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5610  002676  EC64  F00F         	call	_fputc	;wreg free
  5611  00267A  4A0F               	infsnz	fputs@i^0,f,c
  5612  00267C  2A10               	incf	(fputs@i+1)^0,f,c
  5613  00267E                     l2411:
  5614  00267E  500F               	movf	fputs@i^0,w,c
  5615  002680  240A               	addwf	fputs@s^0,w,c
  5616  002682  6ED9               	movwf	fsr2l,c
  5617  002684  5010               	movf	(fputs@i+1)^0,w,c
  5618  002686  200B               	addwfc	(fputs@s+1)^0,w,c
  5619  002688  6EDA               	movwf	fsr2h,c
  5620  00268A  50DF               	movf	indf2,w,c
  5621  00268C  6E0E               	movwf	fputs@c^0,c
  5622  00268E  500E               	movf	fputs@c^0,w,c
  5623  002690  A4D8               	btfss	status,2,c
  5624  002692  EF4D  F013         	goto	u1631
  5625  002696  EF4F  F013         	goto	u1630
  5626  00269A                     u1631:
  5627  00269A  EF34  F013         	goto	l2407
  5628  00269E                     u1630:
  5629  00269E  0012               	return		;funcret
  5630  0026A0                     __end_of_fputs:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _fputc *****************
  5634 ;; Defined at:
  5635 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  c               2    0[COMRAM] int 
  5638 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5639 ;;		 -> sprintf@f(6), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2    0[COMRAM] int 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5651 ;;      Params:         4       0       0       0       0       0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5653 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5654 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5655 ;;Total ram usage:        9 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    1
  5658 ;; This function calls:
  5659 ;;		_putch
  5660 ;; This function is called by:
  5661 ;;		_pad
  5662 ;;		_vfpfcnvrt
  5663 ;;		_fputs
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text29
  5668  001EC8                     __ptext29:
  5669                           	callstack 0
  5670  001EC8                     _fputc:
  5671                           	callstack 22
  5672  001EC8  5003               	movf	fputc@fp^0,w,c
  5673  001ECA  1004               	iorwf	(fputc@fp+1)^0,w,c
  5674  001ECC  B4D8               	btfsc	status,2,c
  5675  001ECE  EF6B  F00F         	goto	u1591
  5676  001ED2  EF6D  F00F         	goto	u1590
  5677  001ED6                     u1591:
  5678  001ED6  EF76  F00F         	goto	l2395
  5679  001EDA                     u1590:
  5680  001EDA  5003               	movf	fputc@fp^0,w,c
  5681  001EDC  1004               	iorwf	(fputc@fp+1)^0,w,c
  5682  001EDE  A4D8               	btfss	status,2,c
  5683  001EE0  EF74  F00F         	goto	u1601
  5684  001EE4  EF76  F00F         	goto	u1600
  5685  001EE8                     u1601:
  5686  001EE8  EF7B  F00F         	goto	l2397
  5687  001EEC                     u1600:
  5688  001EEC                     l2395:
  5689  001EEC  5001               	movf	fputc@c^0,w,c
  5690  001EEE  ECFF  F014         	call	_putch
  5691  001EF2  EFC8  F00F         	goto	l1295
  5692  001EF6                     l2397:
  5693  001EF6  EE20 F004          	lfsr	2,4
  5694  001EFA  5003               	movf	fputc@fp^0,w,c
  5695  001EFC  26D9               	addwf	fsr2l,f,c
  5696  001EFE  5004               	movf	(fputc@fp+1)^0,w,c
  5697  001F00  22DA               	addwfc	fsr2h,f,c
  5698  001F02  50DE               	movf	postinc2,w,c
  5699  001F04  10DE               	iorwf	postinc2,w,c
  5700  001F06  B4D8               	btfsc	status,2,c
  5701  001F08  EF88  F00F         	goto	u1611
  5702  001F0C  EF8A  F00F         	goto	u1610
  5703  001F10                     u1611:
  5704  001F10  EFA5  F00F         	goto	l2401
  5705  001F14                     u1610:
  5706  001F14  EE20 F004          	lfsr	2,4
  5707  001F18  5003               	movf	fputc@fp^0,w,c
  5708  001F1A  26D9               	addwf	fsr2l,f,c
  5709  001F1C  5004               	movf	(fputc@fp+1)^0,w,c
  5710  001F1E  22DA               	addwfc	fsr2h,f,c
  5711  001F20  EE10 F002          	lfsr	1,2
  5712  001F24  5003               	movf	fputc@fp^0,w,c
  5713  001F26  26E1               	addwf	fsr1l,f,c
  5714  001F28  5004               	movf	(fputc@fp+1)^0,w,c
  5715  001F2A  22E2               	addwfc	fsr1h,f,c
  5716  001F2C  50DE               	movf	postinc2,w,c
  5717  001F2E  5CE6               	subwf	postinc1,w,c
  5718  001F30  50E6               	movf	postinc1,w,c
  5719  001F32  0A80               	xorlw	128
  5720  001F34  6E09               	movwf	(??_fputc+4)^0,c
  5721  001F36  50DE               	movf	postinc2,w,c
  5722  001F38  0A80               	xorlw	128
  5723  001F3A  5809               	subwfb	(??_fputc+4)^0,w,c
  5724  001F3C  B0D8               	btfsc	status,0,c
  5725  001F3E  EFA3  F00F         	goto	u1621
  5726  001F42  EFA5  F00F         	goto	u1620
  5727  001F46                     u1621:
  5728  001F46  EFC8  F00F         	goto	l1295
  5729  001F4A                     u1620:
  5730  001F4A                     l2401:
  5731  001F4A  EE20 F002          	lfsr	2,2
  5732  001F4E  5003               	movf	fputc@fp^0,w,c
  5733  001F50  26D9               	addwf	fsr2l,f,c
  5734  001F52  5004               	movf	(fputc@fp+1)^0,w,c
  5735  001F54  22DA               	addwfc	fsr2h,f,c
  5736  001F56  CFDE F005          	movff	postinc2,??_fputc
  5737  001F5A  CFDD F006          	movff	postdec2,??_fputc+1
  5738  001F5E  C003  FFD9         	movff	fputc@fp,fsr2l
  5739  001F62  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5740  001F66  CFDE F007          	movff	postinc2,??_fputc+2
  5741  001F6A  CFDD F008          	movff	postdec2,??_fputc+3
  5742  001F6E  5005               	movf	??_fputc^0,w,c
  5743  001F70  2407               	addwf	(??_fputc+2)^0,w,c
  5744  001F72  6ED9               	movwf	fsr2l,c
  5745  001F74  5006               	movf	(??_fputc+1)^0,w,c
  5746  001F76  2008               	addwfc	(??_fputc+3)^0,w,c
  5747  001F78  6EDA               	movwf	fsr2h,c
  5748  001F7A  C001  FFDF         	movff	fputc@c,indf2
  5749  001F7E  EE20 F002          	lfsr	2,2
  5750  001F82  5003               	movf	fputc@fp^0,w,c
  5751  001F84  26D9               	addwf	fsr2l,f,c
  5752  001F86  5004               	movf	(fputc@fp+1)^0,w,c
  5753  001F88  22DA               	addwfc	fsr2h,f,c
  5754  001F8A  2ADE               	incf	postinc2,f,c
  5755  001F8C  0E00               	movlw	0
  5756  001F8E  22DD               	addwfc	postdec2,f,c
  5757  001F90                     l1295:
  5758  001F90  0012               	return		;funcret
  5759  001F92                     __end_of_fputc:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _putch *****************
  5763 ;; Defined at:
  5764 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  c               1    wreg     unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  c               1    0[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_fputc
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text30
  5792  0029FE                     __ptext30:
  5793                           	callstack 0
  5794  0029FE                     _putch:
  5795                           	callstack 22
  5796  0029FE  0012               	return		;funcret
  5797  002A00                     __end_of_putch:
  5798                           	callstack 0
  5799                           
  5800 ;; *************** function _abs *****************
  5801 ;; Defined at:
  5802 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  a               2   18[COMRAM] int 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  2   18[COMRAM] int 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5816 ;;      Params:         2       0       0       0       0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5818 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5819 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5820 ;;Total ram usage:        4 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_dtoa
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text31
  5830  0026A0                     __ptext31:
  5831                           	callstack 0
  5832  0026A0                     _abs:
  5833                           	callstack 25
  5834  0026A0  BE14               	btfsc	(abs@a+1)^0,7,c
  5835  0026A2  EF5D  F013         	goto	u1840
  5836  0026A6  5014               	movf	(abs@a+1)^0,w,c
  5837  0026A8  E106               	bnz	u1841
  5838  0026AA  0413               	decf	abs@a^0,w,c
  5839  0026AC  B0D8               	btfsc	status,0,c
  5840  0026AE  EF5B  F013         	goto	u1841
  5841  0026B2  EF5D  F013         	goto	u1840
  5842  0026B6                     u1841:
  5843  0026B6  EF6B  F013         	goto	l1268
  5844  0026BA                     u1840:
  5845  0026BA  C013  F015         	movff	abs@a,??_abs
  5846  0026BE  C014  F016         	movff	abs@a+1,??_abs+1
  5847  0026C2  1E15               	comf	??_abs^0,f,c
  5848  0026C4  1E16               	comf	(??_abs+1)^0,f,c
  5849  0026C6  4A15               	infsnz	??_abs^0,f,c
  5850  0026C8  2A16               	incf	(??_abs+1)^0,f,c
  5851  0026CA  C015  F013         	movff	??_abs,?_abs
  5852  0026CE  C016  F014         	movff	??_abs+1,?_abs+1
  5853  0026D2  EF6F  F013         	goto	l1271
  5854  0026D6                     l1268:
  5855  0026D6  C013  F013         	movff	abs@a,?_abs
  5856  0026DA  C014  F014         	movff	abs@a+1,?_abs+1
  5857  0026DE                     l1271:
  5858  0026DE  0012               	return		;funcret
  5859  0026E0                     __end_of_abs:
  5860                           	callstack 0
  5861                           
  5862 ;; *************** function ___aomod *****************
  5863 ;; Defined at:
  5864 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  dividend        8    0[COMRAM] long long 
  5867 ;;  divisor         8    8[COMRAM] long long 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  sign            1   17[COMRAM] unsigned char 
  5870 ;;  counter         1   16[COMRAM] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  8    0[COMRAM] long long 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5880 ;;      Params:        16       0       0       0       0       0       0       0       0
  5881 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5883 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5884 ;;Total ram usage:       18 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_dtoa
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text32
  5894  001BB0                     __ptext32:
  5895                           	callstack 0
  5896  001BB0                     ___aomod:
  5897                           	callstack 25
  5898  001BB0  0E00               	movlw	0
  5899  001BB2  6E12               	movwf	___aomod@sign^0,c
  5900  001BB4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5901  001BB6  EFE1  F00D         	goto	u1740
  5902  001BBA  EFDF  F00D         	goto	u1741
  5903  001BBE                     u1741:
  5904  001BBE  EFF3  F00D         	goto	l2479
  5905  001BC2                     u1740:
  5906  001BC2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5907  001BC4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5908  001BC6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5909  001BC8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5910  001BCA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5911  001BCC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5912  001BCE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5913  001BD0  6C01               	negf	___aomod@dividend^0,c
  5914  001BD2  0E00               	movlw	0
  5915  001BD4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5916  001BD6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5917  001BD8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5918  001BDA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5919  001BDC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5920  001BDE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5921  001BE0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5922  001BE2  0E01               	movlw	1
  5923  001BE4  6E12               	movwf	___aomod@sign^0,c
  5924  001BE6                     l2479:
  5925  001BE6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5926  001BE8  EFFA  F00D         	goto	u1750
  5927  001BEC  EFF8  F00D         	goto	u1751
  5928  001BF0                     u1751:
  5929  001BF0  EF0A  F00E         	goto	l2483
  5930  001BF4                     u1750:
  5931  001BF4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5932  001BF6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5933  001BF8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5934  001BFA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5935  001BFC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5936  001BFE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5937  001C00  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5938  001C02  6C09               	negf	___aomod@divisor^0,c
  5939  001C04  0E00               	movlw	0
  5940  001C06  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5941  001C08  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5942  001C0A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5943  001C0C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5944  001C0E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5945  001C10  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5946  001C12  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5947  001C14                     l2483:
  5948  001C14  5009               	movf	___aomod@divisor^0,w,c
  5949  001C16  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5950  001C18  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5951  001C1A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5952  001C1C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5953  001C1E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5954  001C20  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5955  001C22  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5956  001C24  B4D8               	btfsc	status,2,c
  5957  001C26  EF17  F00E         	goto	u1761
  5958  001C2A  EF19  F00E         	goto	u1760
  5959  001C2E                     u1761:
  5960  001C2E  EF61  F00E         	goto	l2499
  5961  001C32                     u1760:
  5962  001C32  0E01               	movlw	1
  5963  001C34  6E11               	movwf	___aomod@counter^0,c
  5964  001C36  EF27  F00E         	goto	l2489
  5965  001C3A                     l2487:
  5966  001C3A  90D8               	bcf	status,0,c
  5967  001C3C  3609               	rlcf	___aomod@divisor^0,f,c
  5968  001C3E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5969  001C40  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5970  001C42  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5971  001C44  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5972  001C46  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5973  001C48  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5974  001C4A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5975  001C4C  2A11               	incf	___aomod@counter^0,f,c
  5976  001C4E                     l2489:
  5977  001C4E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5978  001C50  EF2C  F00E         	goto	u1771
  5979  001C54  EF2E  F00E         	goto	u1770
  5980  001C58                     u1771:
  5981  001C58  EF1D  F00E         	goto	l2487
  5982  001C5C                     u1770:
  5983  001C5C                     l2491:
  5984  001C5C  5009               	movf	___aomod@divisor^0,w,c
  5985  001C5E  5C01               	subwf	___aomod@dividend^0,w,c
  5986  001C60  500A               	movf	(___aomod@divisor+1)^0,w,c
  5987  001C62  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5988  001C64  500B               	movf	(___aomod@divisor+2)^0,w,c
  5989  001C66  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5990  001C68  500C               	movf	(___aomod@divisor+3)^0,w,c
  5991  001C6A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5992  001C6C  500D               	movf	(___aomod@divisor+4)^0,w,c
  5993  001C6E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5994  001C70  500E               	movf	(___aomod@divisor+5)^0,w,c
  5995  001C72  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5996  001C74  500F               	movf	(___aomod@divisor+6)^0,w,c
  5997  001C76  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5998  001C78  5010               	movf	(___aomod@divisor+7)^0,w,c
  5999  001C7A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6000  001C7C  A0D8               	btfss	status,0,c
  6001  001C7E  EF43  F00E         	goto	u1781
  6002  001C82  EF45  F00E         	goto	u1780
  6003  001C86                     u1781:
  6004  001C86  EF55  F00E         	goto	l2495
  6005  001C8A                     u1780:
  6006  001C8A  5009               	movf	___aomod@divisor^0,w,c
  6007  001C8C  5E01               	subwf	___aomod@dividend^0,f,c
  6008  001C8E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6009  001C90  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6010  001C92  500B               	movf	(___aomod@divisor+2)^0,w,c
  6011  001C94  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6012  001C96  500C               	movf	(___aomod@divisor+3)^0,w,c
  6013  001C98  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6014  001C9A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6015  001C9C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6016  001C9E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6017  001CA0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6018  001CA2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6019  001CA4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6020  001CA6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6021  001CA8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6022  001CAA                     l2495:
  6023  001CAA  90D8               	bcf	status,0,c
  6024  001CAC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6025  001CAE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6026  001CB0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6027  001CB2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6028  001CB4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6029  001CB6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6030  001CB8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6031  001CBA  3209               	rrcf	___aomod@divisor^0,f,c
  6032  001CBC  2E11               	decfsz	___aomod@counter^0,f,c
  6033  001CBE  EF2E  F00E         	goto	l2491
  6034  001CC2                     l2499:
  6035  001CC2  5012               	movf	___aomod@sign^0,w,c
  6036  001CC4  B4D8               	btfsc	status,2,c
  6037  001CC6  EF67  F00E         	goto	u1791
  6038  001CCA  EF69  F00E         	goto	u1790
  6039  001CCE                     u1791:
  6040  001CCE  EF79  F00E         	goto	l2503
  6041  001CD2                     u1790:
  6042  001CD2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6043  001CD4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6044  001CD6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6045  001CD8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6046  001CDA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6047  001CDC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6048  001CDE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6049  001CE0  6C01               	negf	___aomod@dividend^0,c
  6050  001CE2  0E00               	movlw	0
  6051  001CE4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6052  001CE6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6053  001CE8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6054  001CEA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6055  001CEC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6056  001CEE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6057  001CF0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6058  001CF2                     l2503:
  6059  001CF2  C001  F001         	movff	___aomod@dividend,?___aomod
  6060  001CF6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6061  001CFA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6062  001CFE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6063  001D02  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6064  001D06  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6065  001D0A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6066  001D0E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6067  001D12  0012               	return		;funcret
  6068  001D14                     __end_of___aomod:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function ___aodiv *****************
  6072 ;; Defined at:
  6073 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  dividend        8    0[COMRAM] long long 
  6076 ;;  divisor         8    8[COMRAM] long long 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  quotient        8   18[COMRAM] long long 
  6079 ;;  sign            1   17[COMRAM] unsigned char 
  6080 ;;  counter         1   16[COMRAM] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  8    0[COMRAM] long long 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6090 ;;      Params:        16       0       0       0       0       0       0       0       0
  6091 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6093 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6094 ;;Total ram usage:       26 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_dtoa
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text33
  6104  001A28                     __ptext33:
  6105                           	callstack 0
  6106  001A28                     ___aodiv:
  6107                           	callstack 25
  6108  001A28  0E00               	movlw	0
  6109  001A2A  6E12               	movwf	___aodiv@sign^0,c
  6110  001A2C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6111  001A2E  EF1D  F00D         	goto	u1670
  6112  001A32  EF1B  F00D         	goto	u1671
  6113  001A36                     u1671:
  6114  001A36  EF2F  F00D         	goto	l2435
  6115  001A3A                     u1670:
  6116  001A3A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6117  001A3C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6118  001A3E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6119  001A40  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6120  001A42  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6121  001A44  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6122  001A46  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6123  001A48  6C09               	negf	___aodiv@divisor^0,c
  6124  001A4A  0E00               	movlw	0
  6125  001A4C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6126  001A4E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6127  001A50  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6128  001A52  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6129  001A54  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6130  001A56  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6131  001A58  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6132  001A5A  0E01               	movlw	1
  6133  001A5C  6E12               	movwf	___aodiv@sign^0,c
  6134  001A5E                     l2435:
  6135  001A5E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6136  001A60  EF36  F00D         	goto	u1680
  6137  001A64  EF34  F00D         	goto	u1681
  6138  001A68                     u1681:
  6139  001A68  EF48  F00D         	goto	l2441
  6140  001A6C                     u1680:
  6141  001A6C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6142  001A6E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6143  001A70  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6144  001A72  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6145  001A74  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6146  001A76  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6147  001A78  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6148  001A7A  6C01               	negf	___aodiv@dividend^0,c
  6149  001A7C  0E00               	movlw	0
  6150  001A7E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6151  001A80  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6152  001A82  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6153  001A84  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6154  001A86  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6155  001A88  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6156  001A8A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6157  001A8C  0E01               	movlw	1
  6158  001A8E  1A12               	xorwf	___aodiv@sign^0,f,c
  6159  001A90                     l2441:
  6160  001A90  EE20  F013         	lfsr	2,___aodiv@quotient
  6161  001A94  0E07               	movlw	7
  6162  001A96                     u1691:
  6163  001A96  6ADE               	clrf	postinc2,c
  6164  001A98  06E8               	decf	wreg,f,c
  6165  001A9A  E2FD               	bc	u1691
  6166  001A9C  5009               	movf	___aodiv@divisor^0,w,c
  6167  001A9E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6168  001AA0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6169  001AA2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6170  001AA4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6171  001AA6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6172  001AA8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6173  001AAA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6174  001AAC  B4D8               	btfsc	status,2,c
  6175  001AAE  EF5B  F00D         	goto	u1701
  6176  001AB2  EF5D  F00D         	goto	u1700
  6177  001AB6                     u1701:
  6178  001AB6  EFAF  F00D         	goto	l2463
  6179  001ABA                     u1700:
  6180  001ABA  0E01               	movlw	1
  6181  001ABC  6E11               	movwf	___aodiv@counter^0,c
  6182  001ABE  EF6B  F00D         	goto	l2449
  6183  001AC2                     l2447:
  6184  001AC2  90D8               	bcf	status,0,c
  6185  001AC4  3609               	rlcf	___aodiv@divisor^0,f,c
  6186  001AC6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6187  001AC8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6188  001ACA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6189  001ACC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6190  001ACE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6191  001AD0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6192  001AD2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6193  001AD4  2A11               	incf	___aodiv@counter^0,f,c
  6194  001AD6                     l2449:
  6195  001AD6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6196  001AD8  EF70  F00D         	goto	u1711
  6197  001ADC  EF72  F00D         	goto	u1710
  6198  001AE0                     u1711:
  6199  001AE0  EF61  F00D         	goto	l2447
  6200  001AE4                     u1710:
  6201  001AE4                     l2451:
  6202  001AE4  90D8               	bcf	status,0,c
  6203  001AE6  3613               	rlcf	___aodiv@quotient^0,f,c
  6204  001AE8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6205  001AEA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6206  001AEC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6207  001AEE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6208  001AF0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6209  001AF2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6210  001AF4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6211  001AF6  5009               	movf	___aodiv@divisor^0,w,c
  6212  001AF8  5C01               	subwf	___aodiv@dividend^0,w,c
  6213  001AFA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6214  001AFC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6215  001AFE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6216  001B00  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6217  001B02  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6218  001B04  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6219  001B06  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6220  001B08  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6221  001B0A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6222  001B0C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6223  001B0E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6224  001B10  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6225  001B12  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6226  001B14  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6227  001B16  A0D8               	btfss	status,0,c
  6228  001B18  EF90  F00D         	goto	u1721
  6229  001B1C  EF92  F00D         	goto	u1720
  6230  001B20                     u1721:
  6231  001B20  EFA3  F00D         	goto	l2459
  6232  001B24                     u1720:
  6233  001B24  5009               	movf	___aodiv@divisor^0,w,c
  6234  001B26  5E01               	subwf	___aodiv@dividend^0,f,c
  6235  001B28  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6236  001B2A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6237  001B2C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6238  001B2E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6239  001B30  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6240  001B32  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6241  001B34  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6242  001B36  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6243  001B38  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6244  001B3A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6245  001B3C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6246  001B3E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6247  001B40  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6248  001B42  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6249  001B44  8013               	bsf	___aodiv@quotient^0,0,c
  6250  001B46                     l2459:
  6251  001B46  90D8               	bcf	status,0,c
  6252  001B48  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6253  001B4A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6254  001B4C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6255  001B4E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6256  001B50  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6257  001B52  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6258  001B54  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6259  001B56  3209               	rrcf	___aodiv@divisor^0,f,c
  6260  001B58  2E11               	decfsz	___aodiv@counter^0,f,c
  6261  001B5A  EF72  F00D         	goto	l2451
  6262  001B5E                     l2463:
  6263  001B5E  5012               	movf	___aodiv@sign^0,w,c
  6264  001B60  B4D8               	btfsc	status,2,c
  6265  001B62  EFB5  F00D         	goto	u1731
  6266  001B66  EFB7  F00D         	goto	u1730
  6267  001B6A                     u1731:
  6268  001B6A  EFC7  F00D         	goto	l2467
  6269  001B6E                     u1730:
  6270  001B6E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6271  001B70  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6272  001B72  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6273  001B74  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6274  001B76  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6275  001B78  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6276  001B7A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6277  001B7C  6C13               	negf	___aodiv@quotient^0,c
  6278  001B7E  0E00               	movlw	0
  6279  001B80  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6280  001B82  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6281  001B84  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6282  001B86  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6283  001B88  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6284  001B8A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6285  001B8C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6286  001B8E                     l2467:
  6287  001B8E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6288  001B92  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6289  001B96  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6290  001B9A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6291  001B9E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6292  001BA2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6293  001BA6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6294  001BAA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6295  001BAE  0012               	return		;funcret
  6296  001BB0                     __end_of___aodiv:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _encenderBombillas *****************
  6300 ;; Defined at:
  6301 ;;		line 310 in file "Controlador.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  i               2  164[BANK1 ] int 
  6306 ;;  i               2  162[BANK1 ] int 
  6307 ;;  i               2  160[BANK1 ] int 
  6308 ;;  i               2  158[BANK1 ] int 
  6309 ;;  i               2  156[BANK1 ] int 
  6310 ;;  i               2  154[BANK1 ] int 
  6311 ;;  buffer_TX      19  135[BANK1 ] unsigned char [19]
  6312 ;;  buffer_TX      27  108[BANK1 ] unsigned char [27]
  6313 ;;  buffer_TX      27   81[BANK1 ] unsigned char [27]
  6314 ;;  buffer_TX      27   54[BANK1 ] unsigned char [27]
  6315 ;;  buffer_TX      27   27[BANK1 ] unsigned char [27]
  6316 ;;  buffer_TX      27    0[BANK1 ] unsigned char [27]
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         0       0     166       0       0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6329 ;;      Totals:         0       0     166       0       0       0       0       0       0
  6330 ;;Total ram usage:      166 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    4
  6333 ;; This function calls:
  6334 ;;		_LCD_String_xy
  6335 ;;		_MSdelay
  6336 ;;		_onLEDS
  6337 ;; This function is called by:
  6338 ;;		_main
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text34
  6343  000868                     __ptext34:
  6344                           	callstack 0
  6345  000868                     _encenderBombillas:
  6346                           	callstack 26
  6347  000868                     
  6348                           ;Controlador.c: 312:     onLEDS(var_T_Integral);
  6349  000868  0100               	movlb	0	; () banked
  6350  00086A  51FA               	movf	_var_T_Integral& (0+255),w,b
  6351  00086C  ECFC  F00E         	call	_onLEDS
  6352  000870                     
  6353                           ;Controlador.c: 313:     if (var_T_Integral < 30 && acumBom == 0) {
  6354  000870  0E1E               	movlw	30
  6355  000872  0100               	movlb	0	; () banked
  6356  000874  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6357  000876  EF3F  F004         	goto	u2651
  6358  00087A  EF41  F004         	goto	u2650
  6359  00087E                     u2651:
  6360  00087E  EF96  F004         	goto	l3053
  6361  000882                     u2650:
  6362  000882                     
  6363                           ; BSR set to: 0
  6364  000882  0101               	movlb	1	; () banked
  6365  000884  51A8               	movf	_acumBom& (0+255),w,b
  6366  000886  11A9               	iorwf	(_acumBom+1)& (0+255),w,b
  6367  000888  A4D8               	btfss	status,2,c
  6368  00088A  EF49  F004         	goto	u2661
  6369  00088E  EF4B  F004         	goto	u2660
  6370  000892                     u2661:
  6371  000892  EF96  F004         	goto	l3053
  6372  000896                     u2660:
  6373  000896                     
  6374                           ; BSR set to: 1
  6375                           ;Controlador.c: 314:         PORTAbits.RA0 = 1;
  6376  000896  8080               	bsf	128,0,c	;volatile
  6377  000898                     
  6378                           ; BSR set to: 1
  6379                           ;Controlador.c: 315:         char buffer_TX[] = "Se encendio la bombilla 1\r";
  6380  000898  EE22  F036         	lfsr	2,encenderBombillas@F3595
  6381  00089C  EE11  F000         	lfsr	1,encenderBombillas@buffer_TX
  6382  0008A0  0E1A               	movlw	26
  6383  0008A2                     u2671:
  6384  0008A2  CFDB FFE3          	movff	plusw2,plusw1
  6385  0008A6  06E8               	decf	wreg,f,c
  6386  0008A8  E2FC               	bc	u2671
  6387  0008AA                     
  6388                           ; BSR set to: 1
  6389                           ;Controlador.c: 316:         for (int i = 0; i < 27; i++) {
  6390  0008AA  0E00               	movlw	0
  6391  0008AC  6F9B               	movwf	(encenderBombillas@i+1)& (0+255),b
  6392  0008AE  0E00               	movlw	0
  6393  0008B0  6F9A               	movwf	encenderBombillas@i& (0+255),b
  6394  0008B2                     l387:
  6395                           
  6396                           ;Controlador.c: 318:             while (!TXSTAbits.TRMT) {
  6397  0008B2  A2AC               	btfss	172,1,c	;volatile
  6398  0008B4  EF5E  F004         	goto	u2681
  6399  0008B8  EF60  F004         	goto	u2680
  6400  0008BC                     u2681:
  6401  0008BC  EF59  F004         	goto	l387
  6402  0008C0                     u2680:
  6403  0008C0                     
  6404                           ;Controlador.c: 321:             TXREG = buffer_TX[i];
  6405  0008C0  0E00               	movlw	low encenderBombillas@buffer_TX
  6406  0008C2  0101               	movlb	1	; () banked
  6407  0008C4  259A               	addwf	encenderBombillas@i& (0+255),w,b
  6408  0008C6  6ED9               	movwf	fsr2l,c
  6409  0008C8  0E01               	movlw	high encenderBombillas@buffer_TX
  6410  0008CA  219B               	addwfc	(encenderBombillas@i+1)& (0+255),w,b
  6411  0008CC  6EDA               	movwf	fsr2h,c
  6412  0008CE  50DF               	movf	indf2,w,c
  6413  0008D0  6EAD               	movwf	173,c	;volatile
  6414  0008D2                     
  6415                           ; BSR set to: 1
  6416                           ;Controlador.c: 322:         }
  6417  0008D2  4B9A               	infsnz	encenderBombillas@i& (0+255),f,b
  6418  0008D4  2B9B               	incf	(encenderBombillas@i+1)& (0+255),f,b
  6419  0008D6                     
  6420                           ; BSR set to: 1
  6421  0008D6  BF9B               	btfsc	(encenderBombillas@i+1)& (0+255),7,b
  6422  0008D8  EF77  F004         	goto	u2691
  6423  0008DC  519B               	movf	(encenderBombillas@i+1)& (0+255),w,b
  6424  0008DE  E109               	bnz	u2690
  6425  0008E0  0E1B               	movlw	27
  6426  0008E2  5D9A               	subwf	encenderBombillas@i& (0+255),w,b
  6427  0008E4  A0D8               	btfss	status,0,c
  6428  0008E6  EF77  F004         	goto	u2691
  6429  0008EA  EF79  F004         	goto	u2690
  6430  0008EE                     u2691:
  6431  0008EE  EF59  F004         	goto	l387
  6432  0008F2                     u2690:
  6433  0008F2                     
  6434                           ; BSR set to: 1
  6435                           ;Controlador.c: 326:         LCD_String_xy(1, 0, "ON B.");
  6436  0008F2  0E00               	movlw	0
  6437  0008F4  6E0A               	movwf	LCD_String_xy@pos^0,c
  6438  0008F6  0E24               	movlw	low STR_9
  6439  0008F8  6E0B               	movwf	LCD_String_xy@msg^0,c
  6440  0008FA  0E08               	movlw	high STR_9
  6441  0008FC  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6442  0008FE  0E01               	movlw	1
  6443  000900  EC70  F013         	call	_LCD_String_xy
  6444                           
  6445                           ;Controlador.c: 327:         LCD_String_xy(1, 6, "1");
  6446  000904  0E06               	movlw	6
  6447  000906  6E0A               	movwf	LCD_String_xy@pos^0,c
  6448  000908  0E59               	movlw	low STR_10
  6449  00090A  6E0B               	movwf	LCD_String_xy@msg^0,c
  6450  00090C  0E08               	movlw	high STR_10
  6451  00090E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6452  000910  0E01               	movlw	1
  6453  000912  EC70  F013         	call	_LCD_String_xy
  6454  000916                     
  6455                           ;Controlador.c: 329:         var_T_Integral = var_T_Integral + 6;
  6456  000916  0100               	movlb	0	; () banked
  6457  000918  51FA               	movf	_var_T_Integral& (0+255),w,b
  6458  00091A  0F06               	addlw	6
  6459  00091C  6FFA               	movwf	_var_T_Integral& (0+255),b
  6460  00091E                     
  6461                           ; BSR set to: 0
  6462                           ;Controlador.c: 330:        acumBom = 6;
  6463  00091E  0E00               	movlw	0
  6464  000920  0101               	movlb	1	; () banked
  6465  000922  6FA9               	movwf	(_acumBom+1)& (0+255),b
  6466  000924  0E06               	movlw	6
  6467  000926  6FA8               	movwf	_acumBom& (0+255),b
  6468                           
  6469                           ;Controlador.c: 332:     } else if (var_T_Integral < 30 && acumBom == 6) {
  6470  000928  EF32  F006         	goto	l3177
  6471  00092C                     l3053:
  6472  00092C  0E1E               	movlw	30
  6473  00092E  0100               	movlb	0	; () banked
  6474  000930  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6475  000932  EF9D  F004         	goto	u2701
  6476  000936  EF9F  F004         	goto	u2700
  6477  00093A                     u2701:
  6478  00093A  EFEC  F004         	goto	l3079
  6479  00093E                     u2700:
  6480  00093E                     
  6481                           ; BSR set to: 0
  6482  00093E  0E06               	movlw	6
  6483  000940  0101               	movlb	1	; () banked
  6484  000942  19A8               	xorwf	_acumBom& (0+255),w,b
  6485  000944  11A9               	iorwf	(_acumBom+1)& (0+255),w,b
  6486  000946  A4D8               	btfss	status,2,c
  6487  000948  EFA8  F004         	goto	u2711
  6488  00094C  EFAA  F004         	goto	u2710
  6489  000950                     u2711:
  6490  000950  EFEC  F004         	goto	l3079
  6491  000954                     u2710:
  6492  000954                     
  6493                           ; BSR set to: 1
  6494                           ;Controlador.c: 333:         PORTAbits.RA1 = 1;
  6495  000954  8280               	bsf	128,1,c	;volatile
  6496  000956                     
  6497                           ; BSR set to: 1
  6498                           ;Controlador.c: 335:         char buffer_TX[] = "Se encendio la bombilla 2\r";
  6499  000956  EE22  F01B         	lfsr	2,encenderBombillas@F3598
  6500  00095A  EE11  F01B         	lfsr	1,encenderBombillas@buffer_TX_798
  6501  00095E  0E1A               	movlw	26
  6502  000960                     u2721:
  6503  000960  CFDB FFE3          	movff	plusw2,plusw1
  6504  000964  06E8               	decf	wreg,f,c
  6505  000966  E2FC               	bc	u2721
  6506  000968                     
  6507                           ; BSR set to: 1
  6508                           ;Controlador.c: 336:         for (int i = 0; i < 27; i++) {
  6509  000968  0E00               	movlw	0
  6510  00096A  6F9D               	movwf	(encenderBombillas@i_799+1)& (0+255),b
  6511  00096C  0E00               	movlw	0
  6512  00096E  6F9C               	movwf	encenderBombillas@i_799& (0+255),b
  6513  000970                     l396:
  6514                           
  6515                           ;Controlador.c: 338:             while (!TXSTAbits.TRMT) {
  6516  000970  A2AC               	btfss	172,1,c	;volatile
  6517  000972  EFBD  F004         	goto	u2731
  6518  000976  EFBF  F004         	goto	u2730
  6519  00097A                     u2731:
  6520  00097A  EFB8  F004         	goto	l396
  6521  00097E                     u2730:
  6522  00097E                     
  6523                           ;Controlador.c: 341:             TXREG = buffer_TX[i];
  6524  00097E  0E1B               	movlw	low encenderBombillas@buffer_TX_798
  6525  000980  0101               	movlb	1	; () banked
  6526  000982  259C               	addwf	encenderBombillas@i_799& (0+255),w,b
  6527  000984  6ED9               	movwf	fsr2l,c
  6528  000986  0E01               	movlw	high encenderBombillas@buffer_TX_798
  6529  000988  219D               	addwfc	(encenderBombillas@i_799+1)& (0+255),w,b
  6530  00098A  6EDA               	movwf	fsr2h,c
  6531  00098C  50DF               	movf	indf2,w,c
  6532  00098E  6EAD               	movwf	173,c	;volatile
  6533  000990                     
  6534                           ; BSR set to: 1
  6535                           ;Controlador.c: 342:         }
  6536  000990  4B9C               	infsnz	encenderBombillas@i_799& (0+255),f,b
  6537  000992  2B9D               	incf	(encenderBombillas@i_799+1)& (0+255),f,b
  6538  000994                     
  6539                           ; BSR set to: 1
  6540  000994  BF9D               	btfsc	(encenderBombillas@i_799+1)& (0+255),7,b
  6541  000996  EFD6  F004         	goto	u2741
  6542  00099A  519D               	movf	(encenderBombillas@i_799+1)& (0+255),w,b
  6543  00099C  E109               	bnz	u2740
  6544  00099E  0E1B               	movlw	27
  6545  0009A0  5D9C               	subwf	encenderBombillas@i_799& (0+255),w,b
  6546  0009A2  A0D8               	btfss	status,0,c
  6547  0009A4  EFD6  F004         	goto	u2741
  6548  0009A8  EFD8  F004         	goto	u2740
  6549  0009AC                     u2741:
  6550  0009AC  EFB8  F004         	goto	l396
  6551  0009B0                     u2740:
  6552  0009B0                     
  6553                           ; BSR set to: 1
  6554                           ;Controlador.c: 344:         LCD_String_xy(1, 8, "2");
  6555  0009B0  0E08               	movlw	8
  6556  0009B2  6E0A               	movwf	LCD_String_xy@pos^0,c
  6557  0009B4  0E5B               	movlw	low STR_11
  6558  0009B6  6E0B               	movwf	LCD_String_xy@msg^0,c
  6559  0009B8  0E08               	movlw	high STR_11
  6560  0009BA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6561  0009BC  0E01               	movlw	1
  6562  0009BE  EC70  F013         	call	_LCD_String_xy
  6563  0009C2                     
  6564                           ;Controlador.c: 346:         var_T_Integral = var_T_Integral + 6;
  6565  0009C2  0100               	movlb	0	; () banked
  6566  0009C4  51FA               	movf	_var_T_Integral& (0+255),w,b
  6567  0009C6  0F06               	addlw	6
  6568  0009C8  6FFA               	movwf	_var_T_Integral& (0+255),b
  6569  0009CA                     
  6570                           ; BSR set to: 0
  6571                           ;Controlador.c: 347:         acumBom = 12;
  6572  0009CA  0E00               	movlw	0
  6573  0009CC  0101               	movlb	1	; () banked
  6574  0009CE  6FA9               	movwf	(_acumBom+1)& (0+255),b
  6575  0009D0  0E0C               	movlw	12
  6576  0009D2  6FA8               	movwf	_acumBom& (0+255),b
  6577                           
  6578                           ;Controlador.c: 348:     } else if (var_T_Integral < 30 && acumBom == 12) {
  6579  0009D4  EF32  F006         	goto	l3177
  6580  0009D8                     l3079:
  6581  0009D8  0E1E               	movlw	30
  6582  0009DA  0100               	movlb	0	; () banked
  6583  0009DC  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6584  0009DE  EFF3  F004         	goto	u2751
  6585  0009E2  EFF5  F004         	goto	u2750
  6586  0009E6                     u2751:
  6587  0009E6  EF42  F005         	goto	l3105
  6588  0009EA                     u2750:
  6589  0009EA                     
  6590                           ; BSR set to: 0
  6591  0009EA  0E0C               	movlw	12
  6592  0009EC  0101               	movlb	1	; () banked
  6593  0009EE  19A8               	xorwf	_acumBom& (0+255),w,b
  6594  0009F0  11A9               	iorwf	(_acumBom+1)& (0+255),w,b
  6595  0009F2  A4D8               	btfss	status,2,c
  6596  0009F4  EFFE  F004         	goto	u2761
  6597  0009F8  EF00  F005         	goto	u2760
  6598  0009FC                     u2761:
  6599  0009FC  EF42  F005         	goto	l3105
  6600  000A00                     u2760:
  6601  000A00                     
  6602                           ; BSR set to: 1
  6603                           ;Controlador.c: 349:         PORTAbits.RA2 = 1;
  6604  000A00  8480               	bsf	128,2,c	;volatile
  6605  000A02                     
  6606                           ; BSR set to: 1
  6607                           ;Controlador.c: 351:         char buffer_TX[] = "Se encendio la bombilla 3\r";
  6608  000A02  EE22  F000         	lfsr	2,encenderBombillas@F3601
  6609  000A06  EE11  F036         	lfsr	1,encenderBombillas@buffer_TX_802
  6610  000A0A  0E1A               	movlw	26
  6611  000A0C                     u2771:
  6612  000A0C  CFDB FFE3          	movff	plusw2,plusw1
  6613  000A10  06E8               	decf	wreg,f,c
  6614  000A12  E2FC               	bc	u2771
  6615  000A14                     
  6616                           ; BSR set to: 1
  6617                           ;Controlador.c: 352:         for (int i = 0; i < 27; i++) {
  6618  000A14  0E00               	movlw	0
  6619  000A16  6F9F               	movwf	(encenderBombillas@i_803+1)& (0+255),b
  6620  000A18  0E00               	movlw	0
  6621  000A1A  6F9E               	movwf	encenderBombillas@i_803& (0+255),b
  6622  000A1C                     l405:
  6623                           
  6624                           ;Controlador.c: 354:             while (!TXSTAbits.TRMT) {
  6625  000A1C  A2AC               	btfss	172,1,c	;volatile
  6626  000A1E  EF13  F005         	goto	u2781
  6627  000A22  EF15  F005         	goto	u2780
  6628  000A26                     u2781:
  6629  000A26  EF0E  F005         	goto	l405
  6630  000A2A                     u2780:
  6631  000A2A                     
  6632                           ;Controlador.c: 357:             TXREG = buffer_TX[i];
  6633  000A2A  0E36               	movlw	low encenderBombillas@buffer_TX_802
  6634  000A2C  0101               	movlb	1	; () banked
  6635  000A2E  259E               	addwf	encenderBombillas@i_803& (0+255),w,b
  6636  000A30  6ED9               	movwf	fsr2l,c
  6637  000A32  0E01               	movlw	high encenderBombillas@buffer_TX_802
  6638  000A34  219F               	addwfc	(encenderBombillas@i_803+1)& (0+255),w,b
  6639  000A36  6EDA               	movwf	fsr2h,c
  6640  000A38  50DF               	movf	indf2,w,c
  6641  000A3A  6EAD               	movwf	173,c	;volatile
  6642  000A3C                     
  6643                           ; BSR set to: 1
  6644                           ;Controlador.c: 358:         }
  6645  000A3C  4B9E               	infsnz	encenderBombillas@i_803& (0+255),f,b
  6646  000A3E  2B9F               	incf	(encenderBombillas@i_803+1)& (0+255),f,b
  6647  000A40                     
  6648                           ; BSR set to: 1
  6649  000A40  BF9F               	btfsc	(encenderBombillas@i_803+1)& (0+255),7,b
  6650  000A42  EF2C  F005         	goto	u2791
  6651  000A46  519F               	movf	(encenderBombillas@i_803+1)& (0+255),w,b
  6652  000A48  E109               	bnz	u2790
  6653  000A4A  0E1B               	movlw	27
  6654  000A4C  5D9E               	subwf	encenderBombillas@i_803& (0+255),w,b
  6655  000A4E  A0D8               	btfss	status,0,c
  6656  000A50  EF2C  F005         	goto	u2791
  6657  000A54  EF2E  F005         	goto	u2790
  6658  000A58                     u2791:
  6659  000A58  EF0E  F005         	goto	l405
  6660  000A5C                     u2790:
  6661  000A5C                     
  6662                           ; BSR set to: 1
  6663                           ;Controlador.c: 361:         LCD_String_xy(1, 10, "3");
  6664  000A5C  0E0A               	movlw	10
  6665  000A5E  6E0A               	movwf	LCD_String_xy@pos^0,c
  6666  000A60  0E5D               	movlw	low STR_12
  6667  000A62  6E0B               	movwf	LCD_String_xy@msg^0,c
  6668  000A64  0E08               	movlw	high STR_12
  6669  000A66  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6670  000A68  0E01               	movlw	1
  6671  000A6A  EC70  F013         	call	_LCD_String_xy
  6672  000A6E                     
  6673                           ;Controlador.c: 363:         var_T_Integral = var_T_Integral + 6;
  6674  000A6E  0100               	movlb	0	; () banked
  6675  000A70  51FA               	movf	_var_T_Integral& (0+255),w,b
  6676  000A72  0F06               	addlw	6
  6677  000A74  6FFA               	movwf	_var_T_Integral& (0+255),b
  6678  000A76                     
  6679                           ; BSR set to: 0
  6680                           ;Controlador.c: 364:         acumBom = 18;
  6681  000A76  0E00               	movlw	0
  6682  000A78  0101               	movlb	1	; () banked
  6683  000A7A  6FA9               	movwf	(_acumBom+1)& (0+255),b
  6684  000A7C  0E12               	movlw	18
  6685  000A7E  6FA8               	movwf	_acumBom& (0+255),b
  6686                           
  6687                           ;Controlador.c: 365:     } else if (var_T_Integral < 30 && acumBom == 18) {
  6688  000A80  EF32  F006         	goto	l3177
  6689  000A84                     l3105:
  6690  000A84  0E1E               	movlw	30
  6691  000A86  0100               	movlb	0	; () banked
  6692  000A88  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6693  000A8A  EF49  F005         	goto	u2801
  6694  000A8E  EF4B  F005         	goto	u2800
  6695  000A92                     u2801:
  6696  000A92  EF99  F005         	goto	l3131
  6697  000A96                     u2800:
  6698  000A96                     
  6699                           ; BSR set to: 0
  6700  000A96  0E12               	movlw	18
  6701  000A98  0101               	movlb	1	; () banked
  6702  000A9A  19A8               	xorwf	_acumBom& (0+255),w,b
  6703  000A9C  11A9               	iorwf	(_acumBom+1)& (0+255),w,b
  6704  000A9E  A4D8               	btfss	status,2,c
  6705  000AA0  EF54  F005         	goto	u2811
  6706  000AA4  EF56  F005         	goto	u2810
  6707  000AA8                     u2811:
  6708  000AA8  EF99  F005         	goto	l3131
  6709  000AAC                     u2810:
  6710  000AAC                     
  6711                           ; BSR set to: 1
  6712                           ;Controlador.c: 366:         PORTAbits.RA3 = 1;
  6713  000AAC  8680               	bsf	128,3,c	;volatile
  6714  000AAE                     
  6715                           ; BSR set to: 1
  6716                           ;Controlador.c: 370:         LCD_String_xy(1, 12, "4");
  6717  000AAE  0E0C               	movlw	12
  6718  000AB0  6E0A               	movwf	LCD_String_xy@pos^0,c
  6719  000AB2  0E5F               	movlw	low STR_13
  6720  000AB4  6E0B               	movwf	LCD_String_xy@msg^0,c
  6721  000AB6  0E08               	movlw	high STR_13
  6722  000AB8  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6723  000ABA  0E01               	movlw	1
  6724  000ABC  EC70  F013         	call	_LCD_String_xy
  6725  000AC0                     
  6726                           ;Controlador.c: 372:         char buffer_TX[] = "Se encendio la bombilla 4\r";
  6727  000AC0  EE23  F065         	lfsr	2,encenderBombillas@F3604
  6728  000AC4  EE11  F051         	lfsr	1,encenderBombillas@buffer_TX_807
  6729  000AC8  0E1A               	movlw	26
  6730  000ACA                     u2821:
  6731  000ACA  CFDB FFE3          	movff	plusw2,plusw1
  6732  000ACE  06E8               	decf	wreg,f,c
  6733  000AD0  E2FC               	bc	u2821
  6734  000AD2                     
  6735                           ;Controlador.c: 373:         for (int i = 0; i < 27; i++) {
  6736  000AD2  0E00               	movlw	0
  6737  000AD4  0101               	movlb	1	; () banked
  6738  000AD6  6FA1               	movwf	(encenderBombillas@i_808+1)& (0+255),b
  6739  000AD8  0E00               	movlw	0
  6740  000ADA  6FA0               	movwf	encenderBombillas@i_808& (0+255),b
  6741  000ADC                     l414:
  6742                           
  6743                           ;Controlador.c: 375:             while (!TXSTAbits.TRMT) {
  6744  000ADC  A2AC               	btfss	172,1,c	;volatile
  6745  000ADE  EF73  F005         	goto	u2831
  6746  000AE2  EF75  F005         	goto	u2830
  6747  000AE6                     u2831:
  6748  000AE6  EF6E  F005         	goto	l414
  6749  000AEA                     u2830:
  6750  000AEA                     
  6751                           ;Controlador.c: 378:             TXREG = buffer_TX[i];
  6752  000AEA  0E51               	movlw	low encenderBombillas@buffer_TX_807
  6753  000AEC  0101               	movlb	1	; () banked
  6754  000AEE  25A0               	addwf	encenderBombillas@i_808& (0+255),w,b
  6755  000AF0  6ED9               	movwf	fsr2l,c
  6756  000AF2  0E01               	movlw	high encenderBombillas@buffer_TX_807
  6757  000AF4  21A1               	addwfc	(encenderBombillas@i_808+1)& (0+255),w,b
  6758  000AF6  6EDA               	movwf	fsr2h,c
  6759  000AF8  50DF               	movf	indf2,w,c
  6760  000AFA  6EAD               	movwf	173,c	;volatile
  6761  000AFC                     
  6762                           ; BSR set to: 1
  6763                           ;Controlador.c: 379:         }
  6764  000AFC  4BA0               	infsnz	encenderBombillas@i_808& (0+255),f,b
  6765  000AFE  2BA1               	incf	(encenderBombillas@i_808+1)& (0+255),f,b
  6766  000B00                     
  6767                           ; BSR set to: 1
  6768  000B00  BFA1               	btfsc	(encenderBombillas@i_808+1)& (0+255),7,b
  6769  000B02  EF8C  F005         	goto	u2841
  6770  000B06  51A1               	movf	(encenderBombillas@i_808+1)& (0+255),w,b
  6771  000B08  E109               	bnz	u2840
  6772  000B0A  0E1B               	movlw	27
  6773  000B0C  5DA0               	subwf	encenderBombillas@i_808& (0+255),w,b
  6774  000B0E  A0D8               	btfss	status,0,c
  6775  000B10  EF8C  F005         	goto	u2841
  6776  000B14  EF8E  F005         	goto	u2840
  6777  000B18                     u2841:
  6778  000B18  EF6E  F005         	goto	l414
  6779  000B1C                     u2840:
  6780  000B1C                     
  6781                           ; BSR set to: 1
  6782                           ;Controlador.c: 381:         var_T_Integral = var_T_Integral + 6;
  6783  000B1C  0100               	movlb	0	; () banked
  6784  000B1E  51FA               	movf	_var_T_Integral& (0+255),w,b
  6785  000B20  0F06               	addlw	6
  6786  000B22  6FFA               	movwf	_var_T_Integral& (0+255),b
  6787  000B24                     
  6788                           ; BSR set to: 0
  6789                           ;Controlador.c: 382:         acumBom = 24;
  6790  000B24  0E00               	movlw	0
  6791  000B26  0101               	movlb	1	; () banked
  6792  000B28  6FA9               	movwf	(_acumBom+1)& (0+255),b
  6793  000B2A  0E18               	movlw	24
  6794  000B2C  6FA8               	movwf	_acumBom& (0+255),b
  6795                           
  6796                           ;Controlador.c: 383:     } else if (var_T_Integral < 30 && acumBom == 24) {
  6797  000B2E  EF32  F006         	goto	l3177
  6798  000B32                     l3131:
  6799  000B32  0E1E               	movlw	30
  6800  000B34  0100               	movlb	0	; () banked
  6801  000B36  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6802  000B38  EFA0  F005         	goto	u2851
  6803  000B3C  EFA2  F005         	goto	u2850
  6804  000B40                     u2851:
  6805  000B40  EFEB  F005         	goto	l3155
  6806  000B44                     u2850:
  6807  000B44                     
  6808                           ; BSR set to: 0
  6809  000B44  0E18               	movlw	24
  6810  000B46  0101               	movlb	1	; () banked
  6811  000B48  19A8               	xorwf	_acumBom& (0+255),w,b
  6812  000B4A  11A9               	iorwf	(_acumBom+1)& (0+255),w,b
  6813  000B4C  A4D8               	btfss	status,2,c
  6814  000B4E  EFAB  F005         	goto	u2861
  6815  000B52  EFAD  F005         	goto	u2860
  6816  000B56                     u2861:
  6817  000B56  EFEB  F005         	goto	l3155
  6818  000B5A                     u2860:
  6819  000B5A                     
  6820                           ; BSR set to: 1
  6821                           ;Controlador.c: 384:         PORTAbits.RA4 = 1;
  6822  000B5A  8880               	bsf	128,4,c	;volatile
  6823  000B5C                     
  6824                           ; BSR set to: 1
  6825                           ;Controlador.c: 387:         LCD_String_xy(1, 14, "5");
  6826  000B5C  0E0E               	movlw	14
  6827  000B5E  6E0A               	movwf	LCD_String_xy@pos^0,c
  6828  000B60  0E61               	movlw	low STR_14
  6829  000B62  6E0B               	movwf	LCD_String_xy@msg^0,c
  6830  000B64  0E08               	movlw	high STR_14
  6831  000B66  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  6832  000B68  0E01               	movlw	1
  6833  000B6A  EC70  F013         	call	_LCD_String_xy
  6834  000B6E                     
  6835                           ;Controlador.c: 389:         char buffer_TX[] = "Se encendio la bombilla 5\r";
  6836  000B6E  EE23  F04A         	lfsr	2,encenderBombillas@F3607
  6837  000B72  EE11  F06C         	lfsr	1,encenderBombillas@buffer_TX_811
  6838  000B76  0E1A               	movlw	26
  6839  000B78                     u2871:
  6840  000B78  CFDB FFE3          	movff	plusw2,plusw1
  6841  000B7C  06E8               	decf	wreg,f,c
  6842  000B7E  E2FC               	bc	u2871
  6843  000B80                     
  6844                           ;Controlador.c: 390:         for (int i = 0; i < 27; i++) {
  6845  000B80  0E00               	movlw	0
  6846  000B82  0101               	movlb	1	; () banked
  6847  000B84  6FA3               	movwf	(encenderBombillas@i_812+1)& (0+255),b
  6848  000B86  0E00               	movlw	0
  6849  000B88  6FA2               	movwf	encenderBombillas@i_812& (0+255),b
  6850  000B8A                     l423:
  6851                           
  6852                           ;Controlador.c: 392:             while (!TXSTAbits.TRMT) {
  6853  000B8A  A2AC               	btfss	172,1,c	;volatile
  6854  000B8C  EFCA  F005         	goto	u2881
  6855  000B90  EFCC  F005         	goto	u2880
  6856  000B94                     u2881:
  6857  000B94  EFC5  F005         	goto	l423
  6858  000B98                     u2880:
  6859  000B98                     
  6860                           ;Controlador.c: 395:             TXREG = buffer_TX[i];
  6861  000B98  0E6C               	movlw	low encenderBombillas@buffer_TX_811
  6862  000B9A  0101               	movlb	1	; () banked
  6863  000B9C  25A2               	addwf	encenderBombillas@i_812& (0+255),w,b
  6864  000B9E  6ED9               	movwf	fsr2l,c
  6865  000BA0  0E01               	movlw	high encenderBombillas@buffer_TX_811
  6866  000BA2  21A3               	addwfc	(encenderBombillas@i_812+1)& (0+255),w,b
  6867  000BA4  6EDA               	movwf	fsr2h,c
  6868  000BA6  50DF               	movf	indf2,w,c
  6869  000BA8  6EAD               	movwf	173,c	;volatile
  6870  000BAA                     
  6871                           ; BSR set to: 1
  6872                           ;Controlador.c: 396:         }
  6873  000BAA  4BA2               	infsnz	encenderBombillas@i_812& (0+255),f,b
  6874  000BAC  2BA3               	incf	(encenderBombillas@i_812+1)& (0+255),f,b
  6875  000BAE                     
  6876                           ; BSR set to: 1
  6877  000BAE  BFA3               	btfsc	(encenderBombillas@i_812+1)& (0+255),7,b
  6878  000BB0  EFE3  F005         	goto	u2891
  6879  000BB4  51A3               	movf	(encenderBombillas@i_812+1)& (0+255),w,b
  6880  000BB6  E109               	bnz	u2890
  6881  000BB8  0E1B               	movlw	27
  6882  000BBA  5DA2               	subwf	encenderBombillas@i_812& (0+255),w,b
  6883  000BBC  A0D8               	btfss	status,0,c
  6884  000BBE  EFE3  F005         	goto	u2891
  6885  000BC2  EFE5  F005         	goto	u2890
  6886  000BC6                     u2891:
  6887  000BC6  EFC5  F005         	goto	l423
  6888  000BCA                     u2890:
  6889  000BCA                     
  6890                           ; BSR set to: 1
  6891                           ;Controlador.c: 397:         var_T_Integral = var_T_Integral + 6;
  6892  000BCA  0100               	movlb	0	; () banked
  6893  000BCC  51FA               	movf	_var_T_Integral& (0+255),w,b
  6894  000BCE  0F06               	addlw	6
  6895  000BD0  6FFA               	movwf	_var_T_Integral& (0+255),b
  6896                           
  6897                           ;Controlador.c: 398:     } else if (var_T_Integral > 35) {
  6898  000BD2  EF32  F006         	goto	l3177
  6899  000BD6                     l3155:
  6900  000BD6  0E23               	movlw	35
  6901  000BD8  0100               	movlb	0	; () banked
  6902  000BDA  65FA               	cpfsgt	_var_T_Integral& (0+255),b
  6903  000BDC  EFF2  F005         	goto	u2901
  6904  000BE0  EFF4  F005         	goto	u2900
  6905  000BE4                     u2901:
  6906  000BE4  EF2E  F006         	goto	l3175
  6907  000BE8                     u2900:
  6908  000BE8                     
  6909                           ; BSR set to: 0
  6910                           ;Controlador.c: 399:         banAgregar = 1;
  6911  000BE8  0E00               	movlw	0
  6912  000BEA  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  6913  000BEC  0E01               	movlw	1
  6914  000BEE  6FF6               	movwf	_banAgregar& (0+255),b
  6915  000BF0                     
  6916                           ; BSR set to: 0
  6917                           ;Controlador.c: 400:         char buffer_TX[] = "Temperatura Alta \r";
  6918  000BF0  EE22  F080         	lfsr	2,encenderBombillas@F3610
  6919  000BF4  EE11  F087         	lfsr	1,encenderBombillas@buffer_TX_814
  6920  000BF8  0E12               	movlw	18
  6921  000BFA                     u2911:
  6922  000BFA  CFDB FFE3          	movff	plusw2,plusw1
  6923  000BFE  06E8               	decf	wreg,f,c
  6924  000C00  E2FC               	bc	u2911
  6925  000C02                     
  6926                           ; BSR set to: 0
  6927                           ;Controlador.c: 401:         for (int i = 0; i < 19; i++) {
  6928  000C02  0E00               	movlw	0
  6929  000C04  0101               	movlb	1	; () banked
  6930  000C06  6FA5               	movwf	(encenderBombillas@i_815+1)& (0+255),b
  6931  000C08  0E00               	movlw	0
  6932  000C0A  6FA4               	movwf	encenderBombillas@i_815& (0+255),b
  6933  000C0C                     l432:
  6934                           
  6935                           ;Controlador.c: 403:             while (!TXSTAbits.TRMT) {
  6936  000C0C  A2AC               	btfss	172,1,c	;volatile
  6937  000C0E  EF0B  F006         	goto	u2921
  6938  000C12  EF0D  F006         	goto	u2920
  6939  000C16                     u2921:
  6940  000C16  EF06  F006         	goto	l432
  6941  000C1A                     u2920:
  6942  000C1A                     
  6943                           ;Controlador.c: 406:             TXREG = buffer_TX[i];
  6944  000C1A  0E87               	movlw	low encenderBombillas@buffer_TX_814
  6945  000C1C  0101               	movlb	1	; () banked
  6946  000C1E  25A4               	addwf	encenderBombillas@i_815& (0+255),w,b
  6947  000C20  6ED9               	movwf	fsr2l,c
  6948  000C22  0E01               	movlw	high encenderBombillas@buffer_TX_814
  6949  000C24  21A5               	addwfc	(encenderBombillas@i_815+1)& (0+255),w,b
  6950  000C26  6EDA               	movwf	fsr2h,c
  6951  000C28  50DF               	movf	indf2,w,c
  6952  000C2A  6EAD               	movwf	173,c	;volatile
  6953  000C2C                     
  6954                           ; BSR set to: 1
  6955                           ;Controlador.c: 407:         }
  6956  000C2C  4BA4               	infsnz	encenderBombillas@i_815& (0+255),f,b
  6957  000C2E  2BA5               	incf	(encenderBombillas@i_815+1)& (0+255),f,b
  6958  000C30                     
  6959                           ; BSR set to: 1
  6960  000C30  BFA5               	btfsc	(encenderBombillas@i_815+1)& (0+255),7,b
  6961  000C32  EF24  F006         	goto	u2931
  6962  000C36  51A5               	movf	(encenderBombillas@i_815+1)& (0+255),w,b
  6963  000C38  E109               	bnz	u2930
  6964  000C3A  0E13               	movlw	19
  6965  000C3C  5DA4               	subwf	encenderBombillas@i_815& (0+255),w,b
  6966  000C3E  A0D8               	btfss	status,0,c
  6967  000C40  EF24  F006         	goto	u2931
  6968  000C44  EF26  F006         	goto	u2930
  6969  000C48                     u2931:
  6970  000C48  EF06  F006         	goto	l432
  6971  000C4C                     u2930:
  6972  000C4C                     
  6973                           ; BSR set to: 1
  6974                           ;Controlador.c: 408:         MSdelay(100);
  6975  000C4C  0E00               	movlw	0
  6976  000C4E  6E02               	movwf	(MSdelay@val+1)^0,c
  6977  000C50  0E64               	movlw	100
  6978  000C52  6E01               	movwf	MSdelay@val^0,c
  6979  000C54  ECC2  F012         	call	_MSdelay	;wreg free
  6980                           
  6981                           ;Controlador.c: 409:     } else
  6982  000C58  EF32  F006         	goto	l3177
  6983  000C5C                     l3175:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;Controlador.c: 410:         banAgregar = 1;
  6987  000C5C  0E00               	movlw	0
  6988  000C5E  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  6989  000C60  0E01               	movlw	1
  6990  000C62  6FF6               	movwf	_banAgregar& (0+255),b
  6991  000C64                     l3177:
  6992                           
  6993                           ;Controlador.c: 411:     MSdelay(1000);
  6994  000C64  0E03               	movlw	3
  6995  000C66  6E02               	movwf	(MSdelay@val+1)^0,c
  6996  000C68  0EE8               	movlw	232
  6997  000C6A  6E01               	movwf	MSdelay@val^0,c
  6998  000C6C  ECC2  F012         	call	_MSdelay	;wreg free
  6999  000C70  0012               	return		;funcret
  7000  000C72                     __end_of_encenderBombillas:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _onLEDS *****************
  7004 ;; Defined at:
  7005 ;;		line 245 in file "Controlador.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  T_Integral      1    wreg     unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  T_Integral      1   19[COMRAM] unsigned char 
  7010 ;;  i               2   22[COMRAM] int 
  7011 ;;  buffer_TX      19    0[COMRAM] unsigned char [19]
  7012 ;;  valor           2   20[COMRAM] int 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0
  7023 ;;      Locals:        24       0       0       0       0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7025 ;;      Totals:        24       0       0       0       0       0       0       0       0
  7026 ;;Total ram usage:       24 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_encenderBombillas
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text35
  7036  001DF8                     __ptext35:
  7037                           	callstack 0
  7038  001DF8                     _onLEDS:
  7039                           	callstack 29
  7040                           
  7041                           ;incstack = 0
  7042                           ;onLEDS@T_Integral stored from wreg
  7043  001DF8  6E14               	movwf	onLEDS@T_Integral^0,c
  7044  001DFA                     
  7045                           ;Controlador.c: 246:     int valor = T_Integral;
  7046  001DFA  C014  F015         	movff	onLEDS@T_Integral,onLEDS@valor
  7047  001DFE  6A16               	clrf	(onLEDS@valor+1)^0,c
  7048  001E00                     
  7049                           ;Controlador.c: 247:     if (valor < 30) {
  7050  001E00  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7051  001E02  EF0E  F00F         	goto	u2480
  7052  001E06  5016               	movf	(onLEDS@valor+1)^0,w,c
  7053  001E08  E107               	bnz	u2481
  7054  001E0A  0E1E               	movlw	30
  7055  001E0C  5C15               	subwf	onLEDS@valor^0,w,c
  7056  001E0E  B0D8               	btfsc	status,0,c
  7057  001E10  EF0C  F00F         	goto	u2481
  7058  001E14  EF0E  F00F         	goto	u2480
  7059  001E18                     u2481:
  7060  001E18  EF13  F00F         	goto	l2879
  7061  001E1C                     u2480:
  7062  001E1C                     
  7063                           ;Controlador.c: 248:         PORTCbits.RC5 = 1;
  7064  001E1C  8A82               	bsf	130,5,c	;volatile
  7065                           
  7066                           ;Controlador.c: 249:         PORTCbits.RC4 = 0;
  7067  001E1E  9882               	bcf	130,4,c	;volatile
  7068                           
  7069                           ;Controlador.c: 250:         PORTAbits.RA5 = 0;
  7070  001E20  9A80               	bcf	128,5,c	;volatile
  7071                           
  7072                           ;Controlador.c: 251:     } else if (valor >= 30 && valor <= 35) {
  7073  001E22  EF63  F00F         	goto	l366
  7074  001E26                     l2879:
  7075  001E26  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7076  001E28  EF1F  F00F         	goto	u2491
  7077  001E2C  5016               	movf	(onLEDS@valor+1)^0,w,c
  7078  001E2E  E109               	bnz	u2490
  7079  001E30  0E1E               	movlw	30
  7080  001E32  5C15               	subwf	onLEDS@valor^0,w,c
  7081  001E34  A0D8               	btfss	status,0,c
  7082  001E36  EF1F  F00F         	goto	u2491
  7083  001E3A  EF21  F00F         	goto	u2490
  7084  001E3E                     u2491:
  7085  001E3E  EF60  F00F         	goto	l357
  7086  001E42                     u2490:
  7087  001E42  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7088  001E44  EF2F  F00F         	goto	u2500
  7089  001E48  5016               	movf	(onLEDS@valor+1)^0,w,c
  7090  001E4A  E107               	bnz	u2501
  7091  001E4C  0E24               	movlw	36
  7092  001E4E  5C15               	subwf	onLEDS@valor^0,w,c
  7093  001E50  B0D8               	btfsc	status,0,c
  7094  001E52  EF2D  F00F         	goto	u2501
  7095  001E56  EF2F  F00F         	goto	u2500
  7096  001E5A                     u2501:
  7097  001E5A  EF60  F00F         	goto	l357
  7098  001E5E                     u2500:
  7099  001E5E                     
  7100                           ;Controlador.c: 252:         PORTCbits.RC5 = 0;
  7101  001E5E  9A82               	bcf	130,5,c	;volatile
  7102                           
  7103                           ;Controlador.c: 253:         PORTCbits.RC4 = 1;
  7104  001E60  8882               	bsf	130,4,c	;volatile
  7105                           
  7106                           ;Controlador.c: 254:         PORTAbits.RA5 = 0;
  7107  001E62  9A80               	bcf	128,5,c	;volatile
  7108  001E64                     
  7109                           ;Controlador.c: 255:         char buffer_TX[] = "Temperatura Ideal\r";
  7110  001E64  EE22  F093         	lfsr	2,onLEDS@F3586
  7111  001E68  EE10  F001         	lfsr	1,onLEDS@buffer_TX
  7112  001E6C  0E12               	movlw	18
  7113  001E6E                     u2511:
  7114  001E6E  CFDB FFE3          	movff	plusw2,plusw1
  7115  001E72  06E8               	decf	wreg,f,c
  7116  001E74  E2FC               	bc	u2511
  7117  001E76                     
  7118                           ;Controlador.c: 256:         for (int i = 0; i < 19; i++) {
  7119  001E76  0E00               	movlw	0
  7120  001E78  6E18               	movwf	(onLEDS@i+1)^0,c
  7121  001E7A  0E00               	movlw	0
  7122  001E7C  6E17               	movwf	onLEDS@i^0,c
  7123  001E7E                     l362:
  7124                           
  7125                           ;Controlador.c: 258:             while (!TXSTAbits.TRMT) {
  7126  001E7E  A2AC               	btfss	172,1,c	;volatile
  7127  001E80  EF44  F00F         	goto	u2521
  7128  001E84  EF46  F00F         	goto	u2520
  7129  001E88                     u2521:
  7130  001E88  EF3F  F00F         	goto	l362
  7131  001E8C                     u2520:
  7132  001E8C                     
  7133                           ;Controlador.c: 261:             TXREG = buffer_TX[i];
  7134  001E8C  0E01               	movlw	low onLEDS@buffer_TX
  7135  001E8E  2417               	addwf	onLEDS@i^0,w,c
  7136  001E90  6ED9               	movwf	fsr2l,c
  7137  001E92  0E00               	movlw	high onLEDS@buffer_TX
  7138  001E94  2018               	addwfc	(onLEDS@i+1)^0,w,c
  7139  001E96  6EDA               	movwf	fsr2h,c
  7140  001E98  50DF               	movf	indf2,w,c
  7141  001E9A  6EAD               	movwf	173,c	;volatile
  7142  001E9C                     
  7143                           ;Controlador.c: 262:         }
  7144  001E9C  4A17               	infsnz	onLEDS@i^0,f,c
  7145  001E9E  2A18               	incf	(onLEDS@i+1)^0,f,c
  7146  001EA0  BE18               	btfsc	(onLEDS@i+1)^0,7,c
  7147  001EA2  EF5C  F00F         	goto	u2531
  7148  001EA6  5018               	movf	(onLEDS@i+1)^0,w,c
  7149  001EA8  E109               	bnz	u2530
  7150  001EAA  0E13               	movlw	19
  7151  001EAC  5C17               	subwf	onLEDS@i^0,w,c
  7152  001EAE  A0D8               	btfss	status,0,c
  7153  001EB0  EF5C  F00F         	goto	u2531
  7154  001EB4  EF5E  F00F         	goto	u2530
  7155  001EB8                     u2531:
  7156  001EB8  EF3F  F00F         	goto	l362
  7157  001EBC                     u2530:
  7158  001EBC  EF63  F00F         	goto	l366
  7159  001EC0                     l357:
  7160                           
  7161                           ;Controlador.c: 264:         PORTCbits.RC5 = 0;
  7162  001EC0  9A82               	bcf	130,5,c	;volatile
  7163                           
  7164                           ;Controlador.c: 265:         PORTCbits.RC4 = 0;
  7165  001EC2  9882               	bcf	130,4,c	;volatile
  7166                           
  7167                           ;Controlador.c: 266:         PORTAbits.RA5 = 1;
  7168  001EC4  8A80               	bsf	128,5,c	;volatile
  7169  001EC6                     l366:
  7170  001EC6  0012               	return		;funcret
  7171  001EC8                     __end_of_onLEDS:
  7172                           	callstack 0
  7173                           
  7174 ;; *************** function _LCD_String_xy *****************
  7175 ;; Defined at:
  7176 ;;		line 99 in file "LCD_16x2.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  row             1    wreg     unsigned char 
  7179 ;;  pos             1    9[COMRAM] unsigned char 
  7180 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7181 ;;		 -> STR_34(3), STR_33(3), date(10), hours(10), 
  7182 ;;		 -> STR_16(3), STR_15(3), STR_14(2), STR_13(2), 
  7183 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(6), 
  7184 ;;		 -> STR_8(2), STR_7(2), vec_value(10), STR_2(7), 
  7185 ;;		 -> STR_1(12), 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  row             1   12[COMRAM] unsigned char 
  7188 ;;  location        1   13[COMRAM] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7198 ;;      Params:         3       0       0       0       0       0       0       0       0
  7199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7201 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7202 ;;Total ram usage:        5 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    3
  7205 ;; This function calls:
  7206 ;;		_LCD_Command
  7207 ;;		_LCD_String
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;;		_imprimirTemHum
  7211 ;;		_encenderBombillas
  7212 ;;		_mostrarFechaHora
  7213 ;;		_verificarHora
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text36
  7218  0026E0                     __ptext36:
  7219                           	callstack 0
  7220  0026E0                     _LCD_String_xy:
  7221                           	callstack 26
  7222                           
  7223                           ;incstack = 0
  7224                           ;LCD_String_xy@row stored from wreg
  7225  0026E0  6E0D               	movwf	LCD_String_xy@row^0,c
  7226  0026E2                     
  7227                           ;LCD_16x2.c: 102:     if(row<1)
  7228  0026E2  500D               	movf	LCD_String_xy@row^0,w,c
  7229  0026E4  A4D8               	btfss	status,2,c
  7230  0026E6  EF77  F013         	goto	u2471
  7231  0026EA  EF79  F013         	goto	u2470
  7232  0026EE                     u2471:
  7233  0026EE  EF82  F013         	goto	l2867
  7234  0026F2                     u2470:
  7235  0026F2                     
  7236                           ;LCD_16x2.c: 103:     {;LCD_16x2.c: 104:         location=(0x80) | ((pos) & 0x0f);
  7237  0026F2  500A               	movf	LCD_String_xy@pos^0,w,c
  7238  0026F4  0B0F               	andlw	15
  7239  0026F6  0980               	iorlw	128
  7240  0026F8  6E0E               	movwf	LCD_String_xy@location^0,c
  7241  0026FA                     
  7242                           ;LCD_16x2.c: 105:         LCD_Command(location);
  7243  0026FA  500E               	movf	LCD_String_xy@location^0,w,c
  7244  0026FC  ECAE  F014         	call	_LCD_Command
  7245                           
  7246                           ;LCD_16x2.c: 106:     }
  7247  002700  EF89  F013         	goto	l2871
  7248  002704                     l2867:
  7249                           
  7250                           ;LCD_16x2.c: 108:     {;LCD_16x2.c: 109:         location=(0xC0) | ((pos) & 0x0f);
  7251  002704  500A               	movf	LCD_String_xy@pos^0,w,c
  7252  002706  0B0F               	andlw	15
  7253  002708  09C0               	iorlw	192
  7254  00270A  6E0E               	movwf	LCD_String_xy@location^0,c
  7255  00270C                     
  7256                           ;LCD_16x2.c: 110:         LCD_Command(location);
  7257  00270C  500E               	movf	LCD_String_xy@location^0,w,c
  7258  00270E  ECAE  F014         	call	_LCD_Command
  7259  002712                     l2871:
  7260                           
  7261                           ;LCD_16x2.c: 114:     LCD_String(msg);
  7262  002712  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  7263  002716  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7264  00271A  EC0F  F012         	call	_LCD_String	;wreg free
  7265  00271E  0012               	return		;funcret
  7266  002720                     __end_of_LCD_String_xy:
  7267                           	callstack 0
  7268                           
  7269 ;; *************** function _LCD_String *****************
  7270 ;; Defined at:
  7271 ;;		line 89 in file "LCD_16x2.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7274 ;;		 -> STR_34(3), STR_33(3), STR_32(4), STR_31(4), 
  7275 ;;		 -> STR_30(4), STR_29(4), STR_28(4), STR_27(4), 
  7276 ;;		 -> STR_26(4), year(10), month(10), date(10), 
  7277 ;;		 -> hours(10), mins(10), secs(10), STR_16(3), 
  7278 ;;		 -> STR_15(3), STR_14(2), STR_13(2), STR_12(2), 
  7279 ;;		 -> STR_11(2), STR_10(2), STR_9(6), STR_8(2), 
  7280 ;;		 -> STR_7(2), vec_value(10), STR_2(7), STR_1(12), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7292 ;;      Params:         2       0       0       0       0       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7295 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7296 ;;Total ram usage:        2 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    2
  7299 ;; This function calls:
  7300 ;;		_LCD_Char
  7301 ;; This function is called by:
  7302 ;;		_LCD_String_xy
  7303 ;;		_imprimirTemHum
  7304 ;;		_mostrarFechaHora
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text37
  7309  00241E                     __ptext37:
  7310                           	callstack 0
  7311  00241E                     _LCD_String:
  7312                           	callstack 26
  7313  00241E                     
  7314                           ;LCD_16x2.c: 89: void LCD_String(const char *msg);LCD_16x2.c: 90: {;LCD_16x2.c: 91:  whi
      +                          le((*msg)!=0)
  7315  00241E  EF25  F012         	goto	l2803
  7316  002422                     l2799:
  7317                           
  7318                           ;LCD_16x2.c: 92:  {;LCD_16x2.c: 93:    LCD_Char(*msg);
  7319  002422  C008  FFF6         	movff	LCD_String@msg,tblptrl
  7320  002426  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  7321  00242A  6AF8               	clrf	tblptru,c
  7322  00242C  0E07               	movlw	(high __ramtop+-1)
  7323  00242E  64F7               	cpfsgt	tblptrh,c
  7324  002430  D003               	bra	u2367
  7325  002432  0008               	tblrd		*
  7326  002434  50F5               	movf	tablat,w,c
  7327  002436  D005               	bra	u2360
  7328  002438                     u2367:
  7329  002438  CFF6 FFE1          	movff	tblptrl,fsr1l
  7330  00243C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7331  002440  50E7               	movf	indf1,w,c
  7332  002442                     u2360:
  7333  002442  ECBC  F014         	call	_LCD_Char
  7334  002446                     
  7335                           ;LCD_16x2.c: 94:    msg++;
  7336  002446  4A08               	infsnz	LCD_String@msg^0,f,c
  7337  002448  2A09               	incf	(LCD_String@msg+1)^0,f,c
  7338  00244A                     l2803:
  7339                           
  7340                           ;LCD_16x2.c: 91:  while((*msg)!=0)
  7341  00244A  C008  FFF6         	movff	LCD_String@msg,tblptrl
  7342  00244E  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  7343  002452  6AF8               	clrf	tblptru,c
  7344  002454  0E07               	movlw	(high __ramtop+-1)
  7345  002456  64F7               	cpfsgt	tblptrh,c
  7346  002458  D003               	bra	u2377
  7347  00245A  0008               	tblrd		*
  7348  00245C  50F5               	movf	tablat,w,c
  7349  00245E  D005               	bra	u2370
  7350  002460                     u2377:
  7351  002460  CFF6 FFE1          	movff	tblptrl,fsr1l
  7352  002464  CFF7 FFE2          	movff	tblptrh,fsr1h
  7353  002468  50E7               	movf	indf1,w,c
  7354  00246A                     u2370:
  7355  00246A  0900               	iorlw	0
  7356  00246C  A4D8               	btfss	status,2,c
  7357  00246E  EF3B  F012         	goto	u2381
  7358  002472  EF3D  F012         	goto	u2380
  7359  002476                     u2381:
  7360  002476  EF11  F012         	goto	l2799
  7361  00247A                     u2380:
  7362  00247A  0012               	return		;funcret
  7363  00247C                     __end_of_LCD_String:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _LCD_Custom_Char *****************
  7367 ;; Defined at:
  7368 ;;		line 49 in file "LCD_16x2.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  loc             1    wreg     unsigned char 
  7371 ;;  msg             2    7[COMRAM] PTR unsigned char 
  7372 ;;		 -> bombillaCar3(8), bombillaCar2(8), bombillaCar1(8), bombillaCar0(8), 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  loc             1    9[COMRAM] unsigned char 
  7375 ;;  i               1   10[COMRAM] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7385 ;;      Params:         2       0       0       0       0       0       0       0       0
  7386 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7388 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7389 ;;Total ram usage:        4 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    2
  7392 ;; This function calls:
  7393 ;;		_LCD_Char
  7394 ;;		_LCD_Command
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text38
  7401  0025CE                     __ptext38:
  7402                           	callstack 0
  7403  0025CE                     _LCD_Custom_Char:
  7404                           	callstack 28
  7405                           
  7406                           ;incstack = 0
  7407                           ;LCD_Custom_Char@loc stored from wreg
  7408  0025CE  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  7409  0025D0                     
  7410                           ;LCD_16x2.c: 49: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_16x2.c: 
      +                          50: {;LCD_16x2.c: 51:     unsigned char i;;LCD_16x2.c: 52:     if(loc<8)
  7411  0025D0  0E08               	movlw	8
  7412  0025D2  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  7413  0025D4  EFEE  F012         	goto	u2541
  7414  0025D8  EFF0  F012         	goto	u2540
  7415  0025DC                     u2541:
  7416  0025DC  EF0A  F013         	goto	l27
  7417  0025E0                     u2540:
  7418  0025E0                     
  7419                           ;LCD_16x2.c: 53:     {;LCD_16x2.c: 54:      LCD_Command(0x40+(loc*8));
  7420  0025E0  500A               	movf	LCD_Custom_Char@loc^0,w,c
  7421  0025E2  0D08               	mullw	8
  7422  0025E4  50F3               	movf	243,w,c
  7423  0025E6  0F40               	addlw	64
  7424  0025E8  ECAE  F014         	call	_LCD_Command
  7425  0025EC                     
  7426                           ;LCD_16x2.c: 55:        for(i=0;i<8;i++)
  7427  0025EC  0E00               	movlw	0
  7428  0025EE  6E0B               	movwf	LCD_Custom_Char@i^0,c
  7429  0025F0                     l2941:
  7430                           
  7431                           ;LCD_16x2.c: 56:            LCD_Char(msg[i]);
  7432  0025F0  500B               	movf	LCD_Custom_Char@i^0,w,c
  7433  0025F2  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  7434  0025F4  6ED9               	movwf	fsr2l,c
  7435  0025F6  0E00               	movlw	0
  7436  0025F8  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  7437  0025FA  6EDA               	movwf	fsr2h,c
  7438  0025FC  50DF               	movf	indf2,w,c
  7439  0025FE  ECBC  F014         	call	_LCD_Char
  7440  002602  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  7441  002604  0E07               	movlw	7
  7442  002606  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  7443  002608  EF08  F013         	goto	u2551
  7444  00260C  EF0A  F013         	goto	u2550
  7445  002610                     u2551:
  7446  002610  EFF8  F012         	goto	l2941
  7447  002614                     u2550:
  7448  002614                     l27:
  7449  002614  0012               	return		;funcret
  7450  002616                     __end_of_LCD_Custom_Char:
  7451                           	callstack 0
  7452                           
  7453 ;; *************** function _LCD_Command *****************
  7454 ;; Defined at:
  7455 ;;		line 66 in file "LCD_16x2.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  cmd             1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  cmd             1    6[COMRAM] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7472 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        1 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    1
  7476 ;; This function calls:
  7477 ;;		_MSdelay
  7478 ;; This function is called by:
  7479 ;;		_LCD_Init
  7480 ;;		_LCD_Custom_Char
  7481 ;;		_LCD_String_xy
  7482 ;;		_LCD_Clear
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text39
  7487  00295C                     __ptext39:
  7488                           	callstack 0
  7489  00295C                     _LCD_Command:
  7490                           	callstack 27
  7491                           
  7492                           ;incstack = 0
  7493                           ;LCD_Command@cmd stored from wreg
  7494  00295C  6E07               	movwf	LCD_Command@cmd^0,c
  7495  00295E                     
  7496                           ;LCD_16x2.c: 66: void LCD_Command(char cmd );LCD_16x2.c: 67: {;LCD_16x2.c: 68:  LATD= cm
      +                          d;
  7497  00295E  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  7498  002962                     
  7499                           ;LCD_16x2.c: 69:  LATC0 = 0;
  7500  002962  908B               	bcf	3979,0,c	;volatile
  7501  002964                     
  7502                           ;LCD_16x2.c: 70:  LATC1 = 1;
  7503  002964  828B               	bsf	3979,1,c	;volatile
  7504  002966                     
  7505                           ;LCD_16x2.c: 71:  __nop();
  7506  002966  F000               	nop	
  7507  002968                     
  7508                           ;LCD_16x2.c: 72:  LATC1 = 0;
  7509  002968  928B               	bcf	3979,1,c	;volatile
  7510  00296A                     
  7511                           ;LCD_16x2.c: 73:     MSdelay(3);
  7512  00296A  0E00               	movlw	0
  7513  00296C  6E02               	movwf	(MSdelay@val+1)^0,c
  7514  00296E  0E03               	movlw	3
  7515  002970  6E01               	movwf	MSdelay@val^0,c
  7516  002972  ECC2  F012         	call	_MSdelay	;wreg free
  7517  002976  0012               	return		;funcret
  7518  002978                     __end_of_LCD_Command:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function _LCD_Char *****************
  7522 ;; Defined at:
  7523 ;;		line 78 in file "LCD_16x2.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  dat             1    wreg     unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  dat             1    6[COMRAM] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0
  7538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7541 ;;Total ram usage:        1 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    1
  7544 ;; This function calls:
  7545 ;;		_MSdelay
  7546 ;; This function is called by:
  7547 ;;		_LCD_Custom_Char
  7548 ;;		_LCD_String
  7549 ;;		_imprimirTemHum
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text40
  7554  002978                     __ptext40:
  7555                           	callstack 0
  7556  002978                     _LCD_Char:
  7557                           	callstack 26
  7558                           
  7559                           ;incstack = 0
  7560                           ;LCD_Char@dat stored from wreg
  7561  002978  6E07               	movwf	LCD_Char@dat^0,c
  7562  00297A                     
  7563                           ;LCD_16x2.c: 78: void LCD_Char(char dat);LCD_16x2.c: 79: {;LCD_16x2.c: 80:  LATD= dat;
  7564  00297A  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  7565  00297E                     
  7566                           ;LCD_16x2.c: 81:  LATC0 = 1;
  7567  00297E  808B               	bsf	3979,0,c	;volatile
  7568  002980                     
  7569                           ;LCD_16x2.c: 82:  LATC1=1;
  7570  002980  828B               	bsf	3979,1,c	;volatile
  7571  002982                     
  7572                           ;LCD_16x2.c: 83:  __nop();
  7573  002982  F000               	nop	
  7574  002984                     
  7575                           ;LCD_16x2.c: 84:  LATC1=0;
  7576  002984  928B               	bcf	3979,1,c	;volatile
  7577  002986                     
  7578                           ;LCD_16x2.c: 85:     MSdelay(1);
  7579  002986  0E00               	movlw	0
  7580  002988  6E02               	movwf	(MSdelay@val+1)^0,c
  7581  00298A  0E01               	movlw	1
  7582  00298C  6E01               	movwf	MSdelay@val^0,c
  7583  00298E  ECC2  F012         	call	_MSdelay	;wreg free
  7584  002992  0012               	return		;funcret
  7585  002994                     __end_of_LCD_Char:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _MSdelay *****************
  7589 ;; Defined at:
  7590 ;;		line 118 in file "LCD_16x2.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  val             2    0[COMRAM] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  j               2    4[COMRAM] unsigned int 
  7595 ;;  i               2    2[COMRAM] unsigned int 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      void 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7605 ;;      Params:         2       0       0       0       0       0       0       0       0
  7606 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7608 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7609 ;;Total ram usage:        6 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_LCD_Init
  7615 ;;		_LCD_Command
  7616 ;;		_LCD_Char
  7617 ;;		_main
  7618 ;;		_encenderBombillas
  7619 ;;		_mostrarFechaHora
  7620 ;;		_verificarHora
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text41
  7625  002584                     __ptext41:
  7626                           	callstack 0
  7627  002584                     _MSdelay:
  7628                           	callstack 29
  7629  002584                     
  7630                           ;LCD_16x2.c: 118: void MSdelay(unsigned int val);LCD_16x2.c: 119: {;LCD_16x2.c: 120:    
      +                            unsigned int i,j;;LCD_16x2.c: 121:         for(i=0;i<=val;i++)
  7631  002584  0E00               	movlw	0
  7632  002586  6E04               	movwf	(MSdelay@i+1)^0,c
  7633  002588  0E00               	movlw	0
  7634  00258A  6E03               	movwf	MSdelay@i^0,c
  7635  00258C  EFDB  F012         	goto	l2565
  7636  002590                     l2553:
  7637                           
  7638                           ;LCD_16x2.c: 122:             for(j=0;j<81;j++);
  7639  002590  0E00               	movlw	0
  7640  002592  6E06               	movwf	(MSdelay@j+1)^0,c
  7641  002594  0E00               	movlw	0
  7642  002596  6E05               	movwf	MSdelay@j^0,c
  7643  002598                     l2559:
  7644  002598  4A05               	infsnz	MSdelay@j^0,f,c
  7645  00259A  2A06               	incf	(MSdelay@j+1)^0,f,c
  7646  00259C  5006               	movf	(MSdelay@j+1)^0,w,c
  7647  00259E  E109               	bnz	u1920
  7648  0025A0  0E51               	movlw	81
  7649  0025A2  5C05               	subwf	MSdelay@j^0,w,c
  7650  0025A4  A0D8               	btfss	status,0,c
  7651  0025A6  EFD7  F012         	goto	u1921
  7652  0025AA  EFD9  F012         	goto	u1920
  7653  0025AE                     u1921:
  7654  0025AE  EFCC  F012         	goto	l2559
  7655  0025B2                     u1920:
  7656  0025B2  4A03               	infsnz	MSdelay@i^0,f,c
  7657  0025B4  2A04               	incf	(MSdelay@i+1)^0,f,c
  7658  0025B6                     l2565:
  7659  0025B6  5003               	movf	MSdelay@i^0,w,c
  7660  0025B8  5C01               	subwf	MSdelay@val^0,w,c
  7661  0025BA  5004               	movf	(MSdelay@i+1)^0,w,c
  7662  0025BC  5802               	subwfb	(MSdelay@val+1)^0,w,c
  7663  0025BE  B0D8               	btfsc	status,0,c
  7664  0025C0  EFE4  F012         	goto	u1931
  7665  0025C4  EFE6  F012         	goto	u1930
  7666  0025C8                     u1931:
  7667  0025C8  EFC8  F012         	goto	l2553
  7668  0025CC                     u1930:
  7669  0025CC  0012               	return		;funcret
  7670  0025CE                     __end_of_MSdelay:
  7671                           	callstack 0
  7672                           
  7673 ;; *************** function _I2C_Init *****************
  7674 ;; Defined at:
  7675 ;;		line 76 in file "./I2C_Master_File.h"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text42
  7703  002994                     __ptext42:
  7704                           	callstack 0
  7705  002994                     _I2C_Init:
  7706                           	callstack 30
  7707  002994                     
  7708                           ;./I2C_Master_File.h: 78:     TRISB0=1;
  7709  002994  8093               	bsf	3987,0,c	;volatile
  7710                           
  7711                           ;./I2C_Master_File.h: 79:  TRISB1=1;
  7712  002996  8293               	bsf	3987,1,c	;volatile
  7713  002998                     
  7714                           ;./I2C_Master_File.h: 80:  SSPSTAT=80;
  7715  002998  0E50               	movlw	80
  7716  00299A  6EC7               	movwf	199,c	;volatile
  7717                           
  7718                           ;./I2C_Master_File.h: 81:     SSPCON1=0x28;
  7719  00299C  0E28               	movlw	40
  7720  00299E  6EC6               	movwf	198,c	;volatile
  7721                           
  7722                           ;./I2C_Master_File.h: 83:  SSPCON2=0;
  7723  0029A0  0E00               	movlw	0
  7724  0029A2  6EC5               	movwf	197,c	;volatile
  7725                           
  7726                           ;./I2C_Master_File.h: 84:     SSPADD=((8000000/(4*100000))-1);
  7727  0029A4  0E13               	movlw	19
  7728  0029A6  6EC8               	movwf	200,c	;volatile
  7729  0029A8                     
  7730                           ;./I2C_Master_File.h: 85:     SSPIE=1;
  7731  0029A8  869D               	bsf	3997,3,c	;volatile
  7732  0029AA                     
  7733                           ;./I2C_Master_File.h: 86:     SSPIF=0;
  7734  0029AA  969E               	bcf	3998,3,c	;volatile
  7735  0029AC  0012               	return		;funcret
  7736  0029AE                     __end_of_I2C_Init:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _DHT11_Start *****************
  7740 ;; Defined at:
  7741 ;;		line 211 in file "Controlador.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        1 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text43
  7769  00293C                     __ptext43:
  7770                           	callstack 0
  7771  00293C                     _DHT11_Start:
  7772                           	callstack 30
  7773  00293C                     
  7774                           ;Controlador.c: 212:     TRISCbits.RC2 = 0;
  7775  00293C  9494               	bcf	148,2,c	;volatile
  7776                           
  7777                           ;Controlador.c: 213:     LATC2 = 0;
  7778  00293E  948B               	bcf	3979,2,c	;volatile
  7779  002940                     
  7780                           ;Controlador.c: 214:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  7781  002940  0E2F               	movlw	47
  7782  002942  6E01               	movwf	??_DHT11_Start^0,c
  7783  002944  0EC0               	movlw	192
  7784  002946                     u3177:
  7785  002946  2EE8               	decfsz	wreg,f,c
  7786  002948  D7FE               	bra	u3177
  7787  00294A  2E01               	decfsz	??_DHT11_Start^0,f,c
  7788  00294C  D7FC               	bra	u3177
  7789  00294E                     
  7790                           ;Controlador.c: 215:     LATC2 = 1;
  7791  00294E  848B               	bsf	3979,2,c	;volatile
  7792                           
  7793                           ;Controlador.c: 216:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  7794  002950  0E0D               	movlw	13
  7795  002952                     u3187:
  7796  002952  2EE8               	decfsz	wreg,f,c
  7797  002954  D7FE               	bra	u3187
  7798  002956  F000               	nop	
  7799  002958                     
  7800                           ;Controlador.c: 217:     TRISCbits.RC2 = 1;
  7801  002958  8494               	bsf	148,2,c	;volatile
  7802  00295A  0012               	return		;funcret
  7803  00295C                     __end_of_DHT11_Start:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _DHT11_ReadData *****************
  7807 ;; Defined at:
  7808 ;;		line 196 in file "Controlador.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  data            1    1[COMRAM] unsigned char 
  7813 ;;  i               1    0[COMRAM] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      unsigned char 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0
  7824 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7826 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7827 ;;Total ram usage:        2 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_main
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text44
  7837  00247C                     __ptext44:
  7838                           	callstack 0
  7839  00247C                     _DHT11_ReadData:
  7840                           	callstack 30
  7841  00247C                     
  7842                           ;Controlador.c: 197:     char i, data = 0;
  7843  00247C  0E00               	movlw	0
  7844  00247E  6E02               	movwf	DHT11_ReadData@data^0,c
  7845                           
  7846                           ;Controlador.c: 198:     for (i = 0; i < 8; i++) {
  7847  002480  0E00               	movlw	0
  7848  002482  6E01               	movwf	DHT11_ReadData@i^0,c
  7849  002484                     l319:
  7850  002484  A482               	btfss	130,2,c	;volatile
  7851  002486  EF47  F012         	goto	u2611
  7852  00248A  EF49  F012         	goto	u2610
  7853  00248E                     u2611:
  7854  00248E  EF42  F012         	goto	l319
  7855  002492                     u2610:
  7856  002492                     
  7857                           ;Controlador.c: 200:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  7858  002492  0E14               	movlw	20
  7859  002494                     u3197:
  7860  002494  2EE8               	decfsz	wreg,f,c
  7861  002496  D7FE               	bra	u3197
  7862  002498                     
  7863                           ;Controlador.c: 201:         if (PORTCbits.RC2 & 1)
  7864  002498  A482               	btfss	130,2,c	;volatile
  7865  00249A  EF51  F012         	goto	u2621
  7866  00249E  EF53  F012         	goto	u2620
  7867  0024A2                     u2621:
  7868  0024A2  EF57  F012         	goto	l2991
  7869  0024A6                     u2620:
  7870  0024A6                     
  7871                           ;Controlador.c: 202:             data = ((data << 1) | 1);
  7872  0024A6  80D8               	bsf	status,0,c
  7873  0024A8  3602               	rlcf	DHT11_ReadData@data^0,f,c
  7874  0024AA  EF5A  F012         	goto	l324
  7875  0024AE                     l2991:
  7876                           
  7877                           ;Controlador.c: 204:             data = (data << 1);
  7878  0024AE  5002               	movf	DHT11_ReadData@data^0,w,c
  7879  0024B0  2402               	addwf	DHT11_ReadData@data^0,w,c
  7880  0024B2  6E02               	movwf	DHT11_ReadData@data^0,c
  7881  0024B4                     l324:
  7882  0024B4  B482               	btfsc	130,2,c	;volatile
  7883  0024B6  EF5F  F012         	goto	u2631
  7884  0024BA  EF61  F012         	goto	u2630
  7885  0024BE                     u2631:
  7886  0024BE  EF5A  F012         	goto	l324
  7887  0024C2                     u2630:
  7888  0024C2                     
  7889                           ;Controlador.c: 207:     }
  7890  0024C2  2A01               	incf	DHT11_ReadData@i^0,f,c
  7891  0024C4  0E07               	movlw	7
  7892  0024C6  6401               	cpfsgt	DHT11_ReadData@i^0,c
  7893  0024C8  EF68  F012         	goto	u2641
  7894  0024CC  EF6A  F012         	goto	u2640
  7895  0024D0                     u2641:
  7896  0024D0  EF42  F012         	goto	l319
  7897  0024D4                     u2640:
  7898  0024D4                     
  7899                           ;Controlador.c: 208:     return data;
  7900  0024D4  5002               	movf	DHT11_ReadData@data^0,w,c
  7901  0024D6  0012               	return		;funcret
  7902  0024D8                     __end_of_DHT11_ReadData:
  7903                           	callstack 0
  7904                           
  7905 ;; *************** function _DHT11_CheckResponse *****************
  7906 ;; Defined at:
  7907 ;;		line 221 in file "Controlador.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;		None
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		None
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7921 ;;      Params:         0       0       0       0       0       0       0       0       0
  7922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7925 ;;Total ram usage:        0 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_main
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text45
  7935  0028C6                     __ptext45:
  7936                           	callstack 0
  7937  0028C6                     _DHT11_CheckResponse:
  7938                           	callstack 30
  7939  0028C6                     l333:
  7940  0028C6  B482               	btfsc	130,2,c	;volatile
  7941  0028C8  EF68  F014         	goto	u2581
  7942  0028CC  EF6A  F014         	goto	u2580
  7943  0028D0                     u2581:
  7944  0028D0  EF63  F014         	goto	l333
  7945  0028D4                     u2580:
  7946  0028D4                     l336:
  7947  0028D4  A482               	btfss	130,2,c	;volatile
  7948  0028D6  EF6F  F014         	goto	u2591
  7949  0028DA  EF71  F014         	goto	u2590
  7950  0028DE                     u2591:
  7951  0028DE  EF6A  F014         	goto	l336
  7952  0028E2                     u2590:
  7953  0028E2                     l339:
  7954  0028E2  B482               	btfsc	130,2,c	;volatile
  7955  0028E4  EF76  F014         	goto	u2601
  7956  0028E8  EF78  F014         	goto	u2600
  7957  0028EC                     u2601:
  7958  0028EC  EF71  F014         	goto	l339
  7959  0028F0                     u2600:
  7960  0028F0  0012               	return		;funcret
  7961  0028F2                     __end_of_DHT11_CheckResponse:
  7962                           	callstack 0
  7963                           
  7964                           	psect	rparam
  7965  0000                     
  7966                           	psect	idloc
  7967                           
  7968                           ;Config register IDLOC0 @ 0x200000
  7969                           ;	unspecified, using default values
  7970  200000                     	org	2097152
  7971  200000  FF                 	db	255
  7972                           
  7973                           ;Config register IDLOC1 @ 0x200001
  7974                           ;	unspecified, using default values
  7975  200001                     	org	2097153
  7976  200001  FF                 	db	255
  7977                           
  7978                           ;Config register IDLOC2 @ 0x200002
  7979                           ;	unspecified, using default values
  7980  200002                     	org	2097154
  7981  200002  FF                 	db	255
  7982                           
  7983                           ;Config register IDLOC3 @ 0x200003
  7984                           ;	unspecified, using default values
  7985  200003                     	org	2097155
  7986  200003  FF                 	db	255
  7987                           
  7988                           ;Config register IDLOC4 @ 0x200004
  7989                           ;	unspecified, using default values
  7990  200004                     	org	2097156
  7991  200004  FF                 	db	255
  7992                           
  7993                           ;Config register IDLOC5 @ 0x200005
  7994                           ;	unspecified, using default values
  7995  200005                     	org	2097157
  7996  200005  FF                 	db	255
  7997                           
  7998                           ;Config register IDLOC6 @ 0x200006
  7999                           ;	unspecified, using default values
  8000  200006                     	org	2097158
  8001  200006  FF                 	db	255
  8002                           
  8003                           ;Config register IDLOC7 @ 0x200007
  8004                           ;	unspecified, using default values
  8005  200007                     	org	2097159
  8006  200007  FF                 	db	255
  8007                           
  8008                           	psect	config
  8009                           
  8010                           ;Config register CONFIG1L @ 0x300000
  8011                           ;	PLL Prescaler Selection bits
  8012                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8013                           ;	System Clock Postscaler Selection bits
  8014                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8015                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8016                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8017  300000                     	org	3145728
  8018  300000  00                 	db	0
  8019                           
  8020                           ;Config register CONFIG1H @ 0x300001
  8021                           ;	Oscillator Selection bits
  8022                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8023                           ;	Fail-Safe Clock Monitor Enable bit
  8024                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8025                           ;	Internal/External Oscillator Switchover bit
  8026                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8027  300001                     	org	3145729
  8028  300001  09                 	db	9
  8029                           
  8030                           ;Config register CONFIG2L @ 0x300002
  8031                           ;	Power-up Timer Enable bit
  8032                           ;	PWRT = OFF, PWRT disabled
  8033                           ;	Brown-out Reset Enable bits
  8034                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8035                           ;	Brown-out Reset Voltage bits
  8036                           ;	BORV = 3, Minimum setting 2.05V
  8037                           ;	USB Voltage Regulator Enable bit
  8038                           ;	VREGEN = OFF, USB voltage regulator disabled
  8039  300002                     	org	3145730
  8040  300002  1F                 	db	31
  8041                           
  8042                           ;Config register CONFIG2H @ 0x300003
  8043                           ;	Watchdog Timer Enable bit
  8044                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8045                           ;	Watchdog Timer Postscale Select bits
  8046                           ;	WDTPS = 32768, 1:32768
  8047  300003                     	org	3145731
  8048  300003  1E                 	db	30
  8049                           
  8050                           ; Padding undefined space
  8051  300004                     	org	3145732
  8052  300004  FF                 	db	255
  8053                           
  8054                           ;Config register CONFIG3H @ 0x300005
  8055                           ;	CCP2 MUX bit
  8056                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8057                           ;	PORTB A/D Enable bit
  8058                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8059                           ;	Low-Power Timer 1 Oscillator Enable bit
  8060                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8061                           ;	MCLR Pin Enable bit
  8062                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8063  300005                     	org	3145733
  8064  300005  00                 	db	0
  8065                           
  8066                           ;Config register CONFIG4L @ 0x300006
  8067                           ;	Stack Full/Underflow Reset Enable bit
  8068                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8069                           ;	Single-Supply ICSP Enable bit
  8070                           ;	LVP = OFF, Single-Supply ICSP disabled
  8071                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8072                           ;	ICPRT = OFF, ICPORT disabled
  8073                           ;	Extended Instruction Set Enable bit
  8074                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8075                           ;	Background Debugger Enable bit
  8076                           ;	DEBUG = 0x1, unprogrammed default
  8077  300006                     	org	3145734
  8078  300006  81                 	db	129
  8079                           
  8080                           ; Padding undefined space
  8081  300007                     	org	3145735
  8082  300007  FF                 	db	255
  8083                           
  8084                           ;Config register CONFIG5L @ 0x300008
  8085                           ;	Code Protection bit
  8086                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8087                           ;	Code Protection bit
  8088                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8089                           ;	Code Protection bit
  8090                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8091                           ;	Code Protection bit
  8092                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8093  300008                     	org	3145736
  8094  300008  0F                 	db	15
  8095                           
  8096                           ;Config register CONFIG5H @ 0x300009
  8097                           ;	Boot Block Code Protection bit
  8098                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8099                           ;	Data EEPROM Code Protection bit
  8100                           ;	CPD = OFF, Data EEPROM is not code-protected
  8101  300009                     	org	3145737
  8102  300009  C0                 	db	192
  8103                           
  8104                           ;Config register CONFIG6L @ 0x30000A
  8105                           ;	Write Protection bit
  8106                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8107                           ;	Write Protection bit
  8108                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8109                           ;	Write Protection bit
  8110                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8111                           ;	Write Protection bit
  8112                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8113  30000A                     	org	3145738
  8114  30000A  0F                 	db	15
  8115                           
  8116                           ;Config register CONFIG6H @ 0x30000B
  8117                           ;	Configuration Register Write Protection bit
  8118                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8119                           ;	Boot Block Write Protection bit
  8120                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8121                           ;	Data EEPROM Write Protection bit
  8122                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8123  30000B                     	org	3145739
  8124  30000B  E0                 	db	224
  8125                           
  8126                           ;Config register CONFIG7L @ 0x30000C
  8127                           ;	Table Read Protection bit
  8128                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8129                           ;	Table Read Protection bit
  8130                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8131                           ;	Table Read Protection bit
  8132                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8133                           ;	Table Read Protection bit
  8134                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8135  30000C                     	org	3145740
  8136  30000C  0F                 	db	15
  8137                           
  8138                           ;Config register CONFIG7H @ 0x30000D
  8139                           ;	Boot Block Table Read Protection bit
  8140                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8141  30000D                     	org	3145741
  8142  30000D  40                 	db	64
  8143                           tosu	equ	0xFFF
  8144                           tosh	equ	0xFFE
  8145                           tosl	equ	0xFFD
  8146                           stkptr	equ	0xFFC
  8147                           pclatu	equ	0xFFB
  8148                           pclath	equ	0xFFA
  8149                           pcl	equ	0xFF9
  8150                           tblptru	equ	0xFF8
  8151                           tblptrh	equ	0xFF7
  8152                           tblptrl	equ	0xFF6
  8153                           tablat	equ	0xFF5
  8154                           prodh	equ	0xFF4
  8155                           prodl	equ	0xFF3
  8156                           indf0	equ	0xFEF
  8157                           postinc0	equ	0xFEE
  8158                           postdec0	equ	0xFED
  8159                           preinc0	equ	0xFEC
  8160                           plusw0	equ	0xFEB
  8161                           fsr0h	equ	0xFEA
  8162                           fsr0l	equ	0xFE9
  8163                           wreg	equ	0xFE8
  8164                           indf1	equ	0xFE7
  8165                           postinc1	equ	0xFE6
  8166                           postdec1	equ	0xFE5
  8167                           preinc1	equ	0xFE4
  8168                           plusw1	equ	0xFE3
  8169                           fsr1h	equ	0xFE2
  8170                           fsr1l	equ	0xFE1
  8171                           bsr	equ	0xFE0
  8172                           indf2	equ	0xFDF
  8173                           postinc2	equ	0xFDE
  8174                           postdec2	equ	0xFDD
  8175                           preinc2	equ	0xFDC
  8176                           plusw2	equ	0xFDB
  8177                           fsr2h	equ	0xFDA
  8178                           fsr2l	equ	0xFD9
  8179                           status	equ	0xFD8

Data Sizes:
    Strings     102
    Constant    0
    Data        358
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    130     160
    BANK1           256    166     249
    BANK2           256      0     251
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK2[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[8]), STR_22(CODE[8]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[8]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[8]), STR_22(CODE[8]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[8]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[8]), STR_22(CODE[8]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[8]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK2[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1287_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK2[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK2[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_34(CODE[3]), STR_33(CODE[3]), date(BANK2[10]), hours(BANK1[10]), 
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[6]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), vec_value(BANK1[10]), STR_2(CODE[7]), 
		 -> STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> STR_26(CODE[4]), year(BANK2[10]), month(BANK2[10]), date(BANK2[10]), 
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[6]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), vec_value(BANK1[10]), STR_2(CODE[7]), STR_1(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> bombillaCar3(BANK1[8]), bombillaCar2(BANK1[8]), bombillaCar1(BANK1[8]), bombillaCar0(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verificarHora->_LCD_String_xy
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _encenderBombillas->_onLEDS
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _main in BANK0

    _main->_mostrarFechaHora
    _mostrarFechaHora->_sprintf
    _imprimirTemHum->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    _main->_encenderBombillas

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   77801
                                             52 BANK0     78    78      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                  _encenderBombillas
                     _imprimirTemHum
                   _mostrarFechaHora
                       _offBombillas
                            _offLEDS
                      _verificarHora
 ---------------------------------------------------------------------------------
 (1) _verificarHora                                        0     0      0    7745
                           _I2C_Stop
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
 ---------------------------------------------------------------------------------
 (1) _offLEDS                                             17    17      0      92
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _offBombillas                                        23    23      0      92
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _mostrarFechaHora                                    30    30      0   25743
                                             22 BANK0     30    30      0
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2182
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _imprimirTemHum                                       0     0      0   23137
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   13184
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _encenderBombillas                                  166   166      0    8301
                                              0 BANK1    166   166      0
                      _LCD_String_xy
                            _MSdelay
                             _onLEDS
 ---------------------------------------------------------------------------------
 (2) _onLEDS                                              24    24      0     181
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    6488
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2363
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2642
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2    1080
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Custom_Char
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _encenderBombillas
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _onLEDS
   _imprimirTemHum
     _LCD_Char
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _mostrarFechaHora
     _I2C_Stop
     _LCD_Init
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _offBombillas
   _offLEDS
   _verificarHora
     _I2C_Stop
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A6      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     373      20        0.0%
DATA                 0      0     373       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 21:30:50 2020

                                     _j 00F8                      __size_of_I2C_Ready 0012  
                    __size_of_I2C_Start 002E                         onLEDS@buffer_TX 0001  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l21 28C4  
                                    l33 2976                                      l42 247A  
                                    l27 2614                                      l36 2992  
                                    l55 25CC                                      l47 271E  
                           ?_LCD_String 0008                         _LCD_Custom_Char 25CE  
RTC_Read_Calendar@read_calendar_address 0004                          ?_verificarHora 0001  
                                   l212 293A                                     l204 29B0  
                                   l222 29C6                                     l206 29BE  
                                   l216 29DA                                     l160 2760  
                                   l208 29C0                                     l225 29D4  
                                   l330 295A                                     l162 276E  
                                   l219 29E8                                     l171 29EA  
                                   l324 24B4                                     l164 278E  
                                   l333 28C6                                     l405 0A1C  
                                   l173 29F8                                     l165 2794  
                                   l309 19D4                                     l342 28F0  
                                   l414 0ADC                                     l174 29FA  
                                   l190 284E                                     l327 24D6  
                                   l319 2484                                     l423 0B8A  
                                   l336 28D4                                     l168 29AC  
                                   l432 0C0C                                     l192 2868  
                                   l352 2360                                     l362 1E7E  
                                   l602 1D12                                     l442 2530  
                                   l339 28E2                                     l195 286E  
                                   l436 0C70                                     l188 2840  
                                   l357 1EC0                                     l197 287C  
                                   l373 2260                                     l349 2322  
                                   l366 1EC6                                     l199 2896  
                                   l439 265A                                     l463 0F56  
                                   l376 229E                                     l472 23BE  
                                   l466 0F96                                     l298 18E8  
                                   l387 08B2                                     l379 1DF6  
                                   l396 0970                                     l589 1BAE  
                                   _PEN 007E2A                                     _Day 00EE  
                                   _abs 26A0                         __end_of_I2C_Ack 29EA  
                                   _pad 1F92                                     _min 00F2  
                                   _sec 00F4                                     wreg 000FE8  
                           LCD_Char@dat 0007                                    ?_abs 0013  
                                  l1222 12B4                                    l1303 269E  
                                  l1231 1352                                    l1312 283A  
                                  l1224 12BC                                    l1217 127A  
                                  l1153 2582                                    l3001 1D14  
                                  l1306 29FE                                    l1322 241C  
                                  l3011 1D8C                                    l3003 1D30  
                                  l3101 0A6E                                    l1317 2414  
                                  l1245 14F0                                    l3021 1DD2  
                                  l3013 1D9E                                    l3005 1D42  
                                  l1254 17EC                                    l3111 0AAE  
                                  l3103 0A76                                    l3031 0896  
                                  l1271 26DE                                    l1191 2056  
                                  l1247 1554                                    l1263 22F8  
                                  l3023 1DE4                                    l3015 1DBA  
                                  l3007 1D6A                                    l1280 2804  
                                  l1328 27CC                                    l1264 2300  
                                  l3121 0AEA                                    l3113 0AC0  
                                  l3105 0A84                                    l3041 08C0  
                                  l3033 0898                                    l3025 0868  
                                  l2401 1F4A                                    l3017 1DC6  
                                  l3009 1D70                                    l3201 0D34  
                                  l1186 1FD8                                    l1274 275A  
                                  l3123 0AFC                                    l3115 0AD2  
                                  l3107 0A96                                    l3131 0B32  
                                  l3051 091E                                    l3043 08D2  
                                  l3035 08AA                                    l3027 0870  
                                  l2411 267E                                    l3019 1DCC  
                                  l3211 0D86                                    l3203 0D46  
                                  l1268 26D6                                    l3141 0B80  
                                  l3133 0B44                                    l3125 0B00  
                                  l3109 0AAC                                    l3061 0968  
                                  l3045 08D6                                    l3029 0882  
                                  l3053 092C                                    l2501 1CD2  
                                  l2405 265C                                    l2413 2806  
                                  l1189 201A                                    l1197 1038  
                                  l3213 0DA4                                    l3221 0DD8  
                                  l3205 0D52                                    l3301 2340  
                                  l3151 0BAE                                    l3135 0B5A  
                                  l3127 0B1C                                    l3071 0994  
                                  l3055 093E                                    l3047 08F2  
                                  l2431 1A3A                                    l2503 1CF2  
                                  l1295 1F90                                    l2407 2668  
                                  l2415 2812                                    l2511 1FB6  
                                  l1199 1040                                    l2423 2796  
                                  l3231 0E3C                                    l3223 0DDE  
                                  l3215 0DC2                                    l3207 0D62  
                                  l3303 2344                                    l3161 0C02  
                                  l3153 0BCA                                    l3137 0B5C  
                                  l3129 0B24                                    l3081 09EA  
                                  l3073 09B0                                    l3057 0954  
                                  l3049 0916                                    l2441 1A90  
                                  l2433 1A5A                                    l2409 267A  
                                  l2417 2816                                    l2521 1FFC  
                                  l2513 1FC4                                    l2601 1114  
                                  l3241 0E8A                                    l3233 0E4E  
                                  l3225 0DE2                                    l3209 0D6A  
                                  l3401 1968                                    l3321 17F6  
                                  l3171 0C30                                    l3147 0B98  
                                  l3139 0B6E                                    l3155 0BD6  
                                  l3083 0A00                                    l3075 09C2  
                                  l3067 097E                                    l3059 0956  
                                  l2451 1AE4                                    l2443 1A9C  
                                  l2435 1A5E                                    l2427 1A28  
                                  l2531 26BA                                    l2419 282E  
                                  l2523 202A                                    l2515 1FD0  
                                  l2507 1F92                                    l2611 11E4  
                                  l2603 1178                                    l3243 0E9A  
                                  l3235 0E5A                                    l3227 0E00  
                                  l3403 1972                                    l3411 1994  
                                  l3331 1800                                    l3323 17F8  
                                  l3315 17EE                                    l2701 2980  
                                  l3173 0C4C                                    l3157 0BE8  
                                  l3149 0BAA                                    l3093 0A2A  
                                  l3085 0A02                                    l3077 09CA  
                                  l3069 0990                                    l2461 1B58  
                                  l2453 1AF6                                    l2445 1ABA  
                                  l2437 1A6C                                    l2429 1A2C  
                                  l2525 203E                                    l2517 1FE4  
                                  l2509 1FA2                                    l2621 122E  
                                  l2605 1192                                    l2613 11F4  
                                  l2533 27CE                                    l2541 23C0  
                                  l3245 0EAA                                    l3237 0E6A  
                                  l3253 0EDA                                    l3229 0E1E  
                                  l3181 0C7C                                    l3421 19E2  
                                  l3413 19B8                                    l3405 197C  
                                  l3341 1816                                    l3333 1802  
                                  l3325 17FA                                    l3317 17F2  
                                  l2551 2584                                    l2703 2982  
                                  l3167 0C1A                                    l3159 0BF0  
                                  l3175 0C5C                                    l3095 0A3C  
                                  l3087 0A14                                    l3079 09D8  
                                  l2455 1B24                                    l2447 1AC2  
                                  l2463 1B5E                                    l2439 1A8C  
                                  l2471 1BB0                                    l2391 1EC8  
                                  l2519 1FF8                                    l2623 123A  
                                  l2615 1206                                    l2607 11B0  
                                  l2631 127C                                    l2711 29C2  
                                  l3263 0F64                                    l3247 0EBA  
                                  l3239 0E7A                                    l3255 0F3A  
                                  l3191 0CC0                                    l3183 0C80  
                                  l3423 19F4                                    l3415 19CA  
                                  l3407 1980                                    l3351 1846  
                                  l3343 181A                                    l3335 1804  
                                  l3327 17FC                                    l3319 17F4  
                                  l2561 259C                                    l2553 2590  
                                  l2705 2984                                    l2801 2446  
                                  l3169 0C2C                                    l3097 0A40  
                                  l3177 0C64                                    l2465 1B6E  
                                  l2457 1B44                                    l2449 1AD6  
                                  l2481 1BF4                                    l2473 1BB4  
                                  l2529 26A0                                    l2393 1EDA  
                                  l2625 1242                                    l2617 1216  
                                  l2609 11CA                                    l2537 2720  
                                  l2545 23F6                                    l2641 12DA  
                                  l2633 128C                                    l2713 291C  
                                  l3265 0F76                                    l3257 0F4C  
                                  l3249 0ECA                                    l3193 0CD2  
                                  l3185 0C8C                                    l3273 223C  
                                  l3425 19F8                                    l3409 1984  
                                  l3361 18A0                                    l3353 1854  
                                  l3345 181E                                    l3337 1806  
                                  l3329 17FE                                    l2563 25B2  
                                  l2707 2986                                    l2803 244A  
                                  l3099 0A5C                                    l2467 1B8E  
                                  l2459 1B46                                    l2491 1C5C  
                                  l2483 1C14                                    l2475 1BC2  
                                  l2395 1EEC                                    l2619 121C  
                                  l2627 1252                                    l2571 0FB8  
                                  l2547 2408                                    l2651 131A  
                                  l2643 12FA                                    l2635 128E  
                                  l2731 157A                                    l2811 278A  
                                  l2715 2920                                    l3267 0F7A  
                                  l3195 0CDC                                    l3187 0C9C  
                                  l3179 0C72                                    l3283 226E  
                                  l3275 2246                                    l3291 2308  
                                  l3427 1A14                                    l3371 18C0  
                                  l3363 18A4                                    l3355 1862  
                                  l3347 182A                                    l3339 1808  
                                  l2565 25B6                                    l2493 1C8A  
                                  l2485 1C32                                    l2477 1BE2  
                                  l2397 1EF6                                    l2581 102C  
                                  l2573 0FE0                                    l2661 1398  
                                  l2653 1336                                    l2645 1302  
                                  l2637 12A8                                    l2741 15E6  
                                  l2733 1588                                    l2901 2544  
                                  l2709 29D6                                    l2813 2792  
                                  l2805 275E                                    l2725 2938  
                                  l2717 2924                                    l3197 0CF8  
                                  l3189 0CAA                                    l3285 227E  
                                  l3277 2258                                    l3293 231A  
                                  l3373 18C8                                    l3365 18A8  
                                  l3357 1866                                    l3349 1838  
                                  l2559 2598                                    l2495 1CAA  
                                  l2487 1C3A                                    l2479 1BE6  
                                  l2399 1F14                                    l2591 1076  
                                  l2583 1048                                    l2575 1000  
                                  l2671 1408                                    l2655 1346  
                                  l2647 130C                                    l2639 12D2  
                                  l2751 16AE                                    l2743 162E  
                                  l2735 159A                                    l2903 254C  
                                  l2567 29EA                                    l2807 2772  
                                  l2719 2932                                    l2831 2890  
                                  l2823 2862                                    l2911 2618  
                                  l3199 0D16                                    l3287 2282  
                                  l3391 1938                                    l3383 18F6  
                                  l3375 18CC                                    l3367 18B0  
                                  l3359 1884                                    l2497 1CBC  
                                  l2489 1C4E                                    l2593 1080  
                                  l2585 105A                                    l2577 1010  
                                  l2569 0F98                                    l2681 14AC  
                                  l2673 140E                                    l2665 13D2  
                                  l2649 1312                                    l2753 16C4  
                                  l2761 174A                                    l2737 159E  
                                  l2729 1556                                    l2841 22A8  
                                  l2905 2554                                    l2809 2782  
                                  l2833 2896                                    l2817 29AE  
                                  l2921 24EC                                    l2913 262A  
                                  l3449 0EFC                                    l3289 2302  
                                  l3385 1908                                    l3377 18DE  
                                  l3369 18B8                                    l2931 25D0  
                                  l2499 1CC2                                    l2595 1086  
                                  l2587 1068                                    l2579 1012  
                                  l2691 1516                                    l2683 14C6  
                                  l2675 1414                                    l2667 13E4  
                                  l2659 1386                                    l2763 176E  
                                  l2771 179C                                    l2755 16D2  
                                  l2747 1666                                    l2739 15C2  
                                  l2843 22B6                                    l2907 2570  
                                  l2851 28AC                                    l2827 286C  
                                  l2819 283E                                    l2923 24FC  
                                  l2915 263A                                    l3299 2330  
                                  l3395 1944                                    l3387 190C  
                                  l2941 25F0                                    l2933 25E0  
                                  l2861 26E2                                    l2597 1108  
                                  l2589 106E                                    l2693 152C  
                                  l2685 14E0                                    l2669 13F8  
                                  l2677 1472                                    l2773 17AA  
                                  l2765 177C                                    l2757 170E  
                                  l2749 168A                                    l2845 22DC  
                                  l2853 28B2                                    l2925 250C  
                                  l2917 264A                                    l3397 1958  
                                  l3389 1928                                    ?_pad 0011  
                                  l2951 29A8                                    l2791 2966  
                                  l2943 2602                                    l2935 25EC  
                                  l2871 2712                                    l2863 26F2  
                                  l2599 110E                                    l2687 1500  
                                  l2679 148E                                    l2767 1790  
                                  l2839 22A0                                    l2855 28B8  
                                  l2847 2898                                    l2927 251C  
                                  l2919 24DA                                    l3399 195C  
                                  l2953 29AA                                    l2697 297A  
                                  l2793 2968                                    l2785 295E  
                                  l2945 2604                                    l2865 26FA  
                                  l2881 1E42                                    l2873 1DFA  
                                  l2689 1506                                    l2777 17B6  
                                  l2857 28BE                                    l2849 28A0  
                                  l2929 252C                                    l2961 2378  
                                  l2971 2940                                    l2947 2994  
                                  l2699 297E                                    l2795 296A  
                                  l2787 2962                                    l2867 2704  
                                  l2859 26E2                                    l2883 1E5E  
                                  l2875 1E00                                    l2779 17DA  
                                  l2963 2388                                    l2955 2362  
                                  l2973 294E                                    l2949 2998  
                                  l2789 2964                                    l2797 241E  
                                  l2869 270C                                    l2893 1E8C  
                                  l2885 1E64                                    l2877 1E1C  
                                  l2965 2396                                    l2957 2368  
                                  l2991 24AE                                    l2975 2958  
                                  l2799 2422                                    l2895 1E9C  
                                  l2887 1E76                                    l2879 1E26  
                                  l2967 23AC                                    l2959 236C  
                                  l2977 28C6                                    l2993 24C2  
                                  l2985 2492                                    l2969 293C  
                                  l2897 1EA0                                    l2995 24C4  
                                  l2987 2498                                    l2979 247C  
                                  l2899 2532                                    l2997 24D4  
                                  l2989 24A6                                    STR_1 0801  
                                  STR_2 081D                                    STR_3 0834  
                                  STR_4 082A                                    STR_5 0834  
                                  STR_6 0833                                    STR_7 0863  
                                  STR_8 0865                                    STR_9 0824  
                                  u2000 105A                                    u2001 1056  
                                  u2010 1068                                    u2011 1064  
                                  u2020 1192                                    u2100 128C  
                                  u2021 118E                                    u2101 1288  
                                  u2030 11B0                                    u2110 12A8  
                                  u2031 11AC                                    u2111 12A4  
                                  u2040 11CA                                    u2200 144C  
                                  u2120 12D2                                    u3000 226E  
                                  u2041 11C6                                    u2121 12CE  
                                  u3001 226A                                    u2050 11E4  
                                  u2210 148E                                    u2130 1336  
                                  u3010 229E                                    u2051 11E0  
                                  u2211 148A                                    u2131 1332  
                                  u3011 229A                                    u2060 11F4  
                                  u2220 14AC                                    u2140 1380  
                                  u2300 157A                                    u2061 11F0  
                                  u2221 14A8                                    u2205 143A  
                                  u2141 137A                                    u2301 1576  
                                  u3021 2312                                    u3101 18D6  
                                  u2070 1206                                    u2230 14C6  
                                  u2150 1382                                    u2310 15C2  
                                  u3030 2330                                    u3110 18F6  
                                  u2071 1202                                    u2231 14C2  
                                  u2311 15BE                                    u3031 232C  
                                  u3111 18F2                                    u1600 1EEC  
                                  u2080 1216                                    u2240 14E0  
                                  u2160 1398                                    u2320 15E6  
                                  u2400 2782                                    u3040 2360  
                                  u3120 1928                                    _LATD 000F8C  
                                  u1601 1EE8                                    u2081 1212  
                                  u2241 14DC                                    u2161 1394  
                                  u2321 15E2                                    u2401 277E  
                                  u3041 235C                                    u3121 1924  
                                  u1610 1F14                                    u2090 122E  
                                  u2250 14F0                                    u2170 13CC  
                                  u2330 168A                                    u2410 29BE  
                                  u3130 1958                                    u1611 1F10  
                                  u2091 122A                                    u2251 14EC  
                                  u2171 13C6                                    u2331 1686  
                                  u2411 29BA                                    u3131 1954  
                                  u2500 1E5E                                    u1700 1ABA  
                                  u1620 1F4A                                    u2260 1500  
                                  u2180 13CE                                    u2340 16AE  
                                  u2420 284E                                    u2501 1E5A  
                                  u1701 1AB6                                    u1621 1F46  
                                  u2261 14FC                                    u2341 16AA  
                                  u2421 284A                                    u3141 19C2  
                                  u1710 1AE4                                    u1630 269E  
                                  u2190 13E4                                    u2350 176E  
                                  u2270 29E8                                    u2430 285E  
                                  u3150 19E2                                    u2511 1E6E  
                                  u1711 1AE0                                    u1631 269A  
                                  u2191 13E0                                    u2351 176A  
                                  u2271 29E4                                    u2431 285A  
                                  u3151 19DE                                    u2600 28F0  
                                  u2360 2442                                    u2520 1E8C  
                                  u1720 1B24                                    u1640 282E  
                                  u1800 1FA2                                    u2280 29D4  
                                  u2440 287C                                    u3160 1A14  
                                  u3080 1884                                    u2601 28EC  
                                  u2521 1E88                                    u1721 1B20  
                                  u1641 282A                                    u1801 1F9E  
                                  u2281 29D0                                    u2441 2878  
                                  u3161 1A10                                    u3081 1880  
                                  u2610 2492                                    u2370 246A  
                                  u2530 1EBC                                    u1730 1B6E  
                                  u1810 1FC4                                    u1650 27C6  
                                  u2290 2932                                    u2450 288C  
                                  u3090 18A0                                    u2611 248E  
                                  u2531 1EB8                                    u1731 1B6A  
                                  u1811 1FC0                                    u1651 27C0  
                                  u2291 292E                                    u2451 2888  
                                  u3091 189C                                    u2620 24A6  
                                  u2540 25E0                                    u2380 247A  
                                  u2700 093E                                    u1740 1BC2  
                                  u1820 201A                                    u1660 27C8  
                                  u1900 23F2                                    u2460 22F8  
                                  u2621 24A2                                    u2541 25DC  
                                  u2381 2476                                    u2701 093A  
                                  u1741 1BBE                                    u1821 2016  
                                  u2461 22F4                                    u2630 24C2  
                                  u2550 2614                                    u2470 26F2  
                                  u2710 0954                                    u1670 1A3A  
                                  u1750 1BF4                                    u1590 1EDA  
                                  u1830 202A                                    u1910 2408  
                                  u2390 276E                                    u2631 24BE  
                                  u2551 2610                                    u2367 2438  
                                  u2471 26EE                                    u2711 0950  
                                  u1671 1A36                                    u1751 1BF0  
                                  u1591 1ED6                                    u1831 2026  
                                  u1911 2404                                    u2391 276A  
                                  u2640 24D4                                    u1920 25B2  
                                  u2480 1E1C                                    u2800 0A96  
                                  u1680 1A6C                                    u1760 1C32  
                                  u1840 26BA                                    u2560 2388  
                                  u2641 24D0                                    u3177 2946  
                                  u1921 25AE                                    u2377 2460  
                                  u2481 1E18                                    u2801 0A92  
                                  u2721 0960                                    u1681 1A68  
                                  u1761 1C2E                                    u1841 26B6  
                                  u2561 2384                                    u1930 25CC  
                                  u2490 1E42                                    u2810 0AAC  
                                  u2730 097E                                    u2650 0882  
                                  u1770 1C5C                                    u1850 27FE  
                                  u2570 2396                                    u3187 2952  
                                  u1931 25C8                                    u2491 1E3E  
                                  u2811 0AA8                                    u2731 097A  
                                  u2651 087E                                    u1691 1A96  
                                  u1771 1C58                                    u1851 27F8  
                                  u2571 2392                                    u2580 28D4  
                                  u2900 0BE8                                    u2740 09B0  
                                  u2660 0896                                    u1780 1C8A  
                                  u1860 2800                                    u1940 29F8  
                                  u2581 28D0                                    u3197 2494  
                                  u2901 0BE4                                    u2821 0ACA  
                                  u2741 09AC                                    u2661 0892  
                                  u1781 1C86                                    u1941 29F4  
                                  u2590 28E2                                    u2830 0AEA  
                                  u2750 09EA                                    u1790 1CD2  
                                  u1950 0FC8                                    u1870 2754  
                                  u2591 28DE                                    u2911 0BFA  
                                  u2831 0AE6                                    u2751 09E6  
                                  u2671 08A2                                    u1791 1CCE  
                                  u1951 0FC2                                    u1871 274E  
                                  u2920 0C1A                                    u2840 0B1C  
                                  u2760 0A00                                    u2680 08C0  
                                  u1960 0FCA                                    u1880 2756  
                                  u2921 0C16                                    u2841 0B18  
                                  u2761 09FC                                    u2681 08BC  
                                  u2930 0C4C                                    u2850 0B44  
                                  u2690 08F2                                    u1970 0FE0  
                                  u1890 23F0                                    u2931 0C48  
                                  u2851 0B40                                    u2771 0A0C  
                                  u2691 08EE                                    u1971 0FDC  
                                  u1891 23EA                                    u2860 0B5A  
                                  u2780 0A2A                                    u1980 1010  
                                  u2940 0C9C                                    u2861 0B56  
                                  u2781 0A26                                    u1981 100C  
                                  u2941 0C98                                    u2790 0A5C  
                                  u1990 102C                                    u2950 0CAA  
                                  u2871 0B78                                    u2791 0A58  
                                  u1991 1028                                    u2951 0CA6  
                                  u2880 0B98                                    u2881 0B94  
                                  u2961 0F44                                    u2890 0BCA  
                                  u2970 0F64                                    u2891 0BC6  
                                  u2971 0F60                                    u2980 0F96  
                                  _RCEN 007E2B                                    u2981 0F92  
                                  u2991 2250                                    _RSEN 007E29  
                                  _Date 00EC                   mostrarFechaHora@F3618 0251  
                         ?_offBombillas 0001                                    _Year 00E8  
                                  abs@a 0013                                    _date 02F1  
                                  _dbuf 02BD                                    _days 01D2  
                                  _main 17EE                                    _dtoa 0F98  
                       ?_RTC_Read_Clock 0001                                    _hour 00F0  
                      __end_of_I2C_Nack 29D6                                    _mins 01B4  
                                  _secs 01BE                                    _prec 00E4  
                      __end_of_I2C_Init 29AE                        __end_of_I2C_Read 2796  
                                  _nout 01A6                                    _year 02DD  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    _xtoa 127C  
                      __end_of_I2C_Stop 29C2                                    prodl 000FF3  
                                  start 0000                         __end_of_MSdelay 25CE  
                      ??_DHT11_ReadData 0001                           _LCD_String_xy 26E0  
                  __size_of_DHT11_Start 0020                            ___param_bank 000000  
      RTC_Read_Clock@read_clock_address 0004                                   ??_abs 0015  
                                 ??_pad 0017                        __end_of_LCD_Char 2994  
                      __end_of_LCD_Init 28C6                              _Clock_type 00FF  
                       __end_of___aodiv 1BB0                                   ?_main 0001  
                                 ?_dtoa 001C                         __end_of___aomod 1D14  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 0859                                   STR_11 085B  
                                 STR_20 082F                                   STR_12 085D  
                                 STR_21 0819                                   STR_13 085F  
                                 STR_22 0815                                   STR_14 0861  
                                 STR_30 084F                                   STR_15 0856  
                                 STR_31 083F                                   STR_23 080D  
                                 STR_24 0811                                   STR_16 0853  
                                 STR_32 084B                                   STR_25 082F  
                                 STR_33 0856                                   STR_17 082F  
                                 STR_18 0819                                   STR_34 0853  
                                 STR_26 0847                                   STR_27 0843  
                                 STR_19 0815                                   STR_28 083B  
                                 STR_29 0837                                   ?_xtoa 001C  
                                 _LATC0 007C58                                   _LATC1 007C59  
                                 _LATC2 007C5A                                   _AM_PM 00FE  
                          vfpfcnvrt@fmt 0045                            vfpfcnvrt@llu 0055  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                         __end_of_offLEDS 2362  
                                 _Month 00EA                                   _flags 00E6  
                                 _fputc 1EC8                         __end_of_isalpha 275C  
                                 _fputs 265C                                   _hours 01AA  
                                 _month 02E7                       __end_of_I2C_Ready 29FC  
                                 pad@fp 0011                                   _width 00E2  
                                 _putch 29FE                                   main@i 00DE  
                                 dtoa@d 001E                                   dtoa@i 003E  
                                 dtoa@n 0036                                   dtoa@p 0030  
                                 dtoa@s 0034                                   dtoa@w 0032  
                       __end_of_islower 27CE                       __end_of_I2C_Start 286A  
                        ??_offBombillas 0001                       __end_of_I2C_Write 293C  
                       __end_of_isupper 2806                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                     __size_of_LCD_String 005E  
                       __end_of_sprintf 2584                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_toupper 241E                          _var_RH_Decimal 00FD  
                        ?_LCD_String_xy 000A                            _toupper$1471 000D  
               __end_of_LCD_Custom_Char 2616                         __initialization 2116  
                          __end_of_main 1A28                            __end_of_dtoa 127C  
                          __end_of_xtoa 1556                       ?_mostrarFechaHora 0001  
                       ??_verificarHora 000F                               ??_I2C_Ack 0001  
                    ??_mostrarFechaHora 0076                                  ??_main 0060  
                                ??_dtoa 0026                                  ??_xtoa 0027  
                         __activetblptr 000002                           main@buffer_TX 00BA  
                                _ADCON1 000FC1                                  ?_fputc 0001  
                                ?_fputs 000A                                  ?_putch 0001  
                   _DHT11_CheckResponse 28C6                        LCD_String_xy@msg 000B  
                      LCD_String_xy@pos 000A                        LCD_String_xy@row 000D  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                          vfprintf@cfmt 005E                               ??___aodiv 0011  
                             ??___aomod 0011                                  _onLEDS 1DF8  
                  ?_DHT11_CheckResponse 0001                                  clear_0 2194  
                                clear_1 21A0                                  clear_2 21AC  
                                _valor2 00F9                      _I2C_Repeated_Start 286A  
                                pad@buf 0013                               ??_offLEDS 0001  
                      ??_imprimirTemHum 0060                    __size_of_LCD_Command 001C  
                                dtoa@fp 001C                                  _strlen 2806  
                      offLEDS@buffer_TX 0001                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000B  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 2302  
                             ??_sprintf 0060                                  xtoa@fp 001C  
                             ??_toupper 0009                          _var_T_Integral 00FA  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 21B2                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000D                           ___rparam_used 000001  
                            _banAgregar 00F6                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0008                          __pcstackCOMRAM 0001  
                          __pidataBANK0 29FC                            __pidataBANK1 28F2  
                          __pidataBANK2 2058                            __pidataBANK3 21BC  
                 ??_DHT11_CheckResponse 0001                         _var_RH_Integral 00FC  
                         __end_of_fputc 1F92                           __end_of_fputs 26A0  
                         __end_of_putch 2A00                            ??_LCD_String 000A  
                  __end_of_offBombillas 22A0                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 01A6                              __pbssBANK2 02BD  
                            ??_LCD_Char 0007                              ??_LCD_Init 0008  
                    __end_of_LCD_String 247C                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                           offBombillas@i 0016  
                               ?_onLEDS 0001                                 _I2C_Ack 29D6  
                               _ACKSTAT 007E2E                                 ?_strlen 0001  
                    __size_of_vfpfcnvrt 0298                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 2584                           ??_DHT11_Start 0001  
                             _I2C_Ready 29EA                               _I2C_Start 283C  
                             _I2C_Write 291A                           LCD_String@msg 0008  
                               __Hparam 0000                  encenderBombillas@F3601 0200  
                               __Lparam 0000                  encenderBombillas@F3610 0280  
                encenderBombillas@F3604 0365                  encenderBombillas@F3607 034A  
                encenderBombillas@F3595 0236                  encenderBombillas@F3598 021B  
                               ___aodiv 1A28                       _RTC_Read_Calendar 24D8  
                               ___aomod 1BB0                            _bombillaCar0 01F1  
                          _bombillaCar1 01E9                            _bombillaCar2 01E1  
                          _bombillaCar3 01D9                            _bombillaCar4 02B5  
                     offBombillas@F3590 026B                         __size_of_onLEDS 00D0  
                             ?_vfprintf 0060                            __psmallconst 0800  
                               _acumBom 01A8                  encenderBombillas@i_803 019E  
                encenderBombillas@i_812 01A2                  encenderBombillas@i_815 01A4  
                encenderBombillas@i_808 01A0                  encenderBombillas@i_799 019C  
                    ?_RTC_Read_Calendar 0001                                 __pcinit 2116  
                               __ramtop 0800                                 __ptext0 17EE  
                               __ptext1 2362                                 __ptext2 2302  
                               __ptext3 223C                                 __ptext4 0C72  
                               __ptext5 2616                                 __ptext6 24D8  
                               __ptext7 29AE                                 __ptext8 283C  
                               __ptext9 286A                                 _offLEDS 2302  
                       __size_of_strlen 0036                            __size_of_abs 0040  
                          __size_of_pad 00C6                                 _isalpha 2720  
                               onLEDS@i 0017                     ??_RTC_Read_Calendar 0003  
                               _islower 2796                                 _isupper 27CE  
                               _sprintf 2532               __size_of_mostrarFechaHora 0326  
                               _toupper 23C0                    end_of_initialization 21B2  
                               fputc@fp 0003                          LCD_Command@cmd 0007  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 2532  
                     __end_of_vfpfcnvrt 17EE                   __size_of_offBombillas 0064  
                             _RCSTAbits 000FAB                     __end_of_DHT11_Start 295C  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005E  
                               strlen@a 0003                                 strlen@s 0001  
                             _PORTAbits 000F80                   __end_of_verificarHora 23C0  
                             _PORTCbits 000F82                 __size_of_DHT11_ReadData 005C  
            encenderBombillas@buffer_TX 0100                               _TRISCbits 000F94  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                       __size_of_I2C_Stop 0014  
                          _offBombillas 223C                               _TXSTAbits 000FAC  
                     __size_of_LCD_Char 001C                       __size_of_LCD_Init 002E  
                    DHT11_ReadData@data 0002                           ??_LCD_Command 0007  
                           vfpfcnvrt@ap 0047                             vfpfcnvrt@fp 0043  
                           vfpfcnvrt@ll 004D                             _BAUDCONbits 000FB8  
                        __end_of_onLEDS 1EC8                          __end_of_strlen 283C  
                   start_initialization 2116                             __end_of_abs 26E0  
                           __end_of_pad 2058    I2C_Repeated_Start@slave_read_address 0002  
                     _encenderBombillas 0868                             ??_I2C_Ready 0001  
                    ?_encenderBombillas 0001                             _DHT11_Start 293C  
                           ??_I2C_Start 0002             __end_of_DHT11_CheckResponse 28F2  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 2720  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 0062  
           __size_of_I2C_Repeated_Start 002E                     ??_encenderBombillas 0019  
                              ??_onLEDS 0001                           _var_T_Decimal 00FB  
                           __pdataBANK0 00FE                             __pdataBANK1 01D2  
                           __pdataBANK2 0200                             __pdataBANK3 0300  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
              __size_of_LCD_Custom_Char 0048                     __end_of_LCD_Command 2978  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                      ___aodiv@dividend 0001               __end_of_encenderBombillas 0C72  
                      _mostrarFechaHora 0C72                       main@buffer_TX_754 0094  
               __size_of_imprimirTemHum 00E4                                ?_MSdelay 0001  
                             _dtoa$1375 002E                                ?___aodiv 0001  
                              ?___aomod 0001                        ___aodiv@quotient 0013  
                        _DHT11_ReadData 247C                                ?_offLEDS 0001  
                     __size_of_vfprintf 0062                             __smallconst 0800  
                              _I2C_Nack 29C2                                ?_isalpha 0001  
                              _I2C_Init 2994                                _I2C_Read 275C  
                              _I2C_Stop 29AE                                ?_islower 0001  
                              ?_isupper 0001                   LCD_String_xy@location 000E  
                              ?_sprintf 0066          encenderBombillas@buffer_TX_802 0136  
        encenderBombillas@buffer_TX_811 016C          encenderBombillas@buffer_TX_814 0187  
        encenderBombillas@buffer_TX_807 0151                          __size_of_fputc 00CA  
        encenderBombillas@buffer_TX_798 011B                          __size_of_fputs 0044  
                              ?_toupper 0007                          __size_of_putch 0002  
                              MSdelay@i 0003                                MSdelay@j 0005  
             mostrarFechaHora@buffer_TX 0078                                _LCD_Char 2978  
                              _LCD_Init 2898                 __size_of_RTC_Read_Clock 0046  
                             _vec_value 01C8                               main@F3571 0300  
                             main@F3568 0326                  __end_of_DHT11_ReadData 24D8  
                           _LCD_Command 295C                               _vfpfcnvrt 1556  
                             _xtoa$1386 002F                               _xtoa$1387 0031  
                      __size_of_I2C_Ack 0014                               main@i_755 00E0  
                      onLEDS@T_Integral 0014              __size_of_encenderBombillas 040A  
                     ??_LCD_Custom_Char 000A                              vfpfcnvrt@c 005D  
                             copy_data0 212A                               copy_data1 214A  
                             copy_data2 216A            I2C_Start@slave_write_address 0002  
                      __size_of_MSdelay 004A                                __Hrparam 0000  
                            vfprintf@ap 0064                                __Lrparam 0000  
                            vfprintf@fp 0060                           I2C_Write@data 0001  
                       ?_DHT11_ReadData 0001                        __size_of___aodiv 0188  
                      __size_of___aomod 0164                              ?_vfpfcnvrt 0043  
                       DHT11_ReadData@i 0001                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                        __size_of_offLEDS 0060  
                            sprintf@fmt 0068                        __size_of_isalpha 003C  
                      __size_of_islower 0038                                __ptext10 291A  
                              __ptext11 275C                                __ptext20 127C  
                              __ptext12 29EA                                __ptext21 23C0  
                              __ptext13 29C2                                __ptext30 29FE  
                              __ptext22 2796                                __ptext14 29D6  
                              __ptext31 26A0                                __ptext23 27CE  
                              __ptext15 2898                                __ptext40 2978  
                              __ptext32 1BB0                                __ptext24 2720  
                              __ptext16 1D14                                __ptext41 2584  
                              __ptext33 1A28                                __ptext25 0F98  
                              __ptext17 2532                                __ptext42 2994  
                              __ptext34 0868                                __ptext26 1F92  
                              __ptext18 22A0                                __ptext43 293C  
                              __ptext35 1DF8                                __ptext27 2806  
                              __ptext19 1556                                __ptext44 247C  
                              __ptext36 26E0                                __ptext28 265C  
                              __ptext45 28C6                                __ptext37 241E  
                              __ptext29 1EC8                                __ptext38 25CE  
                              __ptext39 295C                        __size_of_isupper 0038  
                        _imprimirTemHum 1D14                        __size_of_sprintf 0052  
                      __size_of_toupper 005E                           __size_of_main 023A  
                         __size_of_dtoa 02E4                             onLEDS@F3586 0293  
                          ?_DHT11_Start 0001                           __size_of_xtoa 02DA  
                __size_of_verificarHora 005E                              MSdelay@val 0001  
                              offLEDS@i 0010                __end_of_mostrarFechaHora 0F98  
                              _vfprintf 22A0                             onLEDS@valor 0015  
                     mostrarFechaHora@i 0092                              _LCD_String 241E  
                      ___aomod@dividend 0001                  __end_of_imprimirTemHum 1DF8  
                              isalpha@c 0001                   offBombillas@buffer_TX 0001  
                    LCD_Custom_Char@loc 000A                      LCD_Custom_Char@msg 0008  
                             sprintf@ap 006E                                islower@c 0001  
            __end_of_I2C_Repeated_Start 2898                                isupper@c 0001  
                        _RTC_Read_Clock 2616                            offLEDS@F3580 02A6  
          __size_of_DHT11_CheckResponse 002C                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0049                         ___aomod@counter 0011  
                              sprintf@f 0070                           _verificarHora 2362  
                              sprintf@s 0066                      encenderBombillas@i 019A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                       ?_imprimirTemHum 0001                             _SSPCON2bits 000FC5  
                          ___aodiv@sign 0012                  __end_of_RTC_Read_Clock 265C  
                          ___aomod@sign 0012  
