

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Dec 15 00:04:42 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  0029C2                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _AM_PM
   112  0029C2  05                 	db	5
   113                           
   114                           ;initializer for _Clock_type
   115  0029C3  06                 	db	6
   116                           
   117                           	psect	idataBANK1
   118  0028EA                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for _days
   122  0028EA  53                 	db	83
   123  0028EB  4D                 	db	77
   124  0028EC  54                 	db	84
   125  0028ED  57                 	db	87
   126  0028EE  74                 	db	116
   127  0028EF  46                 	db	70
   128  0028F0  73                 	db	115
   129                           
   130                           ;initializer for _alert
   131  0028F1  00                 	db	0
   132  0028F2  1B                 	db	27
   133  0028F3  1B                 	db	27
   134  0028F4  00                 	db	0
   135  0028F5  0E                 	db	14
   136  0028F6  11                 	db	17
   137  0028F7  11                 	db	17
   138  0028F8  00                 	db	0
   139                           
   140                           ;initializer for _good
   141  0028F9  00                 	db	0
   142  0028FA  1B                 	db	27
   143  0028FB  1B                 	db	27
   144  0028FC  00                 	db	0
   145  0028FD  11                 	db	17
   146  0028FE  11                 	db	17
   147  0028FF  0E                 	db	14
   148  002900  00                 	db	0
   149                           
   150                           ;initializer for _bombillaCar0
   151  002901  0E                 	db	14
   152  002902  11                 	db	17
   153  002903  11                 	db	17
   154  002904  11                 	db	17
   155  002905  0E                 	db	14
   156  002906  0E                 	db	14
   157  002907  00                 	db	0
   158  002908  00                 	db	0
   159                           
   160                           	psect	idataBANK2
   161  002074                     __pidataBANK2:
   162                           	callstack 0
   163                           
   164                           ;initializer for onBombillas@F3596
   165  002074  53                 	db	83
   166  002075  65                 	db	101
   167  002076  20                 	db	32
   168  002077  65                 	db	101
   169  002078  6E                 	db	110
   170  002079  63                 	db	99
   171  00207A  65                 	db	101
   172  00207B  6E                 	db	110
   173  00207C  64                 	db	100
   174  00207D  69                 	db	105
   175  00207E  6F                 	db	111
   176  00207F  20                 	db	32
   177  002080  6C                 	db	108
   178  002081  61                 	db	97
   179  002082  20                 	db	32
   180  002083  62                 	db	98
   181  002084  6F                 	db	111
   182  002085  6D                 	db	109
   183  002086  62                 	db	98
   184  002087  69                 	db	105
   185  002088  6C                 	db	108
   186  002089  6C                 	db	108
   187  00208A  61                 	db	97
   188  00208B  20                 	db	32
   189  00208C  33                 	db	51
   190  00208D  0D                 	db	13
   191  00208E  00                 	db	0
   192                           
   193                           ;initializer for onBombillas@F3593
   194  00208F  53                 	db	83
   195  002090  65                 	db	101
   196  002091  20                 	db	32
   197  002092  65                 	db	101
   198  002093  6E                 	db	110
   199  002094  63                 	db	99
   200  002095  65                 	db	101
   201  002096  6E                 	db	110
   202  002097  64                 	db	100
   203  002098  69                 	db	105
   204  002099  6F                 	db	111
   205  00209A  20                 	db	32
   206  00209B  6C                 	db	108
   207  00209C  61                 	db	97
   208  00209D  20                 	db	32
   209  00209E  62                 	db	98
   210  00209F  6F                 	db	111
   211  0020A0  6D                 	db	109
   212  0020A1  62                 	db	98
   213  0020A2  69                 	db	105
   214  0020A3  6C                 	db	108
   215  0020A4  6C                 	db	108
   216  0020A5  61                 	db	97
   217  0020A6  20                 	db	32
   218  0020A7  32                 	db	50
   219  0020A8  0D                 	db	13
   220  0020A9  00                 	db	0
   221                           
   222                           ;initializer for onBombillas@F3590
   223  0020AA  53                 	db	83
   224  0020AB  65                 	db	101
   225  0020AC  20                 	db	32
   226  0020AD  65                 	db	101
   227  0020AE  6E                 	db	110
   228  0020AF  63                 	db	99
   229  0020B0  65                 	db	101
   230  0020B1  6E                 	db	110
   231  0020B2  64                 	db	100
   232  0020B3  69                 	db	105
   233  0020B4  6F                 	db	111
   234  0020B5  20                 	db	32
   235  0020B6  6C                 	db	108
   236  0020B7  61                 	db	97
   237  0020B8  20                 	db	32
   238  0020B9  62                 	db	98
   239  0020BA  6F                 	db	111
   240  0020BB  6D                 	db	109
   241  0020BC  62                 	db	98
   242  0020BD  69                 	db	105
   243  0020BE  6C                 	db	108
   244  0020BF  6C                 	db	108
   245  0020C0  61                 	db	97
   246  0020C1  20                 	db	32
   247  0020C2  31                 	db	49
   248  0020C3  0D                 	db	13
   249  0020C4  00                 	db	0
   250                           
   251                           ;initializer for mostrarFechaHora@F3614
   252  0020C5  52                 	db	82
   253  0020C6  65                 	db	101
   254  0020C7  67                 	db	103
   255  0020C8  69                 	db	105
   256  0020C9  73                 	db	115
   257  0020CA  74                 	db	116
   258  0020CB  72                 	db	114
   259  0020CC  61                 	db	97
   260  0020CD  6E                 	db	110
   261  0020CE  64                 	db	100
   262  0020CF  6F                 	db	111
   263  0020D0  20                 	db	32
   264  0020D1  48                 	db	72
   265  0020D2  6F                 	db	111
   266  0020D3  72                 	db	114
   267  0020D4  61                 	db	97
   268  0020D5  20                 	db	32
   269  0020D6  79                 	db	121
   270  0020D7  20                 	db	32
   271  0020D8  46                 	db	70
   272  0020D9  65                 	db	101
   273  0020DA  63                 	db	99
   274  0020DB  68                 	db	104
   275  0020DC  61                 	db	97
   276  0020DD  0D                 	db	13
   277  0020DE  00                 	db	0
   278                           
   279                           ;initializer for offBombillas@F3585
   280  0020DF  42                 	db	66
   281  0020E0  6F                 	db	111
   282  0020E1  6D                 	db	109
   283  0020E2  62                 	db	98
   284  0020E3  69                 	db	105
   285  0020E4  6C                 	db	108
   286  0020E5  6C                 	db	108
   287  0020E6  61                 	db	97
   288  0020E7  73                 	db	115
   289  0020E8  20                 	db	32
   290  0020E9  41                 	db	65
   291  0020EA  70                 	db	112
   292  0020EB  61                 	db	97
   293  0020EC  67                 	db	103
   294  0020ED  61                 	db	97
   295  0020EE  64                 	db	100
   296  0020EF  61                 	db	97
   297  0020F0  73                 	db	115
   298  0020F1  20                 	db	32
   299  0020F2  0D                 	db	13
   300  0020F3  00                 	db	0
   301                           
   302                           ;initializer for onBombillas@F3605
   303  0020F4  54                 	db	84
   304  0020F5  65                 	db	101
   305  0020F6  6D                 	db	109
   306  0020F7  70                 	db	112
   307  0020F8  65                 	db	101
   308  0020F9  72                 	db	114
   309  0020FA  61                 	db	97
   310  0020FB  74                 	db	116
   311  0020FC  75                 	db	117
   312  0020FD  72                 	db	114
   313  0020FE  61                 	db	97
   314  0020FF  20                 	db	32
   315  002100  41                 	db	65
   316  002101  6C                 	db	108
   317  002102  74                 	db	116
   318  002103  61                 	db	97
   319  002104  20                 	db	32
   320  002105  0D                 	db	13
   321  002106  00                 	db	0
   322                           
   323                           ;initializer for onLEDS@F3581
   324  002107  54                 	db	84
   325  002108  65                 	db	101
   326  002109  6D                 	db	109
   327  00210A  70                 	db	112
   328  00210B  65                 	db	101
   329  00210C  72                 	db	114
   330  00210D  61                 	db	97
   331  00210E  74                 	db	116
   332  00210F  75                 	db	117
   333  002110  72                 	db	114
   334  002111  61                 	db	97
   335  002112  20                 	db	32
   336  002113  49                 	db	73
   337  002114  64                 	db	100
   338  002115  65                 	db	101
   339  002116  61                 	db	97
   340  002117  6C                 	db	108
   341  002118  0D                 	db	13
   342  002119  00                 	db	0
   343                           
   344                           ;initializer for offLEDS@F3575
   345  00211A  41                 	db	65
   346  00211B  70                 	db	112
   347  00211C  61                 	db	97
   348  00211D  67                 	db	103
   349  00211E  61                 	db	97
   350  00211F  6E                 	db	110
   351  002120  64                 	db	100
   352  002121  6F                 	db	111
   353  002122  20                 	db	32
   354  002123  4C                 	db	76
   355  002124  45                 	db	69
   356  002125  44                 	db	68
   357  002126  53                 	db	83
   358  002127  0D                 	db	13
   359  002128  00                 	db	0
   360                           
   361                           	psect	idataBANK3
   362  0021D0                     __pidataBANK3:
   363                           	callstack 0
   364                           
   365                           ;initializer for main@F3566
   366  0021D0  4C                 	db	76
   367  0021D1  61                 	db	97
   368  0021D2  20                 	db	32
   369  0021D3  68                 	db	104
   370  0021D4  6F                 	db	111
   371  0021D5  72                 	db	114
   372  0021D6  61                 	db	97
   373  0021D7  20                 	db	32
   374  0021D8  6E                 	db	110
   375  0021D9  6F                 	db	111
   376  0021DA  63                 	db	99
   377  0021DB  74                 	db	116
   378  0021DC  75                 	db	117
   379  0021DD  72                 	db	114
   380  0021DE  6E                 	db	110
   381  0021DF  61                 	db	97
   382  0021E0  20                 	db	32
   383  0021E1  65                 	db	101
   384  0021E2  6D                 	db	109
   385  0021E3  70                 	db	112
   386  0021E4  69                 	db	105
   387  0021E5  65                 	db	101
   388  0021E6  7A                 	db	122
   389  0021E7  61                 	db	97
   390  0021E8  20                 	db	32
   391  0021E9  61                 	db	97
   392  0021EA  20                 	db	32
   393  0021EB  6C                 	db	108
   394  0021EC  61                 	db	97
   395  0021ED  73                 	db	115
   396  0021EE  20                 	db	32
   397  0021EF  31                 	db	49
   398  0021F0  38                 	db	56
   399  0021F1  3A                 	db	58
   400  0021F2  30                 	db	48
   401  0021F3  30                 	db	48
   402  0021F4  0D                 	db	13
   403  0021F5  00                 	db	0
   404                           
   405                           ;initializer for main@F3563
   406  0021F6  4E                 	db	78
   407  0021F7  6F                 	db	111
   408  0021F8  20                 	db	32
   409  0021F9  73                 	db	115
   410  0021FA  65                 	db	101
   411  0021FB  20                 	db	32
   412  0021FC  68                 	db	104
   413  0021FD  61                 	db	97
   414  0021FE  20                 	db	32
   415  0021FF  70                 	db	112
   416  002200  72                 	db	114
   417  002201  65                 	db	101
   418  002202  6E                 	db	110
   419  002203  64                 	db	100
   420  002204  69                 	db	105
   421  002205  64                 	db	100
   422  002206  6F                 	db	111
   423  002207  20                 	db	32
   424  002208  6E                 	db	110
   425  002209  69                 	db	105
   426  00220A  6E                 	db	110
   427  00220B  67                 	db	103
   428  00220C  75                 	db	117
   429  00220D  6E                 	db	110
   430  00220E  61                 	db	97
   431  00220F  20                 	db	32
   432  002210  62                 	db	98
   433  002211  6F                 	db	111
   434  002212  6D                 	db	109
   435  002213  62                 	db	98
   436  002214  69                 	db	105
   437  002215  6C                 	db	108
   438  002216  6C                 	db	108
   439  002217  61                 	db	97
   440  002218  0D                 	db	13
   441  002219  00                 	db	0
   442                           
   443                           ;initializer for onBombillas@F3602
   444  00221A  53                 	db	83
   445  00221B  65                 	db	101
   446  00221C  20                 	db	32
   447  00221D  65                 	db	101
   448  00221E  6E                 	db	110
   449  00221F  63                 	db	99
   450  002220  65                 	db	101
   451  002221  6E                 	db	110
   452  002222  64                 	db	100
   453  002223  69                 	db	105
   454  002224  6F                 	db	111
   455  002225  20                 	db	32
   456  002226  6C                 	db	108
   457  002227  61                 	db	97
   458  002228  20                 	db	32
   459  002229  62                 	db	98
   460  00222A  6F                 	db	111
   461  00222B  6D                 	db	109
   462  00222C  62                 	db	98
   463  00222D  69                 	db	105
   464  00222E  6C                 	db	108
   465  00222F  6C                 	db	108
   466  002230  61                 	db	97
   467  002231  20                 	db	32
   468  002232  35                 	db	53
   469  002233  0D                 	db	13
   470  002234  00                 	db	0
   471                           
   472                           ;initializer for onBombillas@F3599
   473  002235  53                 	db	83
   474  002236  65                 	db	101
   475  002237  20                 	db	32
   476  002238  65                 	db	101
   477  002239  6E                 	db	110
   478  00223A  63                 	db	99
   479  00223B  65                 	db	101
   480  00223C  6E                 	db	110
   481  00223D  64                 	db	100
   482  00223E  69                 	db	105
   483  00223F  6F                 	db	111
   484  002240  20                 	db	32
   485  002241  6C                 	db	108
   486  002242  61                 	db	97
   487  002243  20                 	db	32
   488  002244  62                 	db	98
   489  002245  6F                 	db	111
   490  002246  6D                 	db	109
   491  002247  62                 	db	98
   492  002248  69                 	db	105
   493  002249  6C                 	db	108
   494  00224A  6C                 	db	108
   495  00224B  61                 	db	97
   496  00224C  20                 	db	32
   497  00224D  34                 	db	52
   498  00224E  0D                 	db	13
   499  00224F  00                 	db	0
   500  0000                     _PORTCbits	set	3970
   501  0000                     _TXREG	set	4013
   502  0000                     _ADCON1	set	4033
   503  0000                     _OSCCON	set	4051
   504  0000                     _SPBRG	set	4015
   505  0000                     _RCSTAbits	set	4011
   506  0000                     _BAUDCONbits	set	4024
   507  0000                     _TXSTAbits	set	4012
   508  0000                     _TRISCbits	set	3988
   509  0000                     _PORTAbits	set	3968
   510  0000                     _TRISA	set	3986
   511  0000                     _SSPCON2bits	set	4037
   512  0000                     _SSPADD	set	4040
   513  0000                     _SSPCON2	set	4037
   514  0000                     _SSPCON1	set	4038
   515  0000                     _SSPSTAT	set	4039
   516  0000                     _SSPBUF	set	4041
   517  0000                     _SSPSTATbits	set	4039
   518  0000                     _LATD	set	3980
   519  0000                     _TRISC	set	3988
   520  0000                     _TRISD	set	3989
   521  0000                     _LATC2	set	31834
   522  0000                     _ACKEN	set	32300
   523  0000                     _ACKDT	set	32301
   524  0000                     _PEN	set	32298
   525  0000                     _RSEN	set	32297
   526  0000                     _ACKSTAT	set	32302
   527  0000                     _SSPIF	set	31987
   528  0000                     _SSPIE	set	31979
   529  0000                     _TRISB1	set	31897
   530  0000                     _TRISB0	set	31896
   531  0000                     _RCEN	set	32299
   532  0000                     _LATC1	set	31833
   533  0000                     _LATC0	set	31832
   534                           
   535                           	psect	smallconst
   536  000800                     __psmallconst:
   537                           	callstack 0
   538  000800  00                 	db	0
   539  000801                     STR_1:
   540  000801  45                 	db	69	;'E'
   541  000802  52                 	db	82	;'R'
   542  000803  52                 	db	82	;'R'
   543  000804  4F                 	db	79	;'O'
   544  000805  52                 	db	82	;'R'
   545  000806  20                 	db	32
   546  000807  48                 	db	72	;'H'
   547  000808  4F                 	db	79	;'O'
   548  000809  52                 	db	82	;'R'
   549  00080A  41                 	db	65	;'A'
   550  00080B  20                 	db	32
   551  00080C  00                 	db	0
   552  00080D                     STR_17:
   553  00080D  43                 	db	67	;'C'
   554  00080E  61                 	db	97	;'a'
   555  00080F  6C                 	db	108	;'l'
   556  000810  20                 	db	32
   557  000811  25                 	db	37
   558  000812  78                 	db	120	;'x'
   559  000813  2D                 	db	45
   560  000814  00                 	db	0
   561  000815                     STR_13:
   562  000815  54                 	db	84	;'T'
   563  000816  69                 	db	105	;'i'
   564  000817  6D                 	db	109	;'m'
   565  000818  3A                 	db	58	;':'
   566  000819  25                 	db	37
   567  00081A  78                 	db	120	;'x'
   568  00081B  3A                 	db	58	;':'
   569  00081C  00                 	db	0
   570  00081D                     STR_2:
   571  00081D  44                 	db	68	;'D'
   572  00081E  49                 	db	73	;'I'
   573  00081F  55                 	db	85	;'U'
   574  000820  52                 	db	82	;'R'
   575  000821  4E                 	db	78	;'N'
   576  000822  41                 	db	65	;'A'
   577  000823  00                 	db	0
   578  000824                     STR_4:
   579  000824  2E                 	db	46
   580  000825  25                 	db	37
   581  000826  64                 	db	100	;'d'
   582  000827  20                 	db	32
   583  000828  00                 	db	0
   584  000829                     STR_11:
   585  000829  25                 	db	37
   586  00082A  78                 	db	120	;'x'
   587  00082B  20                 	db	32
   588  00082C  00                 	db	0
   589  00082D                     STR_6:
   590  00082D  2E                 	db	46
   591  00082E  25                 	db	37
   592  00082F  64                 	db	100	;'d'
   593  000830  00                 	db	0
   594  000831                     STR_23:
   595  000831  57                 	db	87	;'W'
   596  000832  65                 	db	101	;'e'
   597  000833  64                 	db	100	;'d'
   598  000834  00                 	db	0
   599  000835                     STR_22:
   600  000835  54                 	db	84	;'T'
   601  000836  75                 	db	117	;'u'
   602  000837  65                 	db	101	;'e'
   603  000838  00                 	db	0
   604  000839                     STR_25:
   605  000839  46                 	db	70	;'F'
   606  00083A  72                 	db	114	;'r'
   607  00083B  69                 	db	105	;'i'
   608  00083C  00                 	db	0
   609  00083D                     STR_21:
   610  00083D  4D                 	db	77	;'M'
   611  00083E  6F                 	db	111	;'o'
   612  00083F  6E                 	db	110	;'n'
   613  000840  00                 	db	0
   614  000841                     STR_20:
   615  000841  53                 	db	83	;'S'
   616  000842  75                 	db	117	;'u'
   617  000843  6E                 	db	110	;'n'
   618  000844  00                 	db	0
   619  000845                     STR_26:
   620  000845  53                 	db	83	;'S'
   621  000846  61                 	db	97	;'a'
   622  000847  74                 	db	116	;'t'
   623  000848  00                 	db	0
   624  000849                     STR_24:
   625  000849  54                 	db	84	;'T'
   626  00084A  68                 	db	104	;'h'
   627  00084B  75                 	db	117	;'u'
   628  00084C  00                 	db	0
   629  00084D                     STR_10:
   630  00084D  41                 	db	65	;'A'
   631  00084E  4D                 	db	77	;'M'
   632  00084F  00                 	db	0
   633  000850                     STR_9:
   634  000850  50                 	db	80	;'P'
   635  000851  4D                 	db	77	;'M'
   636  000852  00                 	db	0
   637  000853                     STR_8:
   638  000853  48                 	db	72	;'H'
   639  000854  00                 	db	0
   640  000855                     STR_7:
   641  000855  54                 	db	84	;'T'
   642  000856  00                 	db	0
   643  000857  00                 	db	0	; dummy byte at the end
   644  0000                     
   645                           ; #config settings
   646                           
   647                           	psect	cinit
   648  00212A                     __pcinit:
   649                           	callstack 0
   650  00212A                     start_initialization:
   651                           	callstack 0
   652  00212A                     __initialization:
   653                           	callstack 0
   654                           
   655                           ; Initialize objects allocated to BANK3 (128 bytes)
   656                           ; load TBLPTR registers with __pidataBANK3
   657  00212A  0ED0               	movlw	low __pidataBANK3
   658  00212C  6EF6               	movwf	tblptrl,c
   659  00212E  0E21               	movlw	high __pidataBANK3
   660  002130  6EF7               	movwf	tblptrh,c
   661  002132  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   662  002134  6EF8               	movwf	tblptru,c
   663  002136  EE03  F000         	lfsr	0,__pdataBANK3
   664  00213A  EE10 F080          	lfsr	1,128
   665  00213E                     copy_data0:
   666  00213E  0009               	tblrd		*+
   667  002140  CFF5 FFEE          	movff	tablat,postinc0
   668  002144  50E5               	movf	postdec1,w,c
   669  002146  50E1               	movf	fsr1l,w,c
   670  002148  E1FA               	bnz	copy_data0
   671                           
   672                           ; Initialize objects allocated to BANK2 (181 bytes)
   673                           ; load TBLPTR registers with __pidataBANK2
   674  00214A  0E74               	movlw	low __pidataBANK2
   675  00214C  6EF6               	movwf	tblptrl,c
   676  00214E  0E20               	movlw	high __pidataBANK2
   677  002150  6EF7               	movwf	tblptrh,c
   678  002152  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   679  002154  6EF8               	movwf	tblptru,c
   680  002156  EE02  F000         	lfsr	0,__pdataBANK2
   681  00215A  EE10 F0B5          	lfsr	1,181
   682  00215E                     copy_data1:
   683  00215E  0009               	tblrd		*+
   684  002160  CFF5 FFEE          	movff	tablat,postinc0
   685  002164  50E5               	movf	postdec1,w,c
   686  002166  50E1               	movf	fsr1l,w,c
   687  002168  E1FA               	bnz	copy_data1
   688                           
   689                           ; Initialize objects allocated to BANK1 (31 bytes)
   690                           ; load TBLPTR registers with __pidataBANK1
   691  00216A  0EEA               	movlw	low __pidataBANK1
   692  00216C  6EF6               	movwf	tblptrl,c
   693  00216E  0E28               	movlw	high __pidataBANK1
   694  002170  6EF7               	movwf	tblptrh,c
   695  002172  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   696  002174  6EF8               	movwf	tblptru,c
   697  002176  EE01  F0DB         	lfsr	0,__pdataBANK1
   698  00217A  EE10 F01F          	lfsr	1,31
   699  00217E                     copy_data2:
   700  00217E  0009               	tblrd		*+
   701  002180  CFF5 FFEE          	movff	tablat,postinc0
   702  002184  50E5               	movf	postdec1,w,c
   703  002186  50E1               	movf	fsr1l,w,c
   704  002188  E1FA               	bnz	copy_data2
   705                           
   706                           ; Initialize objects allocated to BANK0 (2 bytes)
   707                           ; load TBLPTR registers with __pidataBANK0
   708  00218A  0EC2               	movlw	low __pidataBANK0
   709  00218C  6EF6               	movwf	tblptrl,c
   710  00218E  0E29               	movlw	high __pidataBANK0
   711  002190  6EF7               	movwf	tblptrh,c
   712  002192  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   713  002194  6EF8               	movwf	tblptru,c
   714  002196  0009               	tblrd		*+	;fetch initializer
   715  002198  CFF5 F0FE          	movff	tablat,__pdataBANK0
   716  00219C  0009               	tblrd		*+	;fetch initializer
   717  00219E  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   718                           
   719                           ; Clear objects allocated to BANK2 (52 bytes)
   720  0021A2  EE02  F0B5         	lfsr	0,__pbssBANK2
   721  0021A6  0E34               	movlw	52
   722  0021A8                     clear_0:
   723  0021A8  6AEE               	clrf	postinc0,c
   724  0021AA  06E8               	decf	wreg,f,c
   725  0021AC  E1FD               	bnz	clear_0
   726                           
   727                           ; Clear objects allocated to BANK1 (52 bytes)
   728  0021AE  EE01  F0A7         	lfsr	0,__pbssBANK1
   729  0021B2  0E34               	movlw	52
   730  0021B4                     clear_1:
   731  0021B4  6AEE               	clrf	postinc0,c
   732  0021B6  06E8               	decf	wreg,f,c
   733  0021B8  E1FD               	bnz	clear_1
   734                           
   735                           ; Clear objects allocated to BANK0 (28 bytes)
   736  0021BA  EE00  F0E2         	lfsr	0,__pbssBANK0
   737  0021BE  0E1C               	movlw	28
   738  0021C0                     clear_2:
   739  0021C0  6AEE               	clrf	postinc0,c
   740  0021C2  06E8               	decf	wreg,f,c
   741  0021C4  E1FD               	bnz	clear_2
   742  0021C6                     end_of_initialization:
   743                           	callstack 0
   744  0021C6                     __end_of__initialization:
   745                           	callstack 0
   746  0021C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   747  0021C8  6EF8               	movwf	tblptru,c
   748  0021CA  0100               	movlb	0
   749  0021CC  EF14  F00C         	goto	_main	;jump to C main() function
   750                           
   751                           	psect	bssBANK0
   752  0000E2                     __pbssBANK0:
   753                           	callstack 0
   754  0000E2                     _nout:
   755                           	callstack 0
   756  0000E2                     	ds	2
   757  0000E4                     _width:
   758                           	callstack 0
   759  0000E4                     	ds	2
   760  0000E6                     _prec:
   761                           	callstack 0
   762  0000E6                     	ds	2
   763  0000E8                     _flags:
   764                           	callstack 0
   765  0000E8                     	ds	2
   766  0000EA                     _Year:
   767                           	callstack 0
   768  0000EA                     	ds	2
   769  0000EC                     _Month:
   770                           	callstack 0
   771  0000EC                     	ds	2
   772  0000EE                     _Date:
   773                           	callstack 0
   774  0000EE                     	ds	2
   775  0000F0                     _Day:
   776                           	callstack 0
   777  0000F0                     	ds	2
   778  0000F2                     _hour:
   779                           	callstack 0
   780  0000F2                     	ds	2
   781  0000F4                     _min:
   782                           	callstack 0
   783  0000F4                     	ds	2
   784  0000F6                     _sec:
   785                           	callstack 0
   786  0000F6                     	ds	2
   787  0000F8                     _banAgregar:
   788                           	callstack 0
   789  0000F8                     	ds	2
   790  0000FA                     _var_T_Integral:
   791                           	callstack 0
   792  0000FA                     	ds	1
   793  0000FB                     _var_T_Decimal:
   794                           	callstack 0
   795  0000FB                     	ds	1
   796  0000FC                     _var_RH_Integral:
   797                           	callstack 0
   798  0000FC                     	ds	1
   799  0000FD                     _var_RH_Decimal:
   800                           	callstack 0
   801  0000FD                     	ds	1
   802                           
   803                           	psect	dataBANK0
   804  0000FE                     __pdataBANK0:
   805                           	callstack 0
   806  0000FE                     _AM_PM:
   807                           	callstack 0
   808  0000FE                     	ds	1
   809  0000FF                     _Clock_type:
   810                           	callstack 0
   811  0000FF                     	ds	1
   812                           
   813                           	psect	bssBANK1
   814  0001A7                     __pbssBANK1:
   815                           	callstack 0
   816  0001A7                     _acumBom:
   817                           	callstack 0
   818  0001A7                     	ds	2
   819  0001A9                     _date:
   820                           	callstack 0
   821  0001A9                     	ds	10
   822  0001B3                     _hours:
   823                           	callstack 0
   824  0001B3                     	ds	10
   825  0001BD                     _mins:
   826                           	callstack 0
   827  0001BD                     	ds	10
   828  0001C7                     _secs:
   829                           	callstack 0
   830  0001C7                     	ds	10
   831  0001D1                     _vec_value:
   832                           	callstack 0
   833  0001D1                     	ds	10
   834                           
   835                           	psect	dataBANK1
   836  0001DB                     __pdataBANK1:
   837                           	callstack 0
   838  0001DB                     _days:
   839                           	callstack 0
   840  0001DB                     	ds	7
   841  0001E2                     _alert:
   842                           	callstack 0
   843  0001E2                     	ds	8
   844  0001EA                     _good:
   845                           	callstack 0
   846  0001EA                     	ds	8
   847  0001F2                     _bombillaCar0:
   848                           	callstack 0
   849  0001F2                     	ds	8
   850                           
   851                           	psect	bssBANK2
   852  0002B5                     __pbssBANK2:
   853                           	callstack 0
   854  0002B5                     _dbuf:
   855                           	callstack 0
   856  0002B5                     	ds	32
   857  0002D5                     _year:
   858                           	callstack 0
   859  0002D5                     	ds	10
   860  0002DF                     _month:
   861                           	callstack 0
   862  0002DF                     	ds	10
   863                           
   864                           	psect	dataBANK2
   865  000200                     __pdataBANK2:
   866                           	callstack 0
   867  000200                     onBombillas@F3596:
   868                           	callstack 0
   869  000200                     	ds	27
   870  00021B                     onBombillas@F3593:
   871                           	callstack 0
   872  00021B                     	ds	27
   873  000236                     onBombillas@F3590:
   874                           	callstack 0
   875  000236                     	ds	27
   876  000251                     mostrarFechaHora@F3614:
   877                           	callstack 0
   878  000251                     	ds	26
   879  00026B                     offBombillas@F3585:
   880                           	callstack 0
   881  00026B                     	ds	21
   882  000280                     onBombillas@F3605:
   883                           	callstack 0
   884  000280                     	ds	19
   885  000293                     onLEDS@F3581:
   886                           	callstack 0
   887  000293                     	ds	19
   888  0002A6                     offLEDS@F3575:
   889                           	callstack 0
   890  0002A6                     	ds	15
   891                           
   892                           	psect	dataBANK3
   893  000300                     __pdataBANK3:
   894                           	callstack 0
   895  000300                     main@F3566:
   896                           	callstack 0
   897  000300                     	ds	38
   898  000326                     main@F3563:
   899                           	callstack 0
   900  000326                     	ds	36
   901  00034A                     onBombillas@F3602:
   902                           	callstack 0
   903  00034A                     	ds	27
   904  000365                     onBombillas@F3599:
   905                           	callstack 0
   906  000365                     	ds	27
   907                           
   908                           	psect	cstackBANK1
   909  000100                     __pcstackBANK1:
   910                           	callstack 0
   911  000100                     onBombillas@buffer_TX:
   912                           	callstack 0
   913                           
   914                           ; 27 bytes @ 0x0
   915  000100                     	ds	27
   916  00011B                     onBombillas@buffer_TX_793:
   917                           	callstack 0
   918                           
   919                           ; 27 bytes @ 0x1B
   920  00011B                     	ds	27
   921  000136                     onBombillas@buffer_TX_796:
   922                           	callstack 0
   923                           
   924                           ; 27 bytes @ 0x36
   925  000136                     	ds	27
   926  000151                     onBombillas@buffer_TX_799:
   927                           	callstack 0
   928                           
   929                           ; 27 bytes @ 0x51
   930  000151                     	ds	27
   931  00016C                     onBombillas@buffer_TX_802:
   932                           	callstack 0
   933                           
   934                           ; 27 bytes @ 0x6C
   935  00016C                     	ds	27
   936  000187                     onBombillas@buffer_TX_805:
   937                           	callstack 0
   938                           
   939                           ; 19 bytes @ 0x87
   940  000187                     	ds	19
   941  00019A                     onBombillas@i:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x9A
   945  00019A                     	ds	2
   946  00019C                     onBombillas@i_794:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x9C
   950  00019C                     	ds	2
   951  00019E                     onBombillas@i_797:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x9E
   955  00019E                     	ds	2
   956  0001A0                     onBombillas@i_800:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0xA0
   960  0001A0                     	ds	2
   961  0001A2                     onBombillas@i_803:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0xA2
   965  0001A2                     	ds	2
   966  0001A4                     onBombillas@i_806:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xA4
   970  0001A4                     	ds	2
   971  0001A6                     onBombillas@i_807:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0xA6
   975  0001A6                     	ds	1
   976                           
   977                           	psect	cstackBANK0
   978  000060                     __pcstackBANK0:
   979                           	callstack 0
   980  000060                     ?_vfprintf:
   981                           	callstack 0
   982  000060                     vfprintf@fp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x0
   986  000060                     	ds	2
   987  000062                     vfprintf@fmt:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x2
   991  000062                     	ds	2
   992  000064                     vfprintf@ap:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x4
   996  000064                     	ds	2
   997  000066                     ?_sprintf:
   998                           	callstack 0
   999  000066                     sprintf@s:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x6
  1003  000066                     	ds	2
  1004  000068                     sprintf@fmt:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x8
  1008  000068                     	ds	6
  1009  00006E                     sprintf@ap:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0xE
  1013  00006E                     	ds	2
  1014  000070                     sprintf@f:
  1015                           	callstack 0
  1016                           
  1017                           ; 6 bytes @ 0x10
  1018  000070                     	ds	6
  1019  000076                     ??_mostrarFechaHora:
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022  000076                     	ds	2
  1023  000078                     mostrarFechaHora@buffer_TX:
  1024                           	callstack 0
  1025                           
  1026                           ; 26 bytes @ 0x18
  1027  000078                     	ds	26
  1028  000092                     mostrarFechaHora@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x32
  1032  000092                     	ds	2
  1033  000094                     main@buffer_TX_750:
  1034                           	callstack 0
  1035                           
  1036                           ; 38 bytes @ 0x34
  1037  000094                     	ds	38
  1038  0000BA                     main@buffer_TX:
  1039                           	callstack 0
  1040                           
  1041                           ; 36 bytes @ 0x5A
  1042  0000BA                     	ds	36
  1043  0000DE                     main@i:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x7E
  1047  0000DE                     	ds	2
  1048  0000E0                     main@i_751:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x80
  1052  0000E0                     	ds	2
  1053                           
  1054                           	psect	cstackCOMRAM
  1055  000001                     __pcstackCOMRAM:
  1056                           	callstack 0
  1057  000001                     ??_DHT11_Start:
  1058  000001                     ?_strlen:
  1059                           	callstack 0
  1060  000001                     ?_isupper:
  1061                           	callstack 0
  1062  000001                     ?_isalpha:
  1063                           	callstack 0
  1064  000001                     ?_islower:
  1065                           	callstack 0
  1066  000001                     ?___aodiv:
  1067                           	callstack 0
  1068  000001                     ?___aomod:
  1069                           	callstack 0
  1070  000001                     I2C_Read@flag:
  1071                           	callstack 0
  1072  000001                     I2C_Write@data:
  1073                           	callstack 0
  1074  000001                     DHT11_ReadData@i:
  1075                           	callstack 0
  1076  000001                     MSdelay@val:
  1077                           	callstack 0
  1078  000001                     isalpha@c:
  1079                           	callstack 0
  1080  000001                     isupper@c:
  1081                           	callstack 0
  1082  000001                     fputc@c:
  1083                           	callstack 0
  1084  000001                     strlen@s:
  1085                           	callstack 0
  1086  000001                     islower@c:
  1087                           	callstack 0
  1088  000001                     ___aodiv@dividend:
  1089                           	callstack 0
  1090  000001                     ___aomod@dividend:
  1091                           	callstack 0
  1092  000001                     offLEDS@buffer_TX:
  1093                           	callstack 0
  1094  000001                     offBombillas@buffer_TX:
  1095                           	callstack 0
  1096                           
  1097                           ; 21 bytes @ 0x0
  1098  000001                     	ds	1
  1099  000002                     I2C_Read@buffer:
  1100                           	callstack 0
  1101  000002                     I2C_Start@slave_write_address:
  1102                           	callstack 0
  1103  000002                     I2C_Repeated_Start@slave_read_address:
  1104                           	callstack 0
  1105  000002                     DHT11_ReadData@data:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x1
  1109  000002                     	ds	1
  1110  000003                     ??_isupper:
  1111  000003                     ??_isalpha:
  1112  000003                     ??_islower:
  1113  000003                     ??_RTC_Read_Clock:
  1114  000003                     ??_RTC_Read_Calendar:
  1115  000003                     MSdelay@i:
  1116                           	callstack 0
  1117  000003                     fputc@fp:
  1118                           	callstack 0
  1119  000003                     strlen@a:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x2
  1123  000003                     	ds	1
  1124  000004                     RTC_Read_Clock@read_clock_address:
  1125                           	callstack 0
  1126  000004                     RTC_Read_Calendar@read_calendar_address:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x3
  1130  000004                     	ds	1
  1131  000005                     ??_fputc:
  1132  000005                     MSdelay@j:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x4
  1136  000005                     	ds	2
  1137  000007                     ?_toupper:
  1138                           	callstack 0
  1139  000007                     LCD_Command@cmd:
  1140                           	callstack 0
  1141  000007                     LCD_Char@dat:
  1142                           	callstack 0
  1143  000007                     toupper@c:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x6
  1147  000007                     	ds	1
  1148  000008                     LCD_Custom_Char@msg:
  1149                           	callstack 0
  1150  000008                     LCD_String@msg:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x7
  1154  000008                     	ds	1
  1155  000009                     ??_toupper:
  1156  000009                     ___aodiv@divisor:
  1157                           	callstack 0
  1158  000009                     ___aomod@divisor:
  1159                           	callstack 0
  1160                           
  1161                           ; 8 bytes @ 0x8
  1162  000009                     	ds	1
  1163  00000A                     LCD_Custom_Char@loc:
  1164                           	callstack 0
  1165  00000A                     LCD_String_xy@pos:
  1166                           	callstack 0
  1167  00000A                     fputs@s:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x9
  1171  00000A                     	ds	1
  1172  00000B                     LCD_Custom_Char@i:
  1173                           	callstack 0
  1174  00000B                     LCD_String_xy@msg:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xA
  1178  00000B                     	ds	1
  1179  00000C                     fputs@fp:
  1180                           	callstack 0
  1181  00000C                     onLEDS@buffer_TX:
  1182                           	callstack 0
  1183                           
  1184                           ; 19 bytes @ 0xB
  1185  00000C                     	ds	1
  1186  00000D                     LCD_String_xy@row:
  1187                           	callstack 0
  1188  00000D                     _toupper$1461:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0xC
  1192  00000D                     	ds	1
  1193  00000E                     LCD_String_xy@location:
  1194                           	callstack 0
  1195  00000E                     fputs@c:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0xD
  1199  00000E                     	ds	1
  1200  00000F                     fputs@i:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0xE
  1204  00000F                     	ds	1
  1205  000010                     offLEDS@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xF
  1209  000010                     	ds	1
  1210  000011                     ?_pad:
  1211                           	callstack 0
  1212  000011                     ___aodiv@counter:
  1213                           	callstack 0
  1214  000011                     ___aomod@counter:
  1215                           	callstack 0
  1216  000011                     pad@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x10
  1220  000011                     	ds	1
  1221  000012                     ___aodiv@sign:
  1222                           	callstack 0
  1223  000012                     ___aomod@sign:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x11
  1227  000012                     	ds	1
  1228  000013                     ?_abs:
  1229                           	callstack 0
  1230  000013                     pad@buf:
  1231                           	callstack 0
  1232  000013                     abs@a:
  1233                           	callstack 0
  1234  000013                     ___aodiv@quotient:
  1235                           	callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x12
  1238  000013                     	ds	2
  1239  000015                     ??_abs:
  1240  000015                     pad@p:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x14
  1244  000015                     	ds	1
  1245  000016                     offBombillas@i:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x15
  1249  000016                     	ds	1
  1250  000017                     ??_pad:
  1251                           
  1252                           ; 1 bytes @ 0x16
  1253  000017                     	ds	1
  1254  000018                     pad@i:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x17
  1258  000018                     	ds	2
  1259  00001A                     pad@w:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x19
  1263  00001A                     	ds	2
  1264  00001C                     ?_dtoa:
  1265                           	callstack 0
  1266  00001C                     ?_xtoa:
  1267                           	callstack 0
  1268  00001C                     dtoa@fp:
  1269                           	callstack 0
  1270  00001C                     xtoa@fp:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x1B
  1274  00001C                     	ds	2
  1275  00001E                     dtoa@d:
  1276                           	callstack 0
  1277  00001E                     xtoa@d:
  1278                           	callstack 0
  1279                           
  1280                           ; 8 bytes @ 0x1D
  1281  00001E                     	ds	1
  1282  00001F                     onLEDS@T_Integral:
  1283                           	callstack 0
  1284                           
  1285                           ; 1 bytes @ 0x1E
  1286  00001F                     	ds	1
  1287  000020                     onLEDS@valor:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x1F
  1291  000020                     	ds	2
  1292  000022                     onLEDS@i:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x21
  1296  000022                     	ds	2
  1297  000024                     
  1298                           ; 1 bytes @ 0x23
  1299  000024                     	ds	2
  1300  000026                     ??_dtoa:
  1301  000026                     xtoa@x:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x25
  1305  000026                     	ds	1
  1306  000027                     ??_xtoa:
  1307                           
  1308                           ; 1 bytes @ 0x26
  1309  000027                     	ds	7
  1310  00002E                     _dtoa$1365:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x2D
  1314  00002E                     	ds	1
  1315  00002F                     _xtoa$1376:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x2E
  1319  00002F                     	ds	1
  1320  000030                     dtoa@p:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x2F
  1324  000030                     	ds	1
  1325  000031                     _xtoa$1377:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x30
  1329  000031                     	ds	1
  1330  000032                     dtoa@w:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x31
  1334  000032                     	ds	1
  1335  000033                     xtoa@p:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x32
  1339  000033                     	ds	1
  1340  000034                     dtoa@s:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x33
  1344  000034                     	ds	1
  1345  000035                     xtoa@w:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x34
  1349  000035                     	ds	1
  1350  000036                     dtoa@n:
  1351                           	callstack 0
  1352                           
  1353                           ; 8 bytes @ 0x35
  1354  000036                     	ds	1
  1355  000037                     xtoa@n:
  1356                           	callstack 0
  1357                           
  1358                           ; 8 bytes @ 0x36
  1359  000037                     	ds	7
  1360  00003E                     dtoa@i:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x3D
  1364  00003E                     	ds	1
  1365  00003F                     xtoa@i:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x3E
  1369  00003F                     	ds	2
  1370  000041                     xtoa@c:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x40
  1374  000041                     	ds	2
  1375  000043                     ?_vfpfcnvrt:
  1376                           	callstack 0
  1377  000043                     vfpfcnvrt@fp:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x42
  1381  000043                     	ds	2
  1382  000045                     vfpfcnvrt@fmt:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x44
  1386  000045                     	ds	2
  1387  000047                     vfpfcnvrt@ap:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x46
  1391  000047                     	ds	2
  1392  000049                     ??_vfpfcnvrt:
  1393                           
  1394                           ; 1 bytes @ 0x48
  1395  000049                     	ds	4
  1396  00004D                     vfpfcnvrt@ll:
  1397                           	callstack 0
  1398                           
  1399                           ; 8 bytes @ 0x4C
  1400  00004D                     	ds	8
  1401  000055                     vfpfcnvrt@llu:
  1402                           	callstack 0
  1403                           
  1404                           ; 8 bytes @ 0x54
  1405  000055                     	ds	8
  1406  00005D                     vfpfcnvrt@c:
  1407                           	callstack 0
  1408                           
  1409                           ; 1 bytes @ 0x5C
  1410  00005D                     	ds	1
  1411  00005E                     vfprintf@cfmt:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x5D
  1415  00005E                     	ds	2
  1416  000060                     
  1417                           ; 1 bytes @ 0x5F
  1418 ;;
  1419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1420 ;;
  1421 ;; *************** function _main *****************
  1422 ;; Defined at:
  1423 ;;		line 92 in file "Controlador.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  i               2  128[BANK0 ] int 
  1428 ;;  i               2  126[BANK0 ] int 
  1429 ;;  buffer_TX      38   52[BANK0 ] unsigned char [38]
  1430 ;;  buffer_TX      36   90[BANK0 ] unsigned char [36]
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0      78       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         0      78       0       0       0       0       0       0       0
  1444 ;;Total ram usage:       78 bytes
  1445 ;; Hardware stack levels required when called:    9
  1446 ;; This function calls:
  1447 ;;		_DHT11_CheckResponse
  1448 ;;		_DHT11_ReadData
  1449 ;;		_DHT11_Start
  1450 ;;		_I2C_Init
  1451 ;;		_LCD_Init
  1452 ;;		_LCD_String_xy
  1453 ;;		_MSdelay
  1454 ;;		_imprimirTemHum
  1455 ;;		_mostrarFechaHora
  1456 ;;		_offBombillas
  1457 ;;		_offLEDS
  1458 ;;		_onBombillas
  1459 ;;		_verificarHora
  1460 ;; This function is called by:
  1461 ;;		Startup code after reset
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text0
  1466  001828                     __ptext0:
  1467                           	callstack 0
  1468  001828                     _main:
  1469                           	callstack 22
  1470  001828                     
  1471                           ;Controlador.c: 93:     TRISA = 0;
  1472  001828  0E00               	movlw	0
  1473  00182A  6E92               	movwf	146,c	;volatile
  1474  00182C                     
  1475                           ;Controlador.c: 96:     PORTAbits.RA0 = 0;
  1476  00182C  9080               	bcf	128,0,c	;volatile
  1477  00182E                     
  1478                           ;Controlador.c: 97:     PORTAbits.RA1 = 0;
  1479  00182E  9280               	bcf	128,1,c	;volatile
  1480  001830                     
  1481                           ;Controlador.c: 98:     PORTAbits.RA2 = 0;
  1482  001830  9480               	bcf	128,2,c	;volatile
  1483  001832                     
  1484                           ;Controlador.c: 99:     PORTAbits.RA3 = 0;
  1485  001832  9680               	bcf	128,3,c	;volatile
  1486  001834                     
  1487                           ;Controlador.c: 100:     PORTAbits.RA4 = 0;
  1488  001834  9880               	bcf	128,4,c	;volatile
  1489  001836                     
  1490                           ;Controlador.c: 103:     TRISCbits.RC6 = 0;
  1491  001836  9C94               	bcf	148,6,c	;volatile
  1492  001838                     
  1493                           ;Controlador.c: 104:     TXSTAbits.TX9 = 0;
  1494  001838  9CAC               	bcf	172,6,c	;volatile
  1495  00183A                     
  1496                           ;Controlador.c: 105:     TXSTAbits.TXEN = 1;
  1497  00183A  8AAC               	bsf	172,5,c	;volatile
  1498  00183C                     
  1499                           ;Controlador.c: 106:     TXSTAbits.SYNC = 0;
  1500  00183C  98AC               	bcf	172,4,c	;volatile
  1501  00183E                     
  1502                           ;Controlador.c: 107:     TXSTAbits.BRGH = 0;
  1503  00183E  94AC               	bcf	172,2,c	;volatile
  1504  001840                     
  1505                           ;Controlador.c: 108:     BAUDCONbits.BRG16 = 0;
  1506  001840  96B8               	bcf	184,3,c	;volatile
  1507  001842                     
  1508                           ;Controlador.c: 109:     RCSTAbits.SPEN = 1;
  1509  001842  8EAB               	bsf	171,7,c	;volatile
  1510                           
  1511                           ;Controlador.c: 110:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1512  001844  0E0C               	movlw	12
  1513  001846  6EAF               	movwf	175,c	;volatile
  1514                           
  1515                           ;Controlador.c: 112:     OSCCON = 0x72;
  1516  001848  0E72               	movlw	114
  1517  00184A  6ED3               	movwf	211,c	;volatile
  1518                           
  1519                           ;Controlador.c: 116:     ADCON1 = 0x0F;
  1520  00184C  0E0F               	movlw	15
  1521  00184E  6EC1               	movwf	193,c	;volatile
  1522  001850                     l3350:
  1523                           
  1524                           ;Controlador.c: 120:         LCD_Init();
  1525  001850  EC27  F014         	call	_LCD_Init	;wreg free
  1526  001854                     
  1527                           ;Controlador.c: 121:         I2C_Init();
  1528  001854  ECA1  F014         	call	_I2C_Init	;wreg free
  1529  001858                     
  1530                           ;Controlador.c: 122:         MSdelay(10);
  1531  001858  0E00               	movlw	0
  1532  00185A  6E02               	movwf	(MSdelay@val+1)^0,c
  1533  00185C  0E0A               	movlw	10
  1534  00185E  6E01               	movwf	MSdelay@val^0,c
  1535  001860  EC9D  F012         	call	_MSdelay	;wreg free
  1536  001864                     
  1537                           ;Controlador.c: 125:         verificarHora();
  1538  001864  ECAE  F014         	call	_verificarHora	;wreg free
  1539                           
  1540                           ;Controlador.c: 127:         if (hour >= 0x18 || hour <= 6) {
  1541  001868  0100               	movlb	0	; () banked
  1542  00186A  BFF3               	btfsc	(_hour+1)& (0+255),7,b
  1543  00186C  EF43  F00C         	goto	u3060
  1544  001870  51F3               	movf	(_hour+1)& (0+255),w,b
  1545  001872  E107               	bnz	u3061
  1546  001874  0E18               	movlw	24
  1547  001876  5DF2               	subwf	_hour& (0+255),w,b
  1548  001878  B0D8               	btfsc	status,0,c
  1549  00187A  EF41  F00C         	goto	u3061
  1550  00187E  EF43  F00C         	goto	u3060
  1551  001882                     u3061:
  1552  001882  EF51  F00C         	goto	l3360
  1553  001886                     u3060:
  1554  001886                     
  1555                           ; BSR set to: 0
  1556  001886  BFF3               	btfsc	(_hour+1)& (0+255),7,b
  1557  001888  EF51  F00C         	goto	u3070
  1558  00188C  51F3               	movf	(_hour+1)& (0+255),w,b
  1559  00188E  E107               	bnz	u3071
  1560  001890  0E07               	movlw	7
  1561  001892  5DF2               	subwf	_hour& (0+255),w,b
  1562  001894  B0D8               	btfsc	status,0,c
  1563  001896  EF4F  F00C         	goto	u3071
  1564  00189A  EF51  F00C         	goto	u3070
  1565  00189E                     u3071:
  1566  00189E  EFCB  F00C         	goto	l3412
  1567  0018A2                     u3070:
  1568  0018A2                     l3360:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;Controlador.c: 128:             DHT11_Start();
  1572  0018A2  EC65  F014         	call	_DHT11_Start	;wreg free
  1573  0018A6                     
  1574                           ;Controlador.c: 129:             DHT11_CheckResponse();
  1575  0018A6  EC3E  F014         	call	_DHT11_CheckResponse	;wreg free
  1576  0018AA                     
  1577                           ;Controlador.c: 132:             var_RH_Integral = DHT11_ReadData();
  1578  0018AA  EC19  F012         	call	_DHT11_ReadData	;wreg free
  1579  0018AE  0100               	movlb	0	; () banked
  1580  0018B0  6FFC               	movwf	_var_RH_Integral& (0+255),b
  1581  0018B2                     
  1582                           ; BSR set to: 0
  1583                           ;Controlador.c: 133:             var_RH_Decimal = DHT11_ReadData();
  1584  0018B2  EC19  F012         	call	_DHT11_ReadData	;wreg free
  1585  0018B6  0100               	movlb	0	; () banked
  1586  0018B8  6FFD               	movwf	_var_RH_Decimal& (0+255),b
  1587  0018BA                     
  1588                           ; BSR set to: 0
  1589                           ;Controlador.c: 134:             var_T_Integral = DHT11_ReadData();
  1590  0018BA  EC19  F012         	call	_DHT11_ReadData	;wreg free
  1591  0018BE  0100               	movlb	0	; () banked
  1592  0018C0  6FFA               	movwf	_var_T_Integral& (0+255),b
  1593  0018C2                     
  1594                           ; BSR set to: 0
  1595                           ;Controlador.c: 135:             var_T_Decimal = DHT11_ReadData();
  1596  0018C2  EC19  F012         	call	_DHT11_ReadData	;wreg free
  1597  0018C6  0100               	movlb	0	; () banked
  1598  0018C8  6FFB               	movwf	_var_T_Decimal& (0+255),b
  1599  0018CA                     
  1600                           ; BSR set to: 0
  1601                           ;Controlador.c: 137:             imprimirTemHum();
  1602  0018CA  EC00  F00F         	call	_imprimirTemHum	;wreg free
  1603  0018CE                     
  1604                           ;Controlador.c: 139:             char buffer_TX[] = "No se ha prendido ninguna bombilla\
      +                          r";
  1605  0018CE  EE23  F026         	lfsr	2,main@F3563
  1606  0018D2  EE10  F0BA         	lfsr	1,main@buffer_TX
  1607  0018D6  0E23               	movlw	35
  1608  0018D8                     u3081:
  1609  0018D8  CFDB FFE3          	movff	plusw2,plusw1
  1610  0018DC  06E8               	decf	wreg,f,c
  1611  0018DE  E2FC               	bc	u3081
  1612  0018E0                     
  1613                           ;Controlador.c: 140:             for (int i = 0; i < 35; i++) {
  1614  0018E0  0E00               	movlw	0
  1615  0018E2  0100               	movlb	0	; () banked
  1616  0018E4  6FDF               	movwf	(main@i+1)& (0+255),b
  1617  0018E6  0E00               	movlw	0
  1618  0018E8  6FDE               	movwf	main@i& (0+255),b
  1619  0018EA                     l292:
  1620                           
  1621                           ;Controlador.c: 142:                 while (!TXSTAbits.TRMT) {
  1622  0018EA  A2AC               	btfss	172,1,c	;volatile
  1623  0018EC  EF7A  F00C         	goto	u3091
  1624  0018F0  EF7C  F00C         	goto	u3090
  1625  0018F4                     u3091:
  1626  0018F4  EF75  F00C         	goto	l292
  1627  0018F8                     u3090:
  1628  0018F8                     
  1629                           ;Controlador.c: 145:                 TXREG = buffer_TX[i];
  1630  0018F8  0EBA               	movlw	low main@buffer_TX
  1631  0018FA  0100               	movlb	0	; () banked
  1632  0018FC  25DE               	addwf	main@i& (0+255),w,b
  1633  0018FE  6ED9               	movwf	fsr2l,c
  1634  001900  0E00               	movlw	high main@buffer_TX
  1635  001902  21DF               	addwfc	(main@i+1)& (0+255),w,b
  1636  001904  6EDA               	movwf	fsr2h,c
  1637  001906  50DF               	movf	indf2,w,c
  1638  001908  6EAD               	movwf	173,c	;volatile
  1639  00190A                     
  1640                           ; BSR set to: 0
  1641                           ;Controlador.c: 146:             }
  1642  00190A  4BDE               	infsnz	main@i& (0+255),f,b
  1643  00190C  2BDF               	incf	(main@i+1)& (0+255),f,b
  1644  00190E                     
  1645                           ; BSR set to: 0
  1646  00190E  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  1647  001910  EF93  F00C         	goto	u3101
  1648  001914  51DF               	movf	(main@i+1)& (0+255),w,b
  1649  001916  E109               	bnz	u3100
  1650  001918  0E23               	movlw	35
  1651  00191A  5DDE               	subwf	main@i& (0+255),w,b
  1652  00191C  A0D8               	btfss	status,0,c
  1653  00191E  EF93  F00C         	goto	u3101
  1654  001922  EF95  F00C         	goto	u3100
  1655  001926                     u3101:
  1656  001926  EF75  F00C         	goto	l292
  1657  00192A                     u3100:
  1658  00192A                     l3388:
  1659                           
  1660                           ;Controlador.c: 147:             MSdelay(1000);
  1661  00192A  0E03               	movlw	3
  1662  00192C  6E02               	movwf	(MSdelay@val+1)^0,c
  1663  00192E  0EE8               	movlw	232
  1664  001930  6E01               	movwf	MSdelay@val^0,c
  1665  001932  EC9D  F012         	call	_MSdelay	;wreg free
  1666                           
  1667                           ;Controlador.c: 149:             while (banAgregar == 0) {
  1668  001936  EFA3  F00C         	goto	l3396
  1669  00193A                     l3390:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;Controlador.c: 151:                 onBombillas();
  1673  00193A  EC2C  F004         	call	_onBombillas	;wreg free
  1674  00193E                     
  1675                           ;Controlador.c: 152:                 imprimirTemHum();
  1676  00193E  EC00  F00F         	call	_imprimirTemHum	;wreg free
  1677  001942  EF95  F00C         	goto	l3388
  1678  001946                     l3396:
  1679                           
  1680                           ;Controlador.c: 149:             while (banAgregar == 0) {
  1681  001946  0100               	movlb	0	; () banked
  1682  001948  51F8               	movf	_banAgregar& (0+255),w,b
  1683  00194A  11F9               	iorwf	(_banAgregar+1)& (0+255),w,b
  1684  00194C  B4D8               	btfsc	status,2,c
  1685  00194E  EFAB  F00C         	goto	u3111
  1686  001952  EFAD  F00C         	goto	u3110
  1687  001956                     u3111:
  1688  001956  EF9D  F00C         	goto	l3390
  1689  00195A                     u3110:
  1690  00195A                     
  1691                           ; BSR set to: 0
  1692                           ;Controlador.c: 156:             mostrarFechaHora();
  1693  00195A  EC56  F006         	call	_mostrarFechaHora	;wreg free
  1694  00195E                     
  1695                           ;Controlador.c: 157:             MSdelay(1000);
  1696  00195E  0E03               	movlw	3
  1697  001960  6E02               	movwf	(MSdelay@val+1)^0,c
  1698  001962  0EE8               	movlw	232
  1699  001964  6E01               	movwf	MSdelay@val^0,c
  1700  001966  EC9D  F012         	call	_MSdelay	;wreg free
  1701  00196A                     
  1702                           ;Controlador.c: 158:             banAgregar = 0;
  1703  00196A  0E00               	movlw	0
  1704  00196C  0100               	movlb	0	; () banked
  1705  00196E  6FF9               	movwf	(_banAgregar+1)& (0+255),b
  1706  001970  0E00               	movlw	0
  1707  001972  6FF8               	movwf	_banAgregar& (0+255),b
  1708  001974                     
  1709                           ; BSR set to: 0
  1710                           ;Controlador.c: 159:             acumBom = 0;
  1711  001974  0E00               	movlw	0
  1712  001976  0101               	movlb	1	; () banked
  1713  001978  6FA8               	movwf	(_acumBom+1)& (0+255),b
  1714  00197A  0E00               	movlw	0
  1715  00197C  6FA7               	movwf	_acumBom& (0+255),b
  1716  00197E                     
  1717                           ; BSR set to: 1
  1718                           ;Controlador.c: 160:             offBombillas();
  1719  00197E  EC28  F011         	call	_offBombillas	;wreg free
  1720  001982                     
  1721                           ;Controlador.c: 161:             offLEDS();
  1722  001982  EC8B  F011         	call	_offLEDS	;wreg free
  1723  001986                     
  1724                           ;Controlador.c: 162:             MSdelay(2000);
  1725  001986  0E07               	movlw	7
  1726  001988  6E02               	movwf	(MSdelay@val+1)^0,c
  1727  00198A  0ED0               	movlw	208
  1728  00198C  6E01               	movwf	MSdelay@val^0,c
  1729  00198E  EC9D  F012         	call	_MSdelay	;wreg free
  1730                           
  1731                           ;Controlador.c: 164:         } else {
  1732  001992  EF0B  F00D         	goto	l3428
  1733  001996                     l3412:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;Controlador.c: 165:             LCD_String_xy(0, 0, "ERROR HORA ");
  1737  001996  0E00               	movlw	0
  1738  001998  6E0A               	movwf	LCD_String_xy@pos^0,c
  1739  00199A  0E01               	movlw	low STR_1
  1740  00199C  6E0B               	movwf	LCD_String_xy@msg^0,c
  1741  00199E  0E08               	movlw	high STR_1
  1742  0019A0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1743  0019A2  0E00               	movlw	0
  1744  0019A4  EC4B  F013         	call	_LCD_String_xy
  1745                           
  1746                           ;Controlador.c: 166:             LCD_String_xy(1, 0, "DIURNA");
  1747  0019A8  0E00               	movlw	0
  1748  0019AA  6E0A               	movwf	LCD_String_xy@pos^0,c
  1749  0019AC  0E1D               	movlw	low STR_2
  1750  0019AE  6E0B               	movwf	LCD_String_xy@msg^0,c
  1751  0019B0  0E08               	movlw	high STR_2
  1752  0019B2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1753  0019B4  0E01               	movlw	1
  1754  0019B6  EC4B  F013         	call	_LCD_String_xy
  1755  0019BA                     
  1756                           ;Controlador.c: 167:             char buffer_TX[] = "La hora nocturna empieza a las 18:0
      +                          0\r";
  1757  0019BA  EE23  F000         	lfsr	2,main@F3566
  1758  0019BE  EE10  F094         	lfsr	1,main@buffer_TX_750
  1759  0019C2  0E25               	movlw	37
  1760  0019C4                     u3121:
  1761  0019C4  CFDB FFE3          	movff	plusw2,plusw1
  1762  0019C8  06E8               	decf	wreg,f,c
  1763  0019CA  E2FC               	bc	u3121
  1764  0019CC                     
  1765                           ;Controlador.c: 168:             for (int i = 0; i < 37; i++) {
  1766  0019CC  0E00               	movlw	0
  1767  0019CE  0100               	movlb	0	; () banked
  1768  0019D0  6FE1               	movwf	(main@i_751+1)& (0+255),b
  1769  0019D2  0E00               	movlw	0
  1770  0019D4  6FE0               	movwf	main@i_751& (0+255),b
  1771  0019D6                     l303:
  1772                           
  1773                           ;Controlador.c: 170:                 while (!TXSTAbits.TRMT) {
  1774  0019D6  A2AC               	btfss	172,1,c	;volatile
  1775  0019D8  EFF0  F00C         	goto	u3131
  1776  0019DC  EFF2  F00C         	goto	u3130
  1777  0019E0                     u3131:
  1778  0019E0  EFEB  F00C         	goto	l303
  1779  0019E4                     u3130:
  1780  0019E4                     
  1781                           ;Controlador.c: 173:                 TXREG = buffer_TX[i];
  1782  0019E4  0E94               	movlw	low main@buffer_TX_750
  1783  0019E6  0100               	movlb	0	; () banked
  1784  0019E8  25E0               	addwf	main@i_751& (0+255),w,b
  1785  0019EA  6ED9               	movwf	fsr2l,c
  1786  0019EC  0E00               	movlw	high main@buffer_TX_750
  1787  0019EE  21E1               	addwfc	(main@i_751+1)& (0+255),w,b
  1788  0019F0  6EDA               	movwf	fsr2h,c
  1789  0019F2  50DF               	movf	indf2,w,c
  1790  0019F4  6EAD               	movwf	173,c	;volatile
  1791  0019F6                     
  1792                           ; BSR set to: 0
  1793                           ;Controlador.c: 174:             }
  1794  0019F6  4BE0               	infsnz	main@i_751& (0+255),f,b
  1795  0019F8  2BE1               	incf	(main@i_751+1)& (0+255),f,b
  1796  0019FA                     
  1797                           ; BSR set to: 0
  1798  0019FA  BFE1               	btfsc	(main@i_751+1)& (0+255),7,b
  1799  0019FC  EF09  F00D         	goto	u3141
  1800  001A00  51E1               	movf	(main@i_751+1)& (0+255),w,b
  1801  001A02  E109               	bnz	u3140
  1802  001A04  0E25               	movlw	37
  1803  001A06  5DE0               	subwf	main@i_751& (0+255),w,b
  1804  001A08  A0D8               	btfss	status,0,c
  1805  001A0A  EF09  F00D         	goto	u3141
  1806  001A0E  EF0B  F00D         	goto	u3140
  1807  001A12                     u3141:
  1808  001A12  EFEB  F00C         	goto	l303
  1809  001A16                     u3140:
  1810  001A16                     l3428:
  1811                           
  1812                           ;Controlador.c: 176:         MSdelay(2000);
  1813  001A16  0E07               	movlw	7
  1814  001A18  6E02               	movwf	(MSdelay@val+1)^0,c
  1815  001A1A  0ED0               	movlw	208
  1816  001A1C  6E01               	movwf	MSdelay@val^0,c
  1817  001A1E  EC9D  F012         	call	_MSdelay	;wreg free
  1818  001A22  EF28  F00C         	goto	l3350
  1819  001A26  EF00  F000         	goto	start
  1820  001A2A                     __end_of_main:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _verificarHora *****************
  1824 ;; Defined at:
  1825 ;;		line 537 in file "Controlador.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    4
  1846 ;; This function calls:
  1847 ;;		_I2C_Stop
  1848 ;;		_MSdelay
  1849 ;;		_RTC_Read_Clock
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text1
  1856  00295C                     __ptext1:
  1857                           	callstack 0
  1858  00295C                     _verificarHora:
  1859                           	callstack 26
  1860  00295C                     
  1861                           ;Controlador.c: 538:     RTC_Read_Clock(0);
  1862  00295C  0E00               	movlw	0
  1863  00295E  ECE6  F012         	call	_RTC_Read_Clock
  1864  002962                     
  1865                           ;Controlador.c: 539:     I2C_Stop();
  1866  002962  ECBA  F014         	call	_I2C_Stop	;wreg free
  1867  002966                     
  1868                           ;Controlador.c: 540:     MSdelay(1000);
  1869  002966  0E03               	movlw	3
  1870  002968  6E02               	movwf	(MSdelay@val+1)^0,c
  1871  00296A  0EE8               	movlw	232
  1872  00296C  6E01               	movwf	MSdelay@val^0,c
  1873  00296E  EC9D  F012         	call	_MSdelay	;wreg free
  1874  002972  0012               	return		;funcret
  1875  002974                     __end_of_verificarHora:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _onBombillas *****************
  1879 ;; Defined at:
  1880 ;;		line 305 in file "Controlador.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  i               1  166[BANK1 ] unsigned char 
  1885 ;;  i               2  164[BANK1 ] int 
  1886 ;;  i               2  162[BANK1 ] int 
  1887 ;;  i               2  160[BANK1 ] int 
  1888 ;;  i               2  158[BANK1 ] int 
  1889 ;;  i               2  156[BANK1 ] int 
  1890 ;;  i               2  154[BANK1 ] int 
  1891 ;;  buffer_TX      19  135[BANK1 ] unsigned char [19]
  1892 ;;  buffer_TX      27  108[BANK1 ] unsigned char [27]
  1893 ;;  buffer_TX      27   81[BANK1 ] unsigned char [27]
  1894 ;;  buffer_TX      27   54[BANK1 ] unsigned char [27]
  1895 ;;  buffer_TX      27   27[BANK1 ] unsigned char [27]
  1896 ;;  buffer_TX      27    0[BANK1 ] unsigned char [27]
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0     167       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0     167       0       0       0       0       0       0
  1910 ;;Total ram usage:      167 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    4
  1913 ;; This function calls:
  1914 ;;		_LCD_Char
  1915 ;;		_LCD_Command
  1916 ;;		_LCD_Custom_Char
  1917 ;;		_MSdelay
  1918 ;;		_onLEDS
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text2
  1925  000858                     __ptext2:
  1926                           	callstack 0
  1927  000858                     _onBombillas:
  1928                           	callstack 26
  1929  000858                     
  1930                           ;Controlador.c: 306:     LCD_Custom_Char(0, bombillaCar0);
  1931  000858  0EF2               	movlw	low _bombillaCar0
  1932  00085A  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1933  00085C  0E01               	movlw	high _bombillaCar0
  1934  00085E  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1935  000860  0E00               	movlw	0
  1936  000862  ECC2  F012         	call	_LCD_Custom_Char
  1937                           
  1938                           ;Controlador.c: 307:     LCD_Custom_Char(1, bombillaCar0);
  1939  000866  0EF2               	movlw	low _bombillaCar0
  1940  000868  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1941  00086A  0E01               	movlw	high _bombillaCar0
  1942  00086C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1943  00086E  0E01               	movlw	1
  1944  000870  ECC2  F012         	call	_LCD_Custom_Char
  1945                           
  1946                           ;Controlador.c: 308:     LCD_Custom_Char(2, bombillaCar0);
  1947  000874  0EF2               	movlw	low _bombillaCar0
  1948  000876  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1949  000878  0E01               	movlw	high _bombillaCar0
  1950  00087A  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1951  00087C  0E02               	movlw	2
  1952  00087E  ECC2  F012         	call	_LCD_Custom_Char
  1953                           
  1954                           ;Controlador.c: 309:     LCD_Custom_Char(3, bombillaCar0);
  1955  000882  0EF2               	movlw	low _bombillaCar0
  1956  000884  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1957  000886  0E01               	movlw	high _bombillaCar0
  1958  000888  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1959  00088A  0E03               	movlw	3
  1960  00088C  ECC2  F012         	call	_LCD_Custom_Char
  1961                           
  1962                           ;Controlador.c: 310:     LCD_Custom_Char(4, bombillaCar0);
  1963  000890  0EF2               	movlw	low _bombillaCar0
  1964  000892  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1965  000894  0E01               	movlw	high _bombillaCar0
  1966  000896  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1967  000898  0E04               	movlw	4
  1968  00089A  ECC2  F012         	call	_LCD_Custom_Char
  1969                           
  1970                           ;Controlador.c: 311:     LCD_Custom_Char(6, alert);
  1971  00089E  0EE2               	movlw	low _alert
  1972  0008A0  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1973  0008A2  0E01               	movlw	high _alert
  1974  0008A4  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1975  0008A6  0E06               	movlw	6
  1976  0008A8  ECC2  F012         	call	_LCD_Custom_Char
  1977  0008AC                     
  1978                           ;Controlador.c: 313:     onLEDS(var_T_Integral);
  1979  0008AC  0100               	movlb	0	; () banked
  1980  0008AE  51FA               	movf	_var_T_Integral& (0+255),w,b
  1981  0008B0  EC8B  F00E         	call	_onLEDS
  1982  0008B4                     
  1983                           ;Controlador.c: 314:     if (var_T_Integral < 30 && acumBom == 0) {
  1984  0008B4  0E1E               	movlw	30
  1985  0008B6  0100               	movlb	0	; () banked
  1986  0008B8  61FA               	cpfslt	_var_T_Integral& (0+255),b
  1987  0008BA  EF61  F004         	goto	u2621
  1988  0008BE  EF63  F004         	goto	u2620
  1989  0008C2                     u2621:
  1990  0008C2  EFAC  F004         	goto	l3048
  1991  0008C6                     u2620:
  1992  0008C6                     
  1993                           ; BSR set to: 0
  1994  0008C6  0101               	movlb	1	; () banked
  1995  0008C8  51A7               	movf	_acumBom& (0+255),w,b
  1996  0008CA  11A8               	iorwf	(_acumBom+1)& (0+255),w,b
  1997  0008CC  A4D8               	btfss	status,2,c
  1998  0008CE  EF6B  F004         	goto	u2631
  1999  0008D2  EF6D  F004         	goto	u2630
  2000  0008D6                     u2631:
  2001  0008D6  EFAC  F004         	goto	l3048
  2002  0008DA                     u2630:
  2003  0008DA                     
  2004                           ; BSR set to: 1
  2005                           ;Controlador.c: 315:         PORTAbits.RA0 = 1;
  2006  0008DA  8080               	bsf	128,0,c	;volatile
  2007  0008DC                     
  2008                           ; BSR set to: 1
  2009                           ;Controlador.c: 316:         char buffer_TX[] = "Se encendio la bombilla 1\r";
  2010  0008DC  EE22  F036         	lfsr	2,onBombillas@F3590
  2011  0008E0  EE11  F000         	lfsr	1,onBombillas@buffer_TX
  2012  0008E4  0E1A               	movlw	26
  2013  0008E6                     u2641:
  2014  0008E6  CFDB FFE3          	movff	plusw2,plusw1
  2015  0008EA  06E8               	decf	wreg,f,c
  2016  0008EC  E2FC               	bc	u2641
  2017  0008EE                     
  2018                           ; BSR set to: 1
  2019                           ;Controlador.c: 317:         for (int i = 0; i < 27; i++) {
  2020  0008EE  0E00               	movlw	0
  2021  0008F0  6F9B               	movwf	(onBombillas@i+1)& (0+255),b
  2022  0008F2  0E00               	movlw	0
  2023  0008F4  6F9A               	movwf	onBombillas@i& (0+255),b
  2024  0008F6                     l381:
  2025                           
  2026                           ;Controlador.c: 319:             while (!TXSTAbits.TRMT) {
  2027  0008F6  A2AC               	btfss	172,1,c	;volatile
  2028  0008F8  EF80  F004         	goto	u2651
  2029  0008FC  EF82  F004         	goto	u2650
  2030  000900                     u2651:
  2031  000900  EF7B  F004         	goto	l381
  2032  000904                     u2650:
  2033  000904                     
  2034                           ;Controlador.c: 322:             TXREG = buffer_TX[i];
  2035  000904  0E00               	movlw	low onBombillas@buffer_TX
  2036  000906  0101               	movlb	1	; () banked
  2037  000908  259A               	addwf	onBombillas@i& (0+255),w,b
  2038  00090A  6ED9               	movwf	fsr2l,c
  2039  00090C  0E01               	movlw	high onBombillas@buffer_TX
  2040  00090E  219B               	addwfc	(onBombillas@i+1)& (0+255),w,b
  2041  000910  6EDA               	movwf	fsr2h,c
  2042  000912  50DF               	movf	indf2,w,c
  2043  000914  6EAD               	movwf	173,c	;volatile
  2044  000916                     
  2045                           ; BSR set to: 1
  2046                           ;Controlador.c: 323:         }
  2047  000916  4B9A               	infsnz	onBombillas@i& (0+255),f,b
  2048  000918  2B9B               	incf	(onBombillas@i+1)& (0+255),f,b
  2049  00091A                     
  2050                           ; BSR set to: 1
  2051  00091A  BF9B               	btfsc	(onBombillas@i+1)& (0+255),7,b
  2052  00091C  EF99  F004         	goto	u2661
  2053  000920  519B               	movf	(onBombillas@i+1)& (0+255),w,b
  2054  000922  E109               	bnz	u2660
  2055  000924  0E1B               	movlw	27
  2056  000926  5D9A               	subwf	onBombillas@i& (0+255),w,b
  2057  000928  A0D8               	btfss	status,0,c
  2058  00092A  EF99  F004         	goto	u2661
  2059  00092E  EF9B  F004         	goto	u2660
  2060  000932                     u2661:
  2061  000932  EF7B  F004         	goto	l381
  2062  000936                     u2660:
  2063  000936                     
  2064                           ; BSR set to: 1
  2065                           ;Controlador.c: 328:         LCD_Command(0xc0 | (0));
  2066  000936  0EC0               	movlw	192
  2067  000938  EC93  F014         	call	_LCD_Command
  2068                           
  2069                           ;Controlador.c: 329:         LCD_Char(0);
  2070  00093C  0E00               	movlw	0
  2071  00093E  EC85  F014         	call	_LCD_Char
  2072  000942                     
  2073                           ;Controlador.c: 333:         var_T_Integral = var_T_Integral + 6;
  2074  000942  0100               	movlb	0	; () banked
  2075  000944  51FA               	movf	_var_T_Integral& (0+255),w,b
  2076  000946  0F06               	addlw	6
  2077  000948  6FFA               	movwf	_var_T_Integral& (0+255),b
  2078  00094A                     
  2079                           ; BSR set to: 0
  2080                           ;Controlador.c: 334:         acumBom = 6;
  2081  00094A  0E00               	movlw	0
  2082  00094C  0101               	movlb	1	; () banked
  2083  00094E  6FA8               	movwf	(_acumBom+1)& (0+255),b
  2084  000950  0E06               	movlw	6
  2085  000952  6FA7               	movwf	_acumBom& (0+255),b
  2086                           
  2087                           ;Controlador.c: 336:     } else if (var_T_Integral < 30 && acumBom == 6) {
  2088  000954  EF4F  F006         	goto	l3186
  2089  000958                     l3048:
  2090  000958  0E1E               	movlw	30
  2091  00095A  0100               	movlb	0	; () banked
  2092  00095C  61FA               	cpfslt	_var_T_Integral& (0+255),b
  2093  00095E  EFB3  F004         	goto	u2671
  2094  000962  EFB5  F004         	goto	u2670
  2095  000966                     u2671:
  2096  000966  EFFF  F004         	goto	l3074
  2097  00096A                     u2670:
  2098  00096A                     
  2099                           ; BSR set to: 0
  2100  00096A  0E06               	movlw	6
  2101  00096C  0101               	movlb	1	; () banked
  2102  00096E  19A7               	xorwf	_acumBom& (0+255),w,b
  2103  000970  11A8               	iorwf	(_acumBom+1)& (0+255),w,b
  2104  000972  A4D8               	btfss	status,2,c
  2105  000974  EFBE  F004         	goto	u2681
  2106  000978  EFC0  F004         	goto	u2680
  2107  00097C                     u2681:
  2108  00097C  EFFF  F004         	goto	l3074
  2109  000980                     u2680:
  2110  000980                     
  2111                           ; BSR set to: 1
  2112                           ;Controlador.c: 337:         PORTAbits.RA1 = 1;
  2113  000980  8280               	bsf	128,1,c	;volatile
  2114  000982                     
  2115                           ; BSR set to: 1
  2116                           ;Controlador.c: 339:         char buffer_TX[] = "Se encendio la bombilla 2\r";
  2117  000982  EE22  F01B         	lfsr	2,onBombillas@F3593
  2118  000986  EE11  F01B         	lfsr	1,onBombillas@buffer_TX_793
  2119  00098A  0E1A               	movlw	26
  2120  00098C                     u2691:
  2121  00098C  CFDB FFE3          	movff	plusw2,plusw1
  2122  000990  06E8               	decf	wreg,f,c
  2123  000992  E2FC               	bc	u2691
  2124  000994                     
  2125                           ; BSR set to: 1
  2126                           ;Controlador.c: 340:         for (int i = 0; i < 27; i++) {
  2127  000994  0E00               	movlw	0
  2128  000996  6F9D               	movwf	(onBombillas@i_794+1)& (0+255),b
  2129  000998  0E00               	movlw	0
  2130  00099A  6F9C               	movwf	onBombillas@i_794& (0+255),b
  2131  00099C                     l390:
  2132                           
  2133                           ;Controlador.c: 342:             while (!TXSTAbits.TRMT) {
  2134  00099C  A2AC               	btfss	172,1,c	;volatile
  2135  00099E  EFD3  F004         	goto	u2701
  2136  0009A2  EFD5  F004         	goto	u2700
  2137  0009A6                     u2701:
  2138  0009A6  EFCE  F004         	goto	l390
  2139  0009AA                     u2700:
  2140  0009AA                     
  2141                           ;Controlador.c: 345:             TXREG = buffer_TX[i];
  2142  0009AA  0E1B               	movlw	low onBombillas@buffer_TX_793
  2143  0009AC  0101               	movlb	1	; () banked
  2144  0009AE  259C               	addwf	onBombillas@i_794& (0+255),w,b
  2145  0009B0  6ED9               	movwf	fsr2l,c
  2146  0009B2  0E01               	movlw	high onBombillas@buffer_TX_793
  2147  0009B4  219D               	addwfc	(onBombillas@i_794+1)& (0+255),w,b
  2148  0009B6  6EDA               	movwf	fsr2h,c
  2149  0009B8  50DF               	movf	indf2,w,c
  2150  0009BA  6EAD               	movwf	173,c	;volatile
  2151  0009BC                     
  2152                           ; BSR set to: 1
  2153                           ;Controlador.c: 346:         }
  2154  0009BC  4B9C               	infsnz	onBombillas@i_794& (0+255),f,b
  2155  0009BE  2B9D               	incf	(onBombillas@i_794+1)& (0+255),f,b
  2156  0009C0                     
  2157                           ; BSR set to: 1
  2158  0009C0  BF9D               	btfsc	(onBombillas@i_794+1)& (0+255),7,b
  2159  0009C2  EFEC  F004         	goto	u2711
  2160  0009C6  519D               	movf	(onBombillas@i_794+1)& (0+255),w,b
  2161  0009C8  E109               	bnz	u2710
  2162  0009CA  0E1B               	movlw	27
  2163  0009CC  5D9C               	subwf	onBombillas@i_794& (0+255),w,b
  2164  0009CE  A0D8               	btfss	status,0,c
  2165  0009D0  EFEC  F004         	goto	u2711
  2166  0009D4  EFEE  F004         	goto	u2710
  2167  0009D8                     u2711:
  2168  0009D8  EFCE  F004         	goto	l390
  2169  0009DC                     u2710:
  2170  0009DC                     
  2171                           ; BSR set to: 1
  2172                           ;Controlador.c: 348:         LCD_Command(0xc0 | (3));
  2173  0009DC  0EC3               	movlw	195
  2174  0009DE  EC93  F014         	call	_LCD_Command
  2175                           
  2176                           ;Controlador.c: 349:         LCD_Char(1);
  2177  0009E2  0E01               	movlw	1
  2178  0009E4  EC85  F014         	call	_LCD_Char
  2179  0009E8                     
  2180                           ;Controlador.c: 351:         var_T_Integral = var_T_Integral + 6;
  2181  0009E8  0100               	movlb	0	; () banked
  2182  0009EA  51FA               	movf	_var_T_Integral& (0+255),w,b
  2183  0009EC  0F06               	addlw	6
  2184  0009EE  6FFA               	movwf	_var_T_Integral& (0+255),b
  2185  0009F0                     
  2186                           ; BSR set to: 0
  2187                           ;Controlador.c: 352:         acumBom = 12;
  2188  0009F0  0E00               	movlw	0
  2189  0009F2  0101               	movlb	1	; () banked
  2190  0009F4  6FA8               	movwf	(_acumBom+1)& (0+255),b
  2191  0009F6  0E0C               	movlw	12
  2192  0009F8  6FA7               	movwf	_acumBom& (0+255),b
  2193                           
  2194                           ;Controlador.c: 353:     } else if (var_T_Integral < 30 && acumBom == 12) {
  2195  0009FA  EF4F  F006         	goto	l3186
  2196  0009FE                     l3074:
  2197  0009FE  0E1E               	movlw	30
  2198  000A00  0100               	movlb	0	; () banked
  2199  000A02  61FA               	cpfslt	_var_T_Integral& (0+255),b
  2200  000A04  EF06  F005         	goto	u2721
  2201  000A08  EF08  F005         	goto	u2720
  2202  000A0C                     u2721:
  2203  000A0C  EF52  F005         	goto	l3100
  2204  000A10                     u2720:
  2205  000A10                     
  2206                           ; BSR set to: 0
  2207  000A10  0E0C               	movlw	12
  2208  000A12  0101               	movlb	1	; () banked
  2209  000A14  19A7               	xorwf	_acumBom& (0+255),w,b
  2210  000A16  11A8               	iorwf	(_acumBom+1)& (0+255),w,b
  2211  000A18  A4D8               	btfss	status,2,c
  2212  000A1A  EF11  F005         	goto	u2731
  2213  000A1E  EF13  F005         	goto	u2730
  2214  000A22                     u2731:
  2215  000A22  EF52  F005         	goto	l3100
  2216  000A26                     u2730:
  2217  000A26                     
  2218                           ; BSR set to: 1
  2219                           ;Controlador.c: 354:         PORTAbits.RA2 = 1;
  2220  000A26  8480               	bsf	128,2,c	;volatile
  2221  000A28                     
  2222                           ; BSR set to: 1
  2223                           ;Controlador.c: 356:         char buffer_TX[] = "Se encendio la bombilla 3\r";
  2224  000A28  EE22  F000         	lfsr	2,onBombillas@F3596
  2225  000A2C  EE11  F036         	lfsr	1,onBombillas@buffer_TX_796
  2226  000A30  0E1A               	movlw	26
  2227  000A32                     u2741:
  2228  000A32  CFDB FFE3          	movff	plusw2,plusw1
  2229  000A36  06E8               	decf	wreg,f,c
  2230  000A38  E2FC               	bc	u2741
  2231  000A3A                     
  2232                           ; BSR set to: 1
  2233                           ;Controlador.c: 357:         for (int i = 0; i < 27; i++) {
  2234  000A3A  0E00               	movlw	0
  2235  000A3C  6F9F               	movwf	(onBombillas@i_797+1)& (0+255),b
  2236  000A3E  0E00               	movlw	0
  2237  000A40  6F9E               	movwf	onBombillas@i_797& (0+255),b
  2238  000A42                     l399:
  2239                           
  2240                           ;Controlador.c: 359:             while (!TXSTAbits.TRMT) {
  2241  000A42  A2AC               	btfss	172,1,c	;volatile
  2242  000A44  EF26  F005         	goto	u2751
  2243  000A48  EF28  F005         	goto	u2750
  2244  000A4C                     u2751:
  2245  000A4C  EF21  F005         	goto	l399
  2246  000A50                     u2750:
  2247  000A50                     
  2248                           ;Controlador.c: 362:             TXREG = buffer_TX[i];
  2249  000A50  0E36               	movlw	low onBombillas@buffer_TX_796
  2250  000A52  0101               	movlb	1	; () banked
  2251  000A54  259E               	addwf	onBombillas@i_797& (0+255),w,b
  2252  000A56  6ED9               	movwf	fsr2l,c
  2253  000A58  0E01               	movlw	high onBombillas@buffer_TX_796
  2254  000A5A  219F               	addwfc	(onBombillas@i_797+1)& (0+255),w,b
  2255  000A5C  6EDA               	movwf	fsr2h,c
  2256  000A5E  50DF               	movf	indf2,w,c
  2257  000A60  6EAD               	movwf	173,c	;volatile
  2258  000A62                     
  2259                           ; BSR set to: 1
  2260                           ;Controlador.c: 363:         }
  2261  000A62  4B9E               	infsnz	onBombillas@i_797& (0+255),f,b
  2262  000A64  2B9F               	incf	(onBombillas@i_797+1)& (0+255),f,b
  2263  000A66                     
  2264                           ; BSR set to: 1
  2265  000A66  BF9F               	btfsc	(onBombillas@i_797+1)& (0+255),7,b
  2266  000A68  EF3F  F005         	goto	u2761
  2267  000A6C  519F               	movf	(onBombillas@i_797+1)& (0+255),w,b
  2268  000A6E  E109               	bnz	u2760
  2269  000A70  0E1B               	movlw	27
  2270  000A72  5D9E               	subwf	onBombillas@i_797& (0+255),w,b
  2271  000A74  A0D8               	btfss	status,0,c
  2272  000A76  EF3F  F005         	goto	u2761
  2273  000A7A  EF41  F005         	goto	u2760
  2274  000A7E                     u2761:
  2275  000A7E  EF21  F005         	goto	l399
  2276  000A82                     u2760:
  2277  000A82                     
  2278                           ; BSR set to: 1
  2279                           ;Controlador.c: 366:         LCD_Command(0xc0 | (6));
  2280  000A82  0EC6               	movlw	198
  2281  000A84  EC93  F014         	call	_LCD_Command
  2282                           
  2283                           ;Controlador.c: 367:         LCD_Char(2);
  2284  000A88  0E02               	movlw	2
  2285  000A8A  EC85  F014         	call	_LCD_Char
  2286  000A8E                     
  2287                           ;Controlador.c: 369:         var_T_Integral = var_T_Integral + 6;
  2288  000A8E  0100               	movlb	0	; () banked
  2289  000A90  51FA               	movf	_var_T_Integral& (0+255),w,b
  2290  000A92  0F06               	addlw	6
  2291  000A94  6FFA               	movwf	_var_T_Integral& (0+255),b
  2292  000A96                     
  2293                           ; BSR set to: 0
  2294                           ;Controlador.c: 370:         acumBom = 18;
  2295  000A96  0E00               	movlw	0
  2296  000A98  0101               	movlb	1	; () banked
  2297  000A9A  6FA8               	movwf	(_acumBom+1)& (0+255),b
  2298  000A9C  0E12               	movlw	18
  2299  000A9E  6FA7               	movwf	_acumBom& (0+255),b
  2300                           
  2301                           ;Controlador.c: 371:     } else if (var_T_Integral < 30 && acumBom == 18) {
  2302  000AA0  EF4F  F006         	goto	l3186
  2303  000AA4                     l3100:
  2304  000AA4  0E1E               	movlw	30
  2305  000AA6  0100               	movlb	0	; () banked
  2306  000AA8  61FA               	cpfslt	_var_T_Integral& (0+255),b
  2307  000AAA  EF59  F005         	goto	u2771
  2308  000AAE  EF5B  F005         	goto	u2770
  2309  000AB2                     u2771:
  2310  000AB2  EFA5  F005         	goto	l3126
  2311  000AB6                     u2770:
  2312  000AB6                     
  2313                           ; BSR set to: 0
  2314  000AB6  0E12               	movlw	18
  2315  000AB8  0101               	movlb	1	; () banked
  2316  000ABA  19A7               	xorwf	_acumBom& (0+255),w,b
  2317  000ABC  11A8               	iorwf	(_acumBom+1)& (0+255),w,b
  2318  000ABE  A4D8               	btfss	status,2,c
  2319  000AC0  EF64  F005         	goto	u2781
  2320  000AC4  EF66  F005         	goto	u2780
  2321  000AC8                     u2781:
  2322  000AC8  EFA5  F005         	goto	l3126
  2323  000ACC                     u2780:
  2324  000ACC                     
  2325                           ; BSR set to: 1
  2326                           ;Controlador.c: 372:         PORTAbits.RA3 = 1;
  2327  000ACC  8680               	bsf	128,3,c	;volatile
  2328  000ACE                     
  2329                           ; BSR set to: 1
  2330                           ;Controlador.c: 374:         char buffer_TX[] = "Se encendio la bombilla 4\r";
  2331  000ACE  EE23  F065         	lfsr	2,onBombillas@F3599
  2332  000AD2  EE11  F051         	lfsr	1,onBombillas@buffer_TX_799
  2333  000AD6  0E1A               	movlw	26
  2334  000AD8                     u2791:
  2335  000AD8  CFDB FFE3          	movff	plusw2,plusw1
  2336  000ADC  06E8               	decf	wreg,f,c
  2337  000ADE  E2FC               	bc	u2791
  2338  000AE0                     
  2339                           ; BSR set to: 1
  2340                           ;Controlador.c: 375:         for (int i = 0; i < 27; i++) {
  2341  000AE0  0E00               	movlw	0
  2342  000AE2  6FA1               	movwf	(onBombillas@i_800+1)& (0+255),b
  2343  000AE4  0E00               	movlw	0
  2344  000AE6  6FA0               	movwf	onBombillas@i_800& (0+255),b
  2345  000AE8                     l408:
  2346                           
  2347                           ;Controlador.c: 377:             while (!TXSTAbits.TRMT) {
  2348  000AE8  A2AC               	btfss	172,1,c	;volatile
  2349  000AEA  EF79  F005         	goto	u2801
  2350  000AEE  EF7B  F005         	goto	u2800
  2351  000AF2                     u2801:
  2352  000AF2  EF74  F005         	goto	l408
  2353  000AF6                     u2800:
  2354  000AF6                     
  2355                           ;Controlador.c: 380:             TXREG = buffer_TX[i];
  2356  000AF6  0E51               	movlw	low onBombillas@buffer_TX_799
  2357  000AF8  0101               	movlb	1	; () banked
  2358  000AFA  25A0               	addwf	onBombillas@i_800& (0+255),w,b
  2359  000AFC  6ED9               	movwf	fsr2l,c
  2360  000AFE  0E01               	movlw	high onBombillas@buffer_TX_799
  2361  000B00  21A1               	addwfc	(onBombillas@i_800+1)& (0+255),w,b
  2362  000B02  6EDA               	movwf	fsr2h,c
  2363  000B04  50DF               	movf	indf2,w,c
  2364  000B06  6EAD               	movwf	173,c	;volatile
  2365  000B08                     
  2366                           ; BSR set to: 1
  2367                           ;Controlador.c: 381:         }
  2368  000B08  4BA0               	infsnz	onBombillas@i_800& (0+255),f,b
  2369  000B0A  2BA1               	incf	(onBombillas@i_800+1)& (0+255),f,b
  2370  000B0C                     
  2371                           ; BSR set to: 1
  2372  000B0C  BFA1               	btfsc	(onBombillas@i_800+1)& (0+255),7,b
  2373  000B0E  EF92  F005         	goto	u2811
  2374  000B12  51A1               	movf	(onBombillas@i_800+1)& (0+255),w,b
  2375  000B14  E109               	bnz	u2810
  2376  000B16  0E1B               	movlw	27
  2377  000B18  5DA0               	subwf	onBombillas@i_800& (0+255),w,b
  2378  000B1A  A0D8               	btfss	status,0,c
  2379  000B1C  EF92  F005         	goto	u2811
  2380  000B20  EF94  F005         	goto	u2810
  2381  000B24                     u2811:
  2382  000B24  EF74  F005         	goto	l408
  2383  000B28                     u2810:
  2384  000B28                     
  2385                           ; BSR set to: 1
  2386                           ;Controlador.c: 384:         LCD_Command(0xc0 | (9));
  2387  000B28  0EC9               	movlw	201
  2388  000B2A  EC93  F014         	call	_LCD_Command
  2389                           
  2390                           ;Controlador.c: 385:         LCD_Char(3);
  2391  000B2E  0E03               	movlw	3
  2392  000B30  EC85  F014         	call	_LCD_Char
  2393  000B34                     
  2394                           ;Controlador.c: 387:         var_T_Integral = var_T_Integral + 6;
  2395  000B34  0100               	movlb	0	; () banked
  2396  000B36  51FA               	movf	_var_T_Integral& (0+255),w,b
  2397  000B38  0F06               	addlw	6
  2398  000B3A  6FFA               	movwf	_var_T_Integral& (0+255),b
  2399  000B3C                     
  2400                           ; BSR set to: 0
  2401                           ;Controlador.c: 388:         acumBom = 24;
  2402  000B3C  0E00               	movlw	0
  2403  000B3E  0101               	movlb	1	; () banked
  2404  000B40  6FA8               	movwf	(_acumBom+1)& (0+255),b
  2405  000B42  0E18               	movlw	24
  2406  000B44  6FA7               	movwf	_acumBom& (0+255),b
  2407                           
  2408                           ;Controlador.c: 389:     } else if (var_T_Integral < 30 && acumBom == 24) {
  2409  000B46  EF4F  F006         	goto	l3186
  2410  000B4A                     l3126:
  2411  000B4A  0E1E               	movlw	30
  2412  000B4C  0100               	movlb	0	; () banked
  2413  000B4E  61FA               	cpfslt	_var_T_Integral& (0+255),b
  2414  000B50  EFAC  F005         	goto	u2821
  2415  000B54  EFAE  F005         	goto	u2820
  2416  000B58                     u2821:
  2417  000B58  EFF3  F005         	goto	l3150
  2418  000B5C                     u2820:
  2419  000B5C                     
  2420                           ; BSR set to: 0
  2421  000B5C  0E18               	movlw	24
  2422  000B5E  0101               	movlb	1	; () banked
  2423  000B60  19A7               	xorwf	_acumBom& (0+255),w,b
  2424  000B62  11A8               	iorwf	(_acumBom+1)& (0+255),w,b
  2425  000B64  A4D8               	btfss	status,2,c
  2426  000B66  EFB7  F005         	goto	u2831
  2427  000B6A  EFB9  F005         	goto	u2830
  2428  000B6E                     u2831:
  2429  000B6E  EFF3  F005         	goto	l3150
  2430  000B72                     u2830:
  2431  000B72                     
  2432                           ; BSR set to: 1
  2433                           ;Controlador.c: 390:         PORTAbits.RA4 = 1;
  2434  000B72  8880               	bsf	128,4,c	;volatile
  2435  000B74                     
  2436                           ; BSR set to: 1
  2437                           ;Controlador.c: 392:         char buffer_TX[] = "Se encendio la bombilla 5\r";
  2438  000B74  EE23  F04A         	lfsr	2,onBombillas@F3602
  2439  000B78  EE11  F06C         	lfsr	1,onBombillas@buffer_TX_802
  2440  000B7C  0E1A               	movlw	26
  2441  000B7E                     u2841:
  2442  000B7E  CFDB FFE3          	movff	plusw2,plusw1
  2443  000B82  06E8               	decf	wreg,f,c
  2444  000B84  E2FC               	bc	u2841
  2445  000B86                     
  2446                           ; BSR set to: 1
  2447                           ;Controlador.c: 393:         for (int i = 0; i < 27; i++) {
  2448  000B86  0E00               	movlw	0
  2449  000B88  6FA3               	movwf	(onBombillas@i_803+1)& (0+255),b
  2450  000B8A  0E00               	movlw	0
  2451  000B8C  6FA2               	movwf	onBombillas@i_803& (0+255),b
  2452  000B8E                     l417:
  2453                           
  2454                           ;Controlador.c: 395:             while (!TXSTAbits.TRMT) {
  2455  000B8E  A2AC               	btfss	172,1,c	;volatile
  2456  000B90  EFCC  F005         	goto	u2851
  2457  000B94  EFCE  F005         	goto	u2850
  2458  000B98                     u2851:
  2459  000B98  EFC7  F005         	goto	l417
  2460  000B9C                     u2850:
  2461  000B9C                     
  2462                           ;Controlador.c: 398:             TXREG = buffer_TX[i];
  2463  000B9C  0E6C               	movlw	low onBombillas@buffer_TX_802
  2464  000B9E  0101               	movlb	1	; () banked
  2465  000BA0  25A2               	addwf	onBombillas@i_803& (0+255),w,b
  2466  000BA2  6ED9               	movwf	fsr2l,c
  2467  000BA4  0E01               	movlw	high onBombillas@buffer_TX_802
  2468  000BA6  21A3               	addwfc	(onBombillas@i_803+1)& (0+255),w,b
  2469  000BA8  6EDA               	movwf	fsr2h,c
  2470  000BAA  50DF               	movf	indf2,w,c
  2471  000BAC  6EAD               	movwf	173,c	;volatile
  2472  000BAE                     
  2473                           ; BSR set to: 1
  2474                           ;Controlador.c: 399:         }
  2475  000BAE  4BA2               	infsnz	onBombillas@i_803& (0+255),f,b
  2476  000BB0  2BA3               	incf	(onBombillas@i_803+1)& (0+255),f,b
  2477  000BB2                     
  2478                           ; BSR set to: 1
  2479  000BB2  BFA3               	btfsc	(onBombillas@i_803+1)& (0+255),7,b
  2480  000BB4  EFE5  F005         	goto	u2861
  2481  000BB8  51A3               	movf	(onBombillas@i_803+1)& (0+255),w,b
  2482  000BBA  E109               	bnz	u2860
  2483  000BBC  0E1B               	movlw	27
  2484  000BBE  5DA2               	subwf	onBombillas@i_803& (0+255),w,b
  2485  000BC0  A0D8               	btfss	status,0,c
  2486  000BC2  EFE5  F005         	goto	u2861
  2487  000BC6  EFE7  F005         	goto	u2860
  2488  000BCA                     u2861:
  2489  000BCA  EFC7  F005         	goto	l417
  2490  000BCE                     u2860:
  2491  000BCE                     
  2492                           ; BSR set to: 1
  2493                           ;Controlador.c: 402:         LCD_Command(0xc0 | (12));
  2494  000BCE  0ECC               	movlw	204
  2495  000BD0  EC93  F014         	call	_LCD_Command
  2496                           
  2497                           ;Controlador.c: 403:         LCD_Char(4);
  2498  000BD4  0E04               	movlw	4
  2499  000BD6  EC85  F014         	call	_LCD_Char
  2500  000BDA                     
  2501                           ;Controlador.c: 405:         var_T_Integral = var_T_Integral + 6;
  2502  000BDA  0100               	movlb	0	; () banked
  2503  000BDC  51FA               	movf	_var_T_Integral& (0+255),w,b
  2504  000BDE  0F06               	addlw	6
  2505  000BE0  6FFA               	movwf	_var_T_Integral& (0+255),b
  2506                           
  2507                           ;Controlador.c: 406:     } else if (var_T_Integral > 35) {
  2508  000BE2  EF4F  F006         	goto	l3186
  2509  000BE6                     l3150:
  2510  000BE6  0E23               	movlw	35
  2511  000BE8  0100               	movlb	0	; () banked
  2512  000BEA  65FA               	cpfsgt	_var_T_Integral& (0+255),b
  2513  000BEC  EFFA  F005         	goto	u2871
  2514  000BF0  EFFC  F005         	goto	u2870
  2515  000BF4                     u2871:
  2516  000BF4  EF4B  F006         	goto	l3184
  2517  000BF8                     u2870:
  2518  000BF8                     
  2519                           ; BSR set to: 0
  2520                           ;Controlador.c: 407:         banAgregar = 1;
  2521  000BF8  0E00               	movlw	0
  2522  000BFA  6FF9               	movwf	(_banAgregar+1)& (0+255),b
  2523  000BFC  0E01               	movlw	1
  2524  000BFE  6FF8               	movwf	_banAgregar& (0+255),b
  2525  000C00                     
  2526                           ; BSR set to: 0
  2527                           ;Controlador.c: 409:         char buffer_TX[] = "Temperatura Alta \r";
  2528  000C00  EE22  F080         	lfsr	2,onBombillas@F3605
  2529  000C04  EE11  F087         	lfsr	1,onBombillas@buffer_TX_805
  2530  000C08  0E12               	movlw	18
  2531  000C0A                     u2881:
  2532  000C0A  CFDB FFE3          	movff	plusw2,plusw1
  2533  000C0E  06E8               	decf	wreg,f,c
  2534  000C10  E2FC               	bc	u2881
  2535  000C12                     
  2536                           ; BSR set to: 0
  2537                           ;Controlador.c: 410:         for (int i = 0; i < 19; i++) {
  2538  000C12  0E00               	movlw	0
  2539  000C14  0101               	movlb	1	; () banked
  2540  000C16  6FA5               	movwf	(onBombillas@i_806+1)& (0+255),b
  2541  000C18  0E00               	movlw	0
  2542  000C1A  6FA4               	movwf	onBombillas@i_806& (0+255),b
  2543  000C1C                     l426:
  2544                           
  2545                           ;Controlador.c: 412:             while (!TXSTAbits.TRMT) {
  2546  000C1C  A2AC               	btfss	172,1,c	;volatile
  2547  000C1E  EF13  F006         	goto	u2891
  2548  000C22  EF15  F006         	goto	u2890
  2549  000C26                     u2891:
  2550  000C26  EF0E  F006         	goto	l426
  2551  000C2A                     u2890:
  2552  000C2A                     
  2553                           ;Controlador.c: 415:             TXREG = buffer_TX[i];
  2554  000C2A  0E87               	movlw	low onBombillas@buffer_TX_805
  2555  000C2C  0101               	movlb	1	; () banked
  2556  000C2E  25A4               	addwf	onBombillas@i_806& (0+255),w,b
  2557  000C30  6ED9               	movwf	fsr2l,c
  2558  000C32  0E01               	movlw	high onBombillas@buffer_TX_805
  2559  000C34  21A5               	addwfc	(onBombillas@i_806+1)& (0+255),w,b
  2560  000C36  6EDA               	movwf	fsr2h,c
  2561  000C38  50DF               	movf	indf2,w,c
  2562  000C3A  6EAD               	movwf	173,c	;volatile
  2563  000C3C                     
  2564                           ; BSR set to: 1
  2565                           ;Controlador.c: 416:         }
  2566  000C3C  4BA4               	infsnz	onBombillas@i_806& (0+255),f,b
  2567  000C3E  2BA5               	incf	(onBombillas@i_806+1)& (0+255),f,b
  2568  000C40                     
  2569                           ; BSR set to: 1
  2570  000C40  BFA5               	btfsc	(onBombillas@i_806+1)& (0+255),7,b
  2571  000C42  EF2C  F006         	goto	u2901
  2572  000C46  51A5               	movf	(onBombillas@i_806+1)& (0+255),w,b
  2573  000C48  E109               	bnz	u2900
  2574  000C4A  0E13               	movlw	19
  2575  000C4C  5DA4               	subwf	onBombillas@i_806& (0+255),w,b
  2576  000C4E  A0D8               	btfss	status,0,c
  2577  000C50  EF2C  F006         	goto	u2901
  2578  000C54  EF2E  F006         	goto	u2900
  2579  000C58                     u2901:
  2580  000C58  EF0E  F006         	goto	l426
  2581  000C5C                     u2900:
  2582  000C5C                     
  2583                           ; BSR set to: 1
  2584                           ;Controlador.c: 418:         for (char i = 0; i <= 5; i++) {
  2585  000C5C  0E00               	movlw	0
  2586  000C5E  6FA6               	movwf	onBombillas@i_807& (0+255),b
  2587  000C60                     l3174:
  2588                           
  2589                           ; BSR set to: 1
  2590                           ;Controlador.c: 419:             LCD_Command(0xc0 | (i*3));
  2591  000C60  51A6               	movf	onBombillas@i_807& (0+255),w,b
  2592  000C62  0D03               	mullw	3
  2593  000C64  50F3               	movf	243,w,c
  2594  000C66  09C0               	iorlw	192
  2595  000C68  EC93  F014         	call	_LCD_Command
  2596  000C6C                     
  2597                           ;Controlador.c: 420:             LCD_Char(6);
  2598  000C6C  0E06               	movlw	6
  2599  000C6E  EC85  F014         	call	_LCD_Char
  2600  000C72                     
  2601                           ;Controlador.c: 422:         }
  2602  000C72  0101               	movlb	1	; () banked
  2603  000C74  2BA6               	incf	onBombillas@i_807& (0+255),f,b
  2604  000C76                     
  2605                           ; BSR set to: 1
  2606  000C76  0E05               	movlw	5
  2607  000C78  65A6               	cpfsgt	onBombillas@i_807& (0+255),b
  2608  000C7A  EF41  F006         	goto	u2911
  2609  000C7E  EF43  F006         	goto	u2910
  2610  000C82                     u2911:
  2611  000C82  EF30  F006         	goto	l3174
  2612  000C86                     u2910:
  2613  000C86                     
  2614                           ; BSR set to: 1
  2615                           ;Controlador.c: 425:         MSdelay(100);
  2616  000C86  0E00               	movlw	0
  2617  000C88  6E02               	movwf	(MSdelay@val+1)^0,c
  2618  000C8A  0E64               	movlw	100
  2619  000C8C  6E01               	movwf	MSdelay@val^0,c
  2620  000C8E  EC9D  F012         	call	_MSdelay	;wreg free
  2621                           
  2622                           ;Controlador.c: 426:     } else
  2623  000C92  EF4F  F006         	goto	l3186
  2624  000C96                     l3184:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;Controlador.c: 427:         banAgregar = 1;
  2628  000C96  0E00               	movlw	0
  2629  000C98  6FF9               	movwf	(_banAgregar+1)& (0+255),b
  2630  000C9A  0E01               	movlw	1
  2631  000C9C  6FF8               	movwf	_banAgregar& (0+255),b
  2632  000C9E                     l3186:
  2633                           
  2634                           ;Controlador.c: 428:     MSdelay(1000);
  2635  000C9E  0E03               	movlw	3
  2636  000CA0  6E02               	movwf	(MSdelay@val+1)^0,c
  2637  000CA2  0EE8               	movlw	232
  2638  000CA4  6E01               	movwf	MSdelay@val^0,c
  2639  000CA6  EC9D  F012         	call	_MSdelay	;wreg free
  2640  000CAA  0012               	return		;funcret
  2641  000CAC                     __end_of_onBombillas:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _onLEDS *****************
  2645 ;; Defined at:
  2646 ;;		line 232 in file "Controlador.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  T_Integral      1    wreg     unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  T_Integral      1   30[COMRAM] unsigned char 
  2651 ;;  i               2   33[COMRAM] int 
  2652 ;;  buffer_TX      19   11[COMRAM] unsigned char [19]
  2653 ;;  valor           2   31[COMRAM] int 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0
  2664 ;;      Locals:        24       0       0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2666 ;;      Totals:        24       0       0       0       0       0       0       0       0
  2667 ;;Total ram usage:       24 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    3
  2670 ;; This function calls:
  2671 ;;		_LCD_Char
  2672 ;;		_LCD_Command
  2673 ;;		_LCD_Custom_Char
  2674 ;; This function is called by:
  2675 ;;		_onBombillas
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text3
  2680  001D16                     __ptext3:
  2681                           	callstack 0
  2682  001D16                     _onLEDS:
  2683                           	callstack 26
  2684                           
  2685                           ;incstack = 0
  2686                           ;onLEDS@T_Integral stored from wreg
  2687  001D16  6E1F               	movwf	onLEDS@T_Integral^0,c
  2688  001D18                     
  2689                           ;Controlador.c: 233:     LCD_Custom_Char(5, good);
  2690  001D18  0EEA               	movlw	low _good
  2691  001D1A  6E08               	movwf	LCD_Custom_Char@msg^0,c
  2692  001D1C  0E01               	movlw	high _good
  2693  001D1E  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  2694  001D20  0E05               	movlw	5
  2695  001D22  ECC2  F012         	call	_LCD_Custom_Char
  2696  001D26                     
  2697                           ;Controlador.c: 235:     int valor = T_Integral;
  2698  001D26  C01F  F020         	movff	onLEDS@T_Integral,onLEDS@valor
  2699  001D2A  6A21               	clrf	(onLEDS@valor+1)^0,c
  2700  001D2C                     
  2701                           ;Controlador.c: 236:     if (valor < 30) {
  2702  001D2C  BE21               	btfsc	(onLEDS@valor+1)^0,7,c
  2703  001D2E  EFA4  F00E         	goto	u2490
  2704  001D32  5021               	movf	(onLEDS@valor+1)^0,w,c
  2705  001D34  E107               	bnz	u2491
  2706  001D36  0E1E               	movlw	30
  2707  001D38  5C20               	subwf	onLEDS@valor^0,w,c
  2708  001D3A  B0D8               	btfsc	status,0,c
  2709  001D3C  EFA2  F00E         	goto	u2491
  2710  001D40  EFA4  F00E         	goto	u2490
  2711  001D44                     u2491:
  2712  001D44  EFA9  F00E         	goto	l2894
  2713  001D48                     u2490:
  2714  001D48                     
  2715                           ;Controlador.c: 237:         PORTCbits.RC5 = 1;
  2716  001D48  8A82               	bsf	130,5,c	;volatile
  2717                           
  2718                           ;Controlador.c: 238:         PORTCbits.RC4 = 0;
  2719  001D4A  9882               	bcf	130,4,c	;volatile
  2720                           
  2721                           ;Controlador.c: 239:         PORTAbits.RA5 = 0;
  2722  001D4C  9A80               	bcf	128,5,c	;volatile
  2723                           
  2724                           ;Controlador.c: 240:     } else if (valor >= 30 && valor <= 35) {
  2725  001D4E  EFFF  F00E         	goto	l360
  2726  001D52                     l2894:
  2727  001D52  BE21               	btfsc	(onLEDS@valor+1)^0,7,c
  2728  001D54  EFB5  F00E         	goto	u2501
  2729  001D58  5021               	movf	(onLEDS@valor+1)^0,w,c
  2730  001D5A  E109               	bnz	u2500
  2731  001D5C  0E1E               	movlw	30
  2732  001D5E  5C20               	subwf	onLEDS@valor^0,w,c
  2733  001D60  A0D8               	btfss	status,0,c
  2734  001D62  EFB5  F00E         	goto	u2501
  2735  001D66  EFB7  F00E         	goto	u2500
  2736  001D6A                     u2501:
  2737  001D6A  EFFC  F00E         	goto	l351
  2738  001D6E                     u2500:
  2739  001D6E  BE21               	btfsc	(onLEDS@valor+1)^0,7,c
  2740  001D70  EFC5  F00E         	goto	u2510
  2741  001D74  5021               	movf	(onLEDS@valor+1)^0,w,c
  2742  001D76  E107               	bnz	u2511
  2743  001D78  0E24               	movlw	36
  2744  001D7A  5C20               	subwf	onLEDS@valor^0,w,c
  2745  001D7C  B0D8               	btfsc	status,0,c
  2746  001D7E  EFC3  F00E         	goto	u2511
  2747  001D82  EFC5  F00E         	goto	u2510
  2748  001D86                     u2511:
  2749  001D86  EFFC  F00E         	goto	l351
  2750  001D8A                     u2510:
  2751  001D8A                     
  2752                           ;Controlador.c: 241:         PORTCbits.RC5 = 0;
  2753  001D8A  9A82               	bcf	130,5,c	;volatile
  2754                           
  2755                           ;Controlador.c: 242:         PORTCbits.RC4 = 1;
  2756  001D8C  8882               	bsf	130,4,c	;volatile
  2757                           
  2758                           ;Controlador.c: 243:         PORTAbits.RA5 = 0;
  2759  001D8E  9A80               	bcf	128,5,c	;volatile
  2760  001D90                     
  2761                           ;Controlador.c: 245:         LCD_Command(0xc0 | (15));
  2762  001D90  0ECF               	movlw	207
  2763  001D92  EC93  F014         	call	_LCD_Command
  2764                           
  2765                           ;Controlador.c: 246:         LCD_Char(5);
  2766  001D96  0E05               	movlw	5
  2767  001D98  EC85  F014         	call	_LCD_Char
  2768  001D9C                     
  2769                           ;Controlador.c: 248:         char buffer_TX[] = "Temperatura Ideal\r";
  2770  001D9C  EE22  F093         	lfsr	2,onLEDS@F3581
  2771  001DA0  EE10  F00C         	lfsr	1,onLEDS@buffer_TX
  2772  001DA4  0E12               	movlw	18
  2773  001DA6                     u2521:
  2774  001DA6  CFDB FFE3          	movff	plusw2,plusw1
  2775  001DAA  06E8               	decf	wreg,f,c
  2776  001DAC  E2FC               	bc	u2521
  2777  001DAE                     
  2778                           ;Controlador.c: 249:         for (int i = 0; i < 19; i++) {
  2779  001DAE  0E00               	movlw	0
  2780  001DB0  6E23               	movwf	(onLEDS@i+1)^0,c
  2781  001DB2  0E00               	movlw	0
  2782  001DB4  6E22               	movwf	onLEDS@i^0,c
  2783  001DB6                     l356:
  2784                           
  2785                           ;Controlador.c: 251:             while (!TXSTAbits.TRMT) {
  2786  001DB6  A2AC               	btfss	172,1,c	;volatile
  2787  001DB8  EFE0  F00E         	goto	u2531
  2788  001DBC  EFE2  F00E         	goto	u2530
  2789  001DC0                     u2531:
  2790  001DC0  EFDB  F00E         	goto	l356
  2791  001DC4                     u2530:
  2792  001DC4                     
  2793                           ;Controlador.c: 254:             TXREG = buffer_TX[i];
  2794  001DC4  0E0C               	movlw	low onLEDS@buffer_TX
  2795  001DC6  2422               	addwf	onLEDS@i^0,w,c
  2796  001DC8  6ED9               	movwf	fsr2l,c
  2797  001DCA  0E00               	movlw	high onLEDS@buffer_TX
  2798  001DCC  2023               	addwfc	(onLEDS@i+1)^0,w,c
  2799  001DCE  6EDA               	movwf	fsr2h,c
  2800  001DD0  50DF               	movf	indf2,w,c
  2801  001DD2  6EAD               	movwf	173,c	;volatile
  2802  001DD4                     
  2803                           ;Controlador.c: 255:         }
  2804  001DD4  4A22               	infsnz	onLEDS@i^0,f,c
  2805  001DD6  2A23               	incf	(onLEDS@i+1)^0,f,c
  2806  001DD8  BE23               	btfsc	(onLEDS@i+1)^0,7,c
  2807  001DDA  EFF8  F00E         	goto	u2541
  2808  001DDE  5023               	movf	(onLEDS@i+1)^0,w,c
  2809  001DE0  E109               	bnz	u2540
  2810  001DE2  0E13               	movlw	19
  2811  001DE4  5C22               	subwf	onLEDS@i^0,w,c
  2812  001DE6  A0D8               	btfss	status,0,c
  2813  001DE8  EFF8  F00E         	goto	u2541
  2814  001DEC  EFFA  F00E         	goto	u2540
  2815  001DF0                     u2541:
  2816  001DF0  EFDB  F00E         	goto	l356
  2817  001DF4                     u2540:
  2818  001DF4  EFFF  F00E         	goto	l360
  2819  001DF8                     l351:
  2820                           
  2821                           ;Controlador.c: 257:         PORTCbits.RC5 = 0;
  2822  001DF8  9A82               	bcf	130,5,c	;volatile
  2823                           
  2824                           ;Controlador.c: 258:         PORTCbits.RC4 = 0;
  2825  001DFA  9882               	bcf	130,4,c	;volatile
  2826                           
  2827                           ;Controlador.c: 259:         PORTAbits.RA5 = 1;
  2828  001DFC  8A80               	bsf	128,5,c	;volatile
  2829  001DFE                     l360:
  2830  001DFE  0012               	return		;funcret
  2831  001E00                     __end_of_onLEDS:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _LCD_Custom_Char *****************
  2835 ;; Defined at:
  2836 ;;		line 49 in file "LCD_16x2.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  loc             1    wreg     unsigned char 
  2839 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2840 ;;		 -> alert(8), bombillaCar0(8), good(8), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  loc             1    9[COMRAM] unsigned char 
  2843 ;;  i               1   10[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2853 ;;      Params:         2       0       0       0       0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2856 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2857 ;;Total ram usage:        4 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    2
  2860 ;; This function calls:
  2861 ;;		_LCD_Char
  2862 ;;		_LCD_Command
  2863 ;; This function is called by:
  2864 ;;		_onLEDS
  2865 ;;		_onBombillas
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text4
  2870  002584                     __ptext4:
  2871                           	callstack 0
  2872  002584                     _LCD_Custom_Char:
  2873                           	callstack 26
  2874                           
  2875                           ;incstack = 0
  2876                           ;LCD_Custom_Char@loc stored from wreg
  2877  002584  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2878  002586                     
  2879                           ;LCD_16x2.c: 49: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_16x2.c: 
      +                          50: {;LCD_16x2.c: 51:     unsigned char i;;LCD_16x2.c: 52:     if(loc<8)
  2880  002586  0E08               	movlw	8
  2881  002588  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2882  00258A  EFC9  F012         	goto	u2351
  2883  00258E  EFCB  F012         	goto	u2350
  2884  002592                     u2351:
  2885  002592  EFE5  F012         	goto	l27
  2886  002596                     u2350:
  2887  002596                     
  2888                           ;LCD_16x2.c: 53:     {;LCD_16x2.c: 54:      LCD_Command(0x40+(loc*8));
  2889  002596  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2890  002598  0D08               	mullw	8
  2891  00259A  50F3               	movf	243,w,c
  2892  00259C  0F40               	addlw	64
  2893  00259E  EC93  F014         	call	_LCD_Command
  2894  0025A2                     
  2895                           ;LCD_16x2.c: 55:        for(i=0;i<8;i++)
  2896  0025A2  0E00               	movlw	0
  2897  0025A4  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2898  0025A6                     l2804:
  2899                           
  2900                           ;LCD_16x2.c: 56:            LCD_Char(msg[i]);
  2901  0025A6  500B               	movf	LCD_Custom_Char@i^0,w,c
  2902  0025A8  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2903  0025AA  6ED9               	movwf	fsr2l,c
  2904  0025AC  0E00               	movlw	0
  2905  0025AE  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2906  0025B0  6EDA               	movwf	fsr2h,c
  2907  0025B2  50DF               	movf	indf2,w,c
  2908  0025B4  EC85  F014         	call	_LCD_Char
  2909  0025B8  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2910  0025BA  0E07               	movlw	7
  2911  0025BC  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2912  0025BE  EFE3  F012         	goto	u2361
  2913  0025C2  EFE5  F012         	goto	u2360
  2914  0025C6                     u2361:
  2915  0025C6  EFD3  F012         	goto	l2804
  2916  0025CA                     u2360:
  2917  0025CA                     l27:
  2918  0025CA  0012               	return		;funcret
  2919  0025CC                     __end_of_LCD_Custom_Char:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _offLEDS *****************
  2923 ;; Defined at:
  2924 ;;		line 216 in file "Controlador.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  i               2   15[COMRAM] int 
  2929 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0
  2940 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2942 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2943 ;;Total ram usage:       17 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text5
  2953  002316                     __ptext5:
  2954                           	callstack 0
  2955  002316                     _offLEDS:
  2956                           	callstack 30
  2957  002316                     
  2958                           ;Controlador.c: 217:     PORTCbits.RC5 = 0;
  2959  002316  9A82               	bcf	130,5,c	;volatile
  2960                           
  2961                           ;Controlador.c: 218:     PORTCbits.RC4 = 0;
  2962  002318  9882               	bcf	130,4,c	;volatile
  2963                           
  2964                           ;Controlador.c: 219:     PORTAbits.RA5 = 0;
  2965  00231A  9A80               	bcf	128,5,c	;volatile
  2966  00231C                     
  2967                           ;Controlador.c: 221:     char buffer_TX[] = "Apagando LEDS\r";
  2968  00231C  EE22  F0A6         	lfsr	2,offLEDS@F3575
  2969  002320  EE10  F001         	lfsr	1,offLEDS@buffer_TX
  2970  002324  0E0E               	movlw	14
  2971  002326                     u3001:
  2972  002326  CFDB FFE3          	movff	plusw2,plusw1
  2973  00232A  06E8               	decf	wreg,f,c
  2974  00232C  E2FC               	bc	u3001
  2975  00232E                     
  2976                           ;Controlador.c: 222:     for (int i = 0; i < 15; i++) {
  2977  00232E  0E00               	movlw	0
  2978  002330  6E11               	movwf	(offLEDS@i+1)^0,c
  2979  002332  0E00               	movlw	0
  2980  002334  6E10               	movwf	offLEDS@i^0,c
  2981  002336                     l343:
  2982                           
  2983                           ;Controlador.c: 224:         while (!TXSTAbits.TRMT) {
  2984  002336  A2AC               	btfss	172,1,c	;volatile
  2985  002338  EFA0  F011         	goto	u3011
  2986  00233C  EFA2  F011         	goto	u3010
  2987  002340                     u3011:
  2988  002340  EF9B  F011         	goto	l343
  2989  002344                     u3010:
  2990  002344                     
  2991                           ;Controlador.c: 227:         TXREG = buffer_TX[i];
  2992  002344  0E01               	movlw	low offLEDS@buffer_TX
  2993  002346  2410               	addwf	offLEDS@i^0,w,c
  2994  002348  6ED9               	movwf	fsr2l,c
  2995  00234A  0E00               	movlw	high offLEDS@buffer_TX
  2996  00234C  2011               	addwfc	(offLEDS@i+1)^0,w,c
  2997  00234E  6EDA               	movwf	fsr2h,c
  2998  002350  50DF               	movf	indf2,w,c
  2999  002352  6EAD               	movwf	173,c	;volatile
  3000  002354                     
  3001                           ;Controlador.c: 228:     }
  3002  002354  4A10               	infsnz	offLEDS@i^0,f,c
  3003  002356  2A11               	incf	(offLEDS@i+1)^0,f,c
  3004  002358  BE11               	btfsc	(offLEDS@i+1)^0,7,c
  3005  00235A  EFB8  F011         	goto	u3021
  3006  00235E  5011               	movf	(offLEDS@i+1)^0,w,c
  3007  002360  E109               	bnz	u3020
  3008  002362  0E0F               	movlw	15
  3009  002364  5C10               	subwf	offLEDS@i^0,w,c
  3010  002366  A0D8               	btfss	status,0,c
  3011  002368  EFB8  F011         	goto	u3021
  3012  00236C  EFBA  F011         	goto	u3020
  3013  002370                     u3021:
  3014  002370  EF9B  F011         	goto	l343
  3015  002374                     u3020:
  3016  002374  0012               	return		;funcret
  3017  002376                     __end_of_offLEDS:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _offBombillas *****************
  3021 ;; Defined at:
  3022 ;;		line 265 in file "Controlador.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  i               2   21[COMRAM] int 
  3027 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0
  3038 ;;      Locals:        23       0       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3040 ;;      Totals:        23       0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:       23 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text6
  3051  002250                     __ptext6:
  3052                           	callstack 0
  3053  002250                     _offBombillas:
  3054                           	callstack 30
  3055  002250                     
  3056                           ;Controlador.c: 266:     PORTAbits.RA0 = 0;
  3057  002250  9080               	bcf	128,0,c	;volatile
  3058                           
  3059                           ;Controlador.c: 267:     PORTAbits.RA1 = 0;
  3060  002252  9280               	bcf	128,1,c	;volatile
  3061                           
  3062                           ;Controlador.c: 268:     PORTAbits.RA2 = 0;
  3063  002254  9480               	bcf	128,2,c	;volatile
  3064                           
  3065                           ;Controlador.c: 269:     PORTAbits.RA3 = 0;
  3066  002256  9680               	bcf	128,3,c	;volatile
  3067                           
  3068                           ;Controlador.c: 270:     PORTAbits.RA4 = 0;
  3069  002258  9880               	bcf	128,4,c	;volatile
  3070  00225A                     
  3071                           ;Controlador.c: 271:     char buffer_TX[] = "Bombillas Apagadas \r";
  3072  00225A  EE22  F06B         	lfsr	2,offBombillas@F3585
  3073  00225E  EE10  F001         	lfsr	1,offBombillas@buffer_TX
  3074  002262  0E14               	movlw	20
  3075  002264                     u2971:
  3076  002264  CFDB FFE3          	movff	plusw2,plusw1
  3077  002268  06E8               	decf	wreg,f,c
  3078  00226A  E2FC               	bc	u2971
  3079  00226C                     
  3080                           ;Controlador.c: 272:     for (int i = 0; i < 20; i++) {
  3081  00226C  0E00               	movlw	0
  3082  00226E  6E17               	movwf	(offBombillas@i+1)^0,c
  3083  002270  0E00               	movlw	0
  3084  002272  6E16               	movwf	offBombillas@i^0,c
  3085  002274                     l367:
  3086                           
  3087                           ;Controlador.c: 274:         while (!TXSTAbits.TRMT) {
  3088  002274  A2AC               	btfss	172,1,c	;volatile
  3089  002276  EF3F  F011         	goto	u2981
  3090  00227A  EF41  F011         	goto	u2980
  3091  00227E                     u2981:
  3092  00227E  EF3A  F011         	goto	l367
  3093  002282                     u2980:
  3094  002282                     
  3095                           ;Controlador.c: 277:         TXREG = buffer_TX[i];
  3096  002282  0E01               	movlw	low offBombillas@buffer_TX
  3097  002284  2416               	addwf	offBombillas@i^0,w,c
  3098  002286  6ED9               	movwf	fsr2l,c
  3099  002288  0E00               	movlw	high offBombillas@buffer_TX
  3100  00228A  2017               	addwfc	(offBombillas@i+1)^0,w,c
  3101  00228C  6EDA               	movwf	fsr2h,c
  3102  00228E  50DF               	movf	indf2,w,c
  3103  002290  6EAD               	movwf	173,c	;volatile
  3104  002292                     
  3105                           ;Controlador.c: 278:     }
  3106  002292  4A16               	infsnz	offBombillas@i^0,f,c
  3107  002294  2A17               	incf	(offBombillas@i+1)^0,f,c
  3108  002296  BE17               	btfsc	(offBombillas@i+1)^0,7,c
  3109  002298  EF57  F011         	goto	u2991
  3110  00229C  5017               	movf	(offBombillas@i+1)^0,w,c
  3111  00229E  E109               	bnz	u2990
  3112  0022A0  0E14               	movlw	20
  3113  0022A2  5C16               	subwf	offBombillas@i^0,w,c
  3114  0022A4  A0D8               	btfss	status,0,c
  3115  0022A6  EF57  F011         	goto	u2991
  3116  0022AA  EF59  F011         	goto	u2990
  3117  0022AE                     u2991:
  3118  0022AE  EF3A  F011         	goto	l367
  3119  0022B2                     u2990:
  3120  0022B2  0012               	return		;funcret
  3121  0022B4                     __end_of_offBombillas:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _mostrarFechaHora *****************
  3125 ;; Defined at:
  3126 ;;		line 457 in file "Controlador.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  i               2   50[BANK0 ] int 
  3131 ;;  buffer_TX      26   24[BANK0 ] unsigned char [26]
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0
  3142 ;;      Locals:         0      28       0       0       0       0       0       0       0
  3143 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3144 ;;      Totals:         0      30       0       0       0       0       0       0       0
  3145 ;;Total ram usage:       30 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    8
  3148 ;; This function calls:
  3149 ;;		_I2C_Stop
  3150 ;;		_LCD_Init
  3151 ;;		_LCD_String
  3152 ;;		_LCD_String_xy
  3153 ;;		_MSdelay
  3154 ;;		_RTC_Read_Calendar
  3155 ;;		_RTC_Read_Clock
  3156 ;;		_sprintf
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text7
  3163  000CAC                     __ptext7:
  3164                           	callstack 0
  3165  000CAC                     _mostrarFechaHora:
  3166                           	callstack 22
  3167  000CAC                     
  3168                           ;Controlador.c: 458:     LCD_Init();
  3169  000CAC  EC27  F014         	call	_LCD_Init	;wreg free
  3170                           
  3171                           ;Controlador.c: 459:     RTC_Read_Clock(0);
  3172  000CB0  0E00               	movlw	0
  3173  000CB2  ECE6  F012         	call	_RTC_Read_Clock
  3174  000CB6                     
  3175                           ;Controlador.c: 460:     I2C_Stop();
  3176  000CB6  ECBA  F014         	call	_I2C_Stop	;wreg free
  3177  000CBA                     
  3178                           ;Controlador.c: 461:     MSdelay(1000);
  3179  000CBA  0E03               	movlw	3
  3180  000CBC  6E02               	movwf	(MSdelay@val+1)^0,c
  3181  000CBE  0EE8               	movlw	232
  3182  000CC0  6E01               	movwf	MSdelay@val^0,c
  3183  000CC2  EC9D  F012         	call	_MSdelay	;wreg free
  3184  000CC6                     
  3185                           ;Controlador.c: 462:     if (hour & (1 << Clock_type)) {
  3186  000CC6  0100               	movlb	0	; () banked
  3187  000CC8  ADF2               	btfss	_hour& (0+255),6,b
  3188  000CCA  EF69  F006         	goto	u2921
  3189  000CCE  EF6B  F006         	goto	u2920
  3190  000CD2                     u2921:
  3191  000CD2  EFCE  F006         	goto	l3216
  3192  000CD6                     u2920:
  3193  000CD6                     
  3194                           ; BSR set to: 0
  3195                           ;Controlador.c: 464:         if (hour & (1 << AM_PM)) {
  3196  000CD6  ABF2               	btfss	_hour& (0+255),5,b
  3197  000CD8  EF70  F006         	goto	u2931
  3198  000CDC  EF72  F006         	goto	u2930
  3199  000CE0                     u2931:
  3200  000CE0  EF7D  F006         	goto	l3200
  3201  000CE4                     u2930:
  3202  000CE4                     
  3203                           ; BSR set to: 0
  3204                           ;Controlador.c: 465:             LCD_String_xy(1, 14, "PM");
  3205  000CE4  0E0E               	movlw	14
  3206  000CE6  6E0A               	movwf	LCD_String_xy@pos^0,c
  3207  000CE8  0E50               	movlw	low STR_9
  3208  000CEA  6E0B               	movwf	LCD_String_xy@msg^0,c
  3209  000CEC  0E08               	movlw	high STR_9
  3210  000CEE  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3211  000CF0  0E01               	movlw	1
  3212  000CF2  EC4B  F013         	call	_LCD_String_xy
  3213                           
  3214                           ;Controlador.c: 466:         } else {
  3215  000CF6  EF86  F006         	goto	l3202
  3216  000CFA                     l3200:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;Controlador.c: 467:             LCD_String_xy(1, 14, "AM");
  3220  000CFA  0E0E               	movlw	14
  3221  000CFC  6E0A               	movwf	LCD_String_xy@pos^0,c
  3222  000CFE  0E4D               	movlw	low STR_10
  3223  000D00  6E0B               	movwf	LCD_String_xy@msg^0,c
  3224  000D02  0E08               	movlw	high STR_10
  3225  000D04  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3226  000D06  0E01               	movlw	1
  3227  000D08  EC4B  F013         	call	_LCD_String_xy
  3228  000D0C                     l3202:
  3229                           
  3230                           ;Controlador.c: 470:         hour = hour & (0x1f);
  3231  000D0C  0E1F               	movlw	31
  3232  000D0E  0100               	movlb	0	; () banked
  3233  000D10  15F2               	andwf	_hour& (0+255),w,b
  3234  000D12  6FF2               	movwf	_hour& (0+255),b
  3235  000D14  6BF3               	clrf	(_hour+1)& (0+255),b
  3236  000D16                     
  3237                           ; BSR set to: 0
  3238                           ;Controlador.c: 471:         sprintf(secs, "%x ", sec);
  3239  000D16  0EC7               	movlw	low _secs
  3240  000D18  6F66               	movwf	sprintf@s& (0+255),b
  3241  000D1A  0E01               	movlw	high _secs
  3242  000D1C  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3243  000D1E  0E29               	movlw	low STR_11
  3244  000D20  6F68               	movwf	sprintf@fmt& (0+255),b
  3245  000D22  0E08               	movlw	high STR_11
  3246  000D24  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3247  000D26  C0F6  F06A         	movff	_sec,?_sprintf+4
  3248  000D2A  C0F7  F06B         	movff	_sec+1,?_sprintf+5
  3249  000D2E  EC74  F012         	call	_sprintf	;wreg free
  3250  000D32                     
  3251                           ;Controlador.c: 472:         sprintf(mins, "%x:", min);
  3252  000D32  0EBD               	movlw	low _mins
  3253  000D34  0100               	movlb	0	; () banked
  3254  000D36  6F66               	movwf	sprintf@s& (0+255),b
  3255  000D38  0E01               	movlw	high _mins
  3256  000D3A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3257  000D3C  0E19               	movlw	low (STR_13+4)
  3258  000D3E  6F68               	movwf	sprintf@fmt& (0+255),b
  3259  000D40  0E08               	movlw	high (STR_13+4)
  3260  000D42  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3261  000D44  C0F4  F06A         	movff	_min,?_sprintf+4
  3262  000D48  C0F5  F06B         	movff	_min+1,?_sprintf+5
  3263  000D4C  EC74  F012         	call	_sprintf	;wreg free
  3264  000D50                     
  3265                           ;Controlador.c: 473:         sprintf(hours, "Tim:%x:", hour);
  3266  000D50  0EB3               	movlw	low _hours
  3267  000D52  0100               	movlb	0	; () banked
  3268  000D54  6F66               	movwf	sprintf@s& (0+255),b
  3269  000D56  0E01               	movlw	high _hours
  3270  000D58  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3271  000D5A  0E15               	movlw	low STR_13
  3272  000D5C  6F68               	movwf	sprintf@fmt& (0+255),b
  3273  000D5E  0E08               	movlw	high STR_13
  3274  000D60  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3275  000D62  C0F2  F06A         	movff	_hour,?_sprintf+4
  3276  000D66  C0F3  F06B         	movff	_hour+1,?_sprintf+5
  3277  000D6A  EC74  F012         	call	_sprintf	;wreg free
  3278  000D6E                     
  3279                           ;Controlador.c: 474:         LCD_String_xy(0, 0, hours);
  3280  000D6E  0E00               	movlw	0
  3281  000D70  6E0A               	movwf	LCD_String_xy@pos^0,c
  3282  000D72  0EB3               	movlw	low _hours
  3283  000D74  6E0B               	movwf	LCD_String_xy@msg^0,c
  3284  000D76  0E01               	movlw	high _hours
  3285  000D78  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3286  000D7A  0E00               	movlw	0
  3287  000D7C  EC4B  F013         	call	_LCD_String_xy
  3288  000D80                     l3212:
  3289                           
  3290                           ;Controlador.c: 475:         LCD_String(mins);
  3291  000D80  0EBD               	movlw	low _mins
  3292  000D82  6E08               	movwf	LCD_String@msg^0,c
  3293  000D84  0E01               	movlw	high _mins
  3294  000D86  6E09               	movwf	(LCD_String@msg+1)^0,c
  3295  000D88  ECEA  F011         	call	_LCD_String	;wreg free
  3296  000D8C                     
  3297                           ;Controlador.c: 476:         LCD_String(secs);
  3298  000D8C  0EC7               	movlw	low _secs
  3299  000D8E  6E08               	movwf	LCD_String@msg^0,c
  3300  000D90  0E01               	movlw	high _secs
  3301  000D92  6E09               	movwf	(LCD_String@msg+1)^0,c
  3302  000D94  ECEA  F011         	call	_LCD_String	;wreg free
  3303                           
  3304                           ;Controlador.c: 477:     } else {
  3305  000D98  EF09  F007         	goto	l3230
  3306  000D9C                     l3216:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;Controlador.c: 479:         hour = hour & (0x3f);
  3310  000D9C  0E3F               	movlw	63
  3311  000D9E  15F2               	andwf	_hour& (0+255),w,b
  3312  000DA0  6FF2               	movwf	_hour& (0+255),b
  3313  000DA2  6BF3               	clrf	(_hour+1)& (0+255),b
  3314  000DA4                     
  3315                           ; BSR set to: 0
  3316                           ;Controlador.c: 480:         sprintf(secs, "%x ", sec);
  3317  000DA4  0EC7               	movlw	low _secs
  3318  000DA6  6F66               	movwf	sprintf@s& (0+255),b
  3319  000DA8  0E01               	movlw	high _secs
  3320  000DAA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3321  000DAC  0E29               	movlw	low STR_11
  3322  000DAE  6F68               	movwf	sprintf@fmt& (0+255),b
  3323  000DB0  0E08               	movlw	high STR_11
  3324  000DB2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3325  000DB4  C0F6  F06A         	movff	_sec,?_sprintf+4
  3326  000DB8  C0F7  F06B         	movff	_sec+1,?_sprintf+5
  3327  000DBC  EC74  F012         	call	_sprintf	;wreg free
  3328  000DC0                     
  3329                           ;Controlador.c: 481:         sprintf(mins, "%x:", min);
  3330  000DC0  0EBD               	movlw	low _mins
  3331  000DC2  0100               	movlb	0	; () banked
  3332  000DC4  6F66               	movwf	sprintf@s& (0+255),b
  3333  000DC6  0E01               	movlw	high _mins
  3334  000DC8  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3335  000DCA  0E19               	movlw	low (STR_13+4)
  3336  000DCC  6F68               	movwf	sprintf@fmt& (0+255),b
  3337  000DCE  0E08               	movlw	high (STR_13+4)
  3338  000DD0  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3339  000DD2  C0F4  F06A         	movff	_min,?_sprintf+4
  3340  000DD6  C0F5  F06B         	movff	_min+1,?_sprintf+5
  3341  000DDA  EC74  F012         	call	_sprintf	;wreg free
  3342  000DDE                     
  3343                           ;Controlador.c: 482:         sprintf(hours, "Tim:%x:", hour);
  3344  000DDE  0EB3               	movlw	low _hours
  3345  000DE0  0100               	movlb	0	; () banked
  3346  000DE2  6F66               	movwf	sprintf@s& (0+255),b
  3347  000DE4  0E01               	movlw	high _hours
  3348  000DE6  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3349  000DE8  0E15               	movlw	low STR_13
  3350  000DEA  6F68               	movwf	sprintf@fmt& (0+255),b
  3351  000DEC  0E08               	movlw	high STR_13
  3352  000DEE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3353  000DF0  C0F2  F06A         	movff	_hour,?_sprintf+4
  3354  000DF4  C0F3  F06B         	movff	_hour+1,?_sprintf+5
  3355  000DF8  EC74  F012         	call	_sprintf	;wreg free
  3356  000DFC                     
  3357                           ;Controlador.c: 483:         LCD_String_xy(0, 0, hours);
  3358  000DFC  0E00               	movlw	0
  3359  000DFE  6E0A               	movwf	LCD_String_xy@pos^0,c
  3360  000E00  0EB3               	movlw	low _hours
  3361  000E02  6E0B               	movwf	LCD_String_xy@msg^0,c
  3362  000E04  0E01               	movlw	high _hours
  3363  000E06  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3364  000E08  0E00               	movlw	0
  3365  000E0A  EC4B  F013         	call	_LCD_String_xy
  3366  000E0E  EFC0  F006         	goto	l3212
  3367  000E12                     l3230:
  3368                           
  3369                           ;Controlador.c: 488:     RTC_Read_Calendar(3);
  3370  000E12  0E03               	movlw	3
  3371  000E14  EC47  F012         	call	_RTC_Read_Calendar
  3372  000E18                     
  3373                           ;Controlador.c: 489:     I2C_Stop();
  3374  000E18  ECBA  F014         	call	_I2C_Stop	;wreg free
  3375  000E1C                     
  3376                           ;Controlador.c: 490:     sprintf(date, "Cal %x-", Date);
  3377  000E1C  0EA9               	movlw	low _date
  3378  000E1E  0100               	movlb	0	; () banked
  3379  000E20  6F66               	movwf	sprintf@s& (0+255),b
  3380  000E22  0E01               	movlw	high _date
  3381  000E24  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3382  000E26  0E0D               	movlw	low STR_17
  3383  000E28  6F68               	movwf	sprintf@fmt& (0+255),b
  3384  000E2A  0E08               	movlw	high STR_17
  3385  000E2C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3386  000E2E  C0EE  F06A         	movff	_Date,?_sprintf+4
  3387  000E32  C0EF  F06B         	movff	_Date+1,?_sprintf+5
  3388  000E36  EC74  F012         	call	_sprintf	;wreg free
  3389  000E3A                     
  3390                           ;Controlador.c: 491:     sprintf(month, "%x-", Month);
  3391  000E3A  0EDF               	movlw	low _month
  3392  000E3C  0100               	movlb	0	; () banked
  3393  000E3E  6F66               	movwf	sprintf@s& (0+255),b
  3394  000E40  0E02               	movlw	high _month
  3395  000E42  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3396  000E44  0E11               	movlw	low (STR_17+4)
  3397  000E46  6F68               	movwf	sprintf@fmt& (0+255),b
  3398  000E48  0E08               	movlw	high (STR_17+4)
  3399  000E4A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3400  000E4C  C0EC  F06A         	movff	_Month,?_sprintf+4
  3401  000E50  C0ED  F06B         	movff	_Month+1,?_sprintf+5
  3402  000E54  EC74  F012         	call	_sprintf	;wreg free
  3403  000E58                     
  3404                           ;Controlador.c: 492:     sprintf(year, "%x ", Year);
  3405  000E58  0ED5               	movlw	low _year
  3406  000E5A  0100               	movlb	0	; () banked
  3407  000E5C  6F66               	movwf	sprintf@s& (0+255),b
  3408  000E5E  0E02               	movlw	high _year
  3409  000E60  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3410  000E62  0E29               	movlw	low STR_11
  3411  000E64  6F68               	movwf	sprintf@fmt& (0+255),b
  3412  000E66  0E08               	movlw	high STR_11
  3413  000E68  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3414  000E6A  C0EA  F06A         	movff	_Year,?_sprintf+4
  3415  000E6E  C0EB  F06B         	movff	_Year+1,?_sprintf+5
  3416  000E72  EC74  F012         	call	_sprintf	;wreg free
  3417  000E76                     
  3418                           ;Controlador.c: 493:     LCD_String_xy(2, 0, date);
  3419  000E76  0E00               	movlw	0
  3420  000E78  6E0A               	movwf	LCD_String_xy@pos^0,c
  3421  000E7A  0EA9               	movlw	low _date
  3422  000E7C  6E0B               	movwf	LCD_String_xy@msg^0,c
  3423  000E7E  0E01               	movlw	high _date
  3424  000E80  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3425  000E82  0E02               	movlw	2
  3426  000E84  EC4B  F013         	call	_LCD_String_xy
  3427  000E88                     
  3428                           ;Controlador.c: 494:     LCD_String(month);
  3429  000E88  0EDF               	movlw	low _month
  3430  000E8A  6E08               	movwf	LCD_String@msg^0,c
  3431  000E8C  0E02               	movlw	high _month
  3432  000E8E  6E09               	movwf	(LCD_String@msg+1)^0,c
  3433  000E90  ECEA  F011         	call	_LCD_String	;wreg free
  3434  000E94                     
  3435                           ;Controlador.c: 495:     LCD_String(year);
  3436  000E94  0ED5               	movlw	low _year
  3437  000E96  6E08               	movwf	LCD_String@msg^0,c
  3438  000E98  0E02               	movlw	high _year
  3439  000E9A  6E09               	movwf	(LCD_String@msg+1)^0,c
  3440  000E9C  ECEA  F011         	call	_LCD_String	;wreg free
  3441                           
  3442                           ;Controlador.c: 498:     switch (days[Day]) {
  3443  000EA0  EF8A  F007         	goto	l3262
  3444  000EA4                     l3246:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;Controlador.c: 500:             LCD_String("Sun");
  3448  000EA4  0E41               	movlw	low STR_20
  3449  000EA6  6E08               	movwf	LCD_String@msg^0,c
  3450  000EA8  0E08               	movlw	high STR_20
  3451  000EAA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3452  000EAC  ECEA  F011         	call	_LCD_String	;wreg free
  3453                           
  3454                           ;Controlador.c: 501:             break;
  3455  000EB0  EFBA  F007         	goto	l3264
  3456  000EB4                     l3248:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;Controlador.c: 503:             LCD_String("Mon");
  3460  000EB4  0E3D               	movlw	low STR_21
  3461  000EB6  6E08               	movwf	LCD_String@msg^0,c
  3462  000EB8  0E08               	movlw	high STR_21
  3463  000EBA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3464  000EBC  ECEA  F011         	call	_LCD_String	;wreg free
  3465                           
  3466                           ;Controlador.c: 504:             break;
  3467  000EC0  EFBA  F007         	goto	l3264
  3468  000EC4                     l3250:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;Controlador.c: 506:             LCD_String("Tue");
  3472  000EC4  0E35               	movlw	low STR_22
  3473  000EC6  6E08               	movwf	LCD_String@msg^0,c
  3474  000EC8  0E08               	movlw	high STR_22
  3475  000ECA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3476  000ECC  ECEA  F011         	call	_LCD_String	;wreg free
  3477                           
  3478                           ;Controlador.c: 507:             break;
  3479  000ED0  EFBA  F007         	goto	l3264
  3480  000ED4                     l3252:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;Controlador.c: 509:             LCD_String("Wed");
  3484  000ED4  0E31               	movlw	low STR_23
  3485  000ED6  6E08               	movwf	LCD_String@msg^0,c
  3486  000ED8  0E08               	movlw	high STR_23
  3487  000EDA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3488  000EDC  ECEA  F011         	call	_LCD_String	;wreg free
  3489                           
  3490                           ;Controlador.c: 510:             break;
  3491  000EE0  EFBA  F007         	goto	l3264
  3492  000EE4                     l3254:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;Controlador.c: 512:             LCD_String("Thu");
  3496  000EE4  0E49               	movlw	low STR_24
  3497  000EE6  6E08               	movwf	LCD_String@msg^0,c
  3498  000EE8  0E08               	movlw	high STR_24
  3499  000EEA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3500  000EEC  ECEA  F011         	call	_LCD_String	;wreg free
  3501                           
  3502                           ;Controlador.c: 513:             break;
  3503  000EF0  EFBA  F007         	goto	l3264
  3504  000EF4                     l3256:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;Controlador.c: 515:             LCD_String("Fri");
  3508  000EF4  0E39               	movlw	low STR_25
  3509  000EF6  6E08               	movwf	LCD_String@msg^0,c
  3510  000EF8  0E08               	movlw	high STR_25
  3511  000EFA  6E09               	movwf	(LCD_String@msg+1)^0,c
  3512  000EFC  ECEA  F011         	call	_LCD_String	;wreg free
  3513                           
  3514                           ;Controlador.c: 516:             break;
  3515  000F00  EFBA  F007         	goto	l3264
  3516  000F04                     l3258:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;Controlador.c: 518:             LCD_String("Sat");
  3520  000F04  0E45               	movlw	low STR_26
  3521  000F06  6E08               	movwf	LCD_String@msg^0,c
  3522  000F08  0E08               	movlw	high STR_26
  3523  000F0A  6E09               	movwf	(LCD_String@msg+1)^0,c
  3524  000F0C  ECEA  F011         	call	_LCD_String	;wreg free
  3525                           
  3526                           ;Controlador.c: 519:             break;
  3527  000F10  EFBA  F007         	goto	l3264
  3528  000F14                     l3262:
  3529  000F14  0EDB               	movlw	low _days
  3530  000F16  0100               	movlb	0	; () banked
  3531  000F18  25F0               	addwf	_Day& (0+255),w,b
  3532  000F1A  6ED9               	movwf	fsr2l,c
  3533  000F1C  0E01               	movlw	high _days
  3534  000F1E  21F1               	addwfc	(_Day+1)& (0+255),w,b
  3535  000F20  6EDA               	movwf	fsr2h,c
  3536  000F22  50DF               	movf	indf2,w,c
  3537  000F24  6F76               	movwf	??_mostrarFechaHora& (0+255),b
  3538  000F26  6B77               	clrf	(??_mostrarFechaHora+1)& (0+255),b
  3539                           
  3540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3541                           ; Switch size 1, requested type "simple"
  3542                           ; Number of cases is 1, Range of values is 0 to 0
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte            4     3 (average)
  3546                           ;	Chosen strategy is simple_byte
  3547  000F28  5177               	movf	(??_mostrarFechaHora+1)& (0+255),w,b
  3548  000F2A  0A00               	xorlw	0	; case 0
  3549  000F2C  B4D8               	btfsc	status,2,c
  3550  000F2E  EF9B  F007         	goto	l3450
  3551  000F32  EFBA  F007         	goto	l3264
  3552  000F36                     l3450:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ; Switch size 1, requested type "simple"
  3556                           ; Number of cases is 7, Range of values is 70 to 116
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte           22    12 (average)
  3560                           ;	Chosen strategy is simple_byte
  3561  000F36  5176               	movf	??_mostrarFechaHora& (0+255),w,b
  3562  000F38  0A46               	xorlw	70	; case 70
  3563  000F3A  B4D8               	btfsc	status,2,c
  3564  000F3C  EF7A  F007         	goto	l3256
  3565  000F40  0A0B               	xorlw	11	; case 77
  3566  000F42  B4D8               	btfsc	status,2,c
  3567  000F44  EF5A  F007         	goto	l3248
  3568  000F48  0A1E               	xorlw	30	; case 83
  3569  000F4A  B4D8               	btfsc	status,2,c
  3570  000F4C  EF52  F007         	goto	l3246
  3571  000F50  0A07               	xorlw	7	; case 84
  3572  000F52  B4D8               	btfsc	status,2,c
  3573  000F54  EF62  F007         	goto	l3250
  3574  000F58  0A03               	xorlw	3	; case 87
  3575  000F5A  B4D8               	btfsc	status,2,c
  3576  000F5C  EF6A  F007         	goto	l3252
  3577  000F60  0A24               	xorlw	36	; case 115
  3578  000F62  B4D8               	btfsc	status,2,c
  3579  000F64  EF82  F007         	goto	l3258
  3580  000F68  0A07               	xorlw	7	; case 116
  3581  000F6A  B4D8               	btfsc	status,2,c
  3582  000F6C  EF72  F007         	goto	l3254
  3583  000F70  EFBA  F007         	goto	l3264
  3584  000F74                     l3264:
  3585                           
  3586                           ;Controlador.c: 524:     char buffer_TX[] = "Registrando Hora y Fecha\r";
  3587  000F74  EE22  F051         	lfsr	2,mostrarFechaHora@F3614
  3588  000F78  EE10  F078         	lfsr	1,mostrarFechaHora@buffer_TX
  3589  000F7C  0E19               	movlw	25
  3590  000F7E                     u2941:
  3591  000F7E  CFDB FFE3          	movff	plusw2,plusw1
  3592  000F82  06E8               	decf	wreg,f,c
  3593  000F84  E2FC               	bc	u2941
  3594  000F86                     
  3595                           ;Controlador.c: 525:     for (int i = 0; i < 25; i++) {
  3596  000F86  0E00               	movlw	0
  3597  000F88  0100               	movlb	0	; () banked
  3598  000F8A  6F93               	movwf	(mostrarFechaHora@i+1)& (0+255),b
  3599  000F8C  0E00               	movlw	0
  3600  000F8E  6F92               	movwf	mostrarFechaHora@i& (0+255),b
  3601  000F90                     l459:
  3602                           
  3603                           ;Controlador.c: 527:         while (!TXSTAbits.TRMT) {
  3604  000F90  A2AC               	btfss	172,1,c	;volatile
  3605  000F92  EFCD  F007         	goto	u2951
  3606  000F96  EFCF  F007         	goto	u2950
  3607  000F9A                     u2951:
  3608  000F9A  EFC8  F007         	goto	l459
  3609  000F9E                     u2950:
  3610  000F9E                     
  3611                           ;Controlador.c: 530:         TXREG = buffer_TX[i];
  3612  000F9E  0E78               	movlw	low mostrarFechaHora@buffer_TX
  3613  000FA0  0100               	movlb	0	; () banked
  3614  000FA2  2592               	addwf	mostrarFechaHora@i& (0+255),w,b
  3615  000FA4  6ED9               	movwf	fsr2l,c
  3616  000FA6  0E00               	movlw	high mostrarFechaHora@buffer_TX
  3617  000FA8  2193               	addwfc	(mostrarFechaHora@i+1)& (0+255),w,b
  3618  000FAA  6EDA               	movwf	fsr2h,c
  3619  000FAC  50DF               	movf	indf2,w,c
  3620  000FAE  6EAD               	movwf	173,c	;volatile
  3621  000FB0                     
  3622                           ; BSR set to: 0
  3623                           ;Controlador.c: 531:     }
  3624  000FB0  4B92               	infsnz	mostrarFechaHora@i& (0+255),f,b
  3625  000FB2  2B93               	incf	(mostrarFechaHora@i+1)& (0+255),f,b
  3626  000FB4                     
  3627                           ; BSR set to: 0
  3628  000FB4  BF93               	btfsc	(mostrarFechaHora@i+1)& (0+255),7,b
  3629  000FB6  EFE6  F007         	goto	u2961
  3630  000FBA  5193               	movf	(mostrarFechaHora@i+1)& (0+255),w,b
  3631  000FBC  E109               	bnz	u2960
  3632  000FBE  0E19               	movlw	25
  3633  000FC0  5D92               	subwf	mostrarFechaHora@i& (0+255),w,b
  3634  000FC2  A0D8               	btfss	status,0,c
  3635  000FC4  EFE6  F007         	goto	u2961
  3636  000FC8  EFE8  F007         	goto	u2960
  3637  000FCC                     u2961:
  3638  000FCC  EFC8  F007         	goto	l459
  3639  000FD0                     u2960:
  3640  000FD0                     
  3641                           ; BSR set to: 0
  3642  000FD0  0012               	return		;funcret
  3643  000FD2                     __end_of_mostrarFechaHora:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _RTC_Read_Clock *****************
  3647 ;; Defined at:
  3648 ;;		line 434 in file "Controlador.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  read_clock_a    1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3664 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3665 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		_I2C_Read
  3671 ;;		_I2C_Repeated_Start
  3672 ;;		_I2C_Start
  3673 ;;		_I2C_Write
  3674 ;; This function is called by:
  3675 ;;		_mostrarFechaHora
  3676 ;;		_verificarHora
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text8
  3681  0025CC                     __ptext8:
  3682                           	callstack 0
  3683  0025CC                     _RTC_Read_Clock:
  3684                           	callstack 26
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3689  0025CC  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3690  0025CE                     
  3691                           ;Controlador.c: 435:     I2C_Start(0xD0);
  3692  0025CE  0ED0               	movlw	208
  3693  0025D0  ECF9  F013         	call	_I2C_Start
  3694                           
  3695                           ;Controlador.c: 436:     I2C_Write(read_clock_address);
  3696  0025D4  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3697  0025D6  EC54  F014         	call	_I2C_Write
  3698                           
  3699                           ;Controlador.c: 437:     I2C_Repeated_Start(0xD1);
  3700  0025DA  0ED1               	movlw	209
  3701  0025DC  EC10  F014         	call	_I2C_Repeated_Start
  3702  0025E0                     
  3703                           ;Controlador.c: 438:     sec = I2C_Read(0);
  3704  0025E0  0E00               	movlw	0
  3705  0025E2  EC89  F013         	call	_I2C_Read
  3706  0025E6  6E03               	movwf	??_RTC_Read_Clock^0,c
  3707  0025E8  5003               	movf	??_RTC_Read_Clock^0,w,c
  3708  0025EA  0100               	movlb	0	; () banked
  3709  0025EC  6FF6               	movwf	_sec& (0+255),b
  3710  0025EE  6BF7               	clrf	(_sec+1)& (0+255),b
  3711  0025F0                     
  3712                           ; BSR set to: 0
  3713                           ;Controlador.c: 439:     min = I2C_Read(0);
  3714  0025F0  0E00               	movlw	0
  3715  0025F2  EC89  F013         	call	_I2C_Read
  3716  0025F6  6E03               	movwf	??_RTC_Read_Clock^0,c
  3717  0025F8  5003               	movf	??_RTC_Read_Clock^0,w,c
  3718  0025FA  0100               	movlb	0	; () banked
  3719  0025FC  6FF4               	movwf	_min& (0+255),b
  3720  0025FE  6BF5               	clrf	(_min+1)& (0+255),b
  3721  002600                     
  3722                           ; BSR set to: 0
  3723                           ;Controlador.c: 440:     hour = I2C_Read(1);
  3724  002600  0E01               	movlw	1
  3725  002602  EC89  F013         	call	_I2C_Read
  3726  002606  6E03               	movwf	??_RTC_Read_Clock^0,c
  3727  002608  5003               	movf	??_RTC_Read_Clock^0,w,c
  3728  00260A  0100               	movlb	0	; () banked
  3729  00260C  6FF2               	movwf	_hour& (0+255),b
  3730  00260E  6BF3               	clrf	(_hour+1)& (0+255),b
  3731  002610                     
  3732                           ; BSR set to: 0
  3733  002610  0012               	return		;funcret
  3734  002612                     __end_of_RTC_Read_Clock:
  3735                           	callstack 0
  3736                           
  3737 ;; *************** function _RTC_Read_Calendar *****************
  3738 ;; Defined at:
  3739 ;;		line 444 in file "Controlador.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  read_calenda    1    wreg     unsigned char 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  read_calenda    1    3[COMRAM] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0
  3754 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3755 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3756 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3757 ;;Total ram usage:        2 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    3
  3760 ;; This function calls:
  3761 ;;		_I2C_Read
  3762 ;;		_I2C_Repeated_Start
  3763 ;;		_I2C_Start
  3764 ;;		_I2C_Stop
  3765 ;;		_I2C_Write
  3766 ;; This function is called by:
  3767 ;;		_mostrarFechaHora
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text9
  3772  00248E                     __ptext9:
  3773                           	callstack 0
  3774  00248E                     _RTC_Read_Calendar:
  3775                           	callstack 26
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;incstack = 0
  3779                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  3780  00248E  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  3781  002490                     
  3782                           ;Controlador.c: 445:     I2C_Start(0xD0);
  3783  002490  0ED0               	movlw	208
  3784  002492  ECF9  F013         	call	_I2C_Start
  3785                           
  3786                           ;Controlador.c: 446:     I2C_Write(read_calendar_address);
  3787  002496  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  3788  002498  EC54  F014         	call	_I2C_Write
  3789                           
  3790                           ;Controlador.c: 447:     I2C_Repeated_Start(0xD1);
  3791  00249C  0ED1               	movlw	209
  3792  00249E  EC10  F014         	call	_I2C_Repeated_Start
  3793  0024A2                     
  3794                           ;Controlador.c: 448:     Day = I2C_Read(0);
  3795  0024A2  0E00               	movlw	0
  3796  0024A4  EC89  F013         	call	_I2C_Read
  3797  0024A8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3798  0024AA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3799  0024AC  0100               	movlb	0	; () banked
  3800  0024AE  6FF0               	movwf	_Day& (0+255),b
  3801  0024B0  6BF1               	clrf	(_Day+1)& (0+255),b
  3802  0024B2                     
  3803                           ; BSR set to: 0
  3804                           ;Controlador.c: 449:     Date = I2C_Read(0);
  3805  0024B2  0E00               	movlw	0
  3806  0024B4  EC89  F013         	call	_I2C_Read
  3807  0024B8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3808  0024BA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3809  0024BC  0100               	movlb	0	; () banked
  3810  0024BE  6FEE               	movwf	_Date& (0+255),b
  3811  0024C0  6BEF               	clrf	(_Date+1)& (0+255),b
  3812  0024C2                     
  3813                           ; BSR set to: 0
  3814                           ;Controlador.c: 450:     Month = I2C_Read(0);
  3815  0024C2  0E00               	movlw	0
  3816  0024C4  EC89  F013         	call	_I2C_Read
  3817  0024C8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3818  0024CA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3819  0024CC  0100               	movlb	0	; () banked
  3820  0024CE  6FEC               	movwf	_Month& (0+255),b
  3821  0024D0  6BED               	clrf	(_Month+1)& (0+255),b
  3822  0024D2                     
  3823                           ; BSR set to: 0
  3824                           ;Controlador.c: 451:     Year = I2C_Read(1);
  3825  0024D2  0E01               	movlw	1
  3826  0024D4  EC89  F013         	call	_I2C_Read
  3827  0024D8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3828  0024DA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3829  0024DC  0100               	movlb	0	; () banked
  3830  0024DE  6FEA               	movwf	_Year& (0+255),b
  3831  0024E0  6BEB               	clrf	(_Year+1)& (0+255),b
  3832  0024E2                     
  3833                           ; BSR set to: 0
  3834                           ;Controlador.c: 452:     I2C_Stop();
  3835  0024E2  ECBA  F014         	call	_I2C_Stop	;wreg free
  3836  0024E6  0012               	return		;funcret
  3837  0024E8                     __end_of_RTC_Read_Calendar:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _I2C_Stop *****************
  3841 ;; Defined at:
  3842 ;;		line 140 in file "./I2C_Master_File.h"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      unsigned char 
  3849 ;; Registers used:
  3850 ;;		wreg
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_RTC_Read_Calendar
  3866 ;;		_mostrarFechaHora
  3867 ;;		_verificarHora
  3868 ;;		_I2C_Start_Wait
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text10
  3873  002974                     __ptext10:
  3874                           	callstack 0
  3875  002974                     _I2C_Stop:
  3876                           	callstack 29
  3877  002974                     
  3878                           ;./I2C_Master_File.h: 142:     PEN = 1;
  3879  002974  84C5               	bsf	4037,2,c	;volatile
  3880  002976                     l206:
  3881  002976  B4C5               	btfsc	4037,2,c	;volatile
  3882  002978  EFC0  F014         	goto	u2421
  3883  00297C  EFC2  F014         	goto	u2420
  3884  002980                     u2421:
  3885  002980  EFBB  F014         	goto	l206
  3886  002984                     u2420:
  3887  002984                     
  3888                           ;./I2C_Master_File.h: 144:     if(!SSPSTATbits.P);
  3889  002984  50C7               	movf	199,w,c	;volatile
  3890  002986  0012               	return		;funcret
  3891  002988                     __end_of_I2C_Stop:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _I2C_Start *****************
  3895 ;; Defined at:
  3896 ;;		line 115 in file "./I2C_Master_File.h"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  slave_write_    1    wreg     unsigned char 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      unsigned char 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3913 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        1 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    2
  3917 ;; This function calls:
  3918 ;;		_I2C_Write
  3919 ;; This function is called by:
  3920 ;;		_RTC_Read_Clock
  3921 ;;		_RTC_Read_Calendar
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text11
  3926  0027F2                     __ptext11:
  3927                           	callstack 0
  3928  0027F2                     _I2C_Start:
  3929                           	callstack 26
  3930                           
  3931                           ;incstack = 0
  3932                           ;I2C_Start@slave_write_address stored from wreg
  3933  0027F2  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3934  0027F4                     
  3935                           ;./I2C_Master_File.h: 115: char I2C_Start(char slave_write_address);./I2C_Master_File.h:
      +                           116: {;./I2C_Master_File.h: 117:     SSPCON2bits.SEN=1;
  3936  0027F4  80C5               	bsf	197,0,c	;volatile
  3937  0027F6                     l190:
  3938  0027F6  B0C5               	btfsc	197,0,c	;volatile
  3939  0027F8  EF00  F014         	goto	u2431
  3940  0027FC  EF02  F014         	goto	u2430
  3941  002800                     u2431:
  3942  002800  EFFB  F013         	goto	l190
  3943  002804                     u2430:
  3944  002804                     
  3945                           ;./I2C_Master_File.h: 119:  SSPIF=0;
  3946  002804  969E               	bcf	3998,3,c	;volatile
  3947                           
  3948                           ;./I2C_Master_File.h: 120:     if(!SSPSTATbits.S)
  3949  002806  B6C7               	btfsc	199,3,c	;volatile
  3950  002808  EF08  F014         	goto	u2441
  3951  00280C  EF0A  F014         	goto	u2440
  3952  002810                     u2441:
  3953  002810  EF0C  F014         	goto	l2836
  3954  002814                     u2440:
  3955  002814  EF0F  F014         	goto	l194
  3956  002818                     l2836:
  3957                           
  3958                           ;./I2C_Master_File.h: 122:     return (I2C_Write(slave_write_address));;	Return value of
      +                           _I2C_Start is never used
  3959  002818  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3960  00281A  EC54  F014         	call	_I2C_Write
  3961  00281E                     l194:
  3962  00281E  0012               	return		;funcret
  3963  002820                     __end_of_I2C_Start:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _I2C_Repeated_Start *****************
  3967 ;; Defined at:
  3968 ;;		line 126 in file "./I2C_Master_File.h"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  slave_read_a    1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      unsigned char 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0
  3983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        1 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    2
  3989 ;; This function calls:
  3990 ;;		_I2C_Write
  3991 ;; This function is called by:
  3992 ;;		_RTC_Read_Clock
  3993 ;;		_RTC_Read_Calendar
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text12
  3998  002820                     __ptext12:
  3999                           	callstack 0
  4000  002820                     _I2C_Repeated_Start:
  4001                           	callstack 26
  4002                           
  4003                           ;incstack = 0
  4004                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  4005  002820  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  4006  002822                     
  4007                           ;./I2C_Master_File.h: 126: char I2C_Repeated_Start(char slave_read_address);./I2C_Master
      +                          _File.h: 127: {;./I2C_Master_File.h: 128:     RSEN = 1;
  4008  002822  82C5               	bsf	4037,1,c	;volatile
  4009  002824                     l197:
  4010  002824  B2C5               	btfsc	4037,1,c	;volatile
  4011  002826  EF17  F014         	goto	u2451
  4012  00282A  EF19  F014         	goto	u2450
  4013  00282E                     u2451:
  4014  00282E  EF12  F014         	goto	l197
  4015  002832                     u2450:
  4016  002832                     
  4017                           ;./I2C_Master_File.h: 130:     SSPIF = 0;
  4018  002832  969E               	bcf	3998,3,c	;volatile
  4019                           
  4020                           ;./I2C_Master_File.h: 131:  if(!SSPSTATbits.S)
  4021  002834  B6C7               	btfsc	199,3,c	;volatile
  4022  002836  EF1F  F014         	goto	u2461
  4023  00283A  EF21  F014         	goto	u2460
  4024  00283E                     u2461:
  4025  00283E  EF23  F014         	goto	l2844
  4026  002842                     u2460:
  4027  002842  EF26  F014         	goto	l201
  4028  002846                     l2844:
  4029                           
  4030                           ;./I2C_Master_File.h: 133:     I2C_Write(slave_read_address);
  4031  002846  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  4032  002848  EC54  F014         	call	_I2C_Write
  4033  00284C                     l201:
  4034  00284C  0012               	return		;funcret
  4035  00284E                     __end_of_I2C_Repeated_Start:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _I2C_Write *****************
  4039 ;; Defined at:
  4040 ;;		line 148 in file "./I2C_Master_File.h"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  data            1    wreg     unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  data            1    0[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      unsigned char 
  4047 ;; Registers used:
  4048 ;;		wreg, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        1 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    1
  4061 ;; This function calls:
  4062 ;;		_I2C_Ready
  4063 ;; This function is called by:
  4064 ;;		_I2C_Start
  4065 ;;		_I2C_Repeated_Start
  4066 ;;		_RTC_Read_Clock
  4067 ;;		_RTC_Read_Calendar
  4068 ;;		_I2C_Start_Wait
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text13
  4073  0028A8                     __ptext13:
  4074                           	callstack 0
  4075  0028A8                     _I2C_Write:
  4076                           	callstack 27
  4077                           
  4078                           ;incstack = 0
  4079                           ;I2C_Write@data stored from wreg
  4080  0028A8  6E01               	movwf	I2C_Write@data^0,c
  4081  0028AA                     
  4082                           ;./I2C_Master_File.h: 148: char I2C_Write(unsigned char data);./I2C_Master_File.h: 149: 
      +                          {;./I2C_Master_File.h: 150:       SSPBUF = data;
  4083  0028AA  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  4084  0028AE                     
  4085                           ;./I2C_Master_File.h: 151:       I2C_Ready();
  4086  0028AE  ECD8  F014         	call	_I2C_Ready	;wreg free
  4087  0028B2                     
  4088                           ;./I2C_Master_File.h: 152:       if (ACKSTAT)
  4089  0028B2  ACC5               	btfss	4037,6,c	;volatile
  4090  0028B4  EF5E  F014         	goto	u2281
  4091  0028B8  EF60  F014         	goto	u2280
  4092  0028BC                     u2281:
  4093  0028BC  EF63  F014         	goto	l2734
  4094  0028C0                     u2280:
  4095  0028C0                     
  4096                           ;./I2C_Master_File.h: 153:         return 1;
  4097  0028C0  0E01               	movlw	1
  4098  0028C2  EF64  F014         	goto	l214
  4099  0028C6                     l2734:
  4100                           
  4101                           ;./I2C_Master_File.h: 155:         return 2;
  4102  0028C6  0E02               	movlw	2
  4103  0028C8                     l214:
  4104  0028C8  0012               	return		;funcret
  4105  0028CA                     __end_of_I2C_Write:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function _I2C_Read *****************
  4109 ;; Defined at:
  4110 ;;		line 59 in file "./I2C_Master_File.h"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  flag            1    wreg     unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  flag            1    0[COMRAM] unsigned char 
  4115 ;;  buffer          1    1[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      unsigned char 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0
  4126 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4128 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4129 ;;Total ram usage:        2 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    1
  4132 ;; This function calls:
  4133 ;;		_I2C_Ack
  4134 ;;		_I2C_Nack
  4135 ;;		_I2C_Ready
  4136 ;; This function is called by:
  4137 ;;		_RTC_Read_Clock
  4138 ;;		_RTC_Read_Calendar
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text14
  4143  002712                     __ptext14:
  4144                           	callstack 0
  4145  002712                     _I2C_Read:
  4146                           	callstack 27
  4147                           
  4148                           ;incstack = 0
  4149                           ;I2C_Read@flag stored from wreg
  4150  002712  6E01               	movwf	I2C_Read@flag^0,c
  4151  002714                     
  4152                           ;./I2C_Master_File.h: 59: char I2C_Read(char flag);./I2C_Master_File.h: 61: {;./I2C_Mast
      +                          er_File.h: 62:         char buffer;;./I2C_Master_File.h: 63:         RCEN = 1;
  4153  002714  86C5               	bsf	4037,3,c	;volatile
  4154  002716                     l162:
  4155  002716  A0C7               	btfss	199,0,c	;volatile
  4156  002718  EF90  F013         	goto	u2401
  4157  00271C  EF92  F013         	goto	u2400
  4158  002720                     u2401:
  4159  002720  EF8B  F013         	goto	l162
  4160  002724                     u2400:
  4161  002724                     
  4162                           ;./I2C_Master_File.h: 66:         buffer = SSPBUF;
  4163  002724  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  4164  002728                     
  4165                           ;./I2C_Master_File.h: 68:         if(flag==0)
  4166  002728  5001               	movf	I2C_Read@flag^0,w,c
  4167  00272A  A4D8               	btfss	status,2,c
  4168  00272C  EF9A  F013         	goto	u2411
  4169  002730  EF9C  F013         	goto	u2410
  4170  002734                     u2411:
  4171  002734  EFA0  F013         	goto	l2824
  4172  002738                     u2410:
  4173  002738                     
  4174                           ;./I2C_Master_File.h: 69:             I2C_Ack();
  4175  002738  ECCE  F014         	call	_I2C_Ack	;wreg free
  4176  00273C  EFA2  F013         	goto	l166
  4177  002740                     l2824:
  4178                           
  4179                           ;./I2C_Master_File.h: 71:             I2C_Nack();
  4180  002740  ECC4  F014         	call	_I2C_Nack	;wreg free
  4181  002744                     l166:
  4182                           
  4183                           ;./I2C_Master_File.h: 72:         I2C_Ready();
  4184  002744  ECD8  F014         	call	_I2C_Ready	;wreg free
  4185  002748                     
  4186                           ;./I2C_Master_File.h: 73:         return(buffer);
  4187  002748  5002               	movf	I2C_Read@buffer^0,w,c
  4188  00274A  0012               	return		;funcret
  4189  00274C                     __end_of_I2C_Read:
  4190                           	callstack 0
  4191                           
  4192 ;; *************** function _I2C_Ready *****************
  4193 ;; Defined at:
  4194 ;;		line 90 in file "./I2C_Master_File.h"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		None
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_I2C_Read
  4218 ;;		_I2C_Write
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text15
  4223  0029B0                     __ptext15:
  4224                           	callstack 0
  4225  0029B0                     _I2C_Ready:
  4226                           	callstack 27
  4227  0029B0                     l173:
  4228  0029B0  A69E               	btfss	3998,3,c	;volatile
  4229  0029B2  EFDD  F014         	goto	u1931
  4230  0029B6  EFDF  F014         	goto	u1930
  4231  0029BA                     u1931:
  4232  0029BA  EFD8  F014         	goto	l173
  4233  0029BE                     u1930:
  4234  0029BE                     
  4235                           ;./I2C_Master_File.h: 93:     SSPIF=0;
  4236  0029BE  969E               	bcf	3998,3,c	;volatile
  4237  0029C0  0012               	return		;funcret
  4238  0029C2                     __end_of_I2C_Ready:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _I2C_Nack *****************
  4242 ;; Defined at:
  4243 ;;		line 165 in file "./I2C_Master_File.h"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_I2C_Read
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text16
  4271  002988                     __ptext16:
  4272                           	callstack 0
  4273  002988                     _I2C_Nack:
  4274                           	callstack 27
  4275  002988                     
  4276                           ;./I2C_Master_File.h: 167:     ACKDT=1;
  4277  002988  8AC5               	bsf	4037,5,c	;volatile
  4278                           
  4279                           ;./I2C_Master_File.h: 168:  ACKEN=1;
  4280  00298A  88C5               	bsf	4037,4,c	;volatile
  4281  00298C                     l224:
  4282  00298C  B8C5               	btfsc	4037,4,c	;volatile
  4283  00298E  EFCB  F014         	goto	u2271
  4284  002992  EFCD  F014         	goto	u2270
  4285  002996                     u2271:
  4286  002996  EFC6  F014         	goto	l224
  4287  00299A                     u2270:
  4288  00299A  0012               	return		;funcret
  4289  00299C                     __end_of_I2C_Nack:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _I2C_Ack *****************
  4293 ;; Defined at:
  4294 ;;		line 158 in file "./I2C_Master_File.h"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		None
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_I2C_Read
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text17
  4322  00299C                     __ptext17:
  4323                           	callstack 0
  4324  00299C                     _I2C_Ack:
  4325                           	callstack 27
  4326  00299C                     
  4327                           ;./I2C_Master_File.h: 160:     ACKDT=0;
  4328  00299C  9AC5               	bcf	4037,5,c	;volatile
  4329                           
  4330                           ;./I2C_Master_File.h: 161:  ACKEN=1;
  4331  00299E  88C5               	bsf	4037,4,c	;volatile
  4332  0029A0                     l218:
  4333  0029A0  B8C5               	btfsc	4037,4,c	;volatile
  4334  0029A2  EFD5  F014         	goto	u2261
  4335  0029A6  EFD7  F014         	goto	u2260
  4336  0029AA                     u2261:
  4337  0029AA  EFD0  F014         	goto	l218
  4338  0029AE                     u2260:
  4339  0029AE  0012               	return		;funcret
  4340  0029B0                     __end_of_I2C_Ack:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _LCD_Init *****************
  4344 ;; Defined at:
  4345 ;;		line 37 in file "LCD_16x2.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4359 ;;      Params:         0       0       0       0       0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4363 ;;Total ram usage:        0 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    2
  4366 ;; This function calls:
  4367 ;;		_LCD_Command
  4368 ;;		_MSdelay
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;;		_mostrarFechaHora
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text18
  4376  00284E                     __ptext18:
  4377                           	callstack 0
  4378  00284E                     _LCD_Init:
  4379                           	callstack 27
  4380  00284E                     
  4381                           ;LCD_16x2.c: 39:     TRISD = 0x00;
  4382  00284E  0E00               	movlw	0
  4383  002850  6E95               	movwf	149,c	;volatile
  4384                           
  4385                           ;LCD_16x2.c: 40:     TRISC = 0x00;
  4386  002852  0E00               	movlw	0
  4387  002854  6E94               	movwf	148,c	;volatile
  4388  002856                     
  4389                           ;LCD_16x2.c: 41:     MSdelay(20);
  4390  002856  0E00               	movlw	0
  4391  002858  6E02               	movwf	(MSdelay@val+1)^0,c
  4392  00285A  0E14               	movlw	20
  4393  00285C  6E01               	movwf	MSdelay@val^0,c
  4394  00285E  EC9D  F012         	call	_MSdelay	;wreg free
  4395  002862                     
  4396                           ;LCD_16x2.c: 42:  LCD_Command(0x38);
  4397  002862  0E38               	movlw	56
  4398  002864  EC93  F014         	call	_LCD_Command
  4399  002868                     
  4400                           ;LCD_16x2.c: 43:     LCD_Command(0x0c);
  4401  002868  0E0C               	movlw	12
  4402  00286A  EC93  F014         	call	_LCD_Command
  4403  00286E                     
  4404                           ;LCD_16x2.c: 44:     LCD_Command(0x06);
  4405  00286E  0E06               	movlw	6
  4406  002870  EC93  F014         	call	_LCD_Command
  4407  002874                     
  4408                           ;LCD_16x2.c: 45:  LCD_Command(0x01);
  4409  002874  0E01               	movlw	1
  4410  002876  EC93  F014         	call	_LCD_Command
  4411  00287A  0012               	return		;funcret
  4412  00287C                     __end_of_LCD_Init:
  4413                           	callstack 0
  4414                           
  4415 ;; *************** function _imprimirTemHum *****************
  4416 ;; Defined at:
  4417 ;;		line 283 in file "Controlador.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    8
  4438 ;; This function calls:
  4439 ;;		_LCD_Char
  4440 ;;		_LCD_String
  4441 ;;		_LCD_String_xy
  4442 ;;		_sprintf
  4443 ;; This function is called by:
  4444 ;;		_main
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text19
  4449  001E00                     __ptext19:
  4450                           	callstack 0
  4451  001E00                     _imprimirTemHum:
  4452                           	callstack 22
  4453  001E00                     
  4454                           ;Controlador.c: 285:     sprintf(vec_value, "%d", var_RH_Integral);
  4455  001E00  0ED1               	movlw	low _vec_value
  4456  001E02  0100               	movlb	0	; () banked
  4457  001E04  6F66               	movwf	sprintf@s& (0+255),b
  4458  001E06  0E01               	movlw	high _vec_value
  4459  001E08  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4460  001E0A  0E2E               	movlw	low (STR_6+1)
  4461  001E0C  6F68               	movwf	sprintf@fmt& (0+255),b
  4462  001E0E  0E08               	movlw	high (STR_6+1)
  4463  001E10  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4464  001E12  C0FC  F06A         	movff	_var_RH_Integral,?_sprintf+4
  4465  001E16  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  4466  001E18  EC74  F012         	call	_sprintf	;wreg free
  4467  001E1C                     
  4468                           ;Controlador.c: 286:     LCD_String_xy(0, 9, vec_value);
  4469  001E1C  0E09               	movlw	9
  4470  001E1E  6E0A               	movwf	LCD_String_xy@pos^0,c
  4471  001E20  0ED1               	movlw	low _vec_value
  4472  001E22  6E0B               	movwf	LCD_String_xy@msg^0,c
  4473  001E24  0E01               	movlw	high _vec_value
  4474  001E26  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  4475  001E28  0E00               	movlw	0
  4476  001E2A  EC4B  F013         	call	_LCD_String_xy
  4477  001E2E                     
  4478                           ;Controlador.c: 287:     sprintf(vec_value, ".%d ", var_RH_Decimal);
  4479  001E2E  0ED1               	movlw	low _vec_value
  4480  001E30  0100               	movlb	0	; () banked
  4481  001E32  6F66               	movwf	sprintf@s& (0+255),b
  4482  001E34  0E01               	movlw	high _vec_value
  4483  001E36  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4484  001E38  0E24               	movlw	low STR_4
  4485  001E3A  6F68               	movwf	sprintf@fmt& (0+255),b
  4486  001E3C  0E08               	movlw	high STR_4
  4487  001E3E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4488  001E40  C0FD  F06A         	movff	_var_RH_Decimal,?_sprintf+4
  4489  001E44  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  4490  001E46  EC74  F012         	call	_sprintf	;wreg free
  4491                           
  4492                           ;Controlador.c: 288:     LCD_String(vec_value);
  4493  001E4A  0ED1               	movlw	low _vec_value
  4494  001E4C  6E08               	movwf	LCD_String@msg^0,c
  4495  001E4E  0E01               	movlw	high _vec_value
  4496  001E50  6E09               	movwf	(LCD_String@msg+1)^0,c
  4497  001E52  ECEA  F011         	call	_LCD_String	;wreg free
  4498  001E56                     
  4499                           ;Controlador.c: 289:     LCD_Char('%');
  4500  001E56  0E25               	movlw	37
  4501  001E58  EC85  F014         	call	_LCD_Char
  4502  001E5C                     
  4503                           ;Controlador.c: 292:     sprintf(vec_value, "%d", var_T_Integral);
  4504  001E5C  0ED1               	movlw	low _vec_value
  4505  001E5E  0100               	movlb	0	; () banked
  4506  001E60  6F66               	movwf	sprintf@s& (0+255),b
  4507  001E62  0E01               	movlw	high _vec_value
  4508  001E64  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4509  001E66  0E2E               	movlw	low (STR_6+1)
  4510  001E68  6F68               	movwf	sprintf@fmt& (0+255),b
  4511  001E6A  0E08               	movlw	high (STR_6+1)
  4512  001E6C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4513  001E6E  C0FA  F06A         	movff	_var_T_Integral,?_sprintf+4
  4514  001E72  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  4515  001E74  EC74  F012         	call	_sprintf	;wreg free
  4516  001E78                     
  4517                           ;Controlador.c: 293:     LCD_String_xy(0, 0, vec_value);
  4518  001E78  0E00               	movlw	0
  4519  001E7A  6E0A               	movwf	LCD_String_xy@pos^0,c
  4520  001E7C  0ED1               	movlw	low _vec_value
  4521  001E7E  6E0B               	movwf	LCD_String_xy@msg^0,c
  4522  001E80  0E01               	movlw	high _vec_value
  4523  001E82  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  4524  001E84  0E00               	movlw	0
  4525  001E86  EC4B  F013         	call	_LCD_String_xy
  4526  001E8A                     
  4527                           ;Controlador.c: 294:     sprintf(vec_value, ".%d", var_T_Decimal);
  4528  001E8A  0ED1               	movlw	low _vec_value
  4529  001E8C  0100               	movlb	0	; () banked
  4530  001E8E  6F66               	movwf	sprintf@s& (0+255),b
  4531  001E90  0E01               	movlw	high _vec_value
  4532  001E92  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4533  001E94  0E2D               	movlw	low STR_6
  4534  001E96  6F68               	movwf	sprintf@fmt& (0+255),b
  4535  001E98  0E08               	movlw	high STR_6
  4536  001E9A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4537  001E9C  C0FB  F06A         	movff	_var_T_Decimal,?_sprintf+4
  4538  001EA0  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  4539  001EA2  EC74  F012         	call	_sprintf	;wreg free
  4540  001EA6                     
  4541                           ;Controlador.c: 295:     LCD_String(vec_value);
  4542  001EA6  0ED1               	movlw	low _vec_value
  4543  001EA8  6E08               	movwf	LCD_String@msg^0,c
  4544  001EAA  0E01               	movlw	high _vec_value
  4545  001EAC  6E09               	movwf	(LCD_String@msg+1)^0,c
  4546  001EAE  ECEA  F011         	call	_LCD_String	;wreg free
  4547  001EB2                     
  4548                           ;Controlador.c: 296:     LCD_Char(0xdf);
  4549  001EB2  0EDF               	movlw	223
  4550  001EB4  EC85  F014         	call	_LCD_Char
  4551  001EB8                     
  4552                           ;Controlador.c: 297:     LCD_Char('C');
  4553  001EB8  0E43               	movlw	67
  4554  001EBA  EC85  F014         	call	_LCD_Char
  4555  001EBE                     
  4556                           ;Controlador.c: 299:     LCD_String_xy(0, 6, "T");
  4557  001EBE  0E06               	movlw	6
  4558  001EC0  6E0A               	movwf	LCD_String_xy@pos^0,c
  4559  001EC2  0E55               	movlw	low STR_7
  4560  001EC4  6E0B               	movwf	LCD_String_xy@msg^0,c
  4561  001EC6  0E08               	movlw	high STR_7
  4562  001EC8  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  4563  001ECA  0E00               	movlw	0
  4564  001ECC  EC4B  F013         	call	_LCD_String_xy
  4565  001ED0                     
  4566                           ;Controlador.c: 300:     LCD_String_xy(0, 15, "H");
  4567  001ED0  0E0F               	movlw	15
  4568  001ED2  6E0A               	movwf	LCD_String_xy@pos^0,c
  4569  001ED4  0E53               	movlw	low STR_8
  4570  001ED6  6E0B               	movwf	LCD_String_xy@msg^0,c
  4571  001ED8  0E08               	movlw	high STR_8
  4572  001EDA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  4573  001EDC  0E00               	movlw	0
  4574  001EDE  EC4B  F013         	call	_LCD_String_xy
  4575  001EE2  0012               	return		;funcret
  4576  001EE4                     __end_of_imprimirTemHum:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _sprintf *****************
  4580 ;; Defined at:
  4581 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4584 ;;		 -> year(10), month(10), date(10), hours(10), 
  4585 ;;		 -> mins(10), secs(10), vec_value(10), 
  4586 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4587 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  4588 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  4589 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  4590 ;;		 -> STR_3(3), 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  f               6   16[BANK0 ] struct _IO_FILE
  4593 ;;  ap              2   14[BANK0 ] PTR void [1]
  4594 ;;		 -> ?_sprintf(2), 
  4595 ;;  ret             2    0        int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    6[BANK0 ] int 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         0       6       0       0       0       0       0       0       0
  4606 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4609 ;;Total ram usage:       16 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    7
  4612 ;; This function calls:
  4613 ;;		_vfprintf
  4614 ;; This function is called by:
  4615 ;;		_imprimirTemHum
  4616 ;;		_mostrarFechaHora
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text20
  4621  0024E8                     __ptext20:
  4622                           	callstack 0
  4623  0024E8                     _sprintf:
  4624                           	callstack 22
  4625  0024E8  0E6A               	movlw	low (?_sprintf+4)
  4626  0024EA  0100               	movlb	0	; () banked
  4627  0024EC  6F6E               	movwf	sprintf@ap& (0+255),b
  4628  0024EE  0E00               	movlw	high (?_sprintf+4)
  4629  0024F0  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  4630  0024F2  C066  F070         	movff	sprintf@s,sprintf@f
  4631  0024F6  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  4632  0024FA                     
  4633                           ; BSR set to: 0
  4634  0024FA  0E00               	movlw	0
  4635  0024FC  6F73               	movwf	(sprintf@f+3)& (0+255),b
  4636  0024FE  0E00               	movlw	0
  4637  002500  6F72               	movwf	(sprintf@f+2)& (0+255),b
  4638  002502                     
  4639                           ; BSR set to: 0
  4640  002502  0E00               	movlw	0
  4641  002504  6F75               	movwf	(sprintf@f+5)& (0+255),b
  4642  002506  0E00               	movlw	0
  4643  002508  6F74               	movwf	(sprintf@f+4)& (0+255),b
  4644  00250A                     
  4645                           ; BSR set to: 0
  4646  00250A  0E70               	movlw	low sprintf@f
  4647  00250C  6F60               	movwf	vfprintf@fp& (0+255),b
  4648  00250E  0E00               	movlw	high sprintf@f
  4649  002510  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4650  002512  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4651  002516  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4652  00251A  0E6E               	movlw	low sprintf@ap
  4653  00251C  6F64               	movwf	vfprintf@ap& (0+255),b
  4654  00251E  0E00               	movlw	high sprintf@ap
  4655  002520  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4656  002522  EC5A  F011         	call	_vfprintf	;wreg free
  4657  002526  0100               	movlb	0	; () banked
  4658  002528  5172               	movf	(sprintf@f+2)& (0+255),w,b
  4659  00252A  2566               	addwf	sprintf@s& (0+255),w,b
  4660  00252C  6ED9               	movwf	fsr2l,c
  4661  00252E  5173               	movf	(sprintf@f+3)& (0+255),w,b
  4662  002530  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4663  002532  6EDA               	movwf	fsr2h,c
  4664  002534  0E00               	movlw	0
  4665  002536  6EDF               	movwf	indf2,c
  4666  002538                     
  4667                           ; BSR set to: 0
  4668  002538  0012               	return		;funcret
  4669  00253A                     __end_of_sprintf:
  4670                           	callstack 0
  4671                           
  4672 ;; *************** function _vfprintf *****************
  4673 ;; Defined at:
  4674 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4677 ;;		 -> sprintf@f(6), 
  4678 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4679 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  4680 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  4681 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  4682 ;;		 -> STR_3(3), 
  4683 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4684 ;;		 -> sprintf@ap(2), 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  4687 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  4688 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  4689 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  4690 ;;		 -> STR_3(3), 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[BANK0 ] int 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4700 ;;      Params:         0       6       0       0       0       0       0       0       0
  4701 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4703 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4704 ;;Total ram usage:        8 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    6
  4707 ;; This function calls:
  4708 ;;		_vfpfcnvrt
  4709 ;; This function is called by:
  4710 ;;		_sprintf
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text21
  4715  0022B4                     __ptext21:
  4716                           	callstack 0
  4717  0022B4                     _vfprintf:
  4718                           	callstack 22
  4719  0022B4                     
  4720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4721  0022B4  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  4722  0022B8  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4723  0022BC                     
  4724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4725  0022BC  0E00               	movlw	0
  4726  0022BE  0100               	movlb	0	; () banked
  4727  0022C0  6FE3               	movwf	(_nout+1)& (0+255),b
  4728  0022C2  0E00               	movlw	0
  4729  0022C4  6FE2               	movwf	_nout& (0+255),b
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4732  0022C6  EF78  F011         	goto	l2858
  4733  0022CA                     l2856:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4737  0022CA  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4738  0022CE  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4739  0022D2  0E5E               	movlw	low vfprintf@cfmt
  4740  0022D4  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4741  0022D6  0E00               	movlw	high vfprintf@cfmt
  4742  0022D8  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4743  0022DA  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4744  0022DE  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4745  0022E2  ECC8  F00A         	call	_vfpfcnvrt	;wreg free
  4746  0022E6  5043               	movf	?_vfpfcnvrt^0,w,c
  4747  0022E8  0100               	movlb	0	; () banked
  4748  0022EA  27E2               	addwf	_nout& (0+255),f,b
  4749  0022EC  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4750  0022EE  23E3               	addwfc	(_nout+1)& (0+255),f,b
  4751  0022F0                     l2858:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4755  0022F0  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4756  0022F4  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4757  0022F8                     	if	0	;tblptru may be non-zero
  4758  0022F8                     	endif
  4759  0022F8                     	if	0	;tblptru may be non-zero
  4760  0022F8                     	endif
  4761  0022F8  0008               	tblrd		*
  4762  0022FA  50F5               	movf	tablat,w,c
  4763  0022FC  0900               	iorlw	0
  4764  0022FE  A4D8               	btfss	status,2,c
  4765  002300  EF84  F011         	goto	u2471
  4766  002304  EF86  F011         	goto	u2470
  4767  002308                     u2471:
  4768  002308  EF65  F011         	goto	l2856
  4769  00230C                     u2470:
  4770  00230C                     
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4773  00230C  C0E2  F060         	movff	_nout,?_vfprintf
  4774  002310  C0E3  F061         	movff	_nout+1,?_vfprintf+1
  4775  002314                     
  4776                           ; BSR set to: 0
  4777  002314  0012               	return		;funcret
  4778  002316                     __end_of_vfprintf:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function _vfpfcnvrt *****************
  4782 ;; Defined at:
  4783 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4786 ;;		 -> sprintf@f(6), 
  4787 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4788 ;;		 -> vfprintf@cfmt(2), 
  4789 ;;  ap              2   70[COMRAM] PTR PTR void 
  4790 ;;		 -> sprintf@ap(2), 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  llu             8   84[COMRAM] unsigned long long 
  4793 ;;  ll              8   76[COMRAM] long long 
  4794 ;;  f               4    0        long long 
  4795 ;;  vp              3    0        PTR void 
  4796 ;;  ct              3    0        unsigned char [3]
  4797 ;;  cp              3    0        PTR unsigned char 
  4798 ;;  i               2    0        int 
  4799 ;;  done            2    0        int 
  4800 ;;  c               1   92[COMRAM] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2   66[COMRAM] int 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4810 ;;      Params:         6       0       0       0       0       0       0       0       0
  4811 ;;      Locals:        17       0       0       0       0       0       0       0       0
  4812 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4813 ;;      Totals:        27       0       0       0       0       0       0       0       0
  4814 ;;Total ram usage:       27 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    5
  4817 ;; This function calls:
  4818 ;;		_dtoa
  4819 ;;		_fputc
  4820 ;;		_xtoa
  4821 ;; This function is called by:
  4822 ;;		_vfprintf
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text22
  4827  001590                     __ptext22:
  4828                           	callstack 0
  4829  001590                     _vfpfcnvrt:
  4830                           	callstack 22
  4831  001590                     
  4832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4833  001590  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4834  001594  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4835  001598  CFDE FFF6          	movff	postinc2,tblptrl
  4836  00159C  CFDD FFF7          	movff	postdec2,tblptrh
  4837  0015A0                     	if	0	;tblptru may be non-zero
  4838  0015A0                     	endif
  4839  0015A0                     	if	0	;tblptru may be non-zero
  4840  0015A0                     	endif
  4841  0015A0  0008               	tblrd		*
  4842  0015A2  50F5               	movf	tablat,w,c
  4843  0015A4  0A25               	xorlw	37
  4844  0015A6  A4D8               	btfss	status,2,c
  4845  0015A8  EFD8  F00A         	goto	u2291
  4846  0015AC  EFDA  F00A         	goto	u2290
  4847  0015B0                     u2291:
  4848  0015B0  EFF8  F00B         	goto	l2786
  4849  0015B4                     u2290:
  4850  0015B4                     
  4851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4852  0015B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4853  0015B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4854  0015BC  2ADE               	incf	postinc2,f,c
  4855  0015BE  0E00               	movlw	0
  4856  0015C0  22DD               	addwfc	postdec2,f,c
  4857  0015C2                     
  4858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4859  0015C2  0E00               	movlw	0
  4860  0015C4  0100               	movlb	0	; () banked
  4861  0015C6  6FE5               	movwf	(_width+1)& (0+255),b
  4862  0015C8  0E00               	movlw	0
  4863  0015CA  6FE4               	movwf	_width& (0+255),b
  4864  0015CC  C0E4  F0E8         	movff	_width,_flags
  4865  0015D0  C0E5  F0E9         	movff	_width+1,_flags+1
  4866  0015D4                     
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4869  0015D4  69E6               	setf	_prec& (0+255),b
  4870  0015D6  69E7               	setf	(_prec+1)& (0+255),b
  4871  0015D8                     
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4874  0015D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4875  0015DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4876  0015E0  CFDE FFF6          	movff	postinc2,tblptrl
  4877  0015E4  CFDD FFF7          	movff	postdec2,tblptrh
  4878  0015E8                     	if	0	;tblptru may be non-zero
  4879  0015E8                     	endif
  4880  0015E8                     	if	0	;tblptru may be non-zero
  4881  0015E8                     	endif
  4882  0015E8  0008               	tblrd		*
  4883  0015EA  50F5               	movf	tablat,w,c
  4884  0015EC  0A64               	xorlw	100
  4885  0015EE  B4D8               	btfsc	status,2,c
  4886  0015F0  EFFC  F00A         	goto	u2301
  4887  0015F4  EFFE  F00A         	goto	u2300
  4888  0015F8                     u2301:
  4889  0015F8  EF10  F00B         	goto	l2750
  4890  0015FC                     u2300:
  4891  0015FC                     
  4892                           ; BSR set to: 0
  4893  0015FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4894  001600  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4895  001604  CFDE FFF6          	movff	postinc2,tblptrl
  4896  001608  CFDD FFF7          	movff	postdec2,tblptrh
  4897  00160C                     	if	0	;tblptru may be non-zero
  4898  00160C                     	endif
  4899  00160C                     	if	0	;tblptru may be non-zero
  4900  00160C                     	endif
  4901  00160C  0008               	tblrd		*
  4902  00160E  50F5               	movf	tablat,w,c
  4903  001610  0A69               	xorlw	105
  4904  001612  A4D8               	btfss	status,2,c
  4905  001614  EF0E  F00B         	goto	u2311
  4906  001618  EF10  F00B         	goto	u2310
  4907  00161C                     u2311:
  4908  00161C  EF50  F00B         	goto	l2756
  4909  001620                     u2310:
  4910  001620                     l2750:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4914  001620  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4915  001624  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4916  001628  2ADE               	incf	postinc2,f,c
  4917  00162A  0E00               	movlw	0
  4918  00162C  22DD               	addwfc	postdec2,f,c
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4921  00162E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4922  001632  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4923  001636  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4924  00163A  0E02               	movlw	2
  4925  00163C  26DE               	addwf	postinc2,f,c
  4926  00163E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4927  001642  0E00               	movlw	0
  4928  001644  22DD               	addwfc	postdec2,f,c
  4929  001646  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4930  00164A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4931  00164E  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  4932  001652  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  4933  001656  0E00               	movlw	0
  4934  001658  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4935  00165A  0EFF               	movlw	-1
  4936  00165C  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  4937  00165E  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  4938  001660  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  4939  001662  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  4940  001664  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  4941  001666  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  4942  001668                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4945  001668  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4946  00166C  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4947  001670  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4948  001674  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4949  001678  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4950  00167C  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4951  001680  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4952  001684  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4953  001688  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4954  00168C  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4955  001690  ECE9  F007         	call	_dtoa	;wreg free
  4956  001694  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4957  001698  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4958  00169C  EF13  F00C         	goto	l1247
  4959  0016A0                     l2756:
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4963  0016A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4964  0016A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4965  0016A8  CFDE FFF6          	movff	postinc2,tblptrl
  4966  0016AC  CFDD FFF7          	movff	postdec2,tblptrh
  4967  0016B0                     	if	0	;tblptru may be non-zero
  4968  0016B0                     	endif
  4969  0016B0                     	if	0	;tblptru may be non-zero
  4970  0016B0                     	endif
  4971  0016B0  0008               	tblrd		*
  4972  0016B2  50F5               	movf	tablat,w,c
  4973  0016B4  0A78               	xorlw	120
  4974  0016B6  B4D8               	btfsc	status,2,c
  4975  0016B8  EF60  F00B         	goto	u2321
  4976  0016BC  EF62  F00B         	goto	u2320
  4977  0016C0                     u2321:
  4978  0016C0  EF74  F00B         	goto	l2760
  4979  0016C4                     u2320:
  4980  0016C4                     
  4981                           ; BSR set to: 0
  4982  0016C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  0016C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  4985  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  4986  0016D4                     	if	0	;tblptru may be non-zero
  4987  0016D4                     	endif
  4988  0016D4                     	if	0	;tblptru may be non-zero
  4989  0016D4                     	endif
  4990  0016D4  0008               	tblrd		*
  4991  0016D6  50F5               	movf	tablat,w,c
  4992  0016D8  0A58               	xorlw	88
  4993  0016DA  A4D8               	btfss	status,2,c
  4994  0016DC  EF72  F00B         	goto	u2331
  4995  0016E0  EF74  F00B         	goto	u2330
  4996  0016E4                     u2331:
  4997  0016E4  EFC2  F00B         	goto	l2770
  4998  0016E8                     u2330:
  4999  0016E8                     l2760:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5003  0016E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5004  0016EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5005  0016F0  CFDE FFF6          	movff	postinc2,tblptrl
  5006  0016F4  CFDD FFF7          	movff	postdec2,tblptrh
  5007  0016F8                     	if	0	;tblptru may be non-zero
  5008  0016F8                     	endif
  5009  0016F8                     	if	0	;tblptru may be non-zero
  5010  0016F8                     	endif
  5011  0016F8  0008               	tblrd		*
  5012  0016FA  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  5013  0016FE                     
  5014                           ; BSR set to: 0
  5015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5016  0016FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5017  001702  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5018  001706  2ADE               	incf	postinc2,f,c
  5019  001708  0E00               	movlw	0
  5020  00170A  22DD               	addwfc	postdec2,f,c
  5021  00170C                     
  5022                           ; BSR set to: 0
  5023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5024  00170C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5025  001710  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5026  001714  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5027  001718  0E02               	movlw	2
  5028  00171A  26DE               	addwf	postinc2,f,c
  5029  00171C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5030  001720  0E00               	movlw	0
  5031  001722  22DD               	addwfc	postdec2,f,c
  5032  001724  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5033  001728  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5034  00172C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5035  001730  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5036  001734  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5037  001738  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5038  00173C  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  5039  00173E  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  5040  001740  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  5041  001742  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  5042  001744  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  5043  001746  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  5044  001748                     
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5047  001748  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5048  00174C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5049  001750  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5050  001754  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5051  001758  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5052  00175C  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5053  001760  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5054  001764  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5055  001768  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5056  00176C  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5057  001770  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  5058  001774  EC5B  F009         	call	_xtoa	;wreg free
  5059  001778  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5060  00177C  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5061  001780  EF13  F00C         	goto	l1247
  5062  001784                     l2770:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5066  001784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5067  001788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5068  00178C  CFDE FFF6          	movff	postinc2,tblptrl
  5069  001790  CFDD FFF7          	movff	postdec2,tblptrh
  5070  001794                     	if	0	;tblptru may be non-zero
  5071  001794                     	endif
  5072  001794                     	if	0	;tblptru may be non-zero
  5073  001794                     	endif
  5074  001794  0008               	tblrd		*
  5075  001796  50F5               	movf	tablat,w,c
  5076  001798  0A25               	xorlw	37
  5077  00179A  A4D8               	btfss	status,2,c
  5078  00179C  EFD2  F00B         	goto	u2341
  5079  0017A0  EFD4  F00B         	goto	u2340
  5080  0017A4                     u2341:
  5081  0017A4  EFEB  F00B         	goto	l2780
  5082  0017A8                     u2340:
  5083  0017A8                     
  5084                           ; BSR set to: 0
  5085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5086  0017A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5087  0017AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5088  0017B0  2ADE               	incf	postinc2,f,c
  5089  0017B2  0E00               	movlw	0
  5090  0017B4  22DD               	addwfc	postdec2,f,c
  5091  0017B6                     
  5092                           ; BSR set to: 0
  5093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5094  0017B6  0E00               	movlw	0
  5095  0017B8  6E02               	movwf	(fputc@c+1)^0,c
  5096  0017BA  0E25               	movlw	37
  5097  0017BC  6E01               	movwf	fputc@c^0,c
  5098  0017BE  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5099  0017C2  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5100  0017C6  EC72  F00F         	call	_fputc	;wreg free
  5101  0017CA                     l2776:
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5104  0017CA  0E00               	movlw	0
  5105  0017CC  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5106  0017CE  0E01               	movlw	1
  5107  0017D0  6E43               	movwf	?_vfpfcnvrt^0,c
  5108  0017D2  EF13  F00C         	goto	l1247
  5109  0017D6                     l2780:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5113  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5114  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5115  0017DE  2ADE               	incf	postinc2,f,c
  5116  0017E0  0E00               	movlw	0
  5117  0017E2  22DD               	addwfc	postdec2,f,c
  5118  0017E4                     
  5119                           ; BSR set to: 0
  5120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5121  0017E4  0E00               	movlw	0
  5122  0017E6  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5123  0017E8  0E00               	movlw	0
  5124  0017EA  6E43               	movwf	?_vfpfcnvrt^0,c
  5125  0017EC  EF13  F00C         	goto	l1247
  5126  0017F0                     l2786:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5129  0017F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5130  0017F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5131  0017F8  CFDE FFF6          	movff	postinc2,tblptrl
  5132  0017FC  CFDD FFF7          	movff	postdec2,tblptrh
  5133  001800                     	if	0	;tblptru may be non-zero
  5134  001800                     	endif
  5135  001800                     	if	0	;tblptru may be non-zero
  5136  001800                     	endif
  5137  001800  0008               	tblrd		*
  5138  001802  50F5               	movf	tablat,w,c
  5139  001804  6E01               	movwf	fputc@c^0,c
  5140  001806  6A02               	clrf	(fputc@c+1)^0,c
  5141  001808  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5142  00180C  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5143  001810  EC72  F00F         	call	_fputc	;wreg free
  5144  001814                     
  5145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5146  001814  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5147  001818  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5148  00181C  2ADE               	incf	postinc2,f,c
  5149  00181E  0E00               	movlw	0
  5150  001820  22DD               	addwfc	postdec2,f,c
  5151  001822  EFE5  F00B         	goto	l2776
  5152  001826                     l1247:
  5153  001826  0012               	return		;funcret
  5154  001828                     __end_of_vfpfcnvrt:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function _xtoa *****************
  5158 ;; Defined at:
  5159 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5162 ;;		 -> sprintf@f(6), 
  5163 ;;  d               8   29[COMRAM] unsigned long long 
  5164 ;;  x               1   37[COMRAM] unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  n               8   54[COMRAM] unsigned long long 
  5167 ;;  c               2   64[COMRAM] int 
  5168 ;;  i               2   62[COMRAM] int 
  5169 ;;  w               2   52[COMRAM] int 
  5170 ;;  p               2   50[COMRAM] int 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2   27[COMRAM] int 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5180 ;;      Params:        11       0       0       0       0       0       0       0       0
  5181 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5182 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5183 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5184 ;;Total ram usage:       39 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    4
  5187 ;; This function calls:
  5188 ;;		_isalpha
  5189 ;;		_isupper
  5190 ;;		_pad
  5191 ;;		_toupper
  5192 ;; This function is called by:
  5193 ;;		_vfpfcnvrt
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text23
  5198  0012B6                     __ptext23:
  5199                           	callstack 0
  5200  0012B6                     _xtoa:
  5201                           	callstack 22
  5202  0012B6                     
  5203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5204  0012B6  0100               	movlb	0	; () banked
  5205  0012B8  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5206  0012BA  EF61  F009         	goto	u2091
  5207  0012BE  EF63  F009         	goto	u2090
  5208  0012C2                     u2091:
  5209  0012C2  EF64  F009         	goto	l2632
  5210  0012C6                     u2090:
  5211  0012C6                     
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5214  0012C6  93E8               	bcf	_flags& (0+255),1,b
  5215  0012C8                     l2632:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5219  0012C8  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5220  0012CA  EF71  F009         	goto	u2100
  5221  0012CE  51E7               	movf	(_prec+1)& (0+255),w,b
  5222  0012D0  E106               	bnz	u2101
  5223  0012D2  05E6               	decf	_prec& (0+255),w,b
  5224  0012D4  B0D8               	btfsc	status,0,c
  5225  0012D6  EF6F  F009         	goto	u2101
  5226  0012DA  EF71  F009         	goto	u2100
  5227  0012DE                     u2101:
  5228  0012DE  EF77  F009         	goto	l1215
  5229  0012E2                     u2100:
  5230  0012E2                     
  5231                           ; BSR set to: 0
  5232  0012E2  0E00               	movlw	0
  5233  0012E4  6E34               	movwf	(xtoa@p+1)^0,c
  5234  0012E6  0E01               	movlw	1
  5235  0012E8  6E33               	movwf	xtoa@p^0,c
  5236  0012EA  EF7B  F009         	goto	l1217
  5237  0012EE                     l1215:
  5238                           
  5239                           ; BSR set to: 0
  5240  0012EE  C0E6  F033         	movff	_prec,xtoa@p
  5241  0012F2  C0E7  F034         	movff	_prec+1,xtoa@p+1
  5242  0012F6                     l1217:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5246  0012F6  C0E4  F035         	movff	_width,xtoa@w
  5247  0012FA  C0E5  F036         	movff	_width+1,xtoa@w+1
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5250  0012FE  A9E8               	btfss	_flags& (0+255),4,b
  5251  001300  EF84  F009         	goto	u2111
  5252  001304  EF86  F009         	goto	u2110
  5253  001308                     u2111:
  5254  001308  EF8A  F009         	goto	l2638
  5255  00130C                     u2110:
  5256  00130C                     
  5257                           ; BSR set to: 0
  5258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5259  00130C  0EFE               	movlw	254
  5260  00130E  2635               	addwf	xtoa@w^0,f,c
  5261  001310  0EFF               	movlw	255
  5262  001312  2236               	addwfc	(xtoa@w+1)^0,f,c
  5263  001314                     l2638:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5267  001314  C01E  F037         	movff	xtoa@d,xtoa@n
  5268  001318  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5269  00131C  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5270  001320  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5271  001324  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5272  001328  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5273  00132C  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5274  001330  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5275  001334                     
  5276                           ; BSR set to: 0
  5277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5278  001334  0E00               	movlw	0
  5279  001336  6E40               	movwf	(xtoa@i+1)^0,c
  5280  001338  0E1F               	movlw	31
  5281  00133A  6E3F               	movwf	xtoa@i^0,c
  5282  00133C                     
  5283                           ; BSR set to: 0
  5284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5285  00133C  0E00               	movlw	0
  5286  00133E  0102               	movlb	2	; () banked
  5287  001340  6FD4               	movwf	(_dbuf+31)& (0+255),b
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5290  001342  EF56  F00A         	goto	l2674
  5291  001346                     l2644:
  5292                           
  5293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  5294  001346  063F               	decf	xtoa@i^0,f,c
  5295  001348  A0D8               	btfss	status,0,c
  5296  00134A  0640               	decf	(xtoa@i+1)^0,f,c
  5297  00134C                     
  5298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5299  00134C  0E0F               	movlw	15
  5300  00134E  1437               	andwf	xtoa@n^0,w,c
  5301  001350  6E41               	movwf	xtoa@c^0,c
  5302  001352  6A42               	clrf	(xtoa@c+1)^0,c
  5303  001354                     
  5304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5305  001354  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5306  001356  EFB6  F009         	goto	u2121
  5307  00135A  5042               	movf	(xtoa@c+1)^0,w,c
  5308  00135C  E109               	bnz	u2120
  5309  00135E  0E0A               	movlw	10
  5310  001360  5C41               	subwf	xtoa@c^0,w,c
  5311  001362  A0D8               	btfss	status,0,c
  5312  001364  EFB6  F009         	goto	u2121
  5313  001368  EFB8  F009         	goto	u2120
  5314  00136C                     u2121:
  5315  00136C  EFC0  F009         	goto	l2652
  5316  001370                     u2120:
  5317  001370  0E57               	movlw	87
  5318  001372  2441               	addwf	xtoa@c^0,w,c
  5319  001374  6E41               	movwf	xtoa@c^0,c
  5320  001376  0E00               	movlw	0
  5321  001378  2042               	addwfc	(xtoa@c+1)^0,w,c
  5322  00137A  6E42               	movwf	(xtoa@c+1)^0,c
  5323  00137C  EFC6  F009         	goto	l1224
  5324  001380                     l2652:
  5325  001380  0E30               	movlw	48
  5326  001382  2441               	addwf	xtoa@c^0,w,c
  5327  001384  6E41               	movwf	xtoa@c^0,c
  5328  001386  0E00               	movlw	0
  5329  001388  2042               	addwfc	(xtoa@c+1)^0,w,c
  5330  00138A  6E42               	movwf	(xtoa@c+1)^0,c
  5331  00138C                     l1224:
  5332  00138C  0EBF               	movlw	191
  5333  00138E  6E27               	movwf	??_xtoa^0,c
  5334  001390  0EFF               	movlw	255
  5335  001392  6E28               	movwf	(??_xtoa+1)^0,c
  5336  001394  5026               	movf	xtoa@x^0,w,c
  5337  001396  6E29               	movwf	(??_xtoa+2)^0,c
  5338  001398  6A2A               	clrf	(??_xtoa+3)^0,c
  5339  00139A  5027               	movf	??_xtoa^0,w,c
  5340  00139C  2629               	addwf	(??_xtoa+2)^0,f,c
  5341  00139E  5028               	movf	(??_xtoa+1)^0,w,c
  5342  0013A0  222A               	addwfc	(??_xtoa+3)^0,f,c
  5343  0013A2  502A               	movf	(??_xtoa+3)^0,w,c
  5344  0013A4  E10A               	bnz	u2130
  5345  0013A6  0E1A               	movlw	26
  5346  0013A8  5C29               	subwf	(??_xtoa+2)^0,w,c
  5347  0013AA  A0D8               	btfss	status,0,c
  5348  0013AC  EFDA  F009         	goto	u2131
  5349  0013B0  EFDD  F009         	goto	u2130
  5350  0013B4                     u2131:
  5351  0013B4  0E01               	movlw	1
  5352  0013B6  EFDE  F009         	goto	u2140
  5353  0013BA                     u2130:
  5354  0013BA  0E00               	movlw	0
  5355  0013BC                     u2140:
  5356  0013BC  6E2F               	movwf	_xtoa$1376^0,c
  5357  0013BE  6A30               	clrf	(_xtoa$1376+1)^0,c
  5358  0013C0  502F               	movf	_xtoa$1376^0,w,c
  5359  0013C2  1030               	iorwf	(_xtoa$1376+1)^0,w,c
  5360  0013C4  B4D8               	btfsc	status,2,c
  5361  0013C6  EFE7  F009         	goto	u2151
  5362  0013CA  EFE9  F009         	goto	u2150
  5363  0013CE                     u2151:
  5364  0013CE  EF19  F00A         	goto	l2666
  5365  0013D2                     u2150:
  5366  0013D2  0E9F               	movlw	159
  5367  0013D4  6E27               	movwf	??_xtoa^0,c
  5368  0013D6  0EFF               	movlw	255
  5369  0013D8  6E28               	movwf	(??_xtoa+1)^0,c
  5370  0013DA  0E20               	movlw	32
  5371  0013DC  1041               	iorwf	xtoa@c^0,w,c
  5372  0013DE  6E29               	movwf	(??_xtoa+2)^0,c
  5373  0013E0  0E00               	movlw	0
  5374  0013E2  1042               	iorwf	(xtoa@c+1)^0,w,c
  5375  0013E4  6E2A               	movwf	(??_xtoa+3)^0,c
  5376  0013E6  5027               	movf	??_xtoa^0,w,c
  5377  0013E8  2629               	addwf	(??_xtoa+2)^0,f,c
  5378  0013EA  5028               	movf	(??_xtoa+1)^0,w,c
  5379  0013EC  222A               	addwfc	(??_xtoa+3)^0,f,c
  5380  0013EE  502A               	movf	(??_xtoa+3)^0,w,c
  5381  0013F0  E10A               	bnz	u2160
  5382  0013F2  0E1A               	movlw	26
  5383  0013F4  5C29               	subwf	(??_xtoa+2)^0,w,c
  5384  0013F6  A0D8               	btfss	status,0,c
  5385  0013F8  EF00  F00A         	goto	u2161
  5386  0013FC  EF03  F00A         	goto	u2160
  5387  001400                     u2161:
  5388  001400  0E01               	movlw	1
  5389  001402  EF04  F00A         	goto	u2170
  5390  001406                     u2160:
  5391  001406  0E00               	movlw	0
  5392  001408                     u2170:
  5393  001408  6E31               	movwf	_xtoa$1377^0,c
  5394  00140A  6A32               	clrf	(_xtoa$1377+1)^0,c
  5395  00140C  5031               	movf	_xtoa$1377^0,w,c
  5396  00140E  1032               	iorwf	(_xtoa$1377+1)^0,w,c
  5397  001410  B4D8               	btfsc	status,2,c
  5398  001412  EF0D  F00A         	goto	u2181
  5399  001416  EF0F  F00A         	goto	u2180
  5400  00141A                     u2181:
  5401  00141A  EF19  F00A         	goto	l2666
  5402  00141E                     u2180:
  5403  00141E                     
  5404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5405  00141E  C041  F007         	movff	xtoa@c,toupper@c
  5406  001422  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5407  001426  ECBB  F011         	call	_toupper	;wreg free
  5408  00142A  C007  F041         	movff	?_toupper,xtoa@c
  5409  00142E  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5410  001432                     l2666:
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5413  001432  0EB5               	movlw	low _dbuf
  5414  001434  243F               	addwf	xtoa@i^0,w,c
  5415  001436  6ED9               	movwf	fsr2l,c
  5416  001438  0E02               	movlw	high _dbuf
  5417  00143A  2040               	addwfc	(xtoa@i+1)^0,w,c
  5418  00143C  6EDA               	movwf	fsr2h,c
  5419  00143E  C041  FFDF         	movff	xtoa@c,indf2
  5420  001442                     
  5421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  5422  001442  0633               	decf	xtoa@p^0,f,c
  5423  001444  A0D8               	btfss	status,0,c
  5424  001446  0634               	decf	(xtoa@p+1)^0,f,c
  5425  001448                     
  5426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  5427  001448  0635               	decf	xtoa@w^0,f,c
  5428  00144A  A0D8               	btfss	status,0,c
  5429  00144C  0636               	decf	(xtoa@w+1)^0,f,c
  5430  00144E                     
  5431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5432  00144E  C037  F027         	movff	xtoa@n,??_xtoa
  5433  001452  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5434  001456  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5435  00145A  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5436  00145E  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5437  001462  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5438  001466  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5439  00146A  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5440  00146E  0E05               	movlw	5
  5441  001470  EF43  F00A         	goto	u2190
  5442  001474                     u2195:
  5443  001474  90D8               	bcf	status,0,c
  5444  001476  322E               	rrcf	(??_xtoa+7)^0,f,c
  5445  001478  322D               	rrcf	(??_xtoa+6)^0,f,c
  5446  00147A  322C               	rrcf	(??_xtoa+5)^0,f,c
  5447  00147C  322B               	rrcf	(??_xtoa+4)^0,f,c
  5448  00147E  322A               	rrcf	(??_xtoa+3)^0,f,c
  5449  001480  3229               	rrcf	(??_xtoa+2)^0,f,c
  5450  001482  3228               	rrcf	(??_xtoa+1)^0,f,c
  5451  001484  3227               	rrcf	??_xtoa^0,f,c
  5452  001486                     u2190:
  5453  001486  2EE8               	decfsz	wreg,f,c
  5454  001488  EF3A  F00A         	goto	u2195
  5455  00148C  C027  F037         	movff	??_xtoa,xtoa@n
  5456  001490  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5457  001494  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5458  001498  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5459  00149C  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5460  0014A0  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5461  0014A4  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5462  0014A8  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5463  0014AC                     l2674:
  5464                           
  5465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5466  0014AC  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5467  0014AE  EF62  F00A         	goto	u2201
  5468  0014B2  5040               	movf	(xtoa@i+1)^0,w,c
  5469  0014B4  E109               	bnz	u2200
  5470  0014B6  0E02               	movlw	2
  5471  0014B8  5C3F               	subwf	xtoa@i^0,w,c
  5472  0014BA  A0D8               	btfss	status,0,c
  5473  0014BC  EF62  F00A         	goto	u2201
  5474  0014C0  EF64  F00A         	goto	u2200
  5475  0014C4                     u2201:
  5476  0014C4  EF95  F00A         	goto	l1238
  5477  0014C8                     u2200:
  5478  0014C8  5037               	movf	xtoa@n^0,w,c
  5479  0014CA  1038               	iorwf	(xtoa@n+1)^0,w,c
  5480  0014CC  1039               	iorwf	(xtoa@n+2)^0,w,c
  5481  0014CE  103A               	iorwf	(xtoa@n+3)^0,w,c
  5482  0014D0  103B               	iorwf	(xtoa@n+4)^0,w,c
  5483  0014D2  103C               	iorwf	(xtoa@n+5)^0,w,c
  5484  0014D4  103D               	iorwf	(xtoa@n+6)^0,w,c
  5485  0014D6  103E               	iorwf	(xtoa@n+7)^0,w,c
  5486  0014D8  A4D8               	btfss	status,2,c
  5487  0014DA  EF71  F00A         	goto	u2211
  5488  0014DE  EF73  F00A         	goto	u2210
  5489  0014E2                     u2211:
  5490  0014E2  EFA3  F009         	goto	l2644
  5491  0014E6                     u2210:
  5492  0014E6  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5493  0014E8  EF80  F00A         	goto	u2220
  5494  0014EC  5034               	movf	(xtoa@p+1)^0,w,c
  5495  0014EE  E106               	bnz	u2221
  5496  0014F0  0433               	decf	xtoa@p^0,w,c
  5497  0014F2  B0D8               	btfsc	status,0,c
  5498  0014F4  EF7E  F00A         	goto	u2221
  5499  0014F8  EF80  F00A         	goto	u2220
  5500  0014FC                     u2221:
  5501  0014FC  EFA3  F009         	goto	l2644
  5502  001500                     u2220:
  5503  001500  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5504  001502  EF8B  F00A         	goto	u2231
  5505  001506  5036               	movf	(xtoa@w+1)^0,w,c
  5506  001508  E108               	bnz	u2230
  5507  00150A  0435               	decf	xtoa@w^0,w,c
  5508  00150C  A0D8               	btfss	status,0,c
  5509  00150E  EF8B  F00A         	goto	u2231
  5510  001512  EF8D  F00A         	goto	u2230
  5511  001516                     u2231:
  5512  001516  EF95  F00A         	goto	l1238
  5513  00151A                     u2230:
  5514  00151A  0100               	movlb	0	; () banked
  5515  00151C  B3E8               	btfsc	_flags& (0+255),1,b
  5516  00151E  EF93  F00A         	goto	u2241
  5517  001522  EF95  F00A         	goto	u2240
  5518  001526                     u2241:
  5519  001526  EFA3  F009         	goto	l2644
  5520  00152A                     u2240:
  5521  00152A                     l1238:
  5522                           
  5523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5524  00152A  0100               	movlb	0	; () banked
  5525  00152C  A9E8               	btfss	_flags& (0+255),4,b
  5526  00152E  EF9B  F00A         	goto	u2251
  5527  001532  EF9D  F00A         	goto	u2250
  5528  001536                     u2251:
  5529  001536  EFB3  F00A         	goto	l2690
  5530  00153A                     u2250:
  5531  00153A                     
  5532                           ; BSR set to: 0
  5533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  5534  00153A  063F               	decf	xtoa@i^0,f,c
  5535  00153C  A0D8               	btfss	status,0,c
  5536  00153E  0640               	decf	(xtoa@i+1)^0,f,c
  5537  001540                     
  5538                           ; BSR set to: 0
  5539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5540  001540  0EB5               	movlw	low _dbuf
  5541  001542  243F               	addwf	xtoa@i^0,w,c
  5542  001544  6ED9               	movwf	fsr2l,c
  5543  001546  0E02               	movlw	high _dbuf
  5544  001548  2040               	addwfc	(xtoa@i+1)^0,w,c
  5545  00154A  6EDA               	movwf	fsr2h,c
  5546  00154C  C026  FFDF         	movff	xtoa@x,indf2
  5547  001550                     
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  5550  001550  063F               	decf	xtoa@i^0,f,c
  5551  001552  A0D8               	btfss	status,0,c
  5552  001554  0640               	decf	(xtoa@i+1)^0,f,c
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5555  001556  0EB5               	movlw	low _dbuf
  5556  001558  243F               	addwf	xtoa@i^0,w,c
  5557  00155A  6ED9               	movwf	fsr2l,c
  5558  00155C  0E02               	movlw	high _dbuf
  5559  00155E  2040               	addwfc	(xtoa@i+1)^0,w,c
  5560  001560  6EDA               	movwf	fsr2h,c
  5561  001562  0E30               	movlw	48
  5562  001564  6EDF               	movwf	indf2,c
  5563  001566                     l2690:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5567  001566  C01C  F011         	movff	xtoa@fp,pad@fp
  5568  00156A  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5569  00156E  0EB5               	movlw	low _dbuf
  5570  001570  243F               	addwf	xtoa@i^0,w,c
  5571  001572  6E13               	movwf	pad@buf^0,c
  5572  001574  0E02               	movlw	high _dbuf
  5573  001576  2040               	addwfc	(xtoa@i+1)^0,w,c
  5574  001578  6E14               	movwf	(pad@buf+1)^0,c
  5575  00157A  C035  F015         	movff	xtoa@w,pad@p
  5576  00157E  C036  F016         	movff	xtoa@w+1,pad@p+1
  5577  001582  ECD7  F00F         	call	_pad	;wreg free
  5578  001586  C011  F01C         	movff	?_pad,?_xtoa
  5579  00158A  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5580  00158E  0012               	return		;funcret
  5581  001590                     __end_of_xtoa:
  5582                           	callstack 0
  5583                           
  5584 ;; *************** function _toupper *****************
  5585 ;; Defined at:
  5586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  c               2    6[COMRAM] int 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2    6[COMRAM] int 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5600 ;;      Params:         2       0       0       0       0       0       0       0       0
  5601 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5602 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5603 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5604 ;;Total ram usage:        8 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    1
  5607 ;; This function calls:
  5608 ;;		_islower
  5609 ;; This function is called by:
  5610 ;;		_xtoa
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text24
  5615  002376                     __ptext24:
  5616                           	callstack 0
  5617  002376                     _toupper:
  5618                           	callstack 24
  5619  002376  0E9F               	movlw	159
  5620  002378  6E09               	movwf	??_toupper^0,c
  5621  00237A  0EFF               	movlw	255
  5622  00237C  6E0A               	movwf	(??_toupper+1)^0,c
  5623  00237E  C007  F00B         	movff	toupper@c,??_toupper+2
  5624  002382  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5625  002386  5009               	movf	??_toupper^0,w,c
  5626  002388  260B               	addwf	(??_toupper+2)^0,f,c
  5627  00238A  500A               	movf	(??_toupper+1)^0,w,c
  5628  00238C  220C               	addwfc	(??_toupper+3)^0,f,c
  5629  00238E  500C               	movf	(??_toupper+3)^0,w,c
  5630  002390  E10A               	bnz	u1880
  5631  002392  0E1A               	movlw	26
  5632  002394  5C0B               	subwf	(??_toupper+2)^0,w,c
  5633  002396  A0D8               	btfss	status,0,c
  5634  002398  EFD0  F011         	goto	u1881
  5635  00239C  EFD3  F011         	goto	u1880
  5636  0023A0                     u1881:
  5637  0023A0  0E01               	movlw	1
  5638  0023A2  EFD4  F011         	goto	u1890
  5639  0023A6                     u1880:
  5640  0023A6  0E00               	movlw	0
  5641  0023A8                     u1890:
  5642  0023A8  6E0D               	movwf	_toupper$1461^0,c
  5643  0023AA  6A0E               	clrf	(_toupper$1461+1)^0,c
  5644  0023AC  500D               	movf	_toupper$1461^0,w,c
  5645  0023AE  100E               	iorwf	(_toupper$1461+1)^0,w,c
  5646  0023B0  B4D8               	btfsc	status,2,c
  5647  0023B2  EFDD  F011         	goto	u1901
  5648  0023B6  EFDF  F011         	goto	u1900
  5649  0023BA                     u1901:
  5650  0023BA  EFE5  F011         	goto	l1310
  5651  0023BE                     u1900:
  5652  0023BE  0E5F               	movlw	95
  5653  0023C0  1407               	andwf	toupper@c^0,w,c
  5654  0023C2  6E07               	movwf	?_toupper^0,c
  5655  0023C4  6A08               	clrf	(?_toupper+1)^0,c
  5656  0023C6  EFE9  F011         	goto	l1315
  5657  0023CA                     l1310:
  5658  0023CA  C007  F007         	movff	toupper@c,?_toupper
  5659  0023CE  C008  F008         	movff	toupper@c+1,?_toupper+1
  5660  0023D2                     l1315:
  5661  0023D2  0012               	return		;funcret
  5662  0023D4                     __end_of_toupper:
  5663                           	callstack 0
  5664                           
  5665 ;; *************** function _islower *****************
  5666 ;; Defined at:
  5667 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  c               2    0[COMRAM] int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2    0[COMRAM] int 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5681 ;;      Params:         2       0       0       0       0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5684 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_toupper
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text25
  5695  00274C                     __ptext25:
  5696                           	callstack 0
  5697  00274C                     _islower:
  5698                           	callstack 24
  5699  00274C  0E9F               	movlw	159
  5700  00274E  6E03               	movwf	??_islower^0,c
  5701  002750  0EFF               	movlw	255
  5702  002752  6E04               	movwf	(??_islower+1)^0,c
  5703  002754  C001  F005         	movff	islower@c,??_islower+2
  5704  002758  C002  F006         	movff	islower@c+1,??_islower+3
  5705  00275C  5003               	movf	??_islower^0,w,c
  5706  00275E  2605               	addwf	(??_islower+2)^0,f,c
  5707  002760  5004               	movf	(??_islower+1)^0,w,c
  5708  002762  2206               	addwfc	(??_islower+3)^0,f,c
  5709  002764  5006               	movf	(??_islower+3)^0,w,c
  5710  002766  E10A               	bnz	u1640
  5711  002768  0E1A               	movlw	26
  5712  00276A  5C05               	subwf	(??_islower+2)^0,w,c
  5713  00276C  A0D8               	btfss	status,0,c
  5714  00276E  EFBB  F013         	goto	u1641
  5715  002772  EFBE  F013         	goto	u1640
  5716  002776                     u1641:
  5717  002776  0E01               	movlw	1
  5718  002778  EFBF  F013         	goto	u1650
  5719  00277C                     u1640:
  5720  00277C  0E00               	movlw	0
  5721  00277E                     u1650:
  5722  00277E  6E01               	movwf	?_islower^0,c
  5723  002780  6A02               	clrf	(?_islower+1)^0,c
  5724  002782  0012               	return		;funcret
  5725  002784                     __end_of_islower:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _isupper *****************
  5729 ;; Defined at:
  5730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  c               2    0[COMRAM] int 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  2    0[COMRAM] int 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5744 ;;      Params:         2       0       0       0       0       0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5746 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5747 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5748 ;;Total ram usage:        6 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_xtoa
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text26
  5758  002784                     __ptext26:
  5759                           	callstack 0
  5760  002784                     _isupper:
  5761                           	callstack 25
  5762  002784  0EBF               	movlw	191
  5763  002786  6E03               	movwf	??_isupper^0,c
  5764  002788  0EFF               	movlw	255
  5765  00278A  6E04               	movwf	(??_isupper+1)^0,c
  5766  00278C  C001  F005         	movff	isupper@c,??_isupper+2
  5767  002790  C002  F006         	movff	isupper@c+1,??_isupper+3
  5768  002794  5003               	movf	??_isupper^0,w,c
  5769  002796  2605               	addwf	(??_isupper+2)^0,f,c
  5770  002798  5004               	movf	(??_isupper+1)^0,w,c
  5771  00279A  2206               	addwfc	(??_isupper+3)^0,f,c
  5772  00279C  5006               	movf	(??_isupper+3)^0,w,c
  5773  00279E  E10A               	bnz	u1840
  5774  0027A0  0E1A               	movlw	26
  5775  0027A2  5C05               	subwf	(??_isupper+2)^0,w,c
  5776  0027A4  A0D8               	btfss	status,0,c
  5777  0027A6  EFD7  F013         	goto	u1841
  5778  0027AA  EFDA  F013         	goto	u1840
  5779  0027AE                     u1841:
  5780  0027AE  0E01               	movlw	1
  5781  0027B0  EFDB  F013         	goto	u1850
  5782  0027B4                     u1840:
  5783  0027B4  0E00               	movlw	0
  5784  0027B6                     u1850:
  5785  0027B6  6E01               	movwf	?_isupper^0,c
  5786  0027B8  6A02               	clrf	(?_isupper+1)^0,c
  5787  0027BA  0012               	return		;funcret
  5788  0027BC                     __end_of_isupper:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function _isalpha *****************
  5792 ;; Defined at:
  5793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  c               2    0[COMRAM] int 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  2    0[COMRAM] int 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5807 ;;      Params:         2       0       0       0       0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5810 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        6 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_xtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text27
  5821  0026D6                     __ptext27:
  5822                           	callstack 0
  5823  0026D6                     _isalpha:
  5824                           	callstack 25
  5825  0026D6  0E9F               	movlw	159
  5826  0026D8  6E03               	movwf	??_isalpha^0,c
  5827  0026DA  0EFF               	movlw	255
  5828  0026DC  6E04               	movwf	(??_isalpha+1)^0,c
  5829  0026DE  0E20               	movlw	32
  5830  0026E0  1001               	iorwf	isalpha@c^0,w,c
  5831  0026E2  6E05               	movwf	(??_isalpha+2)^0,c
  5832  0026E4  0E00               	movlw	0
  5833  0026E6  1002               	iorwf	(isalpha@c+1)^0,w,c
  5834  0026E8  6E06               	movwf	(??_isalpha+3)^0,c
  5835  0026EA  5003               	movf	??_isalpha^0,w,c
  5836  0026EC  2605               	addwf	(??_isalpha+2)^0,f,c
  5837  0026EE  5004               	movf	(??_isalpha+1)^0,w,c
  5838  0026F0  2206               	addwfc	(??_isalpha+3)^0,f,c
  5839  0026F2  5006               	movf	(??_isalpha+3)^0,w,c
  5840  0026F4  E10A               	bnz	u1860
  5841  0026F6  0E1A               	movlw	26
  5842  0026F8  5C05               	subwf	(??_isalpha+2)^0,w,c
  5843  0026FA  A0D8               	btfss	status,0,c
  5844  0026FC  EF82  F013         	goto	u1861
  5845  002700  EF85  F013         	goto	u1860
  5846  002704                     u1861:
  5847  002704  0E01               	movlw	1
  5848  002706  EF86  F013         	goto	u1870
  5849  00270A                     u1860:
  5850  00270A  0E00               	movlw	0
  5851  00270C                     u1870:
  5852  00270C  6E01               	movwf	?_isalpha^0,c
  5853  00270E  6A02               	clrf	(?_isalpha+1)^0,c
  5854  002710  0012               	return		;funcret
  5855  002712                     __end_of_isalpha:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _dtoa *****************
  5859 ;; Defined at:
  5860 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5863 ;;		 -> sprintf@f(6), 
  5864 ;;  d               8   29[COMRAM] long long 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  n               8   53[COMRAM] long long 
  5867 ;;  i               2   61[COMRAM] int 
  5868 ;;  s               2   51[COMRAM] int 
  5869 ;;  w               2   49[COMRAM] int 
  5870 ;;  p               2   47[COMRAM] int 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  2   27[COMRAM] int 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5880 ;;      Params:        10       0       0       0       0       0       0       0       0
  5881 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5882 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5883 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5884 ;;Total ram usage:       36 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    4
  5887 ;; This function calls:
  5888 ;;		___aodiv
  5889 ;;		___aomod
  5890 ;;		_abs
  5891 ;;		_pad
  5892 ;; This function is called by:
  5893 ;;		_vfpfcnvrt
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text28
  5898  000FD2                     __ptext28:
  5899                           	callstack 0
  5900  000FD2                     _dtoa:
  5901                           	callstack 22
  5902  000FD2                     
  5903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5904  000FD2  C01E  F036         	movff	dtoa@d,dtoa@n
  5905  000FD6  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5906  000FDA  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5907  000FDE  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5908  000FE2  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5909  000FE6  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5910  000FEA  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5911  000FEE  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5912  000FF2                     
  5913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5914  000FF2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5915  000FF4  EFFE  F007         	goto	u1941
  5916  000FF8  EF01  F008         	goto	u1940
  5917  000FFC                     u1941:
  5918  000FFC  0E01               	movlw	1
  5919  000FFE  EF02  F008         	goto	u1950
  5920  001002                     u1940:
  5921  001002  0E00               	movlw	0
  5922  001004                     u1950:
  5923  001004  6E34               	movwf	dtoa@s^0,c
  5924  001006  6A35               	clrf	(dtoa@s+1)^0,c
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5927  001008  5034               	movf	dtoa@s^0,w,c
  5928  00100A  1035               	iorwf	(dtoa@s+1)^0,w,c
  5929  00100C  B4D8               	btfsc	status,2,c
  5930  00100E  EF0B  F008         	goto	u1961
  5931  001012  EF0D  F008         	goto	u1960
  5932  001016                     u1961:
  5933  001016  EF1D  F008         	goto	l2572
  5934  00101A                     u1960:
  5935  00101A                     
  5936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5937  00101A  1E3D               	comf	(dtoa@n+7)^0,f,c
  5938  00101C  1E3C               	comf	(dtoa@n+6)^0,f,c
  5939  00101E  1E3B               	comf	(dtoa@n+5)^0,f,c
  5940  001020  1E3A               	comf	(dtoa@n+4)^0,f,c
  5941  001022  1E39               	comf	(dtoa@n+3)^0,f,c
  5942  001024  1E38               	comf	(dtoa@n+2)^0,f,c
  5943  001026  1E37               	comf	(dtoa@n+1)^0,f,c
  5944  001028  6C36               	negf	dtoa@n^0,c
  5945  00102A  0E00               	movlw	0
  5946  00102C  2237               	addwfc	(dtoa@n+1)^0,f,c
  5947  00102E  2238               	addwfc	(dtoa@n+2)^0,f,c
  5948  001030  2239               	addwfc	(dtoa@n+3)^0,f,c
  5949  001032  223A               	addwfc	(dtoa@n+4)^0,f,c
  5950  001034  223B               	addwfc	(dtoa@n+5)^0,f,c
  5951  001036  223C               	addwfc	(dtoa@n+6)^0,f,c
  5952  001038  223D               	addwfc	(dtoa@n+7)^0,f,c
  5953  00103A                     l2572:
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5956  00103A  0100               	movlb	0	; () banked
  5957  00103C  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5958  00103E  EF23  F008         	goto	u1971
  5959  001042  EF25  F008         	goto	u1970
  5960  001046                     u1971:
  5961  001046  EF26  F008         	goto	l2576
  5962  00104A                     u1970:
  5963  00104A                     
  5964                           ; BSR set to: 0
  5965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5966  00104A  93E8               	bcf	_flags& (0+255),1,b
  5967  00104C                     l2576:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5971  00104C  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5972  00104E  EF33  F008         	goto	u1980
  5973  001052  51E7               	movf	(_prec+1)& (0+255),w,b
  5974  001054  E106               	bnz	u1981
  5975  001056  05E6               	decf	_prec& (0+255),w,b
  5976  001058  B0D8               	btfsc	status,0,c
  5977  00105A  EF31  F008         	goto	u1981
  5978  00105E  EF33  F008         	goto	u1980
  5979  001062                     u1981:
  5980  001062  EF39  F008         	goto	l1190
  5981  001066                     u1980:
  5982  001066                     
  5983                           ; BSR set to: 0
  5984  001066  0E00               	movlw	0
  5985  001068  6E31               	movwf	(dtoa@p+1)^0,c
  5986  00106A  0E01               	movlw	1
  5987  00106C  6E30               	movwf	dtoa@p^0,c
  5988  00106E  EF3D  F008         	goto	l1192
  5989  001072                     l1190:
  5990                           
  5991                           ; BSR set to: 0
  5992  001072  C0E6  F030         	movff	_prec,dtoa@p
  5993  001076  C0E7  F031         	movff	_prec+1,dtoa@p+1
  5994  00107A                     l1192:
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5998  00107A  C0E4  F032         	movff	_width,dtoa@w
  5999  00107E  C0E5  F033         	movff	_width+1,dtoa@w+1
  6000  001082                     
  6001                           ; BSR set to: 0
  6002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6003  001082  5034               	movf	dtoa@s^0,w,c
  6004  001084  1035               	iorwf	(dtoa@s+1)^0,w,c
  6005  001086  A4D8               	btfss	status,2,c
  6006  001088  EF48  F008         	goto	u1991
  6007  00108C  EF4A  F008         	goto	u1990
  6008  001090                     u1991:
  6009  001090  EF51  F008         	goto	l2584
  6010  001094                     u1990:
  6011  001094                     
  6012                           ; BSR set to: 0
  6013  001094  A5E8               	btfss	_flags& (0+255),2,b
  6014  001096  EF4F  F008         	goto	u2001
  6015  00109A  EF51  F008         	goto	u2000
  6016  00109E                     u2001:
  6017  00109E  EF54  F008         	goto	l2586
  6018  0010A2                     u2000:
  6019  0010A2                     l2584:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6023  0010A2  0632               	decf	dtoa@w^0,f,c
  6024  0010A4  A0D8               	btfss	status,0,c
  6025  0010A6  0633               	decf	(dtoa@w+1)^0,f,c
  6026  0010A8                     l2586:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6030  0010A8  0E00               	movlw	0
  6031  0010AA  6E3F               	movwf	(dtoa@i+1)^0,c
  6032  0010AC  0E1F               	movlw	31
  6033  0010AE  6E3E               	movwf	dtoa@i^0,c
  6034  0010B0                     
  6035                           ; BSR set to: 0
  6036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6037  0010B0  0E00               	movlw	0
  6038  0010B2  0102               	movlb	2	; () banked
  6039  0010B4  6FD4               	movwf	(_dbuf+31)& (0+255),b
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6042  0010B6  EFD9  F008         	goto	l2600
  6043  0010BA                     l2590:
  6044                           
  6045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6046  0010BA  063E               	decf	dtoa@i^0,f,c
  6047  0010BC  A0D8               	btfss	status,0,c
  6048  0010BE  063F               	decf	(dtoa@i+1)^0,f,c
  6049  0010C0                     
  6050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6051  0010C0  0EB5               	movlw	low _dbuf
  6052  0010C2  243E               	addwf	dtoa@i^0,w,c
  6053  0010C4  6ED9               	movwf	fsr2l,c
  6054  0010C6  0E02               	movlw	high _dbuf
  6055  0010C8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6056  0010CA  6EDA               	movwf	fsr2h,c
  6057  0010CC  C036  F001         	movff	dtoa@n,___aomod@dividend
  6058  0010D0  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6059  0010D4  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6060  0010D8  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6061  0010DC  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6062  0010E0  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6063  0010E4  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6064  0010E8  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6065  0010EC  0E0A               	movlw	10
  6066  0010EE  6E09               	movwf	___aomod@divisor^0,c
  6067  0010F0  0E00               	movlw	0
  6068  0010F2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6069  0010F4  0E00               	movlw	0
  6070  0010F6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6071  0010F8  0E00               	movlw	0
  6072  0010FA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6073  0010FC  0E00               	movlw	0
  6074  0010FE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6075  001100  0E00               	movlw	0
  6076  001102  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6077  001104  0E00               	movlw	0
  6078  001106  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6079  001108  0E00               	movlw	0
  6080  00110A  6E10               	movwf	(___aomod@divisor+7)^0,c
  6081  00110C  ECD9  F00D         	call	___aomod	;wreg free
  6082  001110  C001  F026         	movff	?___aomod,??_dtoa
  6083  001114  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6084  001118  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6085  00111C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6086  001120  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6087  001124  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6088  001128  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6089  00112C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6090  001130  C026  F013         	movff	??_dtoa,abs@a
  6091  001134  C028  F014         	movff	??_dtoa+2,abs@a+1
  6092  001138  EC2B  F013         	call	_abs	;wreg free
  6093  00113C  5013               	movf	?_abs^0,w,c
  6094  00113E  0F30               	addlw	48
  6095  001140  6EDF               	movwf	indf2,c
  6096  001142                     
  6097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6098  001142  0630               	decf	dtoa@p^0,f,c
  6099  001144  A0D8               	btfss	status,0,c
  6100  001146  0631               	decf	(dtoa@p+1)^0,f,c
  6101  001148                     
  6102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6103  001148  0632               	decf	dtoa@w^0,f,c
  6104  00114A  A0D8               	btfss	status,0,c
  6105  00114C  0633               	decf	(dtoa@w+1)^0,f,c
  6106  00114E                     
  6107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6108  00114E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6109  001152  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6110  001156  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6111  00115A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6112  00115E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6113  001162  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6114  001166  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6115  00116A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6116  00116E  0E0A               	movlw	10
  6117  001170  6E09               	movwf	___aodiv@divisor^0,c
  6118  001172  0E00               	movlw	0
  6119  001174  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6120  001176  0E00               	movlw	0
  6121  001178  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6122  00117A  0E00               	movlw	0
  6123  00117C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6124  00117E  0E00               	movlw	0
  6125  001180  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6126  001182  0E00               	movlw	0
  6127  001184  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6128  001186  0E00               	movlw	0
  6129  001188  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6130  00118A  0E00               	movlw	0
  6131  00118C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6132  00118E  EC15  F00D         	call	___aodiv	;wreg free
  6133  001192  C001  F036         	movff	?___aodiv,dtoa@n
  6134  001196  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6135  00119A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6136  00119E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6137  0011A2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6138  0011A6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6139  0011AA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6140  0011AE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6141  0011B2                     l2600:
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6144  0011B2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6145  0011B4  EFE4  F008         	goto	u2011
  6146  0011B8  503F               	movf	(dtoa@i+1)^0,w,c
  6147  0011BA  E108               	bnz	u2010
  6148  0011BC  043E               	decf	dtoa@i^0,w,c
  6149  0011BE  A0D8               	btfss	status,0,c
  6150  0011C0  EFE4  F008         	goto	u2011
  6151  0011C4  EFE6  F008         	goto	u2010
  6152  0011C8                     u2011:
  6153  0011C8  EF17  F009         	goto	l2610
  6154  0011CC                     u2010:
  6155  0011CC  5036               	movf	dtoa@n^0,w,c
  6156  0011CE  1037               	iorwf	(dtoa@n+1)^0,w,c
  6157  0011D0  1038               	iorwf	(dtoa@n+2)^0,w,c
  6158  0011D2  1039               	iorwf	(dtoa@n+3)^0,w,c
  6159  0011D4  103A               	iorwf	(dtoa@n+4)^0,w,c
  6160  0011D6  103B               	iorwf	(dtoa@n+5)^0,w,c
  6161  0011D8  103C               	iorwf	(dtoa@n+6)^0,w,c
  6162  0011DA  103D               	iorwf	(dtoa@n+7)^0,w,c
  6163  0011DC  A4D8               	btfss	status,2,c
  6164  0011DE  EFF3  F008         	goto	u2021
  6165  0011E2  EFF5  F008         	goto	u2020
  6166  0011E6                     u2021:
  6167  0011E6  EF5D  F008         	goto	l2590
  6168  0011EA                     u2020:
  6169  0011EA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6170  0011EC  EF02  F009         	goto	u2030
  6171  0011F0  5031               	movf	(dtoa@p+1)^0,w,c
  6172  0011F2  E106               	bnz	u2031
  6173  0011F4  0430               	decf	dtoa@p^0,w,c
  6174  0011F6  B0D8               	btfsc	status,0,c
  6175  0011F8  EF00  F009         	goto	u2031
  6176  0011FC  EF02  F009         	goto	u2030
  6177  001200                     u2031:
  6178  001200  EF5D  F008         	goto	l2590
  6179  001204                     u2030:
  6180  001204  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6181  001206  EF0D  F009         	goto	u2041
  6182  00120A  5033               	movf	(dtoa@w+1)^0,w,c
  6183  00120C  E108               	bnz	u2040
  6184  00120E  0432               	decf	dtoa@w^0,w,c
  6185  001210  A0D8               	btfss	status,0,c
  6186  001212  EF0D  F009         	goto	u2041
  6187  001216  EF0F  F009         	goto	u2040
  6188  00121A                     u2041:
  6189  00121A  EF17  F009         	goto	l2610
  6190  00121E                     u2040:
  6191  00121E  0100               	movlb	0	; () banked
  6192  001220  B3E8               	btfsc	_flags& (0+255),1,b
  6193  001222  EF15  F009         	goto	u2051
  6194  001226  EF17  F009         	goto	u2050
  6195  00122A                     u2051:
  6196  00122A  EF5D  F008         	goto	l2590
  6197  00122E                     u2050:
  6198  00122E                     l2610:
  6199                           
  6200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6201  00122E  5034               	movf	dtoa@s^0,w,c
  6202  001230  1035               	iorwf	(dtoa@s+1)^0,w,c
  6203  001232  A4D8               	btfss	status,2,c
  6204  001234  EF1E  F009         	goto	u2061
  6205  001238  EF20  F009         	goto	u2060
  6206  00123C                     u2061:
  6207  00123C  EF28  F009         	goto	l2614
  6208  001240                     u2060:
  6209  001240  0100               	movlb	0	; () banked
  6210  001242  A5E8               	btfss	_flags& (0+255),2,b
  6211  001244  EF26  F009         	goto	u2071
  6212  001248  EF28  F009         	goto	u2070
  6213  00124C                     u2071:
  6214  00124C  EF46  F009         	goto	l2624
  6215  001250                     u2070:
  6216  001250                     l2614:
  6217                           
  6218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6219  001250  063E               	decf	dtoa@i^0,f,c
  6220  001252  A0D8               	btfss	status,0,c
  6221  001254  063F               	decf	(dtoa@i+1)^0,f,c
  6222  001256                     
  6223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6224  001256  5034               	movf	dtoa@s^0,w,c
  6225  001258  1035               	iorwf	(dtoa@s+1)^0,w,c
  6226  00125A  A4D8               	btfss	status,2,c
  6227  00125C  EF32  F009         	goto	u2081
  6228  001260  EF34  F009         	goto	u2080
  6229  001264                     u2081:
  6230  001264  EF3A  F009         	goto	l2620
  6231  001268                     u2080:
  6232  001268  0E00               	movlw	0
  6233  00126A  6E2F               	movwf	(_dtoa$1365+1)^0,c
  6234  00126C  0E2B               	movlw	43
  6235  00126E  6E2E               	movwf	_dtoa$1365^0,c
  6236  001270  EF3E  F009         	goto	l2622
  6237  001274                     l2620:
  6238  001274  0E00               	movlw	0
  6239  001276  6E2F               	movwf	(_dtoa$1365+1)^0,c
  6240  001278  0E2D               	movlw	45
  6241  00127A  6E2E               	movwf	_dtoa$1365^0,c
  6242  00127C                     l2622:
  6243  00127C  0EB5               	movlw	low _dbuf
  6244  00127E  243E               	addwf	dtoa@i^0,w,c
  6245  001280  6ED9               	movwf	fsr2l,c
  6246  001282  0E02               	movlw	high _dbuf
  6247  001284  203F               	addwfc	(dtoa@i+1)^0,w,c
  6248  001286  6EDA               	movwf	fsr2h,c
  6249  001288  C02E  FFDF         	movff	_dtoa$1365,indf2
  6250  00128C                     l2624:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6253  00128C  C01C  F011         	movff	dtoa@fp,pad@fp
  6254  001290  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6255  001294  0EB5               	movlw	low _dbuf
  6256  001296  243E               	addwf	dtoa@i^0,w,c
  6257  001298  6E13               	movwf	pad@buf^0,c
  6258  00129A  0E02               	movlw	high _dbuf
  6259  00129C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6260  00129E  6E14               	movwf	(pad@buf+1)^0,c
  6261  0012A0  C032  F015         	movff	dtoa@w,pad@p
  6262  0012A4  C033  F016         	movff	dtoa@w+1,pad@p+1
  6263  0012A8  ECD7  F00F         	call	_pad	;wreg free
  6264  0012AC  C011  F01C         	movff	?_pad,?_dtoa
  6265  0012B0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6266  0012B4  0012               	return		;funcret
  6267  0012B6                     __end_of_dtoa:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _pad *****************
  6271 ;; Defined at:
  6272 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6275 ;;		 -> sprintf@f(6), 
  6276 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6277 ;;		 -> dbuf(32), 
  6278 ;;  p               2   20[COMRAM] int 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  w               2   25[COMRAM] int 
  6281 ;;  i               2   23[COMRAM] int 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  2   16[COMRAM] int 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6291 ;;      Params:         6       0       0       0       0       0       0       0       0
  6292 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6294 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6295 ;;Total ram usage:       11 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    3
  6298 ;; This function calls:
  6299 ;;		_fputc
  6300 ;;		_fputs
  6301 ;;		_strlen
  6302 ;; This function is called by:
  6303 ;;		_dtoa
  6304 ;;		_xtoa
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text29
  6309  001FAE                     __ptext29:
  6310                           	callstack 0
  6311  001FAE                     _pad:
  6312                           	callstack 22
  6313  001FAE                     
  6314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6315  001FAE  0100               	movlb	0	; () banked
  6316  001FB0  A1E8               	btfss	_flags& (0+255),0,b
  6317  001FB2  EFDD  F00F         	goto	u1791
  6318  001FB6  EFDF  F00F         	goto	u1790
  6319  001FBA                     u1791:
  6320  001FBA  EFE9  F00F         	goto	l2508
  6321  001FBE                     u1790:
  6322  001FBE                     
  6323                           ; BSR set to: 0
  6324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6325  001FBE  C013  F00A         	movff	pad@buf,fputs@s
  6326  001FC2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6327  001FC6  C011  F00C         	movff	pad@fp,fputs@fp
  6328  001FCA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6329  001FCE  EC09  F013         	call	_fputs	;wreg free
  6330  001FD2                     l2508:
  6331                           
  6332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6333  001FD2  BE16               	btfsc	(pad@p+1)^0,7,c
  6334  001FD4  EFEE  F00F         	goto	u1801
  6335  001FD8  EFF0  F00F         	goto	u1800
  6336  001FDC                     u1801:
  6337  001FDC  EFF6  F00F         	goto	l2512
  6338  001FE0                     u1800:
  6339  001FE0  C015  F01A         	movff	pad@p,pad@w
  6340  001FE4  C016  F01B         	movff	pad@p+1,pad@w+1
  6341  001FE8  EFFA  F00F         	goto	l1179
  6342  001FEC                     l2512:
  6343  001FEC  0E00               	movlw	0
  6344  001FEE  6E1B               	movwf	(pad@w+1)^0,c
  6345  001FF0  0E00               	movlw	0
  6346  001FF2  6E1A               	movwf	pad@w^0,c
  6347  001FF4                     l1179:
  6348                           
  6349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6350  001FF4  0E00               	movlw	0
  6351  001FF6  6E19               	movwf	(pad@i+1)^0,c
  6352  001FF8  0E00               	movlw	0
  6353  001FFA  6E18               	movwf	pad@i^0,c
  6354                           
  6355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6356  001FFC  EF0C  F010         	goto	l2518
  6357  002000                     l2514:
  6358                           
  6359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6360  002000  0E00               	movlw	0
  6361  002002  6E02               	movwf	(fputc@c+1)^0,c
  6362  002004  0E20               	movlw	32
  6363  002006  6E01               	movwf	fputc@c^0,c
  6364  002008  C011  F003         	movff	pad@fp,fputc@fp
  6365  00200C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6366  002010  EC72  F00F         	call	_fputc	;wreg free
  6367  002014                     
  6368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6369  002014  4A18               	infsnz	pad@i^0,f,c
  6370  002016  2A19               	incf	(pad@i+1)^0,f,c
  6371  002018                     l2518:
  6372                           
  6373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6374  002018  501A               	movf	pad@w^0,w,c
  6375  00201A  5C18               	subwf	pad@i^0,w,c
  6376  00201C  5019               	movf	(pad@i+1)^0,w,c
  6377  00201E  0A80               	xorlw	128
  6378  002020  6E17               	movwf	??_pad^0,c
  6379  002022  501B               	movf	(pad@w+1)^0,w,c
  6380  002024  0A80               	xorlw	128
  6381  002026  5817               	subwfb	??_pad^0,w,c
  6382  002028  A0D8               	btfss	status,0,c
  6383  00202A  EF19  F010         	goto	u1811
  6384  00202E  EF1B  F010         	goto	u1810
  6385  002032                     u1811:
  6386  002032  EF00  F010         	goto	l2514
  6387  002036                     u1810:
  6388  002036                     
  6389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6390  002036  0100               	movlb	0	; () banked
  6391  002038  B1E8               	btfsc	_flags& (0+255),0,b
  6392  00203A  EF21  F010         	goto	u1821
  6393  00203E  EF23  F010         	goto	u1820
  6394  002042                     u1821:
  6395  002042  EF2D  F010         	goto	l2522
  6396  002046                     u1820:
  6397  002046                     
  6398                           ; BSR set to: 0
  6399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6400  002046  C013  F00A         	movff	pad@buf,fputs@s
  6401  00204A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6402  00204E  C011  F00C         	movff	pad@fp,fputs@fp
  6403  002052  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6404  002056  EC09  F013         	call	_fputs	;wreg free
  6405  00205A                     l2522:
  6406                           
  6407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6408  00205A  C013  F001         	movff	pad@buf,strlen@s
  6409  00205E  C014  F002         	movff	pad@buf+1,strlen@s+1
  6410  002062  ECDE  F013         	call	_strlen	;wreg free
  6411  002066  501A               	movf	pad@w^0,w,c
  6412  002068  2401               	addwf	?_strlen^0,w,c
  6413  00206A  6E11               	movwf	?_pad^0,c
  6414  00206C  501B               	movf	(pad@w+1)^0,w,c
  6415  00206E  2002               	addwfc	(?_strlen+1)^0,w,c
  6416  002070  6E12               	movwf	(?_pad+1)^0,c
  6417  002072  0012               	return		;funcret
  6418  002074                     __end_of_pad:
  6419                           	callstack 0
  6420                           
  6421 ;; *************** function _strlen *****************
  6422 ;; Defined at:
  6423 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6426 ;;		 -> dbuf(32), 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6429 ;;		 -> dbuf(32), 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  2    0[COMRAM] unsigned int 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6439 ;;      Params:         2       0       0       0       0       0       0       0       0
  6440 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6442 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6443 ;;Total ram usage:        4 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_pad
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text30
  6453  0027BC                     __ptext30:
  6454                           	callstack 0
  6455  0027BC                     _strlen:
  6456                           	callstack 24
  6457  0027BC  C001  F003         	movff	strlen@s,strlen@a
  6458  0027C0  C002  F004         	movff	strlen@s+1,strlen@a+1
  6459  0027C4  EFE6  F013         	goto	l2414
  6460  0027C8                     l2412:
  6461  0027C8  4A01               	infsnz	strlen@s^0,f,c
  6462  0027CA  2A02               	incf	(strlen@s+1)^0,f,c
  6463  0027CC                     l2414:
  6464  0027CC  C001  FFD9         	movff	strlen@s,fsr2l
  6465  0027D0  C002  FFDA         	movff	strlen@s+1,fsr2h
  6466  0027D4  50DF               	movf	indf2,w,c
  6467  0027D6  A4D8               	btfss	status,2,c
  6468  0027D8  EFF0  F013         	goto	u1631
  6469  0027DC  EFF2  F013         	goto	u1630
  6470  0027E0                     u1631:
  6471  0027E0  EFE4  F013         	goto	l2412
  6472  0027E4                     u1630:
  6473  0027E4  5003               	movf	strlen@a^0,w,c
  6474  0027E6  5C01               	subwf	strlen@s^0,w,c
  6475  0027E8  6E01               	movwf	?_strlen^0,c
  6476  0027EA  5004               	movf	(strlen@a+1)^0,w,c
  6477  0027EC  5802               	subwfb	(strlen@s+1)^0,w,c
  6478  0027EE  6E02               	movwf	(?_strlen+1)^0,c
  6479  0027F0  0012               	return		;funcret
  6480  0027F2                     __end_of_strlen:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _fputs *****************
  6484 ;; Defined at:
  6485 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6488 ;;		 -> dbuf(32), 
  6489 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6490 ;;		 -> sprintf@f(6), 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  i               2   14[COMRAM] int 
  6493 ;;  c               1   13[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2    9[COMRAM] int 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6503 ;;      Params:         4       0       0       0       0       0       0       0       0
  6504 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6506 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6507 ;;Total ram usage:        7 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    2
  6510 ;; This function calls:
  6511 ;;		_fputc
  6512 ;; This function is called by:
  6513 ;;		_pad
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text31
  6518  002612                     __ptext31:
  6519                           	callstack 0
  6520  002612                     _fputs:
  6521                           	callstack 22
  6522  002612  0E00               	movlw	0
  6523  002614  6E10               	movwf	(fputs@i+1)^0,c
  6524  002616  0E00               	movlw	0
  6525  002618  6E0F               	movwf	fputs@i^0,c
  6526  00261A  EF1A  F013         	goto	l2408
  6527  00261E                     l2404:
  6528  00261E  C00E  F001         	movff	fputs@c,fputc@c
  6529  002622  6A02               	clrf	(fputc@c+1)^0,c
  6530  002624  C00C  F003         	movff	fputs@fp,fputc@fp
  6531  002628  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6532  00262C  EC72  F00F         	call	_fputc	;wreg free
  6533  002630  4A0F               	infsnz	fputs@i^0,f,c
  6534  002632  2A10               	incf	(fputs@i+1)^0,f,c
  6535  002634                     l2408:
  6536  002634  500F               	movf	fputs@i^0,w,c
  6537  002636  240A               	addwf	fputs@s^0,w,c
  6538  002638  6ED9               	movwf	fsr2l,c
  6539  00263A  5010               	movf	(fputs@i+1)^0,w,c
  6540  00263C  200B               	addwfc	(fputs@s+1)^0,w,c
  6541  00263E  6EDA               	movwf	fsr2h,c
  6542  002640  50DF               	movf	indf2,w,c
  6543  002642  6E0E               	movwf	fputs@c^0,c
  6544  002644  500E               	movf	fputs@c^0,w,c
  6545  002646  A4D8               	btfss	status,2,c
  6546  002648  EF28  F013         	goto	u1621
  6547  00264C  EF2A  F013         	goto	u1620
  6548  002650                     u1621:
  6549  002650  EF0F  F013         	goto	l2404
  6550  002654                     u1620:
  6551  002654  0012               	return		;funcret
  6552  002656                     __end_of_fputs:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _fputc *****************
  6556 ;; Defined at:
  6557 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  c               2    0[COMRAM] int 
  6560 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6561 ;;		 -> sprintf@f(6), 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  2    0[COMRAM] int 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6573 ;;      Params:         4       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6575 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6576 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        9 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    1
  6580 ;; This function calls:
  6581 ;;		_putch
  6582 ;; This function is called by:
  6583 ;;		_pad
  6584 ;;		_vfpfcnvrt
  6585 ;;		_fputs
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text32
  6590  001EE4                     __ptext32:
  6591                           	callstack 0
  6592  001EE4                     _fputc:
  6593                           	callstack 22
  6594  001EE4  5003               	movf	fputc@fp^0,w,c
  6595  001EE6  1004               	iorwf	(fputc@fp+1)^0,w,c
  6596  001EE8  B4D8               	btfsc	status,2,c
  6597  001EEA  EF79  F00F         	goto	u1581
  6598  001EEE  EF7B  F00F         	goto	u1580
  6599  001EF2                     u1581:
  6600  001EF2  EF84  F00F         	goto	l2392
  6601  001EF6                     u1580:
  6602  001EF6  5003               	movf	fputc@fp^0,w,c
  6603  001EF8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6604  001EFA  A4D8               	btfss	status,2,c
  6605  001EFC  EF82  F00F         	goto	u1591
  6606  001F00  EF84  F00F         	goto	u1590
  6607  001F04                     u1591:
  6608  001F04  EF89  F00F         	goto	l2394
  6609  001F08                     u1590:
  6610  001F08                     l2392:
  6611  001F08  5001               	movf	fputc@c^0,w,c
  6612  001F0A  ECE2  F014         	call	_putch
  6613  001F0E  EFD6  F00F         	goto	l1288
  6614  001F12                     l2394:
  6615  001F12  EE20 F004          	lfsr	2,4
  6616  001F16  5003               	movf	fputc@fp^0,w,c
  6617  001F18  26D9               	addwf	fsr2l,f,c
  6618  001F1A  5004               	movf	(fputc@fp+1)^0,w,c
  6619  001F1C  22DA               	addwfc	fsr2h,f,c
  6620  001F1E  50DE               	movf	postinc2,w,c
  6621  001F20  10DE               	iorwf	postinc2,w,c
  6622  001F22  B4D8               	btfsc	status,2,c
  6623  001F24  EF96  F00F         	goto	u1601
  6624  001F28  EF98  F00F         	goto	u1600
  6625  001F2C                     u1601:
  6626  001F2C  EFB3  F00F         	goto	l2398
  6627  001F30                     u1600:
  6628  001F30  EE20 F004          	lfsr	2,4
  6629  001F34  5003               	movf	fputc@fp^0,w,c
  6630  001F36  26D9               	addwf	fsr2l,f,c
  6631  001F38  5004               	movf	(fputc@fp+1)^0,w,c
  6632  001F3A  22DA               	addwfc	fsr2h,f,c
  6633  001F3C  EE10 F002          	lfsr	1,2
  6634  001F40  5003               	movf	fputc@fp^0,w,c
  6635  001F42  26E1               	addwf	fsr1l,f,c
  6636  001F44  5004               	movf	(fputc@fp+1)^0,w,c
  6637  001F46  22E2               	addwfc	fsr1h,f,c
  6638  001F48  50DE               	movf	postinc2,w,c
  6639  001F4A  5CE6               	subwf	postinc1,w,c
  6640  001F4C  50E6               	movf	postinc1,w,c
  6641  001F4E  0A80               	xorlw	128
  6642  001F50  6E09               	movwf	(??_fputc+4)^0,c
  6643  001F52  50DE               	movf	postinc2,w,c
  6644  001F54  0A80               	xorlw	128
  6645  001F56  5809               	subwfb	(??_fputc+4)^0,w,c
  6646  001F58  B0D8               	btfsc	status,0,c
  6647  001F5A  EFB1  F00F         	goto	u1611
  6648  001F5E  EFB3  F00F         	goto	u1610
  6649  001F62                     u1611:
  6650  001F62  EFD6  F00F         	goto	l1288
  6651  001F66                     u1610:
  6652  001F66                     l2398:
  6653  001F66  EE20 F002          	lfsr	2,2
  6654  001F6A  5003               	movf	fputc@fp^0,w,c
  6655  001F6C  26D9               	addwf	fsr2l,f,c
  6656  001F6E  5004               	movf	(fputc@fp+1)^0,w,c
  6657  001F70  22DA               	addwfc	fsr2h,f,c
  6658  001F72  CFDE F005          	movff	postinc2,??_fputc
  6659  001F76  CFDD F006          	movff	postdec2,??_fputc+1
  6660  001F7A  C003  FFD9         	movff	fputc@fp,fsr2l
  6661  001F7E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6662  001F82  CFDE F007          	movff	postinc2,??_fputc+2
  6663  001F86  CFDD F008          	movff	postdec2,??_fputc+3
  6664  001F8A  5005               	movf	??_fputc^0,w,c
  6665  001F8C  2407               	addwf	(??_fputc+2)^0,w,c
  6666  001F8E  6ED9               	movwf	fsr2l,c
  6667  001F90  5006               	movf	(??_fputc+1)^0,w,c
  6668  001F92  2008               	addwfc	(??_fputc+3)^0,w,c
  6669  001F94  6EDA               	movwf	fsr2h,c
  6670  001F96  C001  FFDF         	movff	fputc@c,indf2
  6671  001F9A  EE20 F002          	lfsr	2,2
  6672  001F9E  5003               	movf	fputc@fp^0,w,c
  6673  001FA0  26D9               	addwf	fsr2l,f,c
  6674  001FA2  5004               	movf	(fputc@fp+1)^0,w,c
  6675  001FA4  22DA               	addwfc	fsr2h,f,c
  6676  001FA6  2ADE               	incf	postinc2,f,c
  6677  001FA8  0E00               	movlw	0
  6678  001FAA  22DD               	addwfc	postdec2,f,c
  6679  001FAC                     l1288:
  6680  001FAC  0012               	return		;funcret
  6681  001FAE                     __end_of_fputc:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function _putch *****************
  6685 ;; Defined at:
  6686 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  c               1    wreg     unsigned char 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  c               1    0[COMRAM] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_fputc
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text33
  6714  0029C4                     __ptext33:
  6715                           	callstack 0
  6716  0029C4                     _putch:
  6717                           	callstack 22
  6718  0029C4  0012               	return		;funcret
  6719  0029C6                     __end_of_putch:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _abs *****************
  6723 ;; Defined at:
  6724 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  a               2   18[COMRAM] int 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2   18[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6738 ;;      Params:         2       0       0       0       0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6740 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6741 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6742 ;;Total ram usage:        4 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_dtoa
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text34
  6752  002656                     __ptext34:
  6753                           	callstack 0
  6754  002656                     _abs:
  6755                           	callstack 25
  6756  002656  BE14               	btfsc	(abs@a+1)^0,7,c
  6757  002658  EF38  F013         	goto	u1830
  6758  00265C  5014               	movf	(abs@a+1)^0,w,c
  6759  00265E  E106               	bnz	u1831
  6760  002660  0413               	decf	abs@a^0,w,c
  6761  002662  B0D8               	btfsc	status,0,c
  6762  002664  EF36  F013         	goto	u1831
  6763  002668  EF38  F013         	goto	u1830
  6764  00266C                     u1831:
  6765  00266C  EF46  F013         	goto	l1261
  6766  002670                     u1830:
  6767  002670  C013  F015         	movff	abs@a,??_abs
  6768  002674  C014  F016         	movff	abs@a+1,??_abs+1
  6769  002678  1E15               	comf	??_abs^0,f,c
  6770  00267A  1E16               	comf	(??_abs+1)^0,f,c
  6771  00267C  4A15               	infsnz	??_abs^0,f,c
  6772  00267E  2A16               	incf	(??_abs+1)^0,f,c
  6773  002680  C015  F013         	movff	??_abs,?_abs
  6774  002684  C016  F014         	movff	??_abs+1,?_abs+1
  6775  002688  EF4A  F013         	goto	l1264
  6776  00268C                     l1261:
  6777  00268C  C013  F013         	movff	abs@a,?_abs
  6778  002690  C014  F014         	movff	abs@a+1,?_abs+1
  6779  002694                     l1264:
  6780  002694  0012               	return		;funcret
  6781  002696                     __end_of_abs:
  6782                           	callstack 0
  6783                           
  6784 ;; *************** function ___aomod *****************
  6785 ;; Defined at:
  6786 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  dividend        8    0[COMRAM] long long 
  6789 ;;  divisor         8    8[COMRAM] long long 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  sign            1   17[COMRAM] unsigned char 
  6792 ;;  counter         1   16[COMRAM] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  8    0[COMRAM] long long 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:        16       0       0       0       0       0       0       0       0
  6803 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6805 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:       18 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_dtoa
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text35
  6816  001BB2                     __ptext35:
  6817                           	callstack 0
  6818  001BB2                     ___aomod:
  6819                           	callstack 25
  6820  001BB2  0E00               	movlw	0
  6821  001BB4  6E12               	movwf	___aomod@sign^0,c
  6822  001BB6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6823  001BB8  EFE2  F00D         	goto	u1730
  6824  001BBC  EFE0  F00D         	goto	u1731
  6825  001BC0                     u1731:
  6826  001BC0  EFF4  F00D         	goto	l2476
  6827  001BC4                     u1730:
  6828  001BC4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6829  001BC6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6830  001BC8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6831  001BCA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6832  001BCC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6833  001BCE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6834  001BD0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6835  001BD2  6C01               	negf	___aomod@dividend^0,c
  6836  001BD4  0E00               	movlw	0
  6837  001BD6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6838  001BD8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6839  001BDA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6840  001BDC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6841  001BDE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6842  001BE0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6843  001BE2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6844  001BE4  0E01               	movlw	1
  6845  001BE6  6E12               	movwf	___aomod@sign^0,c
  6846  001BE8                     l2476:
  6847  001BE8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6848  001BEA  EFFB  F00D         	goto	u1740
  6849  001BEE  EFF9  F00D         	goto	u1741
  6850  001BF2                     u1741:
  6851  001BF2  EF0B  F00E         	goto	l2480
  6852  001BF6                     u1740:
  6853  001BF6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6854  001BF8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6855  001BFA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6856  001BFC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6857  001BFE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6858  001C00  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6859  001C02  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6860  001C04  6C09               	negf	___aomod@divisor^0,c
  6861  001C06  0E00               	movlw	0
  6862  001C08  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6863  001C0A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6864  001C0C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6865  001C0E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6866  001C10  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6867  001C12  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6868  001C14  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6869  001C16                     l2480:
  6870  001C16  5009               	movf	___aomod@divisor^0,w,c
  6871  001C18  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6872  001C1A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6873  001C1C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6874  001C1E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6875  001C20  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6876  001C22  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6877  001C24  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6878  001C26  B4D8               	btfsc	status,2,c
  6879  001C28  EF18  F00E         	goto	u1751
  6880  001C2C  EF1A  F00E         	goto	u1750
  6881  001C30                     u1751:
  6882  001C30  EF62  F00E         	goto	l2496
  6883  001C34                     u1750:
  6884  001C34  0E01               	movlw	1
  6885  001C36  6E11               	movwf	___aomod@counter^0,c
  6886  001C38  EF28  F00E         	goto	l2486
  6887  001C3C                     l2484:
  6888  001C3C  90D8               	bcf	status,0,c
  6889  001C3E  3609               	rlcf	___aomod@divisor^0,f,c
  6890  001C40  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6891  001C42  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6892  001C44  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6893  001C46  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6894  001C48  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6895  001C4A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6896  001C4C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6897  001C4E  2A11               	incf	___aomod@counter^0,f,c
  6898  001C50                     l2486:
  6899  001C50  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6900  001C52  EF2D  F00E         	goto	u1761
  6901  001C56  EF2F  F00E         	goto	u1760
  6902  001C5A                     u1761:
  6903  001C5A  EF1E  F00E         	goto	l2484
  6904  001C5E                     u1760:
  6905  001C5E                     l2488:
  6906  001C5E  5009               	movf	___aomod@divisor^0,w,c
  6907  001C60  5C01               	subwf	___aomod@dividend^0,w,c
  6908  001C62  500A               	movf	(___aomod@divisor+1)^0,w,c
  6909  001C64  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6910  001C66  500B               	movf	(___aomod@divisor+2)^0,w,c
  6911  001C68  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6912  001C6A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6913  001C6C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6914  001C6E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6915  001C70  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6916  001C72  500E               	movf	(___aomod@divisor+5)^0,w,c
  6917  001C74  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6918  001C76  500F               	movf	(___aomod@divisor+6)^0,w,c
  6919  001C78  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6920  001C7A  5010               	movf	(___aomod@divisor+7)^0,w,c
  6921  001C7C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6922  001C7E  A0D8               	btfss	status,0,c
  6923  001C80  EF44  F00E         	goto	u1771
  6924  001C84  EF46  F00E         	goto	u1770
  6925  001C88                     u1771:
  6926  001C88  EF56  F00E         	goto	l2492
  6927  001C8C                     u1770:
  6928  001C8C  5009               	movf	___aomod@divisor^0,w,c
  6929  001C8E  5E01               	subwf	___aomod@dividend^0,f,c
  6930  001C90  500A               	movf	(___aomod@divisor+1)^0,w,c
  6931  001C92  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6932  001C94  500B               	movf	(___aomod@divisor+2)^0,w,c
  6933  001C96  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6934  001C98  500C               	movf	(___aomod@divisor+3)^0,w,c
  6935  001C9A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6936  001C9C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6937  001C9E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6938  001CA0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6939  001CA2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6940  001CA4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6941  001CA6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6942  001CA8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6943  001CAA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6944  001CAC                     l2492:
  6945  001CAC  90D8               	bcf	status,0,c
  6946  001CAE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6947  001CB0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6948  001CB2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6949  001CB4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6950  001CB6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6951  001CB8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6952  001CBA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6953  001CBC  3209               	rrcf	___aomod@divisor^0,f,c
  6954  001CBE  2E11               	decfsz	___aomod@counter^0,f,c
  6955  001CC0  EF2F  F00E         	goto	l2488
  6956  001CC4                     l2496:
  6957  001CC4  5012               	movf	___aomod@sign^0,w,c
  6958  001CC6  B4D8               	btfsc	status,2,c
  6959  001CC8  EF68  F00E         	goto	u1781
  6960  001CCC  EF6A  F00E         	goto	u1780
  6961  001CD0                     u1781:
  6962  001CD0  EF7A  F00E         	goto	l2500
  6963  001CD4                     u1780:
  6964  001CD4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6965  001CD6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6966  001CD8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6967  001CDA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6968  001CDC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6969  001CDE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6970  001CE0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6971  001CE2  6C01               	negf	___aomod@dividend^0,c
  6972  001CE4  0E00               	movlw	0
  6973  001CE6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6974  001CE8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6975  001CEA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6976  001CEC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6977  001CEE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6978  001CF0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6979  001CF2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6980  001CF4                     l2500:
  6981  001CF4  C001  F001         	movff	___aomod@dividend,?___aomod
  6982  001CF8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6983  001CFC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6984  001D00  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6985  001D04  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6986  001D08  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6987  001D0C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6988  001D10  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6989  001D14  0012               	return		;funcret
  6990  001D16                     __end_of___aomod:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function ___aodiv *****************
  6994 ;; Defined at:
  6995 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  dividend        8    0[COMRAM] long long 
  6998 ;;  divisor         8    8[COMRAM] long long 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  quotient        8   18[COMRAM] long long 
  7001 ;;  sign            1   17[COMRAM] unsigned char 
  7002 ;;  counter         1   16[COMRAM] unsigned char 
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  8    0[COMRAM] long long 
  7005 ;; Registers used:
  7006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7012 ;;      Params:        16       0       0       0       0       0       0       0       0
  7013 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7015 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7016 ;;Total ram usage:       26 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_dtoa
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text36
  7026  001A2A                     __ptext36:
  7027                           	callstack 0
  7028  001A2A                     ___aodiv:
  7029                           	callstack 25
  7030  001A2A  0E00               	movlw	0
  7031  001A2C  6E12               	movwf	___aodiv@sign^0,c
  7032  001A2E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7033  001A30  EF1E  F00D         	goto	u1660
  7034  001A34  EF1C  F00D         	goto	u1661
  7035  001A38                     u1661:
  7036  001A38  EF30  F00D         	goto	l2432
  7037  001A3C                     u1660:
  7038  001A3C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7039  001A3E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7040  001A40  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7041  001A42  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7042  001A44  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7043  001A46  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7044  001A48  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7045  001A4A  6C09               	negf	___aodiv@divisor^0,c
  7046  001A4C  0E00               	movlw	0
  7047  001A4E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7048  001A50  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7049  001A52  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7050  001A54  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7051  001A56  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7052  001A58  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7053  001A5A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7054  001A5C  0E01               	movlw	1
  7055  001A5E  6E12               	movwf	___aodiv@sign^0,c
  7056  001A60                     l2432:
  7057  001A60  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7058  001A62  EF37  F00D         	goto	u1670
  7059  001A66  EF35  F00D         	goto	u1671
  7060  001A6A                     u1671:
  7061  001A6A  EF49  F00D         	goto	l2438
  7062  001A6E                     u1670:
  7063  001A6E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7064  001A70  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7065  001A72  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7066  001A74  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7067  001A76  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7068  001A78  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7069  001A7A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7070  001A7C  6C01               	negf	___aodiv@dividend^0,c
  7071  001A7E  0E00               	movlw	0
  7072  001A80  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7073  001A82  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7074  001A84  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7075  001A86  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7076  001A88  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7077  001A8A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7078  001A8C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7079  001A8E  0E01               	movlw	1
  7080  001A90  1A12               	xorwf	___aodiv@sign^0,f,c
  7081  001A92                     l2438:
  7082  001A92  EE20  F013         	lfsr	2,___aodiv@quotient
  7083  001A96  0E07               	movlw	7
  7084  001A98                     u1681:
  7085  001A98  6ADE               	clrf	postinc2,c
  7086  001A9A  06E8               	decf	wreg,f,c
  7087  001A9C  E2FD               	bc	u1681
  7088  001A9E  5009               	movf	___aodiv@divisor^0,w,c
  7089  001AA0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7090  001AA2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7091  001AA4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7092  001AA6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7093  001AA8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7094  001AAA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7095  001AAC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7096  001AAE  B4D8               	btfsc	status,2,c
  7097  001AB0  EF5C  F00D         	goto	u1691
  7098  001AB4  EF5E  F00D         	goto	u1690
  7099  001AB8                     u1691:
  7100  001AB8  EFB0  F00D         	goto	l2460
  7101  001ABC                     u1690:
  7102  001ABC  0E01               	movlw	1
  7103  001ABE  6E11               	movwf	___aodiv@counter^0,c
  7104  001AC0  EF6C  F00D         	goto	l2446
  7105  001AC4                     l2444:
  7106  001AC4  90D8               	bcf	status,0,c
  7107  001AC6  3609               	rlcf	___aodiv@divisor^0,f,c
  7108  001AC8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7109  001ACA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7110  001ACC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7111  001ACE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7112  001AD0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7113  001AD2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7114  001AD4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7115  001AD6  2A11               	incf	___aodiv@counter^0,f,c
  7116  001AD8                     l2446:
  7117  001AD8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7118  001ADA  EF71  F00D         	goto	u1701
  7119  001ADE  EF73  F00D         	goto	u1700
  7120  001AE2                     u1701:
  7121  001AE2  EF62  F00D         	goto	l2444
  7122  001AE6                     u1700:
  7123  001AE6                     l2448:
  7124  001AE6  90D8               	bcf	status,0,c
  7125  001AE8  3613               	rlcf	___aodiv@quotient^0,f,c
  7126  001AEA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7127  001AEC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7128  001AEE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7129  001AF0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7130  001AF2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7131  001AF4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7132  001AF6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7133  001AF8  5009               	movf	___aodiv@divisor^0,w,c
  7134  001AFA  5C01               	subwf	___aodiv@dividend^0,w,c
  7135  001AFC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7136  001AFE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7137  001B00  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7138  001B02  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7139  001B04  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7140  001B06  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7141  001B08  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7142  001B0A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7143  001B0C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7144  001B0E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7145  001B10  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7146  001B12  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7147  001B14  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7148  001B16  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7149  001B18  A0D8               	btfss	status,0,c
  7150  001B1A  EF91  F00D         	goto	u1711
  7151  001B1E  EF93  F00D         	goto	u1710
  7152  001B22                     u1711:
  7153  001B22  EFA4  F00D         	goto	l2456
  7154  001B26                     u1710:
  7155  001B26  5009               	movf	___aodiv@divisor^0,w,c
  7156  001B28  5E01               	subwf	___aodiv@dividend^0,f,c
  7157  001B2A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7158  001B2C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7159  001B2E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7160  001B30  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7161  001B32  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7162  001B34  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7163  001B36  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7164  001B38  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7165  001B3A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7166  001B3C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7167  001B3E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7168  001B40  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7169  001B42  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7170  001B44  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7171  001B46  8013               	bsf	___aodiv@quotient^0,0,c
  7172  001B48                     l2456:
  7173  001B48  90D8               	bcf	status,0,c
  7174  001B4A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7175  001B4C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7176  001B4E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7177  001B50  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7178  001B52  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7179  001B54  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7180  001B56  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7181  001B58  3209               	rrcf	___aodiv@divisor^0,f,c
  7182  001B5A  2E11               	decfsz	___aodiv@counter^0,f,c
  7183  001B5C  EF73  F00D         	goto	l2448
  7184  001B60                     l2460:
  7185  001B60  5012               	movf	___aodiv@sign^0,w,c
  7186  001B62  B4D8               	btfsc	status,2,c
  7187  001B64  EFB6  F00D         	goto	u1721
  7188  001B68  EFB8  F00D         	goto	u1720
  7189  001B6C                     u1721:
  7190  001B6C  EFC8  F00D         	goto	l2464
  7191  001B70                     u1720:
  7192  001B70  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7193  001B72  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7194  001B74  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7195  001B76  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7196  001B78  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7197  001B7A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7198  001B7C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7199  001B7E  6C13               	negf	___aodiv@quotient^0,c
  7200  001B80  0E00               	movlw	0
  7201  001B82  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7202  001B84  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7203  001B86  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7204  001B88  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7205  001B8A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7206  001B8C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7207  001B8E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7208  001B90                     l2464:
  7209  001B90  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7210  001B94  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7211  001B98  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7212  001B9C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7213  001BA0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7214  001BA4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7215  001BA8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7216  001BAC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7217  001BB0  0012               	return		;funcret
  7218  001BB2                     __end_of___aodiv:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _LCD_String_xy *****************
  7222 ;; Defined at:
  7223 ;;		line 99 in file "LCD_16x2.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  row             1    wreg     unsigned char 
  7226 ;;  pos             1    9[COMRAM] unsigned char 
  7227 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7228 ;;		 -> date(10), hours(10), STR_10(3), STR_9(3), 
  7229 ;;		 -> STR_8(2), STR_7(2), vec_value(10), STR_2(7), 
  7230 ;;		 -> STR_1(12), 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  row             1   12[COMRAM] unsigned char 
  7233 ;;  location        1   13[COMRAM] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7243 ;;      Params:         3       0       0       0       0       0       0       0       0
  7244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7246 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7247 ;;Total ram usage:        5 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    3
  7250 ;; This function calls:
  7251 ;;		_LCD_Command
  7252 ;;		_LCD_String
  7253 ;; This function is called by:
  7254 ;;		_main
  7255 ;;		_imprimirTemHum
  7256 ;;		_mostrarFechaHora
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text37
  7261  002696                     __ptext37:
  7262                           	callstack 0
  7263  002696                     _LCD_String_xy:
  7264                           	callstack 26
  7265                           
  7266                           ;incstack = 0
  7267                           ;LCD_String_xy@row stored from wreg
  7268  002696  6E0D               	movwf	LCD_String_xy@row^0,c
  7269  002698                     
  7270                           ;LCD_16x2.c: 102:     if(row<1)
  7271  002698  500D               	movf	LCD_String_xy@row^0,w,c
  7272  00269A  A4D8               	btfss	status,2,c
  7273  00269C  EF52  F013         	goto	u2481
  7274  0026A0  EF54  F013         	goto	u2480
  7275  0026A4                     u2481:
  7276  0026A4  EF5D  F013         	goto	l2880
  7277  0026A8                     u2480:
  7278  0026A8                     
  7279                           ;LCD_16x2.c: 103:     {;LCD_16x2.c: 104:         location=(0x80) | ((pos) & 0x0f);
  7280  0026A8  500A               	movf	LCD_String_xy@pos^0,w,c
  7281  0026AA  0B0F               	andlw	15
  7282  0026AC  0980               	iorlw	128
  7283  0026AE  6E0E               	movwf	LCD_String_xy@location^0,c
  7284  0026B0                     
  7285                           ;LCD_16x2.c: 105:         LCD_Command(location);
  7286  0026B0  500E               	movf	LCD_String_xy@location^0,w,c
  7287  0026B2  EC93  F014         	call	_LCD_Command
  7288                           
  7289                           ;LCD_16x2.c: 106:     }
  7290  0026B6  EF64  F013         	goto	l2884
  7291  0026BA                     l2880:
  7292                           
  7293                           ;LCD_16x2.c: 108:     {;LCD_16x2.c: 109:         location=(0xC0) | ((pos) & 0x0f);
  7294  0026BA  500A               	movf	LCD_String_xy@pos^0,w,c
  7295  0026BC  0B0F               	andlw	15
  7296  0026BE  09C0               	iorlw	192
  7297  0026C0  6E0E               	movwf	LCD_String_xy@location^0,c
  7298  0026C2                     
  7299                           ;LCD_16x2.c: 110:         LCD_Command(location);
  7300  0026C2  500E               	movf	LCD_String_xy@location^0,w,c
  7301  0026C4  EC93  F014         	call	_LCD_Command
  7302  0026C8                     l2884:
  7303                           
  7304                           ;LCD_16x2.c: 114:     LCD_String(msg);
  7305  0026C8  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  7306  0026CC  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7307  0026D0  ECEA  F011         	call	_LCD_String	;wreg free
  7308  0026D4  0012               	return		;funcret
  7309  0026D6                     __end_of_LCD_String_xy:
  7310                           	callstack 0
  7311                           
  7312 ;; *************** function _LCD_String *****************
  7313 ;; Defined at:
  7314 ;;		line 89 in file "LCD_16x2.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7317 ;;		 -> STR_26(4), STR_25(4), STR_24(4), STR_23(4), 
  7318 ;;		 -> STR_22(4), STR_21(4), STR_20(4), year(10), 
  7319 ;;		 -> month(10), date(10), hours(10), mins(10), 
  7320 ;;		 -> secs(10), STR_10(3), STR_9(3), STR_8(2), 
  7321 ;;		 -> STR_7(2), vec_value(10), STR_2(7), STR_1(12), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7333 ;;      Params:         2       0       0       0       0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7336 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7337 ;;Total ram usage:        2 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    2
  7340 ;; This function calls:
  7341 ;;		_LCD_Char
  7342 ;; This function is called by:
  7343 ;;		_LCD_String_xy
  7344 ;;		_imprimirTemHum
  7345 ;;		_mostrarFechaHora
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text38
  7350  0023D4                     __ptext38:
  7351                           	callstack 0
  7352  0023D4                     _LCD_String:
  7353                           	callstack 26
  7354  0023D4                     
  7355                           ;LCD_16x2.c: 89: void LCD_String(const char *msg);LCD_16x2.c: 90: {;LCD_16x2.c: 91:  whi
      +                          le((*msg)!=0)
  7356  0023D4  EF00  F012         	goto	l2816
  7357  0023D8                     l2812:
  7358                           
  7359                           ;LCD_16x2.c: 92:  {;LCD_16x2.c: 93:    LCD_Char(*msg);
  7360  0023D8  C008  FFF6         	movff	LCD_String@msg,tblptrl
  7361  0023DC  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  7362  0023E0  6AF8               	clrf	tblptru,c
  7363  0023E2  0E07               	movlw	(high __ramtop+-1)
  7364  0023E4  64F7               	cpfsgt	tblptrh,c
  7365  0023E6  D003               	bra	u2377
  7366  0023E8  0008               	tblrd		*
  7367  0023EA  50F5               	movf	tablat,w,c
  7368  0023EC  D005               	bra	u2370
  7369  0023EE                     u2377:
  7370  0023EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7371  0023F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7372  0023F6  50E7               	movf	indf1,w,c
  7373  0023F8                     u2370:
  7374  0023F8  EC85  F014         	call	_LCD_Char
  7375  0023FC                     
  7376                           ;LCD_16x2.c: 94:    msg++;
  7377  0023FC  4A08               	infsnz	LCD_String@msg^0,f,c
  7378  0023FE  2A09               	incf	(LCD_String@msg+1)^0,f,c
  7379  002400                     l2816:
  7380                           
  7381                           ;LCD_16x2.c: 91:  while((*msg)!=0)
  7382  002400  C008  FFF6         	movff	LCD_String@msg,tblptrl
  7383  002404  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  7384  002408  6AF8               	clrf	tblptru,c
  7385  00240A  0E07               	movlw	(high __ramtop+-1)
  7386  00240C  64F7               	cpfsgt	tblptrh,c
  7387  00240E  D003               	bra	u2387
  7388  002410  0008               	tblrd		*
  7389  002412  50F5               	movf	tablat,w,c
  7390  002414  D005               	bra	u2380
  7391  002416                     u2387:
  7392  002416  CFF6 FFE1          	movff	tblptrl,fsr1l
  7393  00241A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7394  00241E  50E7               	movf	indf1,w,c
  7395  002420                     u2380:
  7396  002420  0900               	iorlw	0
  7397  002422  A4D8               	btfss	status,2,c
  7398  002424  EF16  F012         	goto	u2391
  7399  002428  EF18  F012         	goto	u2390
  7400  00242C                     u2391:
  7401  00242C  EFEC  F011         	goto	l2812
  7402  002430                     u2390:
  7403  002430  0012               	return		;funcret
  7404  002432                     __end_of_LCD_String:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function _LCD_Char *****************
  7408 ;; Defined at:
  7409 ;;		line 78 in file "LCD_16x2.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  dat             1    wreg     unsigned char 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  dat             1    6[COMRAM] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0
  7424 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7426 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7427 ;;Total ram usage:        1 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    1
  7430 ;; This function calls:
  7431 ;;		_MSdelay
  7432 ;; This function is called by:
  7433 ;;		_LCD_Custom_Char
  7434 ;;		_LCD_String
  7435 ;;		_onLEDS
  7436 ;;		_imprimirTemHum
  7437 ;;		_onBombillas
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text39
  7442  00290A                     __ptext39:
  7443                           	callstack 0
  7444  00290A                     _LCD_Char:
  7445                           	callstack 26
  7446                           
  7447                           ;incstack = 0
  7448                           ;LCD_Char@dat stored from wreg
  7449  00290A  6E07               	movwf	LCD_Char@dat^0,c
  7450  00290C                     
  7451                           ;LCD_16x2.c: 78: void LCD_Char(char dat);LCD_16x2.c: 79: {;LCD_16x2.c: 80:  LATD= dat;
  7452  00290C  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  7453  002910                     
  7454                           ;LCD_16x2.c: 81:  LATC0 = 1;
  7455  002910  808B               	bsf	3979,0,c	;volatile
  7456  002912                     
  7457                           ;LCD_16x2.c: 82:  LATC1=1;
  7458  002912  828B               	bsf	3979,1,c	;volatile
  7459  002914                     
  7460                           ;LCD_16x2.c: 83:  __nop();
  7461  002914  F000               	nop	
  7462  002916                     
  7463                           ;LCD_16x2.c: 84:  LATC1=0;
  7464  002916  928B               	bcf	3979,1,c	;volatile
  7465  002918                     
  7466                           ;LCD_16x2.c: 85:     MSdelay(1);
  7467  002918  0E00               	movlw	0
  7468  00291A  6E02               	movwf	(MSdelay@val+1)^0,c
  7469  00291C  0E01               	movlw	1
  7470  00291E  6E01               	movwf	MSdelay@val^0,c
  7471  002920  EC9D  F012         	call	_MSdelay	;wreg free
  7472  002924  0012               	return		;funcret
  7473  002926                     __end_of_LCD_Char:
  7474                           	callstack 0
  7475                           
  7476 ;; *************** function _LCD_Command *****************
  7477 ;; Defined at:
  7478 ;;		line 66 in file "LCD_16x2.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  cmd             1    wreg     unsigned char 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  cmd             1    6[COMRAM] unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0, cstack
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7492 ;;      Params:         0       0       0       0       0       0       0       0       0
  7493 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7495 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7496 ;;Total ram usage:        1 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    1
  7499 ;; This function calls:
  7500 ;;		_MSdelay
  7501 ;; This function is called by:
  7502 ;;		_LCD_Init
  7503 ;;		_LCD_Custom_Char
  7504 ;;		_LCD_String_xy
  7505 ;;		_onLEDS
  7506 ;;		_onBombillas
  7507 ;;		_LCD_Clear
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text40
  7512  002926                     __ptext40:
  7513                           	callstack 0
  7514  002926                     _LCD_Command:
  7515                           	callstack 26
  7516                           
  7517                           ;incstack = 0
  7518                           ;LCD_Command@cmd stored from wreg
  7519  002926  6E07               	movwf	LCD_Command@cmd^0,c
  7520  002928                     
  7521                           ;LCD_16x2.c: 66: void LCD_Command(char cmd );LCD_16x2.c: 67: {;LCD_16x2.c: 68:  LATD= cm
      +                          d;
  7522  002928  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  7523  00292C                     
  7524                           ;LCD_16x2.c: 69:  LATC0 = 0;
  7525  00292C  908B               	bcf	3979,0,c	;volatile
  7526  00292E                     
  7527                           ;LCD_16x2.c: 70:  LATC1 = 1;
  7528  00292E  828B               	bsf	3979,1,c	;volatile
  7529  002930                     
  7530                           ;LCD_16x2.c: 71:  __nop();
  7531  002930  F000               	nop	
  7532  002932                     
  7533                           ;LCD_16x2.c: 72:  LATC1 = 0;
  7534  002932  928B               	bcf	3979,1,c	;volatile
  7535  002934                     
  7536                           ;LCD_16x2.c: 73:     MSdelay(3);
  7537  002934  0E00               	movlw	0
  7538  002936  6E02               	movwf	(MSdelay@val+1)^0,c
  7539  002938  0E03               	movlw	3
  7540  00293A  6E01               	movwf	MSdelay@val^0,c
  7541  00293C  EC9D  F012         	call	_MSdelay	;wreg free
  7542  002940  0012               	return		;funcret
  7543  002942                     __end_of_LCD_Command:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _MSdelay *****************
  7547 ;; Defined at:
  7548 ;;		line 118 in file "LCD_16x2.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  val             2    0[COMRAM] unsigned int 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  j               2    4[COMRAM] unsigned int 
  7553 ;;  i               2    2[COMRAM] unsigned int 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      void 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7563 ;;      Params:         2       0       0       0       0       0       0       0       0
  7564 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7566 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7567 ;;Total ram usage:        6 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; This function calls:
  7570 ;;		Nothing
  7571 ;; This function is called by:
  7572 ;;		_LCD_Init
  7573 ;;		_LCD_Command
  7574 ;;		_LCD_Char
  7575 ;;		_main
  7576 ;;		_onBombillas
  7577 ;;		_mostrarFechaHora
  7578 ;;		_verificarHora
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text41
  7583  00253A                     __ptext41:
  7584                           	callstack 0
  7585  00253A                     _MSdelay:
  7586                           	callstack 29
  7587  00253A                     
  7588                           ;LCD_16x2.c: 118: void MSdelay(unsigned int val);LCD_16x2.c: 119: {;LCD_16x2.c: 120:    
      +                            unsigned int i,j;;LCD_16x2.c: 121:         for(i=0;i<=val;i++)
  7589  00253A  0E00               	movlw	0
  7590  00253C  6E04               	movwf	(MSdelay@i+1)^0,c
  7591  00253E  0E00               	movlw	0
  7592  002540  6E03               	movwf	MSdelay@i^0,c
  7593  002542  EFB6  F012         	goto	l2562
  7594  002546                     l2550:
  7595                           
  7596                           ;LCD_16x2.c: 122:             for(j=0;j<81;j++);
  7597  002546  0E00               	movlw	0
  7598  002548  6E06               	movwf	(MSdelay@j+1)^0,c
  7599  00254A  0E00               	movlw	0
  7600  00254C  6E05               	movwf	MSdelay@j^0,c
  7601  00254E                     l2556:
  7602  00254E  4A05               	infsnz	MSdelay@j^0,f,c
  7603  002550  2A06               	incf	(MSdelay@j+1)^0,f,c
  7604  002552  5006               	movf	(MSdelay@j+1)^0,w,c
  7605  002554  E109               	bnz	u1910
  7606  002556  0E51               	movlw	81
  7607  002558  5C05               	subwf	MSdelay@j^0,w,c
  7608  00255A  A0D8               	btfss	status,0,c
  7609  00255C  EFB2  F012         	goto	u1911
  7610  002560  EFB4  F012         	goto	u1910
  7611  002564                     u1911:
  7612  002564  EFA7  F012         	goto	l2556
  7613  002568                     u1910:
  7614  002568  4A03               	infsnz	MSdelay@i^0,f,c
  7615  00256A  2A04               	incf	(MSdelay@i+1)^0,f,c
  7616  00256C                     l2562:
  7617  00256C  5003               	movf	MSdelay@i^0,w,c
  7618  00256E  5C01               	subwf	MSdelay@val^0,w,c
  7619  002570  5004               	movf	(MSdelay@i+1)^0,w,c
  7620  002572  5802               	subwfb	(MSdelay@val+1)^0,w,c
  7621  002574  B0D8               	btfsc	status,0,c
  7622  002576  EFBF  F012         	goto	u1921
  7623  00257A  EFC1  F012         	goto	u1920
  7624  00257E                     u1921:
  7625  00257E  EFA3  F012         	goto	l2550
  7626  002582                     u1920:
  7627  002582  0012               	return		;funcret
  7628  002584                     __end_of_MSdelay:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _I2C_Init *****************
  7632 ;; Defined at:
  7633 ;;		line 76 in file "./I2C_Master_File.h"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0
  7648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7651 ;;Total ram usage:        0 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_main
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text42
  7661  002942                     __ptext42:
  7662                           	callstack 0
  7663  002942                     _I2C_Init:
  7664                           	callstack 30
  7665  002942                     
  7666                           ;./I2C_Master_File.h: 78:     TRISB0=1;
  7667  002942  8093               	bsf	3987,0,c	;volatile
  7668                           
  7669                           ;./I2C_Master_File.h: 79:  TRISB1=1;
  7670  002944  8293               	bsf	3987,1,c	;volatile
  7671  002946                     
  7672                           ;./I2C_Master_File.h: 80:  SSPSTAT=80;
  7673  002946  0E50               	movlw	80
  7674  002948  6EC7               	movwf	199,c	;volatile
  7675                           
  7676                           ;./I2C_Master_File.h: 81:     SSPCON1=0x28;
  7677  00294A  0E28               	movlw	40
  7678  00294C  6EC6               	movwf	198,c	;volatile
  7679                           
  7680                           ;./I2C_Master_File.h: 83:  SSPCON2=0;
  7681  00294E  0E00               	movlw	0
  7682  002950  6EC5               	movwf	197,c	;volatile
  7683                           
  7684                           ;./I2C_Master_File.h: 84:     SSPADD=((8000000/(4*100000))-1);
  7685  002952  0E13               	movlw	19
  7686  002954  6EC8               	movwf	200,c	;volatile
  7687  002956                     
  7688                           ;./I2C_Master_File.h: 85:     SSPIE=1;
  7689  002956  869D               	bsf	3997,3,c	;volatile
  7690  002958                     
  7691                           ;./I2C_Master_File.h: 86:     SSPIF=0;
  7692  002958  969E               	bcf	3998,3,c	;volatile
  7693  00295A  0012               	return		;funcret
  7694  00295C                     __end_of_I2C_Init:
  7695                           	callstack 0
  7696                           
  7697 ;; *************** function _DHT11_Start *****************
  7698 ;; Defined at:
  7699 ;;		line 198 in file "Controlador.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7716 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7717 ;;Total ram usage:        1 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text43
  7727  0028CA                     __ptext43:
  7728                           	callstack 0
  7729  0028CA                     _DHT11_Start:
  7730                           	callstack 30
  7731  0028CA                     
  7732                           ;Controlador.c: 199:     TRISCbits.RC2 = 0;
  7733  0028CA  9494               	bcf	148,2,c	;volatile
  7734                           
  7735                           ;Controlador.c: 200:     LATC2 = 0;
  7736  0028CC  948B               	bcf	3979,2,c	;volatile
  7737  0028CE                     
  7738                           ;Controlador.c: 201:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  7739  0028CE  0E2F               	movlw	47
  7740  0028D0  6E01               	movwf	??_DHT11_Start^0,c
  7741  0028D2  0EC0               	movlw	192
  7742  0028D4                     u3157:
  7743  0028D4  2EE8               	decfsz	wreg,f,c
  7744  0028D6  D7FE               	bra	u3157
  7745  0028D8  2E01               	decfsz	??_DHT11_Start^0,f,c
  7746  0028DA  D7FC               	bra	u3157
  7747  0028DC                     
  7748                           ;Controlador.c: 202:     LATC2 = 1;
  7749  0028DC  848B               	bsf	3979,2,c	;volatile
  7750                           
  7751                           ;Controlador.c: 203:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  7752  0028DE  0E0D               	movlw	13
  7753  0028E0                     u3167:
  7754  0028E0  2EE8               	decfsz	wreg,f,c
  7755  0028E2  D7FE               	bra	u3167
  7756  0028E4  F000               	nop	
  7757  0028E6                     
  7758                           ;Controlador.c: 204:     TRISCbits.RC2 = 1;
  7759  0028E6  8494               	bsf	148,2,c	;volatile
  7760  0028E8  0012               	return		;funcret
  7761  0028EA                     __end_of_DHT11_Start:
  7762                           	callstack 0
  7763                           
  7764 ;; *************** function _DHT11_ReadData *****************
  7765 ;; Defined at:
  7766 ;;		line 183 in file "Controlador.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;		None
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  data            1    1[COMRAM] unsigned char 
  7771 ;;  i               1    0[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0
  7782 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7784 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7785 ;;Total ram usage:        2 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_main
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text44
  7795  002432                     __ptext44:
  7796                           	callstack 0
  7797  002432                     _DHT11_ReadData:
  7798                           	callstack 30
  7799  002432                     
  7800                           ;Controlador.c: 184:     char i, data = 0;
  7801  002432  0E00               	movlw	0
  7802  002434  6E02               	movwf	DHT11_ReadData@data^0,c
  7803                           
  7804                           ;Controlador.c: 185:     for (i = 0; i < 8; i++) {
  7805  002436  0E00               	movlw	0
  7806  002438  6E01               	movwf	DHT11_ReadData@i^0,c
  7807  00243A                     l313:
  7808  00243A  A482               	btfss	130,2,c	;volatile
  7809  00243C  EF22  F012         	goto	u2581
  7810  002440  EF24  F012         	goto	u2580
  7811  002444                     u2581:
  7812  002444  EF1D  F012         	goto	l313
  7813  002448                     u2580:
  7814  002448                     
  7815                           ;Controlador.c: 187:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  7816  002448  0E14               	movlw	20
  7817  00244A                     u3177:
  7818  00244A  2EE8               	decfsz	wreg,f,c
  7819  00244C  D7FE               	bra	u3177
  7820  00244E                     
  7821                           ;Controlador.c: 188:         if (PORTCbits.RC2 & 1)
  7822  00244E  A482               	btfss	130,2,c	;volatile
  7823  002450  EF2C  F012         	goto	u2591
  7824  002454  EF2E  F012         	goto	u2590
  7825  002458                     u2591:
  7826  002458  EF32  F012         	goto	l2984
  7827  00245C                     u2590:
  7828  00245C                     
  7829                           ;Controlador.c: 189:             data = ((data << 1) | 1);
  7830  00245C  80D8               	bsf	status,0,c
  7831  00245E  3602               	rlcf	DHT11_ReadData@data^0,f,c
  7832  002460  EF35  F012         	goto	l318
  7833  002464                     l2984:
  7834                           
  7835                           ;Controlador.c: 191:             data = (data << 1);
  7836  002464  5002               	movf	DHT11_ReadData@data^0,w,c
  7837  002466  2402               	addwf	DHT11_ReadData@data^0,w,c
  7838  002468  6E02               	movwf	DHT11_ReadData@data^0,c
  7839  00246A                     l318:
  7840  00246A  B482               	btfsc	130,2,c	;volatile
  7841  00246C  EF3A  F012         	goto	u2601
  7842  002470  EF3C  F012         	goto	u2600
  7843  002474                     u2601:
  7844  002474  EF35  F012         	goto	l318
  7845  002478                     u2600:
  7846  002478                     
  7847                           ;Controlador.c: 194:     }
  7848  002478  2A01               	incf	DHT11_ReadData@i^0,f,c
  7849  00247A  0E07               	movlw	7
  7850  00247C  6401               	cpfsgt	DHT11_ReadData@i^0,c
  7851  00247E  EF43  F012         	goto	u2611
  7852  002482  EF45  F012         	goto	u2610
  7853  002486                     u2611:
  7854  002486  EF1D  F012         	goto	l313
  7855  00248A                     u2610:
  7856  00248A                     
  7857                           ;Controlador.c: 195:     return data;
  7858  00248A  5002               	movf	DHT11_ReadData@data^0,w,c
  7859  00248C  0012               	return		;funcret
  7860  00248E                     __end_of_DHT11_ReadData:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _DHT11_CheckResponse *****************
  7864 ;; Defined at:
  7865 ;;		line 208 in file "Controlador.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		None
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7883 ;;Total ram usage:        0 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_main
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text45
  7893  00287C                     __ptext45:
  7894                           	callstack 0
  7895  00287C                     _DHT11_CheckResponse:
  7896                           	callstack 30
  7897  00287C                     l327:
  7898  00287C  B482               	btfsc	130,2,c	;volatile
  7899  00287E  EF43  F014         	goto	u2551
  7900  002882  EF45  F014         	goto	u2550
  7901  002886                     u2551:
  7902  002886  EF3E  F014         	goto	l327
  7903  00288A                     u2550:
  7904  00288A                     l330:
  7905  00288A  A482               	btfss	130,2,c	;volatile
  7906  00288C  EF4A  F014         	goto	u2561
  7907  002890  EF4C  F014         	goto	u2560
  7908  002894                     u2561:
  7909  002894  EF45  F014         	goto	l330
  7910  002898                     u2560:
  7911  002898                     l333:
  7912  002898  B482               	btfsc	130,2,c	;volatile
  7913  00289A  EF51  F014         	goto	u2571
  7914  00289E  EF53  F014         	goto	u2570
  7915  0028A2                     u2571:
  7916  0028A2  EF4C  F014         	goto	l333
  7917  0028A6                     u2570:
  7918  0028A6  0012               	return		;funcret
  7919  0028A8                     __end_of_DHT11_CheckResponse:
  7920                           	callstack 0
  7921                           
  7922                           	psect	rparam
  7923  0000                     
  7924                           	psect	idloc
  7925                           
  7926                           ;Config register IDLOC0 @ 0x200000
  7927                           ;	unspecified, using default values
  7928  200000                     	org	2097152
  7929  200000  FF                 	db	255
  7930                           
  7931                           ;Config register IDLOC1 @ 0x200001
  7932                           ;	unspecified, using default values
  7933  200001                     	org	2097153
  7934  200001  FF                 	db	255
  7935                           
  7936                           ;Config register IDLOC2 @ 0x200002
  7937                           ;	unspecified, using default values
  7938  200002                     	org	2097154
  7939  200002  FF                 	db	255
  7940                           
  7941                           ;Config register IDLOC3 @ 0x200003
  7942                           ;	unspecified, using default values
  7943  200003                     	org	2097155
  7944  200003  FF                 	db	255
  7945                           
  7946                           ;Config register IDLOC4 @ 0x200004
  7947                           ;	unspecified, using default values
  7948  200004                     	org	2097156
  7949  200004  FF                 	db	255
  7950                           
  7951                           ;Config register IDLOC5 @ 0x200005
  7952                           ;	unspecified, using default values
  7953  200005                     	org	2097157
  7954  200005  FF                 	db	255
  7955                           
  7956                           ;Config register IDLOC6 @ 0x200006
  7957                           ;	unspecified, using default values
  7958  200006                     	org	2097158
  7959  200006  FF                 	db	255
  7960                           
  7961                           ;Config register IDLOC7 @ 0x200007
  7962                           ;	unspecified, using default values
  7963  200007                     	org	2097159
  7964  200007  FF                 	db	255
  7965                           
  7966                           	psect	config
  7967                           
  7968                           ;Config register CONFIG1L @ 0x300000
  7969                           ;	PLL Prescaler Selection bits
  7970                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7971                           ;	System Clock Postscaler Selection bits
  7972                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7973                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7974                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7975  300000                     	org	3145728
  7976  300000  00                 	db	0
  7977                           
  7978                           ;Config register CONFIG1H @ 0x300001
  7979                           ;	Oscillator Selection bits
  7980                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7981                           ;	Fail-Safe Clock Monitor Enable bit
  7982                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7983                           ;	Internal/External Oscillator Switchover bit
  7984                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7985  300001                     	org	3145729
  7986  300001  09                 	db	9
  7987                           
  7988                           ;Config register CONFIG2L @ 0x300002
  7989                           ;	Power-up Timer Enable bit
  7990                           ;	PWRT = OFF, PWRT disabled
  7991                           ;	Brown-out Reset Enable bits
  7992                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7993                           ;	Brown-out Reset Voltage bits
  7994                           ;	BORV = 3, Minimum setting 2.05V
  7995                           ;	USB Voltage Regulator Enable bit
  7996                           ;	VREGEN = OFF, USB voltage regulator disabled
  7997  300002                     	org	3145730
  7998  300002  1F                 	db	31
  7999                           
  8000                           ;Config register CONFIG2H @ 0x300003
  8001                           ;	Watchdog Timer Enable bit
  8002                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8003                           ;	Watchdog Timer Postscale Select bits
  8004                           ;	WDTPS = 32768, 1:32768
  8005  300003                     	org	3145731
  8006  300003  1E                 	db	30
  8007                           
  8008                           ; Padding undefined space
  8009  300004                     	org	3145732
  8010  300004  FF                 	db	255
  8011                           
  8012                           ;Config register CONFIG3H @ 0x300005
  8013                           ;	CCP2 MUX bit
  8014                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8015                           ;	PORTB A/D Enable bit
  8016                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8017                           ;	Low-Power Timer 1 Oscillator Enable bit
  8018                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8019                           ;	MCLR Pin Enable bit
  8020                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8021  300005                     	org	3145733
  8022  300005  00                 	db	0
  8023                           
  8024                           ;Config register CONFIG4L @ 0x300006
  8025                           ;	Stack Full/Underflow Reset Enable bit
  8026                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8027                           ;	Single-Supply ICSP Enable bit
  8028                           ;	LVP = OFF, Single-Supply ICSP disabled
  8029                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8030                           ;	ICPRT = OFF, ICPORT disabled
  8031                           ;	Extended Instruction Set Enable bit
  8032                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8033                           ;	Background Debugger Enable bit
  8034                           ;	DEBUG = 0x1, unprogrammed default
  8035  300006                     	org	3145734
  8036  300006  81                 	db	129
  8037                           
  8038                           ; Padding undefined space
  8039  300007                     	org	3145735
  8040  300007  FF                 	db	255
  8041                           
  8042                           ;Config register CONFIG5L @ 0x300008
  8043                           ;	Code Protection bit
  8044                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8045                           ;	Code Protection bit
  8046                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8047                           ;	Code Protection bit
  8048                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8049                           ;	Code Protection bit
  8050                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8051  300008                     	org	3145736
  8052  300008  0F                 	db	15
  8053                           
  8054                           ;Config register CONFIG5H @ 0x300009
  8055                           ;	Boot Block Code Protection bit
  8056                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8057                           ;	Data EEPROM Code Protection bit
  8058                           ;	CPD = OFF, Data EEPROM is not code-protected
  8059  300009                     	org	3145737
  8060  300009  C0                 	db	192
  8061                           
  8062                           ;Config register CONFIG6L @ 0x30000A
  8063                           ;	Write Protection bit
  8064                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8065                           ;	Write Protection bit
  8066                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8067                           ;	Write Protection bit
  8068                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8069                           ;	Write Protection bit
  8070                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8071  30000A                     	org	3145738
  8072  30000A  0F                 	db	15
  8073                           
  8074                           ;Config register CONFIG6H @ 0x30000B
  8075                           ;	Configuration Register Write Protection bit
  8076                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8077                           ;	Boot Block Write Protection bit
  8078                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8079                           ;	Data EEPROM Write Protection bit
  8080                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8081  30000B                     	org	3145739
  8082  30000B  E0                 	db	224
  8083                           
  8084                           ;Config register CONFIG7L @ 0x30000C
  8085                           ;	Table Read Protection bit
  8086                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8087                           ;	Table Read Protection bit
  8088                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8089                           ;	Table Read Protection bit
  8090                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8091                           ;	Table Read Protection bit
  8092                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8093  30000C                     	org	3145740
  8094  30000C  0F                 	db	15
  8095                           
  8096                           ;Config register CONFIG7H @ 0x30000D
  8097                           ;	Boot Block Table Read Protection bit
  8098                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8099  30000D                     	org	3145741
  8100  30000D  40                 	db	64
  8101                           tosu	equ	0xFFF
  8102                           tosh	equ	0xFFE
  8103                           tosl	equ	0xFFD
  8104                           stkptr	equ	0xFFC
  8105                           pclatu	equ	0xFFB
  8106                           pclath	equ	0xFFA
  8107                           pcl	equ	0xFF9
  8108                           tblptru	equ	0xFF8
  8109                           tblptrh	equ	0xFF7
  8110                           tblptrl	equ	0xFF6
  8111                           tablat	equ	0xFF5
  8112                           prodh	equ	0xFF4
  8113                           prodl	equ	0xFF3
  8114                           indf0	equ	0xFEF
  8115                           postinc0	equ	0xFEE
  8116                           postdec0	equ	0xFED
  8117                           preinc0	equ	0xFEC
  8118                           plusw0	equ	0xFEB
  8119                           fsr0h	equ	0xFEA
  8120                           fsr0l	equ	0xFE9
  8121                           wreg	equ	0xFE8
  8122                           indf1	equ	0xFE7
  8123                           postinc1	equ	0xFE6
  8124                           postdec1	equ	0xFE5
  8125                           preinc1	equ	0xFE4
  8126                           plusw1	equ	0xFE3
  8127                           fsr1h	equ	0xFE2
  8128                           fsr1l	equ	0xFE1
  8129                           bsr	equ	0xFE0
  8130                           indf2	equ	0xFDF
  8131                           postinc2	equ	0xFDE
  8132                           postdec2	equ	0xFDD
  8133                           preinc2	equ	0xFDC
  8134                           plusw2	equ	0xFDB
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        342
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    130     160
    BANK1           256    167     250
    BANK2           256      0     233
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1277_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK2[10]), month(BANK2[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> date(BANK1[10]), hours(BANK1[10]), STR_10(CODE[3]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), vec_value(BANK1[10]), STR_2(CODE[7]), 
		 -> STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), year(BANK2[10]), 
		 -> month(BANK2[10]), date(BANK1[10]), hours(BANK1[10]), mins(BANK1[10]), 
		 -> secs(BANK1[10]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), vec_value(BANK1[10]), STR_2(CODE[7]), STR_1(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> alert(BANK1[8]), bombillaCar0(BANK1[8]), good(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verificarHora->_MSdelay
    _onBombillas->_onLEDS
    _onLEDS->_LCD_Custom_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_mostrarFechaHora
    _mostrarFechaHora->_sprintf
    _imprimirTemHum->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    _main->_onBombillas

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   68751
                                             52 BANK0     78    78      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                     _imprimirTemHum
                   _mostrarFechaHora
                       _offBombillas
                            _offLEDS
                        _onBombillas
                      _verificarHora
 ---------------------------------------------------------------------------------
 (1) _verificarHora                                        0     0      0    1257
                           _I2C_Stop
                            _MSdelay
                     _RTC_Read_Clock
 ---------------------------------------------------------------------------------
 (1) _onBombillas                                        167   167      0   12029
                                              0 BANK1    167   167      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                            _MSdelay
                             _onLEDS
 ---------------------------------------------------------------------------------
 (2) _onLEDS                                              24    24      0    5255
                                             11 COMRAM    24    24      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Custom_Char                                      4     2      2    2870
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _offLEDS                                             17    17      0      92
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _offBombillas                                        23    23      0      92
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _mostrarFechaHora                                    30    30      0   24527
                                             22 BANK0     30    30      0
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2182
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _imprimirTemHum                                       0     0      0   21921
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   13184
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5272
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2363
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2    1080
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _imprimirTemHum
     _LCD_Char
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _mostrarFechaHora
     _I2C_Stop
     _LCD_Init
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _offBombillas
   _offLEDS
   _onBombillas
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
     _LCD_Custom_Char
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
     _MSdelay
     _onLEDS
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
       _LCD_Custom_Char
         _LCD_Char
           _MSdelay
         _LCD_Command
           _MSdelay
   _verificarHora
     _I2C_Stop
     _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A7      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     362      20        0.0%
DATA                 0      0     362       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Dec 15 00:04:42 2020

                      onBombillas@i_794 019C                        onBombillas@i_797 019E  
                    __size_of_I2C_Ready 0012                      __size_of_I2C_Start 002E  
                       onLEDS@buffer_TX 000C                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l21 287A                                      l33 2940  
                                    l42 2430                                      l27 25CA  
                                    l36 2924                                      l55 2582  
                                    l47 26D4                             ?_LCD_String 0008  
                       _LCD_Custom_Char 2584  RTC_Read_Calendar@read_calendar_address 0004  
                        ?_verificarHora 0001                                     l201 284C  
                                   l210 2986                                     l221 29AE  
                                   l214 28C8                                     l206 2976  
                                   l303 19D6                                     l224 298C  
                                   l208 2984                                     l321 248C  
                                   l313 243A                                     l330 288A  
                                   l170 295A                                     l218 29A0  
                                   l162 2716                                     l227 299A  
                                   l324 28E8                                     l164 2724  
                                   l333 2898                                     l173 29B0  
                                   l318 246A                                     l166 2744  
                                   l190 27F6                                     l327 287C  
                                   l175 29BE                                     l167 274A  
                                   l343 2336                                     l351 1DF8  
                                   l336 28A6                                     l176 29C0  
                                   l192 2804                                     l360 1DFE  
                                   l432 0CAA                                     l408 0AE8  
                                   l417 0B8E                                     l194 281E  
                                   l370 22B2                                     l346 2374  
                                   l426 0C1C                                     l435 2610  
                                   l356 1DB6                                     l292 18EA  
                                   l373 1EE2                                     l197 2824  
                                   l381 08F6                                     l438 24E6  
                                   l462 0FD0                                     l390 099C  
                                   l199 2832                                     l367 2274  
                                   l465 2972                                     l459 0F90  
                                   l582 1BB0                                     l399 0A42  
                                   l595 1D14                                     _PEN 007E2A  
                                   _Day 00F0                                     _abs 2656  
                       __end_of_I2C_Ack 29B0                                     _pad 1FAE  
                                   _min 00F4                                     _sec 00F6  
                          ?_onBombillas 0001                                     wreg 000FE8  
                           LCD_Char@dat 0007                                    l1210 12B4  
                                  ?_abs 0013                                    l1310 23CA  
                                  l1215 12EE                                    l1240 158E  
                                  l1224 138C                                    l3000 1E56  
                                  l1305 27F0                                    l1321 2782  
                                  l1217 12F6                                    l1146 2538  
                                  l3010 1EB2                                    l3002 1E5C  
                                  l1315 23D2                                    l3012 1EB8  
                                  l3004 1E78                                    l3100 0AA4  
                                  l3020 08AC                                    l1261 268C  
                                  l1182 2036                                    l1190 1072  
                                  l1238 152A                                    l3014 1EBE  
                                  l3006 1E8A                                    l3102 0AB6  
                                  l3030 08EE                                    l3022 08B4  
                                  l1247 1826                                    l1264 2694  
                                  l1184 2072                                    l1192 107A  
                                  l1256 230C                                    l3016 1ED0  
                                  l3008 1EA6                                    l3200 0CFA  
                                  l3120 0B28                                    l3104 0ACC  
                                  l3040 091A                                    l3024 08C6  
                                  l1273 27BA                                    l1257 2314  
                                  l2402 2612                                    l2410 27BC  
                                  l3210 0D6E                                    l3202 0D0C  
                                  l3130 0B72                                    l3122 0B34  
                                  l3114 0AF6                                    l3106 0ACE  
                                  l3050 096A                                    l3042 0936  
                                  l3026 08DA                                    l3018 0858  
                                  l1179 1FF4                                    l1267 2710  
                                  l2500 1CF4                                    l2404 261E  
                                  l2412 27C8                                    l2420 274C  
                                  l3220 0DC0                                    l3212 0D80  
                                  l3204 0D16                                    l3300 231C  
                                  l3140 0B9C                                    l3132 0B74  
                                  l3124 0B3C                                    l3116 0B08  
                                  l3108 0AE0                                    l3052 0980  
                                  l3044 0942                                    l3036 0904  
                                  l3028 08DC                                    l2430 1A5C  
                                  l2406 2630                                    l2414 27CC  
                                  l2510 1FE0                                    l3222 0DDE  
                                  l3230 0E12                                    l3214 0D8C  
                                  l3206 0D32                                    l3310 2354  
                                  l3302 232E                                    l3142 0BAE  
                                  l3134 0B86                                    l3150 0BE6  
                                  l3118 0B0C                                    l3126 0B4A  
                                  l3070 09E8                                    l3062 09AA  
                                  l3054 0982                                    l3046 094A  
                                  l3038 0916                                    l2440 1A9E  
                                  l2432 1A60                                    l2424 1A2A  
                                  l1288 1FAC                                    l1296 2654  
                                  l2408 2634                                    l2416 27E4  
                                  l2520 2046                                    l2512 1FEC  
                                  l2504 1FAE                                    l2600 11B2  
                                  l3240 0E76                                    l3232 0E18  
                                  l3224 0DFC                                    l3208 0D50  
                                  l3216 0D9C                                    l3312 2358  
                                  l3152 0BF8                                    l3144 0BB2  
                                  l3128 0B5C                                    l3080 0A28  
                                  l3072 09F0                                    l3064 09BC  
                                  l3056 0994                                    l3048 0958  
                                  l3400 195E                                    l2450 1AF8  
                                  l2442 1ABC                                    l2434 1A6E  
                                  l2426 1A2E                                    l2522 205A  
                                  l2514 2000                                    l2506 1FBE  
                                  l2602 11CC                                    l2610 122E  
                                  l2530 2784                                    l3250 0EC4  
                                  l3242 0E88                                    l3234 0E1C  
                                  l3218 0DA4                                    l3162 0C2A  
                                  l3154 0C00                                    l3146 0BCE  
                                  l3090 0A62                                    l3082 0A3A  
                                  l3066 09C0                                    l3074 09FE  
                                  l3410 1986                                    l3402 196A  
                                  l3330 1830                                    l1299 29C4  
                                  l2700 2930                                    l2452 1B26  
                                  l2444 1AC4                                    l2460 1B60  
                                  l2436 1A8E                                    l2428 1A3C  
                                  l2516 2014                                    l2508 1FD2  
                                  l2620 1274                                    l2612 1240  
                                  l2604 11EA                                    l3252 0ED4  
                                  l3244 0E94                                    l3236 0E3A  
                                  l3308 2344                                    l3180 0C76  
                                  l3164 0C3C                                    l3156 0C12  
                                  l3148 0BDA                                    l3092 0A66  
                                  l3076 0A10                                    l3068 09DC  
                                  l3404 1974                                    l3412 1996  
                                  l3340 183A                                    l3332 1832  
                                  l3324 1828                                    l2550 2546  
                                  l2702 2932                                    l2710 2912  
                                  l2462 1B70                                    l2454 1B46  
                                  l2446 1AD8                                    l2438 1A92  
                                  l2470 1BB6                                    l2526 2656  
                                  l2390 1EF6                                    l2518 2018  
                                  l2622 127C                                    l2614 1250  
                                  l2606 1204                                    l2534 26D6  
                                  l2542 23AC                                    l2630 12C6  
                                  l3254 0EE4                                    l3246 0EA4  
                                  l3262 0F14                                    l3238 0E58  
                                  l3190 0CB6                                    l3182 0C86  
                                  l3174 0C60                                    l3166 0C40  
                                  l3094 0A82                                    l3078 0A26  
                                  l3422 19E4                                    l3414 19BA  
                                  l3406 197E                                    l3350 1850  
                                  l3342 183C                                    l3334 1834  
                                  l3326 182C                                    l2560 2568  
                                  l2704 2934                                    l2712 2914  
                                  l2464 1B90                                    l2456 1B48  
                                  l2448 1AE6                                    l2480 1C16  
                                  l2472 1BC4                                    l2528 2670  
                                  l2392 1F08                                    l2616 1256  
                                  l2624 128C                                    l2608 121E  
                                  l2544 23BE                                    l2640 1334  
                                  l2632 12C8                                    l2720 2988  
                                  l3272 0F9E                                    l3256 0EF4  
                                  l3248 0EB4                                    l3264 0F74  
                                  l3192 0CBA                                    l3176 0C6C  
                                  l3168 0C5C                                    l3184 0C96  
                                  l3096 0A8E                                    l3088 0A50  
                                  l3424 19F6                                    l3416 19CC  
                                  l3408 1982                                    l3360 18A2  
                                  l3352 1854                                    l3344 183E  
                                  l3336 1836                                    l3328 182E  
                                  l2562 256C                                    l2714 2916  
                                  l2706 290C                                    l2810 23D4  
                                  l2458 1B5A                                    l2490 1C8C  
                                  l2482 1C34                                    l2474 1BE4  
                                  l2394 1F12                                    l2618 1268  
                                  l2570 101A                                    l2538 2376  
                                  l2650 1370                                    l2642 133C  
                                  l2634 12E2                                    l2722 28AA  
                                  l3274 0FB0                                    l3266 0F86  
                                  l3450 0F36                                    l3258 0F04  
                                  l3194 0CC6                                    l3282 2250  
                                  l3178 0C72                                    l3098 0A96  
                                  l3186 0C9E                                    l3426 19FA  
                                  l3370 18C2                                    l3362 18A6  
                                  l3354 1858                                    l3346 1840  
                                  l3338 1838                                    l2556 254E  
                                  l2548 253A                                    l2716 2918  
                                  l2708 2910                                    l2812 23D8  
                                  l2492 1CAC                                    l2484 1C3C  
                                  l2476 1BE8                                    l2468 1BB2  
                                  l2396 1F30                                    l2388 1EE4  
                                  l2580 1082                                    l2572 103A  
                                  l2652 1380                                    l2644 1346  
                                  l2636 130C                                    l2628 12B6  
                                  l2740 15B4                                    l2564 29B0  
                                  l2820 2728                                    l2724 28AE  
                                  l3276 0FB4                                    l3196 0CD6  
                                  l3188 0CAC                                    l3292 2282  
                                  l3284 225A                                    l2804 25A6  
                                  l2900 1D90                                    l3428 1A16  
                                  l3372 18CA                                    l3364 18AA  
                                  l3356 1864                                    l3348 1842  
                                  l2558 2552                                    l2814 23FC  
                                  l2494 1CBE                                    l2486 1C50  
                                  l2478 1BF6                                    l2398 1F66  
                                  l2590 10BA                                    l2582 1094  
                                  l2574 104A                                    l2566 0FD2  
                                  l2670 1448                                    l2662 140C  
                                  l2646 134C                                    l2638 1314  
                                  l2750 1620                                    l2742 15C2  
                                  l2718 299C                                    l2822 2738  
                                  l2734 28C6                                    l2726 28B2  
                                  l2830 2974                                    l3198 0CE4  
                                  l3294 2292                                    l3286 226C  
                                  l2806 25B8                                    l2910 1DC4  
                                  l2902 1D9C                                    l3390 193A  
                                  l3382 18F8                                    l3374 18CE  
                                  l3366 18B2                                    l3358 1886  
                                  l2816 2400                                    l2488 1C5E  
                                  l2496 1CC4                                    l2592 10C0  
                                  l2584 10A2                                    l2576 104C  
                                  l2568 0FF2                                    l2680 1500  
                                  l2672 144E                                    l2664 141E  
                                  l2656 13C0                                    l2648 1354  
                                  l2760 16E8                                    l2752 1668  
                                  l2744 15D4                                    l2920 2502  
                                  l2824 2740                                    l2728 28C0  
                                  l2840 2822                                    l2832 27F4  
                                  l3296 2296                                    l2808 25BA  
                                  l2912 1DD4                                    l2904 1DAE  
                                  l3392 193E                                    l3384 190A  
                                  l3376 18E0                                    l3368 18BA  
                                  l2498 1CD4                                    l2594 1142  
                                  l2586 10A8                                    l2578 1066  
                                  l2690 1566                                    l2682 151A  
                                  l2658 13D2                                    l2666 1432  
                                  l2674 14AC                                    l2762 16FE  
                                  l2770 1784                                    l2746 15D8  
                                  l2738 1590                                    l2922 250A  
                                  l2826 2748                                    l2818 2714  
                                  l2930 25E0                                    l3298 2316  
                                  l2914 1DD8                                    l3386 190E  
                                  l2596 1148                                    l2588 10B0  
                                  l2684 153A                                    l2676 14C8  
                                  l2668 1442                                    l2772 17A8  
                                  l2780 17D6                                    l2764 170C  
                                  l2756 16A0                                    l2748 15FC  
                                  l2852 22B4                                    l2924 2526  
                                  l2916 24E8                                    l2860 284E  
                                  l2844 2846                                    l2836 2818  
                                  l2940 24B2                                    l2932 25F0  
                                  l3396 1946                                    l3388 192A  
                                  l2950 2946                                    l2694 2928  
                                  l2598 114E                                    l2686 1540  
                                  l2678 14E6                                    l2782 17E4  
                                  l2774 17B6                                    l2766 1748  
                                  l2758 16C4                                    l2854 22BC  
                                  l2918 24FA                                    l2870 2874  
                                  l2862 2856                                    l2846 284C  
                                  l2942 24C2                                    l2934 2600  
                                  l3398 195A                                    ?_pad 0011  
                                  l2952 2956                                    l2696 292C  
                                  l2880 26BA                                    l2872 2698  
                                  l2688 1550                                    l2776 17CA  
                                  l2856 22CA                                    l2864 2862  
                                  l2944 24D2                                    l2936 2490  
                                  l2928 25CE                                    l2960 2966  
                                  l2970 287C                                    l2962 28CA  
                                  l2954 2958                                    l2698 292E  
                                  l2882 26C2                                    l2874 2698  
                                  l2786 17F0                                    l2858 22F0  
                                  l2866 2868                                    l2946 24E2  
                                  l2938 24A2                                    l2794 2586  
                                  l2890 1D2C                                    l2980 244E  
                                  l2972 2432                                    l2964 28CE  
                                  l2948 2942                                    l2884 26C8  
                                  l2876 26A8                                    l2788 1814  
                                  l2868 286E                                    l2796 2596  
                                  l2892 1D48                                    l2956 295C  
                                  l2990 248A                                    l2982 245C  
                                  l2966 28DC                                    l2878 26B0  
                                  l2798 25A2                                    l2894 1D52  
                                  l2886 1D18                                    l2958 2962  
                                  l2984 2464                                    l2968 28E6  
                                  l2896 1D6E                                    l2888 1D26  
                                  l2986 2478                                    l2978 2448  
                                  l2994 1E00                                    l2898 1D8A  
                                  l2988 247A                                    l2996 1E1C  
                                  l2998 1E2E                                    STR_1 0801  
                                  STR_2 081D                                    STR_3 082E  
                                  STR_4 0824                                    STR_5 082E  
                                  STR_6 082D                                    STR_7 0855  
                                  STR_8 0853                                    STR_9 0850  
                                  u2000 10A2                                    u2001 109E  
                                  u2010 11CC                                    u2011 11C8  
                                  u2020 11EA                                    u2100 12E2  
                                  u2021 11E6                                    u2101 12DE  
                                  u2030 1204                                    u2110 130C  
                                  u2031 1200                                    u2111 1308  
                                  u2040 121E                                    u2200 14C8  
                                  u2120 1370                                    u2041 121A  
                                  u2201 14C4                                    u2121 136C  
                                  u3001 2326                                    u2050 122E  
                                  u2210 14E6                                    u2130 13BA  
                                  u3010 2344                                    u2051 122A  
                                  u2211 14E2                                    u2131 13B4  
                                  u3011 2340                                    u2060 1240  
                                  u2220 1500                                    u2140 13BC  
                                  u2300 15FC                                    u3020 2374  
                                  u3100 192A                                    u2061 123C  
                                  u2221 14FC                                    u2301 15F8  
                                  u3021 2370                                    u3101 1926  
                                  u2070 1250                                    u2230 151A  
                                  u2150 13D2                                    u2310 1620  
                                  u3110 195A                                    u2071 124C  
                                  u2231 1516                                    u2151 13CE  
                                  u2311 161C                                    u3111 1956  
                                  u1600 1F30                                    u2080 1268  
                                  u2240 152A                                    u2160 1406  
                                  u2320 16C4                                    u2400 2724  
                                  _LATD 000F8C                                    u1601 1F2C  
                                  u2081 1264                                    u2241 1526  
                                  u2161 1400                                    u2321 16C0  
                                  u2401 2720                                    u3121 19C4  
                                  u1610 1F66                                    u2250 153A  
                                  u2170 1408                                    u2090 12C6  
                                  u2330 16E8                                    u2410 2738  
                                  u3130 19E4                                    u1611 1F62  
                                  u2251 1536                                    u2091 12C2  
                                  u2331 16E4                                    u2411 2734  
                                  u3131 19E0                                    u1700 1AE6  
                                  u1620 2654                                    u2180 141E  
                                  u2340 17A8                                    u2260 29AE  
                                  u2420 2984                                    u2500 1D6E  
                                  u3140 1A16                                    u3060 1886  
                                  u1701 1AE2                                    u1621 2650  
                                  u2181 141A                                    u2341 17A4  
                                  u2261 29AA                                    u2421 2980  
                                  u2501 1D6A                                    u3141 1A12  
                                  u3061 1882                                    u1710 1B26  
                                  u1630 27E4                                    u2190 1486  
                                  u2270 299A                                    u2430 2804  
                                  u2350 2596                                    u2510 1D8A  
                                  u3070 18A2                                    u1711 1B22  
                                  u1631 27E0                                    u2271 2996  
                                  u2431 2800                                    u2351 2592  
                                  u2511 1D86                                    u3071 189E  
                                  u2600 2478                                    u1720 1B70  
                                  u1800 1FE0                                    u1640 277C  
                                  u2280 28C0                                    u2440 2814  
                                  u2360 25CA                                    u2601 2474  
                                  u1721 1B6C                                    u1801 1FDC  
                                  u1641 2776                                    u2281 28BC  
                                  u2441 2810                                    u2361 25C6  
                                  u2521 1DA6                                    u3081 18D8  
                                  u2610 248A                                    u2370 23F8  
                                  u1730 1BC4                                    u1810 2036  
                                  u1650 277E                                    u2290 15B4  
                                  u2450 2832                                    u2530 1DC4  
                                  u3090 18F8                                    u2611 2486  
                                  u1731 1BC0                                    u1811 2032  
                                  u2195 1474                                    u2291 15B0  
                                  u2451 282E                                    u2531 1DC0  
                                  u3091 18F4                                    u2380 2420  
                                  u1660 1A3C                                    u1740 1BF6  
                                  u1580 1EF6                                    u1820 2046  
                                  u1900 23BE                                    u2460 2842  
                                  u2540 1DF4                                    u2700 09AA  
                                  u2620 08C6                                    u3157 28D4  
                                  u1661 1A38                                    u1741 1BF2  
                                  u1581 1EF2                                    u1821 2042  
                                  u1901 23BA                                    u2461 283E  
                                  u2541 1DF0                                    u2701 09A6  
                                  u2621 08C2                                    u2550 288A  
                                  u1910 2568                                    u2390 2430  
                                  u1670 1A6E                                    u1750 1C34  
                                  u1830 2670                                    u1590 1F08  
                                  u2470 230C                                    u2710 09DC  
                                  u2630 08DA                                    u2551 2886  
                                  u3167 28E0                                    u1911 2564  
                                  u2391 242C                                    u1671 1A6A  
                                  u1751 1C30                                    u1831 266C  
                                  u1591 1F04                                    u2471 2308  
                                  u2711 09D8                                    u2631 08D6  
                                  u2560 2898                                    u1920 2582  
                                  u2480 26A8                                    u1760 1C5E  
                                  u1840 27B4                                    u2800 0AF6  
                                  u2720 0A10                                    u2561 2894  
                                  u3177 244A                                    u1921 257E  
                                  u2377 23EE                                    u2481 26A4  
                                  u1681 1A98                                    u1761 1C5A  
                                  u1841 27AE                                    u2801 0AF2  
                                  u2721 0A0C                                    u2641 08E6  
                                  u2570 28A6                                    u1690 1ABC  
                                  u1770 1C8C                                    u1850 27B6  
                                  u1930 29BE                                    u2490 1D48  
                                  u2810 0B28                                    u2730 0A26  
                                  u2650 0904                                    u2571 28A2  
                                  u2387 2416                                    u1691 1AB8  
                                  u1771 1C88                                    u1931 29BA  
                                  u2491 1D44                                    u2811 0B24  
                                  u2731 0A22                                    u2651 0900  
                                  u2580 2448                                    u1780 1CD4  
                                  u1940 1002                                    u1860 270A  
                                  u2900 0C5C                                    u2820 0B5C  
                                  u2660 0936                                    u2581 2444  
                                  u1781 1CD0                                    u1941 0FFC  
                                  u1861 2704                                    u2901 0C58  
                                  u2821 0B58                                    u2741 0A32  
                                  u2661 0932                                    u2590 245C  
                                  u1790 1FBE                                    u1950 1004  
                                  u1870 270C                                    u2910 0C86  
                                  u2830 0B72                                    u2750 0A50  
                                  u2670 096A                                    u2591 2458  
                                  u1791 1FBA                                    u2911 0C82  
                                  u2831 0B6E                                    u2751 0A4C  
                                  u2671 0966                                    u1960 101A  
                                  u1880 23A6                                    u2920 0CD6  
                                  u2760 0A82                                    u2680 0980  
                                  u1961 1016                                    u1881 23A0  
                                  u2921 0CD2                                    u2841 0B7E  
                                  u2761 0A7E                                    u2681 097C  
                                  u1970 104A                                    u1890 23A8  
                                  u2930 0CE4                                    u2850 0B9C  
                                  u2770 0AB6                                    u1971 1046  
                                  u2931 0CE0                                    u2851 0B98  
                                  u2771 0AB2                                    u2691 098C  
                                  u1980 1066                                    u2860 0BCE  
                                  u2780 0ACC                                    u1981 1062  
                                  u2941 0F7E                                    u2861 0BCA  
                                  u2781 0AC8                                    u1990 1094  
                                  u2950 0F9E                                    u2870 0BF8  
                                  u1991 1090                                    u2951 0F9A  
                                  u2871 0BF4                                    u2791 0AD8  
                                  u2960 0FD0                                    u2961 0FCC  
                                  u2881 0C0A                                    u2890 0C2A  
                                  u2971 2264                                    u2891 0C26  
                                  u2980 2282                                    _RCEN 007E2B  
                                  u2981 227E                                    u2990 22B2  
                                  u2991 22AE                                    _RSEN 007E29  
                                  _Date 00EE                   mostrarFechaHora@F3614 0251  
                         ?_offBombillas 0001                                    _Year 00EA  
                                  abs@a 0013                                    _date 01A9  
                                  _dbuf 02B5                                    _days 01DB  
                                  _main 1828                                    _dtoa 0FD2  
                                  _good 01EA                         ?_RTC_Read_Clock 0001  
                                  _hour 00F2                        __end_of_I2C_Nack 299C  
                                  _mins 01BD                                    _secs 01C7  
                                  _prec 00E6                        __end_of_I2C_Init 295C  
                      __end_of_I2C_Read 274C                                    _nout 00E2  
                                  _year 02D5                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 12B6                        __end_of_I2C_Stop 2988  
                                  prodl 000FF3                                    start 0000  
                       __end_of_MSdelay 2584                        ??_DHT11_ReadData 0001  
                         _LCD_String_xy 2696                    __size_of_DHT11_Start 0020  
                          ___param_bank 000000        RTC_Read_Clock@read_clock_address 0004  
                                 ??_abs 0015                                   ??_pad 0017  
                      __end_of_LCD_Char 2926                        __end_of_LCD_Init 287C  
                            _Clock_type 00FF                         __end_of___aodiv 1BB2  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1D16                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                                   STR_10 084D  
                                 STR_11 0829                                   STR_12 0819  
                                 STR_20 0841                                   STR_21 083D  
                                 STR_13 0815                                   STR_14 0829  
                                 STR_22 0835                                   STR_15 0819  
                                 STR_23 0831                                   STR_16 0815  
                                 STR_24 0849                                   STR_25 0839  
                                 STR_17 080D                                   STR_18 0811  
                                 STR_26 0845                                   STR_19 0829  
                                 ?_xtoa 001C                                   _LATC0 007C58  
                                 _LATC1 007C59                                   _LATC2 007C5A  
                                 _AM_PM 00FE                            vfpfcnvrt@fmt 0045  
                          vfpfcnvrt@llu 0055                                   _SPBRG 000FAF  
                                 _TRISA 000F92                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _SSPIF 007CF3                                   _TXREG 000FAD  
              onBombillas@buffer_TX_802 016C                onBombillas@buffer_TX_805 0187  
              onBombillas@buffer_TX_793 011B                onBombillas@buffer_TX_796 0136  
              onBombillas@buffer_TX_799 0151                         __end_of_offLEDS 2376  
                                 _Month 00EC                                   _alert 01E2  
                                 _flags 00E8                                   _fputc 1EE4  
                       __end_of_isalpha 2712                                   _fputs 2612  
                                 _hours 01B3                                   _month 02DF  
                     __end_of_I2C_Ready 29C2                                   pad@fp 0011  
                                 _width 00E4                                   _putch 29C4  
                                 main@i 00DE                                   dtoa@d 001E  
                                 dtoa@i 003E                                   dtoa@n 0036  
                                 dtoa@p 0030                                   dtoa@s 0034  
                                 dtoa@w 0032                         __end_of_islower 2784  
                     __end_of_I2C_Start 2820                          ??_offBombillas 0001  
                     __end_of_I2C_Write 28CA                         __end_of_isupper 27BC  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 253A  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_toupper 23D4  
                        _var_RH_Decimal 00FD                          ?_LCD_String_xy 000A  
                          _toupper$1461 000D                    onBombillas@buffer_TX 0100  
               __end_of_LCD_Custom_Char 25CC                         __initialization 212A  
                          __end_of_main 1A2A                            __end_of_dtoa 12B6  
                          __end_of_xtoa 1590                       ?_mostrarFechaHora 0001  
                       ??_verificarHora 0007                               ??_I2C_Ack 0001  
                    ??_mostrarFechaHora 0076                                  ??_main 0060  
                                ??_dtoa 0026                                  ??_xtoa 0027  
                         __activetblptr 000002                           main@buffer_TX 00BA  
                                _ADCON1 000FC1                                  ?_fputc 0001  
                                ?_fputs 000A                                  ?_putch 0001  
                   _DHT11_CheckResponse 287C                        LCD_String_xy@msg 000B  
                      LCD_String_xy@pos 000A                        LCD_String_xy@row 000D  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                          onBombillas@i 019A                            vfprintf@cfmt 005E  
                             ??___aodiv 0011                               ??___aomod 0011  
                                _onLEDS 1D16                    ?_DHT11_CheckResponse 0001  
                                clear_0 21A8                                  clear_1 21B4  
                                clear_2 21C0                      _I2C_Repeated_Start 2820  
                                pad@buf 0013                               ??_offLEDS 0001  
                      ??_imprimirTemHum 0060                    __size_of_LCD_Command 001C  
                                dtoa@fp 001C                                  _strlen 27BC  
                      offLEDS@buffer_TX 0001                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000B  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 2316  
                  __size_of_onBombillas 0454                               ??_sprintf 0060  
                                xtoa@fp 001C                               ??_toupper 0009  
                        _var_T_Integral 00FA                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 21C6  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000D  
                         ___rparam_used 000001                              _banAgregar 00F8  
                  ??_I2C_Repeated_Start 0002                        ?_LCD_Custom_Char 0008  
                        __pcstackCOMRAM 0001                            __pidataBANK0 29C2  
                          __pidataBANK1 28EA                            __pidataBANK2 2074  
                          __pidataBANK3 21D0                   ??_DHT11_CheckResponse 0001  
                       _var_RH_Integral 00FC                           __end_of_fputc 1FAE  
                         __end_of_fputs 2656                           __end_of_putch 29C6  
                          ??_LCD_String 000A                    __end_of_offBombillas 22B4  
                            ??_I2C_Nack 0001                              ??_I2C_Init 0001  
                            ??_I2C_Read 0001                              ??_I2C_Stop 0001  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00E2                              __pbssBANK1 01A7  
                            __pbssBANK2 02B5                              ??_LCD_Char 0007  
                            ??_LCD_Init 0008                      __end_of_LCD_String 2432  
                          I2C_Read@flag 0001                          I2C_Read@buffer 0002  
                         offBombillas@i 0016                                 ?_onLEDS 0001  
                               _I2C_Ack 299C                                 _ACKSTAT 007E2E  
                               ?_strlen 0001                      __size_of_vfpfcnvrt 0298  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                                 _MSdelay 253A  
                         ??_DHT11_Start 0001                               _I2C_Ready 29B0  
                             _I2C_Start 27F2                               _I2C_Write 28A8  
                         LCD_String@msg 0008                                 __Hparam 0000  
                               __Lparam 0000                                 ___aodiv 1A2A  
                     _RTC_Read_Calendar 248E                                 ___aomod 1BB2  
                          _bombillaCar0 01F2                       offBombillas@F3585 026B  
                       __size_of_onLEDS 00EA                               ?_vfprintf 0060  
                          __psmallconst 0800                                 _acumBom 01A7  
                    ?_RTC_Read_Calendar 0001                                 __pcinit 212A  
                               __ramtop 0800                                 __ptext0 1828  
                               __ptext1 295C                                 __ptext2 0858  
                               __ptext3 1D16                                 __ptext4 2584  
                               __ptext5 2316                                 __ptext6 2250  
                               __ptext7 0CAC                                 __ptext8 25CC  
                               __ptext9 248E                                 _offLEDS 2316  
                       __size_of_strlen 0036                            __size_of_abs 0040  
                          __size_of_pad 00C6                                 _isalpha 26D6  
                               onLEDS@i 0022                     ??_RTC_Read_Calendar 0003  
                               _islower 274C                                 _isupper 2784  
                               _sprintf 24E8               __size_of_mostrarFechaHora 0326  
                               _toupper 2376                    end_of_initialization 21C6  
                               fputc@fp 0003                          LCD_Command@cmd 0007  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 24E8  
                     __end_of_vfpfcnvrt 1828                   __size_of_offBombillas 0064  
                             _RCSTAbits 000FAB                     __end_of_DHT11_Start 28EA  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005E  
                               strlen@a 0003                                 strlen@s 0001  
                             _PORTAbits 000F80                   __end_of_verificarHora 2974  
                             _PORTCbits 000F82                 __size_of_DHT11_ReadData 005C  
                             _TRISCbits 000F94                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                     __size_of_I2C_Stop 0014                            _offBombillas 2250  
                             _TXSTAbits 000FAC                       __size_of_LCD_Char 001C  
                     __size_of_LCD_Init 002E                      DHT11_ReadData@data 0002  
                         ??_LCD_Command 0007                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@fp 0043                             vfpfcnvrt@ll 004D  
                           _BAUDCONbits 000FB8                          __end_of_onLEDS 1E00  
                         ??_onBombillas 0024                          __end_of_strlen 27F2  
                   start_initialization 212A                             __end_of_abs 2696  
                           __end_of_pad 2074    I2C_Repeated_Start@slave_read_address 0002  
                           ??_I2C_Ready 0001                             _DHT11_Start 28CA  
                           ??_I2C_Start 0002             __end_of_DHT11_CheckResponse 28A8  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 26D6  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 0062  
           __size_of_I2C_Repeated_Start 002E                                ??_onLEDS 000C  
                         _var_T_Decimal 00FB                             __pdataBANK0 00FE  
                           __pdataBANK1 01DB                             __pdataBANK2 0200  
                           __pdataBANK3 0300                                ?_I2C_Ack 0001  
                              ??_strlen 0003                __size_of_LCD_Custom_Char 0048  
                   __end_of_LCD_Command 2942                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0001  
                      _mostrarFechaHora 0CAC                       main@buffer_TX_750 0094  
               __size_of_imprimirTemHum 00E4                     __end_of_onBombillas 0CAC  
                              ?_MSdelay 0001                               _dtoa$1365 002E  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013                          _DHT11_ReadData 2432  
                              ?_offLEDS 0001                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 2988  
                              ?_isalpha 0001                                _I2C_Init 2942  
                              _I2C_Read 2712                                _I2C_Stop 2974  
                              ?_islower 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000E                                ?_sprintf 0066  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_toupper 0007                          __size_of_putch 0002  
                              MSdelay@i 0003                                MSdelay@j 0005  
             mostrarFechaHora@buffer_TX 0078                                _LCD_Char 290A  
                              _LCD_Init 284E                 __size_of_RTC_Read_Clock 0046  
                             _vec_value 01D1                               main@F3563 0326  
                             main@F3566 0300                  __end_of_DHT11_ReadData 248E  
                           _LCD_Command 2926                               _vfpfcnvrt 1590  
                             _xtoa$1376 002F                               _xtoa$1377 0031  
                      __size_of_I2C_Ack 0014                               main@i_751 00E0  
                           _onBombillas 0858                        onLEDS@T_Integral 001F  
                     ??_LCD_Custom_Char 000A                              vfpfcnvrt@c 005D  
                             copy_data0 213E                               copy_data1 215E  
                             copy_data2 217E            I2C_Start@slave_write_address 0002  
                      __size_of_MSdelay 004A                                __Hrparam 0000  
                            vfprintf@ap 0064                                __Lrparam 0000  
                            vfprintf@fp 0060                           I2C_Write@data 0001  
                       ?_DHT11_ReadData 0001                        __size_of___aodiv 0188  
                      __size_of___aomod 0164                              ?_vfpfcnvrt 0043  
                       DHT11_ReadData@i 0001                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                        __size_of_offLEDS 0060  
                            sprintf@fmt 0068                        __size_of_isalpha 003C  
                      __size_of_islower 0038                                __ptext10 2974  
                              __ptext11 27F2                                __ptext20 24E8  
                              __ptext12 2820                                __ptext21 22B4  
                              __ptext13 28A8                                __ptext30 27BC  
                              __ptext22 1590                                __ptext14 2712  
                              __ptext31 2612                                __ptext23 12B6  
                              __ptext15 29B0                                __ptext40 2926  
                              __ptext32 1EE4                                __ptext24 2376  
                              __ptext16 2988                                __ptext41 253A  
                              __ptext33 29C4                                __ptext25 274C  
                              __ptext17 299C                                __ptext42 2942  
                              __ptext34 2656                                __ptext26 2784  
                              __ptext18 284E                                __ptext43 28CA  
                              __ptext35 1BB2                                __ptext27 26D6  
                              __ptext19 1E00                                __ptext44 2432  
                              __ptext36 1A2A                                __ptext28 0FD2  
                              __ptext45 287C                                __ptext37 2696  
                              __ptext29 1FAE                                __ptext38 23D4  
                              __ptext39 290A                        __size_of_isupper 0038  
                        _imprimirTemHum 1E00                        __size_of_sprintf 0052  
                      __size_of_toupper 005E                           __size_of_main 0202  
                         __size_of_dtoa 02E4                             onLEDS@F3581 0293  
                          ?_DHT11_Start 0001                           __size_of_xtoa 02DA  
                __size_of_verificarHora 0018                              MSdelay@val 0001  
                              offLEDS@i 0010                __end_of_mostrarFechaHora 0FD2  
                              _vfprintf 22B4                             onLEDS@valor 0020  
                     mostrarFechaHora@i 0092                              _LCD_String 23D4  
                      ___aomod@dividend 0001                  __end_of_imprimirTemHum 1EE4  
                              isalpha@c 0001                   offBombillas@buffer_TX 0001  
                    LCD_Custom_Char@loc 000A                      LCD_Custom_Char@msg 0008  
                             sprintf@ap 006E                                islower@c 0001  
            __end_of_I2C_Repeated_Start 284E                                isupper@c 0001  
                        _RTC_Read_Clock 25CC                            offLEDS@F3575 02A6  
          __size_of_DHT11_CheckResponse 002C                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0049                         ___aomod@counter 0011  
                              sprintf@f 0070                           _verificarHora 295C  
                              sprintf@s 0066                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                         ?_imprimirTemHum 0001  
                           _SSPCON2bits 000FC5                            ___aodiv@sign 0012  
                __end_of_RTC_Read_Clock 2612                        onBombillas@F3602 034A  
                      onBombillas@F3605 0280                        onBombillas@F3590 0236  
                      onBombillas@F3593 021B                        onBombillas@F3596 0200  
                      onBombillas@F3599 0365                            ___aomod@sign 0012  
                      onBombillas@i_800 01A0                        onBombillas@i_803 01A2  
                      onBombillas@i_806 01A4                        onBombillas@i_807 01A6  
