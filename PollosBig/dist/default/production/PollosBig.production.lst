

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 22:48:50 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  0029E1                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _AM_PM
   112  0029E1  05                 	db	5
   113                           
   114                           ;initializer for _Clock_type
   115  0029E2  06                 	db	6
   116                           
   117                           	psect	idataBANK1
   118  0029D2                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for _days
   122  0029D2  53                 	db	83
   123  0029D3  4D                 	db	77
   124  0029D4  54                 	db	84
   125  0029D5  57                 	db	87
   126  0029D6  74                 	db	116
   127  0029D7  46                 	db	70
   128  0029D8  73                 	db	115
   129                           
   130                           ;initializer for _bombillaCar0
   131  0029D9  0E                 	db	14
   132  0029DA  11                 	db	17
   133  0029DB  11                 	db	17
   134  0029DC  11                 	db	17
   135  0029DD  0E                 	db	14
   136  0029DE  0E                 	db	14
   137  0029DF  00                 	db	0
   138  0029E0  00                 	db	0
   139                           
   140                           	psect	idataBANK2
   141  001DFE                     __pidataBANK2:
   142                           	callstack 0
   143                           
   144                           ;initializer for encenderBombillas@F3600
   145  001DFE  53                 	db	83
   146  001DFF  65                 	db	101
   147  001E00  20                 	db	32
   148  001E01  65                 	db	101
   149  001E02  6E                 	db	110
   150  001E03  63                 	db	99
   151  001E04  65                 	db	101
   152  001E05  6E                 	db	110
   153  001E06  64                 	db	100
   154  001E07  69                 	db	105
   155  001E08  6F                 	db	111
   156  001E09  20                 	db	32
   157  001E0A  6C                 	db	108
   158  001E0B  61                 	db	97
   159  001E0C  20                 	db	32
   160  001E0D  62                 	db	98
   161  001E0E  6F                 	db	111
   162  001E0F  6D                 	db	109
   163  001E10  62                 	db	98
   164  001E11  69                 	db	105
   165  001E12  6C                 	db	108
   166  001E13  6C                 	db	108
   167  001E14  61                 	db	97
   168  001E15  20                 	db	32
   169  001E16  34                 	db	52
   170  001E17  0D                 	db	13
   171  001E18  00                 	db	0
   172                           
   173                           ;initializer for encenderBombillas@F3597
   174  001E19  53                 	db	83
   175  001E1A  65                 	db	101
   176  001E1B  20                 	db	32
   177  001E1C  65                 	db	101
   178  001E1D  6E                 	db	110
   179  001E1E  63                 	db	99
   180  001E1F  65                 	db	101
   181  001E20  6E                 	db	110
   182  001E21  64                 	db	100
   183  001E22  69                 	db	105
   184  001E23  6F                 	db	111
   185  001E24  20                 	db	32
   186  001E25  6C                 	db	108
   187  001E26  61                 	db	97
   188  001E27  20                 	db	32
   189  001E28  62                 	db	98
   190  001E29  6F                 	db	111
   191  001E2A  6D                 	db	109
   192  001E2B  62                 	db	98
   193  001E2C  69                 	db	105
   194  001E2D  6C                 	db	108
   195  001E2E  6C                 	db	108
   196  001E2F  61                 	db	97
   197  001E30  20                 	db	32
   198  001E31  33                 	db	51
   199  001E32  0D                 	db	13
   200  001E33  00                 	db	0
   201                           
   202                           ;initializer for encenderBombillas@F3594
   203  001E34  53                 	db	83
   204  001E35  65                 	db	101
   205  001E36  20                 	db	32
   206  001E37  65                 	db	101
   207  001E38  6E                 	db	110
   208  001E39  63                 	db	99
   209  001E3A  65                 	db	101
   210  001E3B  6E                 	db	110
   211  001E3C  64                 	db	100
   212  001E3D  69                 	db	105
   213  001E3E  6F                 	db	111
   214  001E3F  20                 	db	32
   215  001E40  6C                 	db	108
   216  001E41  61                 	db	97
   217  001E42  20                 	db	32
   218  001E43  62                 	db	98
   219  001E44  6F                 	db	111
   220  001E45  6D                 	db	109
   221  001E46  62                 	db	98
   222  001E47  69                 	db	105
   223  001E48  6C                 	db	108
   224  001E49  6C                 	db	108
   225  001E4A  61                 	db	97
   226  001E4B  20                 	db	32
   227  001E4C  32                 	db	50
   228  001E4D  0D                 	db	13
   229  001E4E  00                 	db	0
   230                           
   231                           ;initializer for encenderBombillas@F3591
   232  001E4F  53                 	db	83
   233  001E50  65                 	db	101
   234  001E51  20                 	db	32
   235  001E52  65                 	db	101
   236  001E53  6E                 	db	110
   237  001E54  63                 	db	99
   238  001E55  65                 	db	101
   239  001E56  6E                 	db	110
   240  001E57  64                 	db	100
   241  001E58  69                 	db	105
   242  001E59  6F                 	db	111
   243  001E5A  20                 	db	32
   244  001E5B  6C                 	db	108
   245  001E5C  61                 	db	97
   246  001E5D  20                 	db	32
   247  001E5E  62                 	db	98
   248  001E5F  6F                 	db	111
   249  001E60  6D                 	db	109
   250  001E61  62                 	db	98
   251  001E62  69                 	db	105
   252  001E63  6C                 	db	108
   253  001E64  6C                 	db	108
   254  001E65  61                 	db	97
   255  001E66  20                 	db	32
   256  001E67  31                 	db	49
   257  001E68  0D                 	db	13
   258  001E69  00                 	db	0
   259                           
   260                           ;initializer for mostrarFechaHora@F3615
   261  001E6A  52                 	db	82
   262  001E6B  65                 	db	101
   263  001E6C  67                 	db	103
   264  001E6D  69                 	db	105
   265  001E6E  73                 	db	115
   266  001E6F  74                 	db	116
   267  001E70  72                 	db	114
   268  001E71  61                 	db	97
   269  001E72  6E                 	db	110
   270  001E73  64                 	db	100
   271  001E74  6F                 	db	111
   272  001E75  20                 	db	32
   273  001E76  48                 	db	72
   274  001E77  6F                 	db	111
   275  001E78  72                 	db	114
   276  001E79  61                 	db	97
   277  001E7A  20                 	db	32
   278  001E7B  79                 	db	121
   279  001E7C  20                 	db	32
   280  001E7D  46                 	db	70
   281  001E7E  65                 	db	101
   282  001E7F  63                 	db	99
   283  001E80  68                 	db	104
   284  001E81  61                 	db	97
   285  001E82  0D                 	db	13
   286  001E83  00                 	db	0
   287                           
   288                           ;initializer for offBombillas@F3586
   289  001E84  42                 	db	66
   290  001E85  6F                 	db	111
   291  001E86  6D                 	db	109
   292  001E87  62                 	db	98
   293  001E88  69                 	db	105
   294  001E89  6C                 	db	108
   295  001E8A  6C                 	db	108
   296  001E8B  61                 	db	97
   297  001E8C  73                 	db	115
   298  001E8D  20                 	db	32
   299  001E8E  41                 	db	65
   300  001E8F  70                 	db	112
   301  001E90  61                 	db	97
   302  001E91  67                 	db	103
   303  001E92  61                 	db	97
   304  001E93  64                 	db	100
   305  001E94  61                 	db	97
   306  001E95  73                 	db	115
   307  001E96  20                 	db	32
   308  001E97  0D                 	db	13
   309  001E98  00                 	db	0
   310                           
   311                           ;initializer for encenderBombillas@F3607
   312  001E99  54                 	db	84
   313  001E9A  65                 	db	101
   314  001E9B  6D                 	db	109
   315  001E9C  70                 	db	112
   316  001E9D  65                 	db	101
   317  001E9E  72                 	db	114
   318  001E9F  61                 	db	97
   319  001EA0  74                 	db	116
   320  001EA1  75                 	db	117
   321  001EA2  72                 	db	114
   322  001EA3  61                 	db	97
   323  001EA4  20                 	db	32
   324  001EA5  41                 	db	65
   325  001EA6  6C                 	db	108
   326  001EA7  74                 	db	116
   327  001EA8  61                 	db	97
   328  001EA9  20                 	db	32
   329  001EAA  0D                 	db	13
   330  001EAB  00                 	db	0
   331                           
   332                           ;initializer for onLEDS@F3582
   333  001EAC  54                 	db	84
   334  001EAD  65                 	db	101
   335  001EAE  6D                 	db	109
   336  001EAF  70                 	db	112
   337  001EB0  65                 	db	101
   338  001EB1  72                 	db	114
   339  001EB2  61                 	db	97
   340  001EB3  74                 	db	116
   341  001EB4  75                 	db	117
   342  001EB5  72                 	db	114
   343  001EB6  61                 	db	97
   344  001EB7  20                 	db	32
   345  001EB8  49                 	db	73
   346  001EB9  64                 	db	100
   347  001EBA  65                 	db	101
   348  001EBB  61                 	db	97
   349  001EBC  6C                 	db	108
   350  001EBD  0D                 	db	13
   351  001EBE  00                 	db	0
   352                           
   353                           ;initializer for offLEDS@F3576
   354  001EBF  41                 	db	65
   355  001EC0  70                 	db	112
   356  001EC1  61                 	db	97
   357  001EC2  67                 	db	103
   358  001EC3  61                 	db	97
   359  001EC4  6E                 	db	110
   360  001EC5  64                 	db	100
   361  001EC6  6F                 	db	111
   362  001EC7  20                 	db	32
   363  001EC8  4C                 	db	76
   364  001EC9  45                 	db	69
   365  001ECA  44                 	db	68
   366  001ECB  53                 	db	83
   367  001ECC  0D                 	db	13
   368  001ECD  00                 	db	0
   369                           
   370                           	psect	idataBANK3
   371  0021D4                     __pidataBANK3:
   372                           	callstack 0
   373                           
   374                           ;initializer for main@F3567
   375  0021D4  4C                 	db	76
   376  0021D5  61                 	db	97
   377  0021D6  20                 	db	32
   378  0021D7  68                 	db	104
   379  0021D8  6F                 	db	111
   380  0021D9  72                 	db	114
   381  0021DA  61                 	db	97
   382  0021DB  20                 	db	32
   383  0021DC  6E                 	db	110
   384  0021DD  6F                 	db	111
   385  0021DE  63                 	db	99
   386  0021DF  74                 	db	116
   387  0021E0  75                 	db	117
   388  0021E1  72                 	db	114
   389  0021E2  6E                 	db	110
   390  0021E3  61                 	db	97
   391  0021E4  20                 	db	32
   392  0021E5  65                 	db	101
   393  0021E6  6D                 	db	109
   394  0021E7  70                 	db	112
   395  0021E8  69                 	db	105
   396  0021E9  65                 	db	101
   397  0021EA  7A                 	db	122
   398  0021EB  61                 	db	97
   399  0021EC  20                 	db	32
   400  0021ED  61                 	db	97
   401  0021EE  20                 	db	32
   402  0021EF  6C                 	db	108
   403  0021F0  61                 	db	97
   404  0021F1  73                 	db	115
   405  0021F2  20                 	db	32
   406  0021F3  31                 	db	49
   407  0021F4  38                 	db	56
   408  0021F5  3A                 	db	58
   409  0021F6  30                 	db	48
   410  0021F7  30                 	db	48
   411  0021F8  0D                 	db	13
   412  0021F9  00                 	db	0
   413                           
   414                           ;initializer for main@F3564
   415  0021FA  4E                 	db	78
   416  0021FB  6F                 	db	111
   417  0021FC  20                 	db	32
   418  0021FD  73                 	db	115
   419  0021FE  65                 	db	101
   420  0021FF  20                 	db	32
   421  002200  68                 	db	104
   422  002201  61                 	db	97
   423  002202  20                 	db	32
   424  002203  70                 	db	112
   425  002204  72                 	db	114
   426  002205  65                 	db	101
   427  002206  6E                 	db	110
   428  002207  64                 	db	100
   429  002208  69                 	db	105
   430  002209  64                 	db	100
   431  00220A  6F                 	db	111
   432  00220B  20                 	db	32
   433  00220C  6E                 	db	110
   434  00220D  69                 	db	105
   435  00220E  6E                 	db	110
   436  00220F  67                 	db	103
   437  002210  75                 	db	117
   438  002211  6E                 	db	110
   439  002212  61                 	db	97
   440  002213  20                 	db	32
   441  002214  62                 	db	98
   442  002215  6F                 	db	111
   443  002216  6D                 	db	109
   444  002217  62                 	db	98
   445  002218  69                 	db	105
   446  002219  6C                 	db	108
   447  00221A  6C                 	db	108
   448  00221B  61                 	db	97
   449  00221C  0D                 	db	13
   450  00221D  00                 	db	0
   451                           
   452                           ;initializer for encenderBombillas@F3604
   453  00221E  53                 	db	83
   454  00221F  65                 	db	101
   455  002220  20                 	db	32
   456  002221  65                 	db	101
   457  002222  6E                 	db	110
   458  002223  63                 	db	99
   459  002224  65                 	db	101
   460  002225  6E                 	db	110
   461  002226  64                 	db	100
   462  002227  69                 	db	105
   463  002228  6F                 	db	111
   464  002229  20                 	db	32
   465  00222A  6C                 	db	108
   466  00222B  61                 	db	97
   467  00222C  20                 	db	32
   468  00222D  62                 	db	98
   469  00222E  6F                 	db	111
   470  00222F  6D                 	db	109
   471  002230  62                 	db	98
   472  002231  69                 	db	105
   473  002232  6C                 	db	108
   474  002233  6C                 	db	108
   475  002234  61                 	db	97
   476  002235  20                 	db	32
   477  002236  35                 	db	53
   478  002237  0D                 	db	13
   479  002238  00                 	db	0
   480  0000                     _PORTCbits	set	3970
   481  0000                     _TXREG	set	4013
   482  0000                     _ADCON1	set	4033
   483  0000                     _OSCCON	set	4051
   484  0000                     _SPBRG	set	4015
   485  0000                     _RCSTAbits	set	4011
   486  0000                     _BAUDCONbits	set	4024
   487  0000                     _TXSTAbits	set	4012
   488  0000                     _TRISCbits	set	3988
   489  0000                     _PORTAbits	set	3968
   490  0000                     _TRISA	set	3986
   491  0000                     _SSPCON2bits	set	4037
   492  0000                     _SSPADD	set	4040
   493  0000                     _SSPCON2	set	4037
   494  0000                     _SSPCON1	set	4038
   495  0000                     _SSPSTAT	set	4039
   496  0000                     _SSPBUF	set	4041
   497  0000                     _SSPSTATbits	set	4039
   498  0000                     _LATD	set	3980
   499  0000                     _TRISC	set	3988
   500  0000                     _TRISD	set	3989
   501  0000                     _LATC2	set	31834
   502  0000                     _ACKEN	set	32300
   503  0000                     _ACKDT	set	32301
   504  0000                     _PEN	set	32298
   505  0000                     _RSEN	set	32297
   506  0000                     _ACKSTAT	set	32302
   507  0000                     _SSPIF	set	31987
   508  0000                     _SSPIE	set	31979
   509  0000                     _TRISB1	set	31897
   510  0000                     _TRISB0	set	31896
   511  0000                     _RCEN	set	32299
   512  0000                     _LATC1	set	31833
   513  0000                     _LATC0	set	31832
   514                           
   515                           	psect	smallconst
   516  000800                     __psmallconst:
   517                           	callstack 0
   518  000800  00                 	db	0
   519  000801                     STR_1:
   520  000801  45                 	db	69	;'E'
   521  000802  52                 	db	82	;'R'
   522  000803  52                 	db	82	;'R'
   523  000804  4F                 	db	79	;'O'
   524  000805  52                 	db	82	;'R'
   525  000806  20                 	db	32
   526  000807  48                 	db	72	;'H'
   527  000808  4F                 	db	79	;'O'
   528  000809  52                 	db	82	;'R'
   529  00080A  41                 	db	65	;'A'
   530  00080B  20                 	db	32
   531  00080C  00                 	db	0
   532  00080D                     STR_17:
   533  00080D  43                 	db	67	;'C'
   534  00080E  61                 	db	97	;'a'
   535  00080F  6C                 	db	108	;'l'
   536  000810  20                 	db	32
   537  000811  25                 	db	37
   538  000812  78                 	db	120	;'x'
   539  000813  2D                 	db	45
   540  000814  00                 	db	0
   541  000815                     STR_13:
   542  000815  54                 	db	84	;'T'
   543  000816  69                 	db	105	;'i'
   544  000817  6D                 	db	109	;'m'
   545  000818  3A                 	db	58	;':'
   546  000819  25                 	db	37
   547  00081A  78                 	db	120	;'x'
   548  00081B  3A                 	db	58	;':'
   549  00081C  00                 	db	0
   550  00081D                     STR_2:
   551  00081D  44                 	db	68	;'D'
   552  00081E  49                 	db	73	;'I'
   553  00081F  55                 	db	85	;'U'
   554  000820  52                 	db	82	;'R'
   555  000821  4E                 	db	78	;'N'
   556  000822  41                 	db	65	;'A'
   557  000823  00                 	db	0
   558  000824                     STR_4:
   559  000824  2E                 	db	46
   560  000825  25                 	db	37
   561  000826  64                 	db	100	;'d'
   562  000827  20                 	db	32
   563  000828  00                 	db	0
   564  000829                     STR_11:
   565  000829  25                 	db	37
   566  00082A  78                 	db	120	;'x'
   567  00082B  20                 	db	32
   568  00082C  00                 	db	0
   569  00082D                     STR_6:
   570  00082D  2E                 	db	46
   571  00082E  25                 	db	37
   572  00082F  64                 	db	100	;'d'
   573  000830  00                 	db	0
   574  000831                     STR_23:
   575  000831  57                 	db	87	;'W'
   576  000832  65                 	db	101	;'e'
   577  000833  64                 	db	100	;'d'
   578  000834  00                 	db	0
   579  000835                     STR_22:
   580  000835  54                 	db	84	;'T'
   581  000836  75                 	db	117	;'u'
   582  000837  65                 	db	101	;'e'
   583  000838  00                 	db	0
   584  000839                     STR_25:
   585  000839  46                 	db	70	;'F'
   586  00083A  72                 	db	114	;'r'
   587  00083B  69                 	db	105	;'i'
   588  00083C  00                 	db	0
   589  00083D                     STR_21:
   590  00083D  4D                 	db	77	;'M'
   591  00083E  6F                 	db	111	;'o'
   592  00083F  6E                 	db	110	;'n'
   593  000840  00                 	db	0
   594  000841                     STR_20:
   595  000841  53                 	db	83	;'S'
   596  000842  75                 	db	117	;'u'
   597  000843  6E                 	db	110	;'n'
   598  000844  00                 	db	0
   599  000845                     STR_26:
   600  000845  53                 	db	83	;'S'
   601  000846  61                 	db	97	;'a'
   602  000847  74                 	db	116	;'t'
   603  000848  00                 	db	0
   604  000849                     STR_24:
   605  000849  54                 	db	84	;'T'
   606  00084A  68                 	db	104	;'h'
   607  00084B  75                 	db	117	;'u'
   608  00084C  00                 	db	0
   609  00084D                     STR_10:
   610  00084D  41                 	db	65	;'A'
   611  00084E  4D                 	db	77	;'M'
   612  00084F  00                 	db	0
   613  000850                     STR_9:
   614  000850  50                 	db	80	;'P'
   615  000851  4D                 	db	77	;'M'
   616  000852  00                 	db	0
   617  000853                     STR_7:
   618  000853  48                 	db	72	;'H'
   619  000854  00                 	db	0
   620  000855                     STR_8:
   621  000855  54                 	db	84	;'T'
   622  000856  00                 	db	0
   623  000857  00                 	db	0	; dummy byte at the end
   624  0000                     
   625                           ; #config settings
   626                           
   627                           	psect	cinit
   628  00212E                     __pcinit:
   629                           	callstack 0
   630  00212E                     start_initialization:
   631                           	callstack 0
   632  00212E                     __initialization:
   633                           	callstack 0
   634                           
   635                           ; Initialize objects allocated to BANK3 (101 bytes)
   636                           ; load TBLPTR registers with __pidataBANK3
   637  00212E  0ED4               	movlw	low __pidataBANK3
   638  002130  6EF6               	movwf	tblptrl,c
   639  002132  0E21               	movlw	high __pidataBANK3
   640  002134  6EF7               	movwf	tblptrh,c
   641  002136  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   642  002138  6EF8               	movwf	tblptru,c
   643  00213A  EE03  F000         	lfsr	0,__pdataBANK3
   644  00213E  EE10 F065          	lfsr	1,101
   645  002142                     copy_data0:
   646  002142  0009               	tblrd		*+
   647  002144  CFF5 FFEE          	movff	tablat,postinc0
   648  002148  50E5               	movf	postdec1,w,c
   649  00214A  50E1               	movf	fsr1l,w,c
   650  00214C  E1FA               	bnz	copy_data0
   651                           
   652                           ; Initialize objects allocated to BANK2 (208 bytes)
   653                           ; load TBLPTR registers with __pidataBANK2
   654  00214E  0EFE               	movlw	low __pidataBANK2
   655  002150  6EF6               	movwf	tblptrl,c
   656  002152  0E1D               	movlw	high __pidataBANK2
   657  002154  6EF7               	movwf	tblptrh,c
   658  002156  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   659  002158  6EF8               	movwf	tblptru,c
   660  00215A  EE02  F000         	lfsr	0,__pdataBANK2
   661  00215E  EE10 F0D0          	lfsr	1,208
   662  002162                     copy_data1:
   663  002162  0009               	tblrd		*+
   664  002164  CFF5 FFEE          	movff	tablat,postinc0
   665  002168  50E5               	movf	postdec1,w,c
   666  00216A  50E1               	movf	fsr1l,w,c
   667  00216C  E1FA               	bnz	copy_data1
   668                           
   669                           ; Initialize objects allocated to BANK1 (15 bytes)
   670                           ; load TBLPTR registers with __pidataBANK1
   671  00216E  0ED2               	movlw	low __pidataBANK1
   672  002170  6EF6               	movwf	tblptrl,c
   673  002172  0E29               	movlw	high __pidataBANK1
   674  002174  6EF7               	movwf	tblptrh,c
   675  002176  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   676  002178  6EF8               	movwf	tblptru,c
   677  00217A  EE01  F0F1         	lfsr	0,__pdataBANK1
   678  00217E  EE10 F00F          	lfsr	1,15
   679  002182                     copy_data2:
   680  002182  0009               	tblrd		*+
   681  002184  CFF5 FFEE          	movff	tablat,postinc0
   682  002188  50E5               	movf	postdec1,w,c
   683  00218A  50E1               	movf	fsr1l,w,c
   684  00218C  E1FA               	bnz	copy_data2
   685                           
   686                           ; Initialize objects allocated to BANK0 (2 bytes)
   687                           ; load TBLPTR registers with __pidataBANK0
   688  00218E  0EE1               	movlw	low __pidataBANK0
   689  002190  6EF6               	movwf	tblptrl,c
   690  002192  0E29               	movlw	high __pidataBANK0
   691  002194  6EF7               	movwf	tblptrh,c
   692  002196  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   693  002198  6EF8               	movwf	tblptru,c
   694  00219A  0009               	tblrd		*+	;fetch initializer
   695  00219C  CFF5 F0FE          	movff	tablat,__pdataBANK0
   696  0021A0  0009               	tblrd		*+	;fetch initializer
   697  0021A2  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   698                           
   699                           ; Clear objects allocated to BANK2 (32 bytes)
   700  0021A6  EE02  F0D0         	lfsr	0,__pbssBANK2
   701  0021AA  0E20               	movlw	32
   702  0021AC                     clear_0:
   703  0021AC  6AEE               	clrf	postinc0,c
   704  0021AE  06E8               	decf	wreg,f,c
   705  0021B0  E1FD               	bnz	clear_0
   706                           
   707                           ; Clear objects allocated to BANK1 (74 bytes)
   708  0021B2  EE01  F0A7         	lfsr	0,__pbssBANK1
   709  0021B6  0E4A               	movlw	74
   710  0021B8                     clear_1:
   711  0021B8  6AEE               	clrf	postinc0,c
   712  0021BA  06E8               	decf	wreg,f,c
   713  0021BC  E1FD               	bnz	clear_1
   714                           
   715                           ; Clear objects allocated to BANK0 (28 bytes)
   716  0021BE  EE00  F0E2         	lfsr	0,__pbssBANK0
   717  0021C2  0E1C               	movlw	28
   718  0021C4                     clear_2:
   719  0021C4  6AEE               	clrf	postinc0,c
   720  0021C6  06E8               	decf	wreg,f,c
   721  0021C8  E1FD               	bnz	clear_2
   722  0021CA                     end_of_initialization:
   723                           	callstack 0
   724  0021CA                     __end_of__initialization:
   725                           	callstack 0
   726  0021CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   727  0021CC  6EF8               	movwf	tblptru,c
   728  0021CE  0100               	movlb	0
   729  0021D0  EF16  F00C         	goto	_main	;jump to C main() function
   730                           
   731                           	psect	bssBANK0
   732  0000E2                     __pbssBANK0:
   733                           	callstack 0
   734  0000E2                     _width:
   735                           	callstack 0
   736  0000E2                     	ds	2
   737  0000E4                     _prec:
   738                           	callstack 0
   739  0000E4                     	ds	2
   740  0000E6                     _flags:
   741                           	callstack 0
   742  0000E6                     	ds	2
   743  0000E8                     _Year:
   744                           	callstack 0
   745  0000E8                     	ds	2
   746  0000EA                     _Month:
   747                           	callstack 0
   748  0000EA                     	ds	2
   749  0000EC                     _Date:
   750                           	callstack 0
   751  0000EC                     	ds	2
   752  0000EE                     _Day:
   753                           	callstack 0
   754  0000EE                     	ds	2
   755  0000F0                     _hour:
   756                           	callstack 0
   757  0000F0                     	ds	2
   758  0000F2                     _min:
   759                           	callstack 0
   760  0000F2                     	ds	2
   761  0000F4                     _sec:
   762                           	callstack 0
   763  0000F4                     	ds	2
   764  0000F6                     _banAgregar:
   765                           	callstack 0
   766  0000F6                     	ds	2
   767  0000F8                     _j:
   768                           	callstack 0
   769  0000F8                     	ds	1
   770  0000F9                     _valor2:
   771                           	callstack 0
   772  0000F9                     	ds	1
   773  0000FA                     _var_T_Integral:
   774                           	callstack 0
   775  0000FA                     	ds	1
   776  0000FB                     _var_T_Decimal:
   777                           	callstack 0
   778  0000FB                     	ds	1
   779  0000FC                     _var_RH_Integral:
   780                           	callstack 0
   781  0000FC                     	ds	1
   782  0000FD                     _var_RH_Decimal:
   783                           	callstack 0
   784  0000FD                     	ds	1
   785                           
   786                           	psect	dataBANK0
   787  0000FE                     __pdataBANK0:
   788                           	callstack 0
   789  0000FE                     _AM_PM:
   790                           	callstack 0
   791  0000FE                     	ds	1
   792  0000FF                     _Clock_type:
   793                           	callstack 0
   794  0000FF                     	ds	1
   795                           
   796                           	psect	bssBANK1
   797  0001A7                     __pbssBANK1:
   798                           	callstack 0
   799  0001A7                     _nout:
   800                           	callstack 0
   801  0001A7                     	ds	2
   802  0001A9                     _acumBom:
   803                           	callstack 0
   804  0001A9                     	ds	2
   805  0001AB                     _year:
   806                           	callstack 0
   807  0001AB                     	ds	10
   808  0001B5                     _month:
   809                           	callstack 0
   810  0001B5                     	ds	10
   811  0001BF                     _date:
   812                           	callstack 0
   813  0001BF                     	ds	10
   814  0001C9                     _hours:
   815                           	callstack 0
   816  0001C9                     	ds	10
   817  0001D3                     _mins:
   818                           	callstack 0
   819  0001D3                     	ds	10
   820  0001DD                     _secs:
   821                           	callstack 0
   822  0001DD                     	ds	10
   823  0001E7                     _vec_value:
   824                           	callstack 0
   825  0001E7                     	ds	10
   826                           
   827                           	psect	dataBANK1
   828  0001F1                     __pdataBANK1:
   829                           	callstack 0
   830  0001F1                     _days:
   831                           	callstack 0
   832  0001F1                     	ds	7
   833  0001F8                     _bombillaCar0:
   834                           	callstack 0
   835  0001F8                     	ds	8
   836                           
   837                           	psect	bssBANK2
   838  0002D0                     __pbssBANK2:
   839                           	callstack 0
   840  0002D0                     _dbuf:
   841                           	callstack 0
   842  0002D0                     	ds	32
   843                           
   844                           	psect	dataBANK2
   845  000200                     __pdataBANK2:
   846                           	callstack 0
   847  000200                     encenderBombillas@F3600:
   848                           	callstack 0
   849  000200                     	ds	27
   850  00021B                     encenderBombillas@F3597:
   851                           	callstack 0
   852  00021B                     	ds	27
   853  000236                     encenderBombillas@F3594:
   854                           	callstack 0
   855  000236                     	ds	27
   856  000251                     encenderBombillas@F3591:
   857                           	callstack 0
   858  000251                     	ds	27
   859  00026C                     mostrarFechaHora@F3615:
   860                           	callstack 0
   861  00026C                     	ds	26
   862  000286                     offBombillas@F3586:
   863                           	callstack 0
   864  000286                     	ds	21
   865  00029B                     encenderBombillas@F3607:
   866                           	callstack 0
   867  00029B                     	ds	19
   868  0002AE                     onLEDS@F3582:
   869                           	callstack 0
   870  0002AE                     	ds	19
   871  0002C1                     offLEDS@F3576:
   872                           	callstack 0
   873  0002C1                     	ds	15
   874                           
   875                           	psect	dataBANK3
   876  000300                     __pdataBANK3:
   877                           	callstack 0
   878  000300                     main@F3567:
   879                           	callstack 0
   880  000300                     	ds	38
   881  000326                     main@F3564:
   882                           	callstack 0
   883  000326                     	ds	36
   884  00034A                     encenderBombillas@F3604:
   885                           	callstack 0
   886  00034A                     	ds	27
   887                           
   888                           	psect	cstackBANK1
   889  000100                     __pcstackBANK1:
   890                           	callstack 0
   891  000100                     encenderBombillas@buffer_TX:
   892                           	callstack 0
   893                           
   894                           ; 27 bytes @ 0x0
   895  000100                     	ds	27
   896  00011B                     encenderBombillas@buffer_TX_793:
   897                           	callstack 0
   898                           
   899                           ; 27 bytes @ 0x1B
   900  00011B                     	ds	27
   901  000136                     encenderBombillas@buffer_TX_796:
   902                           	callstack 0
   903                           
   904                           ; 27 bytes @ 0x36
   905  000136                     	ds	27
   906  000151                     encenderBombillas@buffer_TX_799:
   907                           	callstack 0
   908                           
   909                           ; 27 bytes @ 0x51
   910  000151                     	ds	27
   911  00016C                     encenderBombillas@buffer_TX_803:
   912                           	callstack 0
   913                           
   914                           ; 27 bytes @ 0x6C
   915  00016C                     	ds	27
   916  000187                     encenderBombillas@buffer_TX_806:
   917                           	callstack 0
   918                           
   919                           ; 19 bytes @ 0x87
   920  000187                     	ds	19
   921  00019A                     encenderBombillas@i:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x9A
   925  00019A                     	ds	2
   926  00019C                     encenderBombillas@i_794:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x9C
   930  00019C                     	ds	2
   931  00019E                     encenderBombillas@i_797:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x9E
   935  00019E                     	ds	2
   936  0001A0                     encenderBombillas@i_800:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0xA0
   940  0001A0                     	ds	2
   941  0001A2                     encenderBombillas@i_804:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xA2
   945  0001A2                     	ds	2
   946  0001A4                     encenderBombillas@i_807:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xA4
   950  0001A4                     	ds	2
   951  0001A6                     encenderBombillas@i_801:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0xA6
   955  0001A6                     	ds	1
   956                           
   957                           	psect	cstackBANK0
   958  000060                     __pcstackBANK0:
   959                           	callstack 0
   960  000060                     ?_vfprintf:
   961                           	callstack 0
   962  000060                     vfprintf@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x0
   966  000060                     	ds	2
   967  000062                     vfprintf@fmt:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x2
   971  000062                     	ds	2
   972  000064                     vfprintf@ap:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x4
   976  000064                     	ds	2
   977  000066                     ?_sprintf:
   978                           	callstack 0
   979  000066                     sprintf@s:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x6
   983  000066                     	ds	2
   984  000068                     sprintf@fmt:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x8
   988  000068                     	ds	6
   989  00006E                     sprintf@ap:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0xE
   993  00006E                     	ds	2
   994  000070                     sprintf@f:
   995                           	callstack 0
   996                           
   997                           ; 6 bytes @ 0x10
   998  000070                     	ds	6
   999  000076                     ??_mostrarFechaHora:
  1000                           
  1001                           ; 1 bytes @ 0x16
  1002  000076                     	ds	2
  1003  000078                     mostrarFechaHora@buffer_TX:
  1004                           	callstack 0
  1005                           
  1006                           ; 26 bytes @ 0x18
  1007  000078                     	ds	26
  1008  000092                     mostrarFechaHora@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x32
  1012  000092                     	ds	2
  1013  000094                     main@buffer_TX_750:
  1014                           	callstack 0
  1015                           
  1016                           ; 38 bytes @ 0x34
  1017  000094                     	ds	38
  1018  0000BA                     main@buffer_TX:
  1019                           	callstack 0
  1020                           
  1021                           ; 36 bytes @ 0x5A
  1022  0000BA                     	ds	36
  1023  0000DE                     main@i:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x7E
  1027  0000DE                     	ds	2
  1028  0000E0                     main@i_751:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x80
  1032  0000E0                     	ds	2
  1033                           
  1034                           	psect	cstackCOMRAM
  1035  000001                     __pcstackCOMRAM:
  1036                           	callstack 0
  1037  000001                     ??_DHT11_Start:
  1038  000001                     ?_strlen:
  1039                           	callstack 0
  1040  000001                     ?_isupper:
  1041                           	callstack 0
  1042  000001                     ?_isalpha:
  1043                           	callstack 0
  1044  000001                     ?_islower:
  1045                           	callstack 0
  1046  000001                     ?___aodiv:
  1047                           	callstack 0
  1048  000001                     ?___aomod:
  1049                           	callstack 0
  1050  000001                     I2C_Read@flag:
  1051                           	callstack 0
  1052  000001                     I2C_Write@data:
  1053                           	callstack 0
  1054  000001                     DHT11_ReadData@i:
  1055                           	callstack 0
  1056  000001                     MSdelay@val:
  1057                           	callstack 0
  1058  000001                     isalpha@c:
  1059                           	callstack 0
  1060  000001                     isupper@c:
  1061                           	callstack 0
  1062  000001                     fputc@c:
  1063                           	callstack 0
  1064  000001                     strlen@s:
  1065                           	callstack 0
  1066  000001                     islower@c:
  1067                           	callstack 0
  1068  000001                     ___aodiv@dividend:
  1069                           	callstack 0
  1070  000001                     ___aomod@dividend:
  1071                           	callstack 0
  1072  000001                     offLEDS@buffer_TX:
  1073                           	callstack 0
  1074  000001                     onLEDS@buffer_TX:
  1075                           	callstack 0
  1076  000001                     offBombillas@buffer_TX:
  1077                           	callstack 0
  1078                           
  1079                           ; 21 bytes @ 0x0
  1080  000001                     	ds	1
  1081  000002                     I2C_Read@buffer:
  1082                           	callstack 0
  1083  000002                     I2C_Start@slave_write_address:
  1084                           	callstack 0
  1085  000002                     I2C_Repeated_Start@slave_read_address:
  1086                           	callstack 0
  1087  000002                     DHT11_ReadData@data:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x1
  1091  000002                     	ds	1
  1092  000003                     ??_isupper:
  1093  000003                     ??_isalpha:
  1094  000003                     ??_islower:
  1095  000003                     ??_RTC_Read_Clock:
  1096  000003                     ??_RTC_Read_Calendar:
  1097  000003                     MSdelay@i:
  1098                           	callstack 0
  1099  000003                     fputc@fp:
  1100                           	callstack 0
  1101  000003                     strlen@a:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x2
  1105  000003                     	ds	1
  1106  000004                     RTC_Read_Clock@read_clock_address:
  1107                           	callstack 0
  1108  000004                     RTC_Read_Calendar@read_calendar_address:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x3
  1112  000004                     	ds	1
  1113  000005                     ??_fputc:
  1114  000005                     MSdelay@j:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x4
  1118  000005                     	ds	2
  1119  000007                     ?_toupper:
  1120                           	callstack 0
  1121  000007                     LCD_Command@cmd:
  1122                           	callstack 0
  1123  000007                     LCD_Char@dat:
  1124                           	callstack 0
  1125  000007                     toupper@c:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x6
  1129  000007                     	ds	1
  1130  000008                     LCD_Custom_Char@msg:
  1131                           	callstack 0
  1132  000008                     LCD_String@msg:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x7
  1136  000008                     	ds	1
  1137  000009                     ??_toupper:
  1138  000009                     ___aodiv@divisor:
  1139                           	callstack 0
  1140  000009                     ___aomod@divisor:
  1141                           	callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x8
  1144  000009                     	ds	1
  1145  00000A                     LCD_Custom_Char@loc:
  1146                           	callstack 0
  1147  00000A                     LCD_String_xy@pos:
  1148                           	callstack 0
  1149  00000A                     fputs@s:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x9
  1153  00000A                     	ds	1
  1154  00000B                     LCD_Custom_Char@i:
  1155                           	callstack 0
  1156  00000B                     LCD_String_xy@msg:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0xA
  1160  00000B                     	ds	1
  1161  00000C                     fputs@fp:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0xB
  1165  00000C                     	ds	1
  1166  00000D                     LCD_String_xy@row:
  1167                           	callstack 0
  1168  00000D                     _toupper$1463:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0xC
  1172  00000D                     	ds	1
  1173  00000E                     LCD_String_xy@location:
  1174                           	callstack 0
  1175  00000E                     fputs@c:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0xD
  1179  00000E                     	ds	1
  1180  00000F                     fputs@i:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0xE
  1184  00000F                     	ds	1
  1185  000010                     offLEDS@i:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0xF
  1189  000010                     	ds	1
  1190  000011                     ?_pad:
  1191                           	callstack 0
  1192  000011                     ___aodiv@counter:
  1193                           	callstack 0
  1194  000011                     ___aomod@counter:
  1195                           	callstack 0
  1196  000011                     pad@fp:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x10
  1200  000011                     	ds	1
  1201  000012                     ___aodiv@sign:
  1202                           	callstack 0
  1203  000012                     ___aomod@sign:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x11
  1207  000012                     	ds	1
  1208  000013                     ?_abs:
  1209                           	callstack 0
  1210  000013                     pad@buf:
  1211                           	callstack 0
  1212  000013                     abs@a:
  1213                           	callstack 0
  1214  000013                     ___aodiv@quotient:
  1215                           	callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x12
  1218  000013                     	ds	1
  1219  000014                     onLEDS@T_Integral:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x13
  1223  000014                     	ds	1
  1224  000015                     ??_abs:
  1225  000015                     onLEDS@valor:
  1226                           	callstack 0
  1227  000015                     pad@p:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x14
  1231  000015                     	ds	1
  1232  000016                     offBombillas@i:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x15
  1236  000016                     	ds	1
  1237  000017                     ??_pad:
  1238  000017                     onLEDS@i:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x16
  1242  000017                     	ds	1
  1243  000018                     pad@i:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x17
  1247  000018                     	ds	1
  1248  000019                     
  1249                           ; 1 bytes @ 0x18
  1250  000019                     	ds	1
  1251  00001A                     pad@w:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x19
  1255  00001A                     	ds	2
  1256  00001C                     ?_dtoa:
  1257                           	callstack 0
  1258  00001C                     ?_xtoa:
  1259                           	callstack 0
  1260  00001C                     dtoa@fp:
  1261                           	callstack 0
  1262  00001C                     xtoa@fp:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x1B
  1266  00001C                     	ds	2
  1267  00001E                     dtoa@d:
  1268                           	callstack 0
  1269  00001E                     xtoa@d:
  1270                           	callstack 0
  1271                           
  1272                           ; 8 bytes @ 0x1D
  1273  00001E                     	ds	8
  1274  000026                     ??_dtoa:
  1275  000026                     xtoa@x:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x25
  1279  000026                     	ds	1
  1280  000027                     ??_xtoa:
  1281                           
  1282                           ; 1 bytes @ 0x26
  1283  000027                     	ds	7
  1284  00002E                     _dtoa$1367:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x2D
  1288  00002E                     	ds	1
  1289  00002F                     _xtoa$1378:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2E
  1293  00002F                     	ds	1
  1294  000030                     dtoa@p:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2F
  1298  000030                     	ds	1
  1299  000031                     _xtoa$1379:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x30
  1303  000031                     	ds	1
  1304  000032                     dtoa@w:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x31
  1308  000032                     	ds	1
  1309  000033                     xtoa@p:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x32
  1313  000033                     	ds	1
  1314  000034                     dtoa@s:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x33
  1318  000034                     	ds	1
  1319  000035                     xtoa@w:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x34
  1323  000035                     	ds	1
  1324  000036                     dtoa@n:
  1325                           	callstack 0
  1326                           
  1327                           ; 8 bytes @ 0x35
  1328  000036                     	ds	1
  1329  000037                     xtoa@n:
  1330                           	callstack 0
  1331                           
  1332                           ; 8 bytes @ 0x36
  1333  000037                     	ds	7
  1334  00003E                     dtoa@i:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x3D
  1338  00003E                     	ds	1
  1339  00003F                     xtoa@i:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x3E
  1343  00003F                     	ds	2
  1344  000041                     xtoa@c:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x40
  1348  000041                     	ds	2
  1349  000043                     ?_vfpfcnvrt:
  1350                           	callstack 0
  1351  000043                     vfpfcnvrt@fp:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x42
  1355  000043                     	ds	2
  1356  000045                     vfpfcnvrt@fmt:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x44
  1360  000045                     	ds	2
  1361  000047                     vfpfcnvrt@ap:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x46
  1365  000047                     	ds	2
  1366  000049                     ??_vfpfcnvrt:
  1367                           
  1368                           ; 1 bytes @ 0x48
  1369  000049                     	ds	4
  1370  00004D                     vfpfcnvrt@ll:
  1371                           	callstack 0
  1372                           
  1373                           ; 8 bytes @ 0x4C
  1374  00004D                     	ds	8
  1375  000055                     vfpfcnvrt@llu:
  1376                           	callstack 0
  1377                           
  1378                           ; 8 bytes @ 0x54
  1379  000055                     	ds	8
  1380  00005D                     vfpfcnvrt@c:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x5C
  1384  00005D                     	ds	1
  1385  00005E                     vfprintf@cfmt:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x5D
  1389  00005E                     	ds	2
  1390  000060                     
  1391                           ; 1 bytes @ 0x5F
  1392 ;;
  1393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 96 in file "Controlador.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  i               2  128[BANK0 ] int 
  1402 ;;  i               2  126[BANK0 ] int 
  1403 ;;  buffer_TX      38   52[BANK0 ] unsigned char [38]
  1404 ;;  buffer_TX      36   90[BANK0 ] unsigned char [36]
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0
  1415 ;;      Locals:         0      78       0       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1417 ;;      Totals:         0      78       0       0       0       0       0       0       0
  1418 ;;Total ram usage:       78 bytes
  1419 ;; Hardware stack levels required when called:    9
  1420 ;; This function calls:
  1421 ;;		_DHT11_CheckResponse
  1422 ;;		_DHT11_ReadData
  1423 ;;		_DHT11_Start
  1424 ;;		_I2C_Init
  1425 ;;		_LCD_Init
  1426 ;;		_LCD_String_xy
  1427 ;;		_MSdelay
  1428 ;;		_encenderBombillas
  1429 ;;		_imprimirTemHum
  1430 ;;		_mostrarFechaHora
  1431 ;;		_offBombillas
  1432 ;;		_offLEDS
  1433 ;;		_verificarHora
  1434 ;; This function is called by:
  1435 ;;		Startup code after reset
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text0
  1440  00182C                     __ptext0:
  1441                           	callstack 0
  1442  00182C                     _main:
  1443                           	callstack 22
  1444  00182C                     
  1445                           ;Controlador.c: 97:     TRISA = 0;
  1446  00182C  0E00               	movlw	0
  1447  00182E  6E92               	movwf	146,c	;volatile
  1448  001830                     
  1449                           ;Controlador.c: 100:     PORTAbits.RA0 = 0;
  1450  001830  9080               	bcf	128,0,c	;volatile
  1451  001832                     
  1452                           ;Controlador.c: 101:     PORTAbits.RA1 = 0;
  1453  001832  9280               	bcf	128,1,c	;volatile
  1454  001834                     
  1455                           ;Controlador.c: 102:     PORTAbits.RA2 = 0;
  1456  001834  9480               	bcf	128,2,c	;volatile
  1457  001836                     
  1458                           ;Controlador.c: 103:     PORTAbits.RA3 = 0;
  1459  001836  9680               	bcf	128,3,c	;volatile
  1460  001838                     
  1461                           ;Controlador.c: 104:     PORTAbits.RA4 = 0;
  1462  001838  9880               	bcf	128,4,c	;volatile
  1463  00183A                     
  1464                           ;Controlador.c: 107:     TRISCbits.RC6 = 0;
  1465  00183A  9C94               	bcf	148,6,c	;volatile
  1466  00183C                     
  1467                           ;Controlador.c: 108:     TXSTAbits.TX9 = 0;
  1468  00183C  9CAC               	bcf	172,6,c	;volatile
  1469  00183E                     
  1470                           ;Controlador.c: 109:     TXSTAbits.TXEN = 1;
  1471  00183E  8AAC               	bsf	172,5,c	;volatile
  1472  001840                     
  1473                           ;Controlador.c: 110:     TXSTAbits.SYNC = 0;
  1474  001840  98AC               	bcf	172,4,c	;volatile
  1475  001842                     
  1476                           ;Controlador.c: 111:     TXSTAbits.BRGH = 0;
  1477  001842  94AC               	bcf	172,2,c	;volatile
  1478  001844                     
  1479                           ;Controlador.c: 112:     BAUDCONbits.BRG16 = 0;
  1480  001844  96B8               	bcf	184,3,c	;volatile
  1481  001846                     
  1482                           ;Controlador.c: 113:     RCSTAbits.SPEN = 1;
  1483  001846  8EAB               	bsf	171,7,c	;volatile
  1484                           
  1485                           ;Controlador.c: 114:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1486  001848  0E0C               	movlw	12
  1487  00184A  6EAF               	movwf	175,c	;volatile
  1488                           
  1489                           ;Controlador.c: 116:     OSCCON = 0x72;
  1490  00184C  0E72               	movlw	114
  1491  00184E  6ED3               	movwf	211,c	;volatile
  1492                           
  1493                           ;Controlador.c: 120:     ADCON1 = 0x0F;
  1494  001850  0E0F               	movlw	15
  1495  001852  6EC1               	movwf	193,c	;volatile
  1496  001854                     l3367:
  1497                           
  1498                           ;Controlador.c: 124:         LCD_Init();
  1499  001854  EC4B  F014         	call	_LCD_Init	;wreg free
  1500  001858                     
  1501                           ;Controlador.c: 125:         I2C_Init();
  1502  001858  ECB5  F014         	call	_I2C_Init	;wreg free
  1503  00185C                     
  1504                           ;Controlador.c: 126:         MSdelay(10);
  1505  00185C  0E00               	movlw	0
  1506  00185E  6E02               	movwf	(MSdelay@val+1)^0,c
  1507  001860  0E0A               	movlw	10
  1508  001862  6E01               	movwf	MSdelay@val^0,c
  1509  001864  ECC1  F012         	call	_MSdelay	;wreg free
  1510  001868                     
  1511                           ;Controlador.c: 129:         verificarHora();
  1512  001868  ECB0  F011         	call	_verificarHora	;wreg free
  1513  00186C                     
  1514                           ;Controlador.c: 131:         if ( hour >= 0x18 || hour <=6 ) {
  1515  00186C  0100               	movlb	0	; () banked
  1516  00186E  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1517  001870  EF45  F00C         	goto	u3100
  1518  001874  51F1               	movf	(_hour+1)& (0+255),w,b
  1519  001876  E107               	bnz	u3101
  1520  001878  0E18               	movlw	24
  1521  00187A  5DF0               	subwf	_hour& (0+255),w,b
  1522  00187C  B0D8               	btfsc	status,0,c
  1523  00187E  EF43  F00C         	goto	u3101
  1524  001882  EF45  F00C         	goto	u3100
  1525  001886                     u3101:
  1526  001886  EF53  F00C         	goto	l3379
  1527  00188A                     u3100:
  1528  00188A                     
  1529                           ; BSR set to: 0
  1530  00188A  BFF1               	btfsc	(_hour+1)& (0+255),7,b
  1531  00188C  EF53  F00C         	goto	u3110
  1532  001890  51F1               	movf	(_hour+1)& (0+255),w,b
  1533  001892  E107               	bnz	u3111
  1534  001894  0E07               	movlw	7
  1535  001896  5DF0               	subwf	_hour& (0+255),w,b
  1536  001898  B0D8               	btfsc	status,0,c
  1537  00189A  EF51  F00C         	goto	u3111
  1538  00189E  EF53  F00C         	goto	u3110
  1539  0018A2                     u3111:
  1540  0018A2  EFCD  F00C         	goto	l3431
  1541  0018A6                     u3110:
  1542  0018A6                     l3379:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;Controlador.c: 132:             DHT11_Start();
  1546  0018A6  EC89  F014         	call	_DHT11_Start	;wreg free
  1547  0018AA                     
  1548                           ;Controlador.c: 133:             DHT11_CheckResponse();
  1549  0018AA  EC62  F014         	call	_DHT11_CheckResponse	;wreg free
  1550  0018AE                     
  1551                           ;Controlador.c: 136:             var_RH_Integral = DHT11_ReadData();
  1552  0018AE  EC3D  F012         	call	_DHT11_ReadData	;wreg free
  1553  0018B2  0100               	movlb	0	; () banked
  1554  0018B4  6FFC               	movwf	_var_RH_Integral& (0+255),b
  1555  0018B6                     
  1556                           ; BSR set to: 0
  1557                           ;Controlador.c: 137:             var_RH_Decimal = DHT11_ReadData();
  1558  0018B6  EC3D  F012         	call	_DHT11_ReadData	;wreg free
  1559  0018BA  0100               	movlb	0	; () banked
  1560  0018BC  6FFD               	movwf	_var_RH_Decimal& (0+255),b
  1561  0018BE                     
  1562                           ; BSR set to: 0
  1563                           ;Controlador.c: 138:             var_T_Integral = DHT11_ReadData();
  1564  0018BE  EC3D  F012         	call	_DHT11_ReadData	;wreg free
  1565  0018C2  0100               	movlb	0	; () banked
  1566  0018C4  6FFA               	movwf	_var_T_Integral& (0+255),b
  1567  0018C6                     
  1568                           ; BSR set to: 0
  1569                           ;Controlador.c: 139:             var_T_Decimal = DHT11_ReadData();
  1570  0018C6  EC3D  F012         	call	_DHT11_ReadData	;wreg free
  1571  0018CA  0100               	movlb	0	; () banked
  1572  0018CC  6FFB               	movwf	_var_T_Decimal& (0+255),b
  1573  0018CE                     
  1574                           ; BSR set to: 0
  1575                           ;Controlador.c: 141:             imprimirTemHum();
  1576  0018CE  EC8D  F00E         	call	_imprimirTemHum	;wreg free
  1577  0018D2                     
  1578                           ;Controlador.c: 143:             char buffer_TX[] = "No se ha prendido ninguna bombilla\
      +                          r";
  1579  0018D2  EE23  F026         	lfsr	2,main@F3564
  1580  0018D6  EE10  F0BA         	lfsr	1,main@buffer_TX
  1581  0018DA  0E23               	movlw	35
  1582  0018DC                     u3121:
  1583  0018DC  CFDB FFE3          	movff	plusw2,plusw1
  1584  0018E0  06E8               	decf	wreg,f,c
  1585  0018E2  E2FC               	bc	u3121
  1586  0018E4                     
  1587                           ;Controlador.c: 144:             for (int i = 0; i < 35; i++) {
  1588  0018E4  0E00               	movlw	0
  1589  0018E6  0100               	movlb	0	; () banked
  1590  0018E8  6FDF               	movwf	(main@i+1)& (0+255),b
  1591  0018EA  0E00               	movlw	0
  1592  0018EC  6FDE               	movwf	main@i& (0+255),b
  1593  0018EE                     l292:
  1594                           
  1595                           ;Controlador.c: 146:                 while (!TXSTAbits.TRMT) {
  1596  0018EE  A2AC               	btfss	172,1,c	;volatile
  1597  0018F0  EF7C  F00C         	goto	u3131
  1598  0018F4  EF7E  F00C         	goto	u3130
  1599  0018F8                     u3131:
  1600  0018F8  EF77  F00C         	goto	l292
  1601  0018FC                     u3130:
  1602  0018FC                     
  1603                           ;Controlador.c: 149:                 TXREG = buffer_TX[i];
  1604  0018FC  0EBA               	movlw	low main@buffer_TX
  1605  0018FE  0100               	movlb	0	; () banked
  1606  001900  25DE               	addwf	main@i& (0+255),w,b
  1607  001902  6ED9               	movwf	fsr2l,c
  1608  001904  0E00               	movlw	high main@buffer_TX
  1609  001906  21DF               	addwfc	(main@i+1)& (0+255),w,b
  1610  001908  6EDA               	movwf	fsr2h,c
  1611  00190A  50DF               	movf	indf2,w,c
  1612  00190C  6EAD               	movwf	173,c	;volatile
  1613  00190E                     
  1614                           ; BSR set to: 0
  1615                           ;Controlador.c: 150:             }
  1616  00190E  4BDE               	infsnz	main@i& (0+255),f,b
  1617  001910  2BDF               	incf	(main@i+1)& (0+255),f,b
  1618  001912                     
  1619                           ; BSR set to: 0
  1620  001912  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  1621  001914  EF95  F00C         	goto	u3141
  1622  001918  51DF               	movf	(main@i+1)& (0+255),w,b
  1623  00191A  E109               	bnz	u3140
  1624  00191C  0E23               	movlw	35
  1625  00191E  5DDE               	subwf	main@i& (0+255),w,b
  1626  001920  A0D8               	btfss	status,0,c
  1627  001922  EF95  F00C         	goto	u3141
  1628  001926  EF97  F00C         	goto	u3140
  1629  00192A                     u3141:
  1630  00192A  EF77  F00C         	goto	l292
  1631  00192E                     u3140:
  1632  00192E                     l3407:
  1633                           
  1634                           ;Controlador.c: 151:             MSdelay(1000);
  1635  00192E  0E03               	movlw	3
  1636  001930  6E02               	movwf	(MSdelay@val+1)^0,c
  1637  001932  0EE8               	movlw	232
  1638  001934  6E01               	movwf	MSdelay@val^0,c
  1639  001936  ECC1  F012         	call	_MSdelay	;wreg free
  1640                           
  1641                           ;Controlador.c: 153:             while (banAgregar == 0) {
  1642  00193A  EFA5  F00C         	goto	l3415
  1643  00193E                     l3409:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;Controlador.c: 155:                 encenderBombillas();
  1647  00193E  EC2C  F004         	call	_encenderBombillas	;wreg free
  1648  001942                     
  1649                           ;Controlador.c: 156:                 imprimirTemHum();
  1650  001942  EC8D  F00E         	call	_imprimirTemHum	;wreg free
  1651  001946  EF97  F00C         	goto	l3407
  1652  00194A                     l3415:
  1653                           
  1654                           ;Controlador.c: 153:             while (banAgregar == 0) {
  1655  00194A  0100               	movlb	0	; () banked
  1656  00194C  51F6               	movf	_banAgregar& (0+255),w,b
  1657  00194E  11F7               	iorwf	(_banAgregar+1)& (0+255),w,b
  1658  001950  B4D8               	btfsc	status,2,c
  1659  001952  EFAD  F00C         	goto	u3151
  1660  001956  EFAF  F00C         	goto	u3150
  1661  00195A                     u3151:
  1662  00195A  EF9F  F00C         	goto	l3409
  1663  00195E                     u3150:
  1664  00195E                     
  1665                           ; BSR set to: 0
  1666                           ;Controlador.c: 160:             mostrarFechaHora();
  1667  00195E  EC58  F006         	call	_mostrarFechaHora	;wreg free
  1668  001962                     
  1669                           ;Controlador.c: 161:             MSdelay(1000);
  1670  001962  0E03               	movlw	3
  1671  001964  6E02               	movwf	(MSdelay@val+1)^0,c
  1672  001966  0EE8               	movlw	232
  1673  001968  6E01               	movwf	MSdelay@val^0,c
  1674  00196A  ECC1  F012         	call	_MSdelay	;wreg free
  1675  00196E                     
  1676                           ;Controlador.c: 162:             banAgregar = 0;
  1677  00196E  0E00               	movlw	0
  1678  001970  0100               	movlb	0	; () banked
  1679  001972  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  1680  001974  0E00               	movlw	0
  1681  001976  6FF6               	movwf	_banAgregar& (0+255),b
  1682  001978                     
  1683                           ; BSR set to: 0
  1684                           ;Controlador.c: 163:             acumBom = 0;
  1685  001978  0E00               	movlw	0
  1686  00197A  0101               	movlb	1	; () banked
  1687  00197C  6FAA               	movwf	(_acumBom+1)& (0+255),b
  1688  00197E  0E00               	movlw	0
  1689  001980  6FA9               	movwf	_acumBom& (0+255),b
  1690  001982                     
  1691                           ; BSR set to: 1
  1692                           ;Controlador.c: 164:             offBombillas();
  1693  001982  EC1D  F011         	call	_offBombillas	;wreg free
  1694  001986                     
  1695                           ;Controlador.c: 165:             offLEDS();
  1696  001986  EC80  F011         	call	_offLEDS	;wreg free
  1697  00198A                     
  1698                           ;Controlador.c: 166:             MSdelay(2000);
  1699  00198A  0E07               	movlw	7
  1700  00198C  6E02               	movwf	(MSdelay@val+1)^0,c
  1701  00198E  0ED0               	movlw	208
  1702  001990  6E01               	movwf	MSdelay@val^0,c
  1703  001992  ECC1  F012         	call	_MSdelay	;wreg free
  1704                           
  1705                           ;Controlador.c: 168:         } else {
  1706  001996  EF0D  F00D         	goto	l3447
  1707  00199A                     l3431:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;Controlador.c: 169:             LCD_String_xy(0, 0, "ERROR HORA ");
  1711  00199A  0E00               	movlw	0
  1712  00199C  6E0A               	movwf	LCD_String_xy@pos^0,c
  1713  00199E  0E01               	movlw	low STR_1
  1714  0019A0  6E0B               	movwf	LCD_String_xy@msg^0,c
  1715  0019A2  0E08               	movlw	high STR_1
  1716  0019A4  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1717  0019A6  0E00               	movlw	0
  1718  0019A8  EC6F  F013         	call	_LCD_String_xy
  1719                           
  1720                           ;Controlador.c: 170:             LCD_String_xy(1, 0, "DIURNA");
  1721  0019AC  0E00               	movlw	0
  1722  0019AE  6E0A               	movwf	LCD_String_xy@pos^0,c
  1723  0019B0  0E1D               	movlw	low STR_2
  1724  0019B2  6E0B               	movwf	LCD_String_xy@msg^0,c
  1725  0019B4  0E08               	movlw	high STR_2
  1726  0019B6  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1727  0019B8  0E01               	movlw	1
  1728  0019BA  EC6F  F013         	call	_LCD_String_xy
  1729  0019BE                     
  1730                           ;Controlador.c: 171:             char buffer_TX[] = "La hora nocturna empieza a las 18:0
      +                          0\r";
  1731  0019BE  EE23  F000         	lfsr	2,main@F3567
  1732  0019C2  EE10  F094         	lfsr	1,main@buffer_TX_750
  1733  0019C6  0E25               	movlw	37
  1734  0019C8                     u3161:
  1735  0019C8  CFDB FFE3          	movff	plusw2,plusw1
  1736  0019CC  06E8               	decf	wreg,f,c
  1737  0019CE  E2FC               	bc	u3161
  1738  0019D0                     
  1739                           ;Controlador.c: 172:             for (int i = 0; i < 37; i++) {
  1740  0019D0  0E00               	movlw	0
  1741  0019D2  0100               	movlb	0	; () banked
  1742  0019D4  6FE1               	movwf	(main@i_751+1)& (0+255),b
  1743  0019D6  0E00               	movlw	0
  1744  0019D8  6FE0               	movwf	main@i_751& (0+255),b
  1745  0019DA                     l303:
  1746                           
  1747                           ;Controlador.c: 174:                 while (!TXSTAbits.TRMT) {
  1748  0019DA  A2AC               	btfss	172,1,c	;volatile
  1749  0019DC  EFF2  F00C         	goto	u3171
  1750  0019E0  EFF4  F00C         	goto	u3170
  1751  0019E4                     u3171:
  1752  0019E4  EFED  F00C         	goto	l303
  1753  0019E8                     u3170:
  1754  0019E8                     
  1755                           ;Controlador.c: 177:                 TXREG = buffer_TX[i];
  1756  0019E8  0E94               	movlw	low main@buffer_TX_750
  1757  0019EA  0100               	movlb	0	; () banked
  1758  0019EC  25E0               	addwf	main@i_751& (0+255),w,b
  1759  0019EE  6ED9               	movwf	fsr2l,c
  1760  0019F0  0E00               	movlw	high main@buffer_TX_750
  1761  0019F2  21E1               	addwfc	(main@i_751+1)& (0+255),w,b
  1762  0019F4  6EDA               	movwf	fsr2h,c
  1763  0019F6  50DF               	movf	indf2,w,c
  1764  0019F8  6EAD               	movwf	173,c	;volatile
  1765  0019FA                     
  1766                           ; BSR set to: 0
  1767                           ;Controlador.c: 178:             }
  1768  0019FA  4BE0               	infsnz	main@i_751& (0+255),f,b
  1769  0019FC  2BE1               	incf	(main@i_751+1)& (0+255),f,b
  1770  0019FE                     
  1771                           ; BSR set to: 0
  1772  0019FE  BFE1               	btfsc	(main@i_751+1)& (0+255),7,b
  1773  001A00  EF0B  F00D         	goto	u3181
  1774  001A04  51E1               	movf	(main@i_751+1)& (0+255),w,b
  1775  001A06  E109               	bnz	u3180
  1776  001A08  0E25               	movlw	37
  1777  001A0A  5DE0               	subwf	main@i_751& (0+255),w,b
  1778  001A0C  A0D8               	btfss	status,0,c
  1779  001A0E  EF0B  F00D         	goto	u3181
  1780  001A12  EF0D  F00D         	goto	u3180
  1781  001A16                     u3181:
  1782  001A16  EFED  F00C         	goto	l303
  1783  001A1A                     u3180:
  1784  001A1A                     l3447:
  1785                           
  1786                           ;Controlador.c: 180:         MSdelay(2000);
  1787  001A1A  0E07               	movlw	7
  1788  001A1C  6E02               	movwf	(MSdelay@val+1)^0,c
  1789  001A1E  0ED0               	movlw	208
  1790  001A20  6E01               	movwf	MSdelay@val^0,c
  1791  001A22  ECC1  F012         	call	_MSdelay	;wreg free
  1792  001A26  EF2A  F00C         	goto	l3367
  1793  001A2A  EF00  F000         	goto	start
  1794  001A2E                     __end_of_main:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _verificarHora *****************
  1798 ;; Defined at:
  1799 ;;		line 529 in file "Controlador.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    4
  1820 ;; This function calls:
  1821 ;;		_I2C_Stop
  1822 ;;		_LCD_String_xy
  1823 ;;		_MSdelay
  1824 ;;		_RTC_Read_Clock
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text1
  1831  002360                     __ptext1:
  1832                           	callstack 0
  1833  002360                     _verificarHora:
  1834                           	callstack 26
  1835  002360                     
  1836                           ;Controlador.c: 530:     RTC_Read_Clock(0);
  1837  002360  0E00               	movlw	0
  1838  002362  EC0A  F013         	call	_RTC_Read_Clock
  1839  002366                     
  1840                           ;Controlador.c: 531:     I2C_Stop();
  1841  002366  ECC2  F014         	call	_I2C_Stop	;wreg free
  1842  00236A                     
  1843                           ;Controlador.c: 532:     MSdelay(1000);
  1844  00236A  0E03               	movlw	3
  1845  00236C  6E02               	movwf	(MSdelay@val+1)^0,c
  1846  00236E  0EE8               	movlw	232
  1847  002370  6E01               	movwf	MSdelay@val^0,c
  1848  002372  ECC1  F012         	call	_MSdelay	;wreg free
  1849  002376                     
  1850                           ;Controlador.c: 533:     if (hour & (1 << Clock_type)) {
  1851  002376  0100               	movlb	0	; () banked
  1852  002378  ADF0               	btfss	_hour& (0+255),6,b
  1853  00237A  EFC1  F011         	goto	u2571
  1854  00237E  EFC3  F011         	goto	u2570
  1855  002382                     u2571:
  1856  002382  EFDE  F011         	goto	l468
  1857  002386                     u2570:
  1858  002386                     
  1859                           ; BSR set to: 0
  1860                           ;Controlador.c: 534:         if (hour & (1 << AM_PM)) {
  1861  002386  ABF0               	btfss	_hour& (0+255),5,b
  1862  002388  EFC8  F011         	goto	u2581
  1863  00238C  EFCA  F011         	goto	u2580
  1864  002390                     u2581:
  1865  002390  EFD5  F011         	goto	l2975
  1866  002394                     u2580:
  1867  002394                     
  1868                           ; BSR set to: 0
  1869                           ;Controlador.c: 535:             LCD_String_xy(1, 14, "PM");
  1870  002394  0E0E               	movlw	14
  1871  002396  6E0A               	movwf	LCD_String_xy@pos^0,c
  1872  002398  0E50               	movlw	low STR_9
  1873  00239A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1874  00239C  0E08               	movlw	high STR_9
  1875  00239E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1876  0023A0  0E01               	movlw	1
  1877  0023A2  EC6F  F013         	call	_LCD_String_xy
  1878                           
  1879                           ;Controlador.c: 536:         } else {
  1880  0023A6  EFDE  F011         	goto	l468
  1881  0023AA                     l2975:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;Controlador.c: 537:             LCD_String_xy(1, 14, "AM");
  1885  0023AA  0E0E               	movlw	14
  1886  0023AC  6E0A               	movwf	LCD_String_xy@pos^0,c
  1887  0023AE  0E4D               	movlw	low STR_10
  1888  0023B0  6E0B               	movwf	LCD_String_xy@msg^0,c
  1889  0023B2  0E08               	movlw	high STR_10
  1890  0023B4  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1891  0023B6  0E01               	movlw	1
  1892  0023B8  EC6F  F013         	call	_LCD_String_xy
  1893  0023BC                     l468:
  1894  0023BC  0012               	return		;funcret
  1895  0023BE                     __end_of_verificarHora:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _offLEDS *****************
  1899 ;; Defined at:
  1900 ;;		line 220 in file "Controlador.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  i               2   15[COMRAM] int 
  1905 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0
  1916 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1918 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1919 ;;Total ram usage:       17 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text2
  1929  002300                     __ptext2:
  1930                           	callstack 0
  1931  002300                     _offLEDS:
  1932                           	callstack 30
  1933  002300                     
  1934                           ;Controlador.c: 221:     PORTCbits.RC5 = 0;
  1935  002300  9A82               	bcf	130,5,c	;volatile
  1936                           
  1937                           ;Controlador.c: 222:     PORTCbits.RC4 = 0;
  1938  002302  9882               	bcf	130,4,c	;volatile
  1939                           
  1940                           ;Controlador.c: 223:     PORTAbits.RA5 = 0;
  1941  002304  9A80               	bcf	128,5,c	;volatile
  1942  002306                     
  1943                           ;Controlador.c: 225:     char buffer_TX[] = "Apagando LEDS\r";
  1944  002306  EE22  F0C1         	lfsr	2,offLEDS@F3576
  1945  00230A  EE10  F001         	lfsr	1,offLEDS@buffer_TX
  1946  00230E  0E0E               	movlw	14
  1947  002310                     u3041:
  1948  002310  CFDB FFE3          	movff	plusw2,plusw1
  1949  002314  06E8               	decf	wreg,f,c
  1950  002316  E2FC               	bc	u3041
  1951  002318                     
  1952                           ;Controlador.c: 226:     for (int i = 0; i < 15; i++) {
  1953  002318  0E00               	movlw	0
  1954  00231A  6E11               	movwf	(offLEDS@i+1)^0,c
  1955  00231C  0E00               	movlw	0
  1956  00231E  6E10               	movwf	offLEDS@i^0,c
  1957  002320                     l343:
  1958                           
  1959                           ;Controlador.c: 228:         while (!TXSTAbits.TRMT) {
  1960  002320  A2AC               	btfss	172,1,c	;volatile
  1961  002322  EF95  F011         	goto	u3051
  1962  002326  EF97  F011         	goto	u3050
  1963  00232A                     u3051:
  1964  00232A  EF90  F011         	goto	l343
  1965  00232E                     u3050:
  1966  00232E                     
  1967                           ;Controlador.c: 231:         TXREG = buffer_TX[i];
  1968  00232E  0E01               	movlw	low offLEDS@buffer_TX
  1969  002330  2410               	addwf	offLEDS@i^0,w,c
  1970  002332  6ED9               	movwf	fsr2l,c
  1971  002334  0E00               	movlw	high offLEDS@buffer_TX
  1972  002336  2011               	addwfc	(offLEDS@i+1)^0,w,c
  1973  002338  6EDA               	movwf	fsr2h,c
  1974  00233A  50DF               	movf	indf2,w,c
  1975  00233C  6EAD               	movwf	173,c	;volatile
  1976  00233E                     
  1977                           ;Controlador.c: 232:     }
  1978  00233E  4A10               	infsnz	offLEDS@i^0,f,c
  1979  002340  2A11               	incf	(offLEDS@i+1)^0,f,c
  1980  002342  BE11               	btfsc	(offLEDS@i+1)^0,7,c
  1981  002344  EFAD  F011         	goto	u3061
  1982  002348  5011               	movf	(offLEDS@i+1)^0,w,c
  1983  00234A  E109               	bnz	u3060
  1984  00234C  0E0F               	movlw	15
  1985  00234E  5C10               	subwf	offLEDS@i^0,w,c
  1986  002350  A0D8               	btfss	status,0,c
  1987  002352  EFAD  F011         	goto	u3061
  1988  002356  EFAF  F011         	goto	u3060
  1989  00235A                     u3061:
  1990  00235A  EF90  F011         	goto	l343
  1991  00235E                     u3060:
  1992  00235E  0012               	return		;funcret
  1993  002360                     __end_of_offLEDS:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _offBombillas *****************
  1997 ;; Defined at:
  1998 ;;		line 263 in file "Controlador.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  i               2   21[COMRAM] int 
  2003 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0
  2014 ;;      Locals:        23       0       0       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2016 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2017 ;;Total ram usage:       23 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text3
  2027  00223A                     __ptext3:
  2028                           	callstack 0
  2029  00223A                     _offBombillas:
  2030                           	callstack 30
  2031  00223A                     
  2032                           ;Controlador.c: 264:     PORTAbits.RA0 = 0;
  2033  00223A  9080               	bcf	128,0,c	;volatile
  2034                           
  2035                           ;Controlador.c: 265:     PORTAbits.RA1 = 0;
  2036  00223C  9280               	bcf	128,1,c	;volatile
  2037                           
  2038                           ;Controlador.c: 266:     PORTAbits.RA2 = 0;
  2039  00223E  9480               	bcf	128,2,c	;volatile
  2040                           
  2041                           ;Controlador.c: 267:     PORTAbits.RA3 = 0;
  2042  002240  9680               	bcf	128,3,c	;volatile
  2043                           
  2044                           ;Controlador.c: 268:     PORTAbits.RA4 = 0;
  2045  002242  9880               	bcf	128,4,c	;volatile
  2046  002244                     
  2047                           ;Controlador.c: 269:     char buffer_TX[] = "Bombillas Apagadas \r";
  2048  002244  EE22  F086         	lfsr	2,offBombillas@F3586
  2049  002248  EE10  F001         	lfsr	1,offBombillas@buffer_TX
  2050  00224C  0E14               	movlw	20
  2051  00224E                     u3011:
  2052  00224E  CFDB FFE3          	movff	plusw2,plusw1
  2053  002252  06E8               	decf	wreg,f,c
  2054  002254  E2FC               	bc	u3011
  2055  002256                     
  2056                           ;Controlador.c: 270:     for (int i = 0; i < 20; i++) {
  2057  002256  0E00               	movlw	0
  2058  002258  6E17               	movwf	(offBombillas@i+1)^0,c
  2059  00225A  0E00               	movlw	0
  2060  00225C  6E16               	movwf	offBombillas@i^0,c
  2061  00225E                     l367:
  2062                           
  2063                           ;Controlador.c: 272:         while (!TXSTAbits.TRMT) {
  2064  00225E  A2AC               	btfss	172,1,c	;volatile
  2065  002260  EF34  F011         	goto	u3021
  2066  002264  EF36  F011         	goto	u3020
  2067  002268                     u3021:
  2068  002268  EF2F  F011         	goto	l367
  2069  00226C                     u3020:
  2070  00226C                     
  2071                           ;Controlador.c: 275:         TXREG = buffer_TX[i];
  2072  00226C  0E01               	movlw	low offBombillas@buffer_TX
  2073  00226E  2416               	addwf	offBombillas@i^0,w,c
  2074  002270  6ED9               	movwf	fsr2l,c
  2075  002272  0E00               	movlw	high offBombillas@buffer_TX
  2076  002274  2017               	addwfc	(offBombillas@i+1)^0,w,c
  2077  002276  6EDA               	movwf	fsr2h,c
  2078  002278  50DF               	movf	indf2,w,c
  2079  00227A  6EAD               	movwf	173,c	;volatile
  2080  00227C                     
  2081                           ;Controlador.c: 276:     }
  2082  00227C  4A16               	infsnz	offBombillas@i^0,f,c
  2083  00227E  2A17               	incf	(offBombillas@i+1)^0,f,c
  2084  002280  BE17               	btfsc	(offBombillas@i+1)^0,7,c
  2085  002282  EF4C  F011         	goto	u3031
  2086  002286  5017               	movf	(offBombillas@i+1)^0,w,c
  2087  002288  E109               	bnz	u3030
  2088  00228A  0E14               	movlw	20
  2089  00228C  5C16               	subwf	offBombillas@i^0,w,c
  2090  00228E  A0D8               	btfss	status,0,c
  2091  002290  EF4C  F011         	goto	u3031
  2092  002294  EF4E  F011         	goto	u3030
  2093  002298                     u3031:
  2094  002298  EF2F  F011         	goto	l367
  2095  00229C                     u3030:
  2096  00229C  0012               	return		;funcret
  2097  00229E                     __end_of_offBombillas:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _mostrarFechaHora *****************
  2101 ;; Defined at:
  2102 ;;		line 451 in file "Controlador.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  i               2   50[BANK0 ] int 
  2107 ;;  buffer_TX      26   24[BANK0 ] unsigned char [26]
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2120 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2121 ;;Total ram usage:       30 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    8
  2124 ;; This function calls:
  2125 ;;		_I2C_Stop
  2126 ;;		_LCD_Init
  2127 ;;		_LCD_String
  2128 ;;		_LCD_String_xy
  2129 ;;		_MSdelay
  2130 ;;		_RTC_Read_Calendar
  2131 ;;		_RTC_Read_Clock
  2132 ;;		_sprintf
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text4
  2139  000CB0                     __ptext4:
  2140                           	callstack 0
  2141  000CB0                     _mostrarFechaHora:
  2142                           	callstack 22
  2143  000CB0                     
  2144                           ;Controlador.c: 452:     LCD_Init();
  2145  000CB0  EC4B  F014         	call	_LCD_Init	;wreg free
  2146                           
  2147                           ;Controlador.c: 453:     RTC_Read_Clock(0);
  2148  000CB4  0E00               	movlw	0
  2149  000CB6  EC0A  F013         	call	_RTC_Read_Clock
  2150  000CBA                     
  2151                           ;Controlador.c: 454:     I2C_Stop();
  2152  000CBA  ECC2  F014         	call	_I2C_Stop	;wreg free
  2153  000CBE                     
  2154                           ;Controlador.c: 455:     MSdelay(1000);
  2155  000CBE  0E03               	movlw	3
  2156  000CC0  6E02               	movwf	(MSdelay@val+1)^0,c
  2157  000CC2  0EE8               	movlw	232
  2158  000CC4  6E01               	movwf	MSdelay@val^0,c
  2159  000CC6  ECC1  F012         	call	_MSdelay	;wreg free
  2160  000CCA                     
  2161                           ;Controlador.c: 456:     if (hour & (1 << Clock_type)) {
  2162  000CCA  0100               	movlb	0	; () banked
  2163  000CCC  ADF0               	btfss	_hour& (0+255),6,b
  2164  000CCE  EF6B  F006         	goto	u2961
  2165  000CD2  EF6D  F006         	goto	u2960
  2166  000CD6                     u2961:
  2167  000CD6  EFD0  F006         	goto	l3233
  2168  000CDA                     u2960:
  2169  000CDA                     
  2170                           ; BSR set to: 0
  2171                           ;Controlador.c: 458:         if (hour & (1 << AM_PM)) {
  2172  000CDA  ABF0               	btfss	_hour& (0+255),5,b
  2173  000CDC  EF72  F006         	goto	u2971
  2174  000CE0  EF74  F006         	goto	u2970
  2175  000CE4                     u2971:
  2176  000CE4  EF7F  F006         	goto	l3217
  2177  000CE8                     u2970:
  2178  000CE8                     
  2179                           ; BSR set to: 0
  2180                           ;Controlador.c: 459:             LCD_String_xy(1, 14, "PM");
  2181  000CE8  0E0E               	movlw	14
  2182  000CEA  6E0A               	movwf	LCD_String_xy@pos^0,c
  2183  000CEC  0E50               	movlw	low STR_9
  2184  000CEE  6E0B               	movwf	LCD_String_xy@msg^0,c
  2185  000CF0  0E08               	movlw	high STR_9
  2186  000CF2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2187  000CF4  0E01               	movlw	1
  2188  000CF6  EC6F  F013         	call	_LCD_String_xy
  2189                           
  2190                           ;Controlador.c: 460:         } else {
  2191  000CFA  EF88  F006         	goto	l3219
  2192  000CFE                     l3217:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;Controlador.c: 461:             LCD_String_xy(1, 14, "AM");
  2196  000CFE  0E0E               	movlw	14
  2197  000D00  6E0A               	movwf	LCD_String_xy@pos^0,c
  2198  000D02  0E4D               	movlw	low STR_10
  2199  000D04  6E0B               	movwf	LCD_String_xy@msg^0,c
  2200  000D06  0E08               	movlw	high STR_10
  2201  000D08  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2202  000D0A  0E01               	movlw	1
  2203  000D0C  EC6F  F013         	call	_LCD_String_xy
  2204  000D10                     l3219:
  2205                           
  2206                           ;Controlador.c: 464:         hour = hour & (0x1f);
  2207  000D10  0E1F               	movlw	31
  2208  000D12  0100               	movlb	0	; () banked
  2209  000D14  15F0               	andwf	_hour& (0+255),w,b
  2210  000D16  6FF0               	movwf	_hour& (0+255),b
  2211  000D18  6BF1               	clrf	(_hour+1)& (0+255),b
  2212  000D1A                     
  2213                           ; BSR set to: 0
  2214                           ;Controlador.c: 465:         sprintf(secs, "%x ", sec);
  2215  000D1A  0EDD               	movlw	low _secs
  2216  000D1C  6F66               	movwf	sprintf@s& (0+255),b
  2217  000D1E  0E01               	movlw	high _secs
  2218  000D20  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2219  000D22  0E29               	movlw	low STR_11
  2220  000D24  6F68               	movwf	sprintf@fmt& (0+255),b
  2221  000D26  0E08               	movlw	high STR_11
  2222  000D28  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2223  000D2A  C0F4  F06A         	movff	_sec,?_sprintf+4
  2224  000D2E  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2225  000D32  EC98  F012         	call	_sprintf	;wreg free
  2226  000D36                     
  2227                           ;Controlador.c: 466:         sprintf(mins, "%x:", min);
  2228  000D36  0ED3               	movlw	low _mins
  2229  000D38  0100               	movlb	0	; () banked
  2230  000D3A  6F66               	movwf	sprintf@s& (0+255),b
  2231  000D3C  0E01               	movlw	high _mins
  2232  000D3E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2233  000D40  0E19               	movlw	low (STR_13+4)
  2234  000D42  6F68               	movwf	sprintf@fmt& (0+255),b
  2235  000D44  0E08               	movlw	high (STR_13+4)
  2236  000D46  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2237  000D48  C0F2  F06A         	movff	_min,?_sprintf+4
  2238  000D4C  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2239  000D50  EC98  F012         	call	_sprintf	;wreg free
  2240  000D54                     
  2241                           ;Controlador.c: 467:         sprintf(hours, "Tim:%x:", hour);
  2242  000D54  0EC9               	movlw	low _hours
  2243  000D56  0100               	movlb	0	; () banked
  2244  000D58  6F66               	movwf	sprintf@s& (0+255),b
  2245  000D5A  0E01               	movlw	high _hours
  2246  000D5C  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2247  000D5E  0E15               	movlw	low STR_13
  2248  000D60  6F68               	movwf	sprintf@fmt& (0+255),b
  2249  000D62  0E08               	movlw	high STR_13
  2250  000D64  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2251  000D66  C0F0  F06A         	movff	_hour,?_sprintf+4
  2252  000D6A  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2253  000D6E  EC98  F012         	call	_sprintf	;wreg free
  2254  000D72                     
  2255                           ;Controlador.c: 468:         LCD_String_xy(0, 0, hours);
  2256  000D72  0E00               	movlw	0
  2257  000D74  6E0A               	movwf	LCD_String_xy@pos^0,c
  2258  000D76  0EC9               	movlw	low _hours
  2259  000D78  6E0B               	movwf	LCD_String_xy@msg^0,c
  2260  000D7A  0E01               	movlw	high _hours
  2261  000D7C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2262  000D7E  0E00               	movlw	0
  2263  000D80  EC6F  F013         	call	_LCD_String_xy
  2264  000D84                     l3229:
  2265                           
  2266                           ;Controlador.c: 469:         LCD_String(mins);
  2267  000D84  0ED3               	movlw	low _mins
  2268  000D86  6E08               	movwf	LCD_String@msg^0,c
  2269  000D88  0E01               	movlw	high _mins
  2270  000D8A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2271  000D8C  EC0E  F012         	call	_LCD_String	;wreg free
  2272  000D90                     
  2273                           ;Controlador.c: 470:         LCD_String(secs);
  2274  000D90  0EDD               	movlw	low _secs
  2275  000D92  6E08               	movwf	LCD_String@msg^0,c
  2276  000D94  0E01               	movlw	high _secs
  2277  000D96  6E09               	movwf	(LCD_String@msg+1)^0,c
  2278  000D98  EC0E  F012         	call	_LCD_String	;wreg free
  2279                           
  2280                           ;Controlador.c: 471:     } else {
  2281  000D9C  EF0B  F007         	goto	l3247
  2282  000DA0                     l3233:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;Controlador.c: 473:         hour = hour & (0x3f);
  2286  000DA0  0E3F               	movlw	63
  2287  000DA2  15F0               	andwf	_hour& (0+255),w,b
  2288  000DA4  6FF0               	movwf	_hour& (0+255),b
  2289  000DA6  6BF1               	clrf	(_hour+1)& (0+255),b
  2290  000DA8                     
  2291                           ; BSR set to: 0
  2292                           ;Controlador.c: 474:         sprintf(secs, "%x ", sec);
  2293  000DA8  0EDD               	movlw	low _secs
  2294  000DAA  6F66               	movwf	sprintf@s& (0+255),b
  2295  000DAC  0E01               	movlw	high _secs
  2296  000DAE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2297  000DB0  0E29               	movlw	low STR_11
  2298  000DB2  6F68               	movwf	sprintf@fmt& (0+255),b
  2299  000DB4  0E08               	movlw	high STR_11
  2300  000DB6  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2301  000DB8  C0F4  F06A         	movff	_sec,?_sprintf+4
  2302  000DBC  C0F5  F06B         	movff	_sec+1,?_sprintf+5
  2303  000DC0  EC98  F012         	call	_sprintf	;wreg free
  2304  000DC4                     
  2305                           ;Controlador.c: 475:         sprintf(mins, "%x:", min);
  2306  000DC4  0ED3               	movlw	low _mins
  2307  000DC6  0100               	movlb	0	; () banked
  2308  000DC8  6F66               	movwf	sprintf@s& (0+255),b
  2309  000DCA  0E01               	movlw	high _mins
  2310  000DCC  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2311  000DCE  0E19               	movlw	low (STR_13+4)
  2312  000DD0  6F68               	movwf	sprintf@fmt& (0+255),b
  2313  000DD2  0E08               	movlw	high (STR_13+4)
  2314  000DD4  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2315  000DD6  C0F2  F06A         	movff	_min,?_sprintf+4
  2316  000DDA  C0F3  F06B         	movff	_min+1,?_sprintf+5
  2317  000DDE  EC98  F012         	call	_sprintf	;wreg free
  2318  000DE2                     
  2319                           ;Controlador.c: 476:         sprintf(hours, "Tim:%x:", hour);
  2320  000DE2  0EC9               	movlw	low _hours
  2321  000DE4  0100               	movlb	0	; () banked
  2322  000DE6  6F66               	movwf	sprintf@s& (0+255),b
  2323  000DE8  0E01               	movlw	high _hours
  2324  000DEA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2325  000DEC  0E15               	movlw	low STR_13
  2326  000DEE  6F68               	movwf	sprintf@fmt& (0+255),b
  2327  000DF0  0E08               	movlw	high STR_13
  2328  000DF2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2329  000DF4  C0F0  F06A         	movff	_hour,?_sprintf+4
  2330  000DF8  C0F1  F06B         	movff	_hour+1,?_sprintf+5
  2331  000DFC  EC98  F012         	call	_sprintf	;wreg free
  2332  000E00                     
  2333                           ;Controlador.c: 477:         LCD_String_xy(0, 0, hours);
  2334  000E00  0E00               	movlw	0
  2335  000E02  6E0A               	movwf	LCD_String_xy@pos^0,c
  2336  000E04  0EC9               	movlw	low _hours
  2337  000E06  6E0B               	movwf	LCD_String_xy@msg^0,c
  2338  000E08  0E01               	movlw	high _hours
  2339  000E0A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2340  000E0C  0E00               	movlw	0
  2341  000E0E  EC6F  F013         	call	_LCD_String_xy
  2342  000E12  EFC2  F006         	goto	l3229
  2343  000E16                     l3247:
  2344                           
  2345                           ;Controlador.c: 482:     RTC_Read_Calendar(3);
  2346  000E16  0E03               	movlw	3
  2347  000E18  EC6B  F012         	call	_RTC_Read_Calendar
  2348  000E1C                     
  2349                           ;Controlador.c: 483:     I2C_Stop();
  2350  000E1C  ECC2  F014         	call	_I2C_Stop	;wreg free
  2351  000E20                     
  2352                           ;Controlador.c: 484:     sprintf(date, "Cal %x-", Date);
  2353  000E20  0EBF               	movlw	low _date
  2354  000E22  0100               	movlb	0	; () banked
  2355  000E24  6F66               	movwf	sprintf@s& (0+255),b
  2356  000E26  0E01               	movlw	high _date
  2357  000E28  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2358  000E2A  0E0D               	movlw	low STR_17
  2359  000E2C  6F68               	movwf	sprintf@fmt& (0+255),b
  2360  000E2E  0E08               	movlw	high STR_17
  2361  000E30  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2362  000E32  C0EC  F06A         	movff	_Date,?_sprintf+4
  2363  000E36  C0ED  F06B         	movff	_Date+1,?_sprintf+5
  2364  000E3A  EC98  F012         	call	_sprintf	;wreg free
  2365  000E3E                     
  2366                           ;Controlador.c: 485:     sprintf(month, "%x-", Month);
  2367  000E3E  0EB5               	movlw	low _month
  2368  000E40  0100               	movlb	0	; () banked
  2369  000E42  6F66               	movwf	sprintf@s& (0+255),b
  2370  000E44  0E01               	movlw	high _month
  2371  000E46  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2372  000E48  0E11               	movlw	low (STR_17+4)
  2373  000E4A  6F68               	movwf	sprintf@fmt& (0+255),b
  2374  000E4C  0E08               	movlw	high (STR_17+4)
  2375  000E4E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2376  000E50  C0EA  F06A         	movff	_Month,?_sprintf+4
  2377  000E54  C0EB  F06B         	movff	_Month+1,?_sprintf+5
  2378  000E58  EC98  F012         	call	_sprintf	;wreg free
  2379  000E5C                     
  2380                           ;Controlador.c: 486:     sprintf(year, "%x ", Year);
  2381  000E5C  0EAB               	movlw	low _year
  2382  000E5E  0100               	movlb	0	; () banked
  2383  000E60  6F66               	movwf	sprintf@s& (0+255),b
  2384  000E62  0E01               	movlw	high _year
  2385  000E64  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2386  000E66  0E29               	movlw	low STR_11
  2387  000E68  6F68               	movwf	sprintf@fmt& (0+255),b
  2388  000E6A  0E08               	movlw	high STR_11
  2389  000E6C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2390  000E6E  C0E8  F06A         	movff	_Year,?_sprintf+4
  2391  000E72  C0E9  F06B         	movff	_Year+1,?_sprintf+5
  2392  000E76  EC98  F012         	call	_sprintf	;wreg free
  2393  000E7A                     
  2394                           ;Controlador.c: 487:     LCD_String_xy(2, 0, date);
  2395  000E7A  0E00               	movlw	0
  2396  000E7C  6E0A               	movwf	LCD_String_xy@pos^0,c
  2397  000E7E  0EBF               	movlw	low _date
  2398  000E80  6E0B               	movwf	LCD_String_xy@msg^0,c
  2399  000E82  0E01               	movlw	high _date
  2400  000E84  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2401  000E86  0E02               	movlw	2
  2402  000E88  EC6F  F013         	call	_LCD_String_xy
  2403  000E8C                     
  2404                           ;Controlador.c: 488:     LCD_String(month);
  2405  000E8C  0EB5               	movlw	low _month
  2406  000E8E  6E08               	movwf	LCD_String@msg^0,c
  2407  000E90  0E01               	movlw	high _month
  2408  000E92  6E09               	movwf	(LCD_String@msg+1)^0,c
  2409  000E94  EC0E  F012         	call	_LCD_String	;wreg free
  2410  000E98                     
  2411                           ;Controlador.c: 489:     LCD_String(year);
  2412  000E98  0EAB               	movlw	low _year
  2413  000E9A  6E08               	movwf	LCD_String@msg^0,c
  2414  000E9C  0E01               	movlw	high _year
  2415  000E9E  6E09               	movwf	(LCD_String@msg+1)^0,c
  2416  000EA0  EC0E  F012         	call	_LCD_String	;wreg free
  2417                           
  2418                           ;Controlador.c: 492:     switch (days[Day]) {
  2419  000EA4  EF8C  F007         	goto	l3279
  2420  000EA8                     l3263:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;Controlador.c: 494:             LCD_String("Sun");
  2424  000EA8  0E41               	movlw	low STR_20
  2425  000EAA  6E08               	movwf	LCD_String@msg^0,c
  2426  000EAC  0E08               	movlw	high STR_20
  2427  000EAE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2428  000EB0  EC0E  F012         	call	_LCD_String	;wreg free
  2429                           
  2430                           ;Controlador.c: 495:             break;
  2431  000EB4  EFBC  F007         	goto	l3281
  2432  000EB8                     l3265:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;Controlador.c: 497:             LCD_String("Mon");
  2436  000EB8  0E3D               	movlw	low STR_21
  2437  000EBA  6E08               	movwf	LCD_String@msg^0,c
  2438  000EBC  0E08               	movlw	high STR_21
  2439  000EBE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2440  000EC0  EC0E  F012         	call	_LCD_String	;wreg free
  2441                           
  2442                           ;Controlador.c: 498:             break;
  2443  000EC4  EFBC  F007         	goto	l3281
  2444  000EC8                     l3267:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;Controlador.c: 500:             LCD_String("Tue");
  2448  000EC8  0E35               	movlw	low STR_22
  2449  000ECA  6E08               	movwf	LCD_String@msg^0,c
  2450  000ECC  0E08               	movlw	high STR_22
  2451  000ECE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2452  000ED0  EC0E  F012         	call	_LCD_String	;wreg free
  2453                           
  2454                           ;Controlador.c: 501:             break;
  2455  000ED4  EFBC  F007         	goto	l3281
  2456  000ED8                     l3269:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;Controlador.c: 503:             LCD_String("Wed");
  2460  000ED8  0E31               	movlw	low STR_23
  2461  000EDA  6E08               	movwf	LCD_String@msg^0,c
  2462  000EDC  0E08               	movlw	high STR_23
  2463  000EDE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2464  000EE0  EC0E  F012         	call	_LCD_String	;wreg free
  2465                           
  2466                           ;Controlador.c: 504:             break;
  2467  000EE4  EFBC  F007         	goto	l3281
  2468  000EE8                     l3271:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;Controlador.c: 506:             LCD_String("Thu");
  2472  000EE8  0E49               	movlw	low STR_24
  2473  000EEA  6E08               	movwf	LCD_String@msg^0,c
  2474  000EEC  0E08               	movlw	high STR_24
  2475  000EEE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2476  000EF0  EC0E  F012         	call	_LCD_String	;wreg free
  2477                           
  2478                           ;Controlador.c: 507:             break;
  2479  000EF4  EFBC  F007         	goto	l3281
  2480  000EF8                     l3273:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;Controlador.c: 509:             LCD_String("Fri");
  2484  000EF8  0E39               	movlw	low STR_25
  2485  000EFA  6E08               	movwf	LCD_String@msg^0,c
  2486  000EFC  0E08               	movlw	high STR_25
  2487  000EFE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2488  000F00  EC0E  F012         	call	_LCD_String	;wreg free
  2489                           
  2490                           ;Controlador.c: 510:             break;
  2491  000F04  EFBC  F007         	goto	l3281
  2492  000F08                     l3275:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;Controlador.c: 512:             LCD_String("Sat");
  2496  000F08  0E45               	movlw	low STR_26
  2497  000F0A  6E08               	movwf	LCD_String@msg^0,c
  2498  000F0C  0E08               	movlw	high STR_26
  2499  000F0E  6E09               	movwf	(LCD_String@msg+1)^0,c
  2500  000F10  EC0E  F012         	call	_LCD_String	;wreg free
  2501                           
  2502                           ;Controlador.c: 513:             break;
  2503  000F14  EFBC  F007         	goto	l3281
  2504  000F18                     l3279:
  2505  000F18  0EF1               	movlw	low _days
  2506  000F1A  0100               	movlb	0	; () banked
  2507  000F1C  25EE               	addwf	_Day& (0+255),w,b
  2508  000F1E  6ED9               	movwf	fsr2l,c
  2509  000F20  0E01               	movlw	high _days
  2510  000F22  21EF               	addwfc	(_Day+1)& (0+255),w,b
  2511  000F24  6EDA               	movwf	fsr2h,c
  2512  000F26  50DF               	movf	indf2,w,c
  2513  000F28  6F76               	movwf	??_mostrarFechaHora& (0+255),b
  2514  000F2A  6B77               	clrf	(??_mostrarFechaHora+1)& (0+255),b
  2515                           
  2516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2517                           ; Switch size 1, requested type "simple"
  2518                           ; Number of cases is 1, Range of values is 0 to 0
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte            4     3 (average)
  2522                           ;	Chosen strategy is simple_byte
  2523  000F2C  5177               	movf	(??_mostrarFechaHora+1)& (0+255),w,b
  2524  000F2E  0A00               	xorlw	0	; case 0
  2525  000F30  B4D8               	btfsc	status,2,c
  2526  000F32  EF9D  F007         	goto	l3469
  2527  000F36  EFBC  F007         	goto	l3281
  2528  000F3A                     l3469:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ; Switch size 1, requested type "simple"
  2532                           ; Number of cases is 7, Range of values is 70 to 116
  2533                           ; switch strategies available:
  2534                           ; Name         Instructions Cycles
  2535                           ; simple_byte           22    12 (average)
  2536                           ;	Chosen strategy is simple_byte
  2537  000F3A  5176               	movf	??_mostrarFechaHora& (0+255),w,b
  2538  000F3C  0A46               	xorlw	70	; case 70
  2539  000F3E  B4D8               	btfsc	status,2,c
  2540  000F40  EF7C  F007         	goto	l3273
  2541  000F44  0A0B               	xorlw	11	; case 77
  2542  000F46  B4D8               	btfsc	status,2,c
  2543  000F48  EF5C  F007         	goto	l3265
  2544  000F4C  0A1E               	xorlw	30	; case 83
  2545  000F4E  B4D8               	btfsc	status,2,c
  2546  000F50  EF54  F007         	goto	l3263
  2547  000F54  0A07               	xorlw	7	; case 84
  2548  000F56  B4D8               	btfsc	status,2,c
  2549  000F58  EF64  F007         	goto	l3267
  2550  000F5C  0A03               	xorlw	3	; case 87
  2551  000F5E  B4D8               	btfsc	status,2,c
  2552  000F60  EF6C  F007         	goto	l3269
  2553  000F64  0A24               	xorlw	36	; case 115
  2554  000F66  B4D8               	btfsc	status,2,c
  2555  000F68  EF84  F007         	goto	l3275
  2556  000F6C  0A07               	xorlw	7	; case 116
  2557  000F6E  B4D8               	btfsc	status,2,c
  2558  000F70  EF74  F007         	goto	l3271
  2559  000F74  EFBC  F007         	goto	l3281
  2560  000F78                     l3281:
  2561                           
  2562                           ;Controlador.c: 518:     char buffer_TX[] = "Registrando Hora y Fecha\r";
  2563  000F78  EE22  F06C         	lfsr	2,mostrarFechaHora@F3615
  2564  000F7C  EE10  F078         	lfsr	1,mostrarFechaHora@buffer_TX
  2565  000F80  0E19               	movlw	25
  2566  000F82                     u2981:
  2567  000F82  CFDB FFE3          	movff	plusw2,plusw1
  2568  000F86  06E8               	decf	wreg,f,c
  2569  000F88  E2FC               	bc	u2981
  2570  000F8A                     
  2571                           ;Controlador.c: 519:     for (int i = 0; i < 25; i++) {
  2572  000F8A  0E00               	movlw	0
  2573  000F8C  0100               	movlb	0	; () banked
  2574  000F8E  6F93               	movwf	(mostrarFechaHora@i+1)& (0+255),b
  2575  000F90  0E00               	movlw	0
  2576  000F92  6F92               	movwf	mostrarFechaHora@i& (0+255),b
  2577  000F94                     l459:
  2578                           
  2579                           ;Controlador.c: 521:         while (!TXSTAbits.TRMT) {
  2580  000F94  A2AC               	btfss	172,1,c	;volatile
  2581  000F96  EFCF  F007         	goto	u2991
  2582  000F9A  EFD1  F007         	goto	u2990
  2583  000F9E                     u2991:
  2584  000F9E  EFCA  F007         	goto	l459
  2585  000FA2                     u2990:
  2586  000FA2                     
  2587                           ;Controlador.c: 524:         TXREG = buffer_TX[i];
  2588  000FA2  0E78               	movlw	low mostrarFechaHora@buffer_TX
  2589  000FA4  0100               	movlb	0	; () banked
  2590  000FA6  2592               	addwf	mostrarFechaHora@i& (0+255),w,b
  2591  000FA8  6ED9               	movwf	fsr2l,c
  2592  000FAA  0E00               	movlw	high mostrarFechaHora@buffer_TX
  2593  000FAC  2193               	addwfc	(mostrarFechaHora@i+1)& (0+255),w,b
  2594  000FAE  6EDA               	movwf	fsr2h,c
  2595  000FB0  50DF               	movf	indf2,w,c
  2596  000FB2  6EAD               	movwf	173,c	;volatile
  2597  000FB4                     
  2598                           ; BSR set to: 0
  2599                           ;Controlador.c: 525:     }
  2600  000FB4  4B92               	infsnz	mostrarFechaHora@i& (0+255),f,b
  2601  000FB6  2B93               	incf	(mostrarFechaHora@i+1)& (0+255),f,b
  2602  000FB8                     
  2603                           ; BSR set to: 0
  2604  000FB8  BF93               	btfsc	(mostrarFechaHora@i+1)& (0+255),7,b
  2605  000FBA  EFE8  F007         	goto	u3001
  2606  000FBE  5193               	movf	(mostrarFechaHora@i+1)& (0+255),w,b
  2607  000FC0  E109               	bnz	u3000
  2608  000FC2  0E19               	movlw	25
  2609  000FC4  5D92               	subwf	mostrarFechaHora@i& (0+255),w,b
  2610  000FC6  A0D8               	btfss	status,0,c
  2611  000FC8  EFE8  F007         	goto	u3001
  2612  000FCC  EFEA  F007         	goto	u3000
  2613  000FD0                     u3001:
  2614  000FD0  EFCA  F007         	goto	l459
  2615  000FD4                     u3000:
  2616  000FD4                     
  2617                           ; BSR set to: 0
  2618  000FD4  0012               	return		;funcret
  2619  000FD6                     __end_of_mostrarFechaHora:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _RTC_Read_Clock *****************
  2623 ;; Defined at:
  2624 ;;		line 430 in file "Controlador.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  read_clock_a    1    wreg     unsigned char 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0
  2639 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2640 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2641 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    3
  2645 ;; This function calls:
  2646 ;;		_I2C_Read
  2647 ;;		_I2C_Repeated_Start
  2648 ;;		_I2C_Start
  2649 ;;		_I2C_Write
  2650 ;; This function is called by:
  2651 ;;		_mostrarFechaHora
  2652 ;;		_verificarHora
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text5
  2657  002614                     __ptext5:
  2658                           	callstack 0
  2659  002614                     _RTC_Read_Clock:
  2660                           	callstack 26
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;incstack = 0
  2664                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2665  002614  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2666  002616                     
  2667                           ;Controlador.c: 431:     I2C_Start(0xD0);
  2668  002616  0ED0               	movlw	208
  2669  002618  EC1D  F014         	call	_I2C_Start
  2670                           
  2671                           ;Controlador.c: 432:     I2C_Write(read_clock_address);
  2672  00261C  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2673  00261E  EC78  F014         	call	_I2C_Write
  2674                           
  2675                           ;Controlador.c: 433:     I2C_Repeated_Start(0xD1);
  2676  002622  0ED1               	movlw	209
  2677  002624  EC34  F014         	call	_I2C_Repeated_Start
  2678  002628                     
  2679                           ;Controlador.c: 434:     sec = I2C_Read(0);
  2680  002628  0E00               	movlw	0
  2681  00262A  ECAD  F013         	call	_I2C_Read
  2682  00262E  6E03               	movwf	??_RTC_Read_Clock^0,c
  2683  002630  5003               	movf	??_RTC_Read_Clock^0,w,c
  2684  002632  0100               	movlb	0	; () banked
  2685  002634  6FF4               	movwf	_sec& (0+255),b
  2686  002636  6BF5               	clrf	(_sec+1)& (0+255),b
  2687  002638                     
  2688                           ; BSR set to: 0
  2689                           ;Controlador.c: 435:     min = I2C_Read(0);
  2690  002638  0E00               	movlw	0
  2691  00263A  ECAD  F013         	call	_I2C_Read
  2692  00263E  6E03               	movwf	??_RTC_Read_Clock^0,c
  2693  002640  5003               	movf	??_RTC_Read_Clock^0,w,c
  2694  002642  0100               	movlb	0	; () banked
  2695  002644  6FF2               	movwf	_min& (0+255),b
  2696  002646  6BF3               	clrf	(_min+1)& (0+255),b
  2697  002648                     
  2698                           ; BSR set to: 0
  2699                           ;Controlador.c: 436:     hour = I2C_Read(1);
  2700  002648  0E01               	movlw	1
  2701  00264A  ECAD  F013         	call	_I2C_Read
  2702  00264E  6E03               	movwf	??_RTC_Read_Clock^0,c
  2703  002650  5003               	movf	??_RTC_Read_Clock^0,w,c
  2704  002652  0100               	movlb	0	; () banked
  2705  002654  6FF0               	movwf	_hour& (0+255),b
  2706  002656  6BF1               	clrf	(_hour+1)& (0+255),b
  2707  002658                     
  2708                           ; BSR set to: 0
  2709  002658  0012               	return		;funcret
  2710  00265A                     __end_of_RTC_Read_Clock:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _RTC_Read_Calendar *****************
  2714 ;; Defined at:
  2715 ;;		line 440 in file "Controlador.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  read_calenda    1    wreg     unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        2 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		_I2C_Read
  2738 ;;		_I2C_Repeated_Start
  2739 ;;		_I2C_Start
  2740 ;;		_I2C_Stop
  2741 ;;		_I2C_Write
  2742 ;; This function is called by:
  2743 ;;		_mostrarFechaHora
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text6
  2748  0024D6                     __ptext6:
  2749                           	callstack 0
  2750  0024D6                     _RTC_Read_Calendar:
  2751                           	callstack 26
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;incstack = 0
  2755                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2756  0024D6  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2757  0024D8                     
  2758                           ;Controlador.c: 441:     I2C_Start(0xD0);
  2759  0024D8  0ED0               	movlw	208
  2760  0024DA  EC1D  F014         	call	_I2C_Start
  2761                           
  2762                           ;Controlador.c: 442:     I2C_Write(read_calendar_address);
  2763  0024DE  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2764  0024E0  EC78  F014         	call	_I2C_Write
  2765                           
  2766                           ;Controlador.c: 443:     I2C_Repeated_Start(0xD1);
  2767  0024E4  0ED1               	movlw	209
  2768  0024E6  EC34  F014         	call	_I2C_Repeated_Start
  2769  0024EA                     
  2770                           ;Controlador.c: 444:     Day = I2C_Read(0);
  2771  0024EA  0E00               	movlw	0
  2772  0024EC  ECAD  F013         	call	_I2C_Read
  2773  0024F0  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2774  0024F2  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2775  0024F4  0100               	movlb	0	; () banked
  2776  0024F6  6FEE               	movwf	_Day& (0+255),b
  2777  0024F8  6BEF               	clrf	(_Day+1)& (0+255),b
  2778  0024FA                     
  2779                           ; BSR set to: 0
  2780                           ;Controlador.c: 445:     Date = I2C_Read(0);
  2781  0024FA  0E00               	movlw	0
  2782  0024FC  ECAD  F013         	call	_I2C_Read
  2783  002500  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2784  002502  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2785  002504  0100               	movlb	0	; () banked
  2786  002506  6FEC               	movwf	_Date& (0+255),b
  2787  002508  6BED               	clrf	(_Date+1)& (0+255),b
  2788  00250A                     
  2789                           ; BSR set to: 0
  2790                           ;Controlador.c: 446:     Month = I2C_Read(0);
  2791  00250A  0E00               	movlw	0
  2792  00250C  ECAD  F013         	call	_I2C_Read
  2793  002510  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2794  002512  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2795  002514  0100               	movlb	0	; () banked
  2796  002516  6FEA               	movwf	_Month& (0+255),b
  2797  002518  6BEB               	clrf	(_Month+1)& (0+255),b
  2798  00251A                     
  2799                           ; BSR set to: 0
  2800                           ;Controlador.c: 447:     Year = I2C_Read(1);
  2801  00251A  0E01               	movlw	1
  2802  00251C  ECAD  F013         	call	_I2C_Read
  2803  002520  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2804  002522  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2805  002524  0100               	movlb	0	; () banked
  2806  002526  6FE8               	movwf	_Year& (0+255),b
  2807  002528  6BE9               	clrf	(_Year+1)& (0+255),b
  2808  00252A                     
  2809                           ; BSR set to: 0
  2810                           ;Controlador.c: 448:     I2C_Stop();
  2811  00252A  ECC2  F014         	call	_I2C_Stop	;wreg free
  2812  00252E  0012               	return		;funcret
  2813  002530                     __end_of_RTC_Read_Calendar:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _I2C_Stop *****************
  2817 ;; Defined at:
  2818 ;;		line 140 in file "./I2C_Master_File.h"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      unsigned char 
  2825 ;; Registers used:
  2826 ;;		wreg
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_RTC_Read_Calendar
  2842 ;;		_mostrarFechaHora
  2843 ;;		_verificarHora
  2844 ;;		_I2C_Start_Wait
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text7
  2849  002984                     __ptext7:
  2850                           	callstack 0
  2851  002984                     _I2C_Stop:
  2852                           	callstack 29
  2853  002984                     
  2854                           ;./I2C_Master_File.h: 142:     PEN = 1;
  2855  002984  84C5               	bsf	4037,2,c	;volatile
  2856  002986                     l206:
  2857  002986  B4C5               	btfsc	4037,2,c	;volatile
  2858  002988  EFC8  F014         	goto	u2421
  2859  00298C  EFCA  F014         	goto	u2420
  2860  002990                     u2421:
  2861  002990  EFC3  F014         	goto	l206
  2862  002994                     u2420:
  2863  002994                     
  2864                           ;./I2C_Master_File.h: 144:     if(!SSPSTATbits.P);
  2865  002994  50C7               	movf	199,w,c	;volatile
  2866  002996  0012               	return		;funcret
  2867  002998                     __end_of_I2C_Stop:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _I2C_Start *****************
  2871 ;; Defined at:
  2872 ;;		line 115 in file "./I2C_Master_File.h"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  slave_write_    1    wreg     unsigned char 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2889 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:        1 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		_I2C_Write
  2895 ;; This function is called by:
  2896 ;;		_RTC_Read_Clock
  2897 ;;		_RTC_Read_Calendar
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text8
  2902  00283A                     __ptext8:
  2903                           	callstack 0
  2904  00283A                     _I2C_Start:
  2905                           	callstack 26
  2906                           
  2907                           ;incstack = 0
  2908                           ;I2C_Start@slave_write_address stored from wreg
  2909  00283A  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2910  00283C                     
  2911                           ;./I2C_Master_File.h: 115: char I2C_Start(char slave_write_address);./I2C_Master_File.h:
      +                           116: {;./I2C_Master_File.h: 117:     SSPCON2bits.SEN=1;
  2912  00283C  80C5               	bsf	197,0,c	;volatile
  2913  00283E                     l190:
  2914  00283E  B0C5               	btfsc	197,0,c	;volatile
  2915  002840  EF24  F014         	goto	u2431
  2916  002844  EF26  F014         	goto	u2430
  2917  002848                     u2431:
  2918  002848  EF1F  F014         	goto	l190
  2919  00284C                     u2430:
  2920  00284C                     
  2921                           ;./I2C_Master_File.h: 119:  SSPIF=0;
  2922  00284C  969E               	bcf	3998,3,c	;volatile
  2923                           
  2924                           ;./I2C_Master_File.h: 120:     if(!SSPSTATbits.S)
  2925  00284E  B6C7               	btfsc	199,3,c	;volatile
  2926  002850  EF2C  F014         	goto	u2441
  2927  002854  EF2E  F014         	goto	u2440
  2928  002858                     u2441:
  2929  002858  EF30  F014         	goto	l2831
  2930  00285C                     u2440:
  2931  00285C  EF33  F014         	goto	l194
  2932  002860                     l2831:
  2933                           
  2934                           ;./I2C_Master_File.h: 122:     return (I2C_Write(slave_write_address));;	Return value of
      +                           _I2C_Start is never used
  2935  002860  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2936  002862  EC78  F014         	call	_I2C_Write
  2937  002866                     l194:
  2938  002866  0012               	return		;funcret
  2939  002868                     __end_of_I2C_Start:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _I2C_Repeated_Start *****************
  2943 ;; Defined at:
  2944 ;;		line 126 in file "./I2C_Master_File.h"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  slave_read_a    1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      unsigned char 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2961 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		_I2C_Write
  2967 ;; This function is called by:
  2968 ;;		_RTC_Read_Clock
  2969 ;;		_RTC_Read_Calendar
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text9
  2974  002868                     __ptext9:
  2975                           	callstack 0
  2976  002868                     _I2C_Repeated_Start:
  2977                           	callstack 26
  2978                           
  2979                           ;incstack = 0
  2980                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2981  002868  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2982  00286A                     
  2983                           ;./I2C_Master_File.h: 126: char I2C_Repeated_Start(char slave_read_address);./I2C_Master
      +                          _File.h: 127: {;./I2C_Master_File.h: 128:     RSEN = 1;
  2984  00286A  82C5               	bsf	4037,1,c	;volatile
  2985  00286C                     l197:
  2986  00286C  B2C5               	btfsc	4037,1,c	;volatile
  2987  00286E  EF3B  F014         	goto	u2451
  2988  002872  EF3D  F014         	goto	u2450
  2989  002876                     u2451:
  2990  002876  EF36  F014         	goto	l197
  2991  00287A                     u2450:
  2992  00287A                     
  2993                           ;./I2C_Master_File.h: 130:     SSPIF = 0;
  2994  00287A  969E               	bcf	3998,3,c	;volatile
  2995                           
  2996                           ;./I2C_Master_File.h: 131:  if(!SSPSTATbits.S)
  2997  00287C  B6C7               	btfsc	199,3,c	;volatile
  2998  00287E  EF43  F014         	goto	u2461
  2999  002882  EF45  F014         	goto	u2460
  3000  002886                     u2461:
  3001  002886  EF47  F014         	goto	l2839
  3002  00288A                     u2460:
  3003  00288A  EF4A  F014         	goto	l201
  3004  00288E                     l2839:
  3005                           
  3006                           ;./I2C_Master_File.h: 133:     I2C_Write(slave_read_address);
  3007  00288E  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3008  002890  EC78  F014         	call	_I2C_Write
  3009  002894                     l201:
  3010  002894  0012               	return		;funcret
  3011  002896                     __end_of_I2C_Repeated_Start:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _I2C_Write *****************
  3015 ;; Defined at:
  3016 ;;		line 148 in file "./I2C_Master_File.h"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  data            1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  data            1    0[COMRAM] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0
  3031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3033 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		_I2C_Ready
  3039 ;; This function is called by:
  3040 ;;		_I2C_Start
  3041 ;;		_I2C_Repeated_Start
  3042 ;;		_RTC_Read_Clock
  3043 ;;		_RTC_Read_Calendar
  3044 ;;		_I2C_Start_Wait
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text10
  3049  0028F0                     __ptext10:
  3050                           	callstack 0
  3051  0028F0                     _I2C_Write:
  3052                           	callstack 27
  3053                           
  3054                           ;incstack = 0
  3055                           ;I2C_Write@data stored from wreg
  3056  0028F0  6E01               	movwf	I2C_Write@data^0,c
  3057  0028F2                     
  3058                           ;./I2C_Master_File.h: 148: char I2C_Write(unsigned char data);./I2C_Master_File.h: 149: 
      +                          {;./I2C_Master_File.h: 150:       SSPBUF = data;
  3059  0028F2  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3060  0028F6                     
  3061                           ;./I2C_Master_File.h: 151:       I2C_Ready();
  3062  0028F6  ECE0  F014         	call	_I2C_Ready	;wreg free
  3063  0028FA                     
  3064                           ;./I2C_Master_File.h: 152:       if (ACKSTAT)
  3065  0028FA  ACC5               	btfss	4037,6,c	;volatile
  3066  0028FC  EF82  F014         	goto	u2301
  3067  002900  EF84  F014         	goto	u2300
  3068  002904                     u2301:
  3069  002904  EF87  F014         	goto	l2733
  3070  002908                     u2300:
  3071  002908                     
  3072                           ;./I2C_Master_File.h: 153:         return 1;
  3073  002908  0E01               	movlw	1
  3074  00290A  EF88  F014         	goto	l214
  3075  00290E                     l2733:
  3076                           
  3077                           ;./I2C_Master_File.h: 155:         return 2;
  3078  00290E  0E02               	movlw	2
  3079  002910                     l214:
  3080  002910  0012               	return		;funcret
  3081  002912                     __end_of_I2C_Write:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _I2C_Read *****************
  3085 ;; Defined at:
  3086 ;;		line 59 in file "./I2C_Master_File.h"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  flag            1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  flag            1    0[COMRAM] unsigned char 
  3091 ;;  buffer          1    1[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      unsigned char 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0
  3102 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3104 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    1
  3108 ;; This function calls:
  3109 ;;		_I2C_Ack
  3110 ;;		_I2C_Nack
  3111 ;;		_I2C_Ready
  3112 ;; This function is called by:
  3113 ;;		_RTC_Read_Clock
  3114 ;;		_RTC_Read_Calendar
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text11
  3119  00275A                     __ptext11:
  3120                           	callstack 0
  3121  00275A                     _I2C_Read:
  3122                           	callstack 27
  3123                           
  3124                           ;incstack = 0
  3125                           ;I2C_Read@flag stored from wreg
  3126  00275A  6E01               	movwf	I2C_Read@flag^0,c
  3127  00275C                     
  3128                           ;./I2C_Master_File.h: 59: char I2C_Read(char flag);./I2C_Master_File.h: 61: {;./I2C_Mast
      +                          er_File.h: 62:         char buffer;;./I2C_Master_File.h: 63:         RCEN = 1;
  3129  00275C  86C5               	bsf	4037,3,c	;volatile
  3130  00275E                     l162:
  3131  00275E  A0C7               	btfss	199,0,c	;volatile
  3132  002760  EFB4  F013         	goto	u2401
  3133  002764  EFB6  F013         	goto	u2400
  3134  002768                     u2401:
  3135  002768  EFAF  F013         	goto	l162
  3136  00276C                     u2400:
  3137  00276C                     
  3138                           ;./I2C_Master_File.h: 66:         buffer = SSPBUF;
  3139  00276C  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3140  002770                     
  3141                           ;./I2C_Master_File.h: 68:         if(flag==0)
  3142  002770  5001               	movf	I2C_Read@flag^0,w,c
  3143  002772  A4D8               	btfss	status,2,c
  3144  002774  EFBE  F013         	goto	u2411
  3145  002778  EFC0  F013         	goto	u2410
  3146  00277C                     u2411:
  3147  00277C  EFC4  F013         	goto	l2819
  3148  002780                     u2410:
  3149  002780                     
  3150                           ;./I2C_Master_File.h: 69:             I2C_Ack();
  3151  002780  ECD6  F014         	call	_I2C_Ack	;wreg free
  3152  002784  EFC6  F013         	goto	l166
  3153  002788                     l2819:
  3154                           
  3155                           ;./I2C_Master_File.h: 71:             I2C_Nack();
  3156  002788  ECCC  F014         	call	_I2C_Nack	;wreg free
  3157  00278C                     l166:
  3158                           
  3159                           ;./I2C_Master_File.h: 72:         I2C_Ready();
  3160  00278C  ECE0  F014         	call	_I2C_Ready	;wreg free
  3161  002790                     
  3162                           ;./I2C_Master_File.h: 73:         return(buffer);
  3163  002790  5002               	movf	I2C_Read@buffer^0,w,c
  3164  002792  0012               	return		;funcret
  3165  002794                     __end_of_I2C_Read:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _I2C_Ready *****************
  3169 ;; Defined at:
  3170 ;;		line 90 in file "./I2C_Master_File.h"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		None
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_I2C_Read
  3194 ;;		_I2C_Write
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text12
  3199  0029C0                     __ptext12:
  3200                           	callstack 0
  3201  0029C0                     _I2C_Ready:
  3202                           	callstack 27
  3203  0029C0                     l173:
  3204  0029C0  A69E               	btfss	3998,3,c	;volatile
  3205  0029C2  EFE5  F014         	goto	u1951
  3206  0029C6  EFE7  F014         	goto	u1950
  3207  0029CA                     u1951:
  3208  0029CA  EFE0  F014         	goto	l173
  3209  0029CE                     u1950:
  3210  0029CE                     
  3211                           ;./I2C_Master_File.h: 93:     SSPIF=0;
  3212  0029CE  969E               	bcf	3998,3,c	;volatile
  3213  0029D0  0012               	return		;funcret
  3214  0029D2                     __end_of_I2C_Ready:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _I2C_Nack *****************
  3218 ;; Defined at:
  3219 ;;		line 165 in file "./I2C_Master_File.h"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		None
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3236 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3237 ;;Total ram usage:        0 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_I2C_Read
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text13
  3247  002998                     __ptext13:
  3248                           	callstack 0
  3249  002998                     _I2C_Nack:
  3250                           	callstack 27
  3251  002998                     
  3252                           ;./I2C_Master_File.h: 167:     ACKDT=1;
  3253  002998  8AC5               	bsf	4037,5,c	;volatile
  3254                           
  3255                           ;./I2C_Master_File.h: 168:  ACKEN=1;
  3256  00299A  88C5               	bsf	4037,4,c	;volatile
  3257  00299C                     l224:
  3258  00299C  B8C5               	btfsc	4037,4,c	;volatile
  3259  00299E  EFD3  F014         	goto	u2291
  3260  0029A2  EFD5  F014         	goto	u2290
  3261  0029A6                     u2291:
  3262  0029A6  EFCE  F014         	goto	l224
  3263  0029AA                     u2290:
  3264  0029AA  0012               	return		;funcret
  3265  0029AC                     __end_of_I2C_Nack:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _I2C_Ack *****************
  3269 ;; Defined at:
  3270 ;;		line 158 in file "./I2C_Master_File.h"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		None
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_I2C_Read
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text14
  3298  0029AC                     __ptext14:
  3299                           	callstack 0
  3300  0029AC                     _I2C_Ack:
  3301                           	callstack 27
  3302  0029AC                     
  3303                           ;./I2C_Master_File.h: 160:     ACKDT=0;
  3304  0029AC  9AC5               	bcf	4037,5,c	;volatile
  3305                           
  3306                           ;./I2C_Master_File.h: 161:  ACKEN=1;
  3307  0029AE  88C5               	bsf	4037,4,c	;volatile
  3308  0029B0                     l218:
  3309  0029B0  B8C5               	btfsc	4037,4,c	;volatile
  3310  0029B2  EFDD  F014         	goto	u2281
  3311  0029B6  EFDF  F014         	goto	u2280
  3312  0029BA                     u2281:
  3313  0029BA  EFD8  F014         	goto	l218
  3314  0029BE                     u2280:
  3315  0029BE  0012               	return		;funcret
  3316  0029C0                     __end_of_I2C_Ack:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function _LCD_Init *****************
  3320 ;; Defined at:
  3321 ;;		line 37 in file "LCD_16x2.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		_LCD_Command
  3344 ;;		_MSdelay
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;;		_mostrarFechaHora
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text15
  3352  002896                     __ptext15:
  3353                           	callstack 0
  3354  002896                     _LCD_Init:
  3355                           	callstack 27
  3356  002896                     
  3357                           ;LCD_16x2.c: 39:     TRISD = 0x00;
  3358  002896  0E00               	movlw	0
  3359  002898  6E95               	movwf	149,c	;volatile
  3360                           
  3361                           ;LCD_16x2.c: 40:     TRISC = 0x00;
  3362  00289A  0E00               	movlw	0
  3363  00289C  6E94               	movwf	148,c	;volatile
  3364  00289E                     
  3365                           ;LCD_16x2.c: 41:     MSdelay(20);
  3366  00289E  0E00               	movlw	0
  3367  0028A0  6E02               	movwf	(MSdelay@val+1)^0,c
  3368  0028A2  0E14               	movlw	20
  3369  0028A4  6E01               	movwf	MSdelay@val^0,c
  3370  0028A6  ECC1  F012         	call	_MSdelay	;wreg free
  3371  0028AA                     
  3372                           ;LCD_16x2.c: 42:  LCD_Command(0x38);
  3373  0028AA  0E38               	movlw	56
  3374  0028AC  EC99  F014         	call	_LCD_Command
  3375  0028B0                     
  3376                           ;LCD_16x2.c: 43:     LCD_Command(0x0c);
  3377  0028B0  0E0C               	movlw	12
  3378  0028B2  EC99  F014         	call	_LCD_Command
  3379  0028B6                     
  3380                           ;LCD_16x2.c: 44:     LCD_Command(0x06);
  3381  0028B6  0E06               	movlw	6
  3382  0028B8  EC99  F014         	call	_LCD_Command
  3383  0028BC                     
  3384                           ;LCD_16x2.c: 45:  LCD_Command(0x01);
  3385  0028BC  0E01               	movlw	1
  3386  0028BE  EC99  F014         	call	_LCD_Command
  3387  0028C2  0012               	return		;funcret
  3388  0028C4                     __end_of_LCD_Init:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _imprimirTemHum *****************
  3392 ;; Defined at:
  3393 ;;		line 280 in file "Controlador.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    8
  3414 ;; This function calls:
  3415 ;;		_LCD_Char
  3416 ;;		_LCD_String
  3417 ;;		_LCD_String_xy
  3418 ;;		_sprintf
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text16
  3425  001D1A                     __ptext16:
  3426                           	callstack 0
  3427  001D1A                     _imprimirTemHum:
  3428                           	callstack 22
  3429  001D1A                     
  3430                           ;Controlador.c: 282:     sprintf(vec_value, "%d", var_RH_Integral);
  3431  001D1A  0EE7               	movlw	low _vec_value
  3432  001D1C  0100               	movlb	0	; () banked
  3433  001D1E  6F66               	movwf	sprintf@s& (0+255),b
  3434  001D20  0E01               	movlw	high _vec_value
  3435  001D22  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3436  001D24  0E2E               	movlw	low (STR_6+1)
  3437  001D26  6F68               	movwf	sprintf@fmt& (0+255),b
  3438  001D28  0E08               	movlw	high (STR_6+1)
  3439  001D2A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3440  001D2C  C0FC  F06A         	movff	_var_RH_Integral,?_sprintf+4
  3441  001D30  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3442  001D32  EC98  F012         	call	_sprintf	;wreg free
  3443  001D36                     
  3444                           ;Controlador.c: 283:     LCD_String_xy(0, 9, vec_value);
  3445  001D36  0E09               	movlw	9
  3446  001D38  6E0A               	movwf	LCD_String_xy@pos^0,c
  3447  001D3A  0EE7               	movlw	low _vec_value
  3448  001D3C  6E0B               	movwf	LCD_String_xy@msg^0,c
  3449  001D3E  0E01               	movlw	high _vec_value
  3450  001D40  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3451  001D42  0E00               	movlw	0
  3452  001D44  EC6F  F013         	call	_LCD_String_xy
  3453  001D48                     
  3454                           ;Controlador.c: 284:     sprintf(vec_value, ".%d ", var_RH_Decimal);
  3455  001D48  0EE7               	movlw	low _vec_value
  3456  001D4A  0100               	movlb	0	; () banked
  3457  001D4C  6F66               	movwf	sprintf@s& (0+255),b
  3458  001D4E  0E01               	movlw	high _vec_value
  3459  001D50  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3460  001D52  0E24               	movlw	low STR_4
  3461  001D54  6F68               	movwf	sprintf@fmt& (0+255),b
  3462  001D56  0E08               	movlw	high STR_4
  3463  001D58  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3464  001D5A  C0FD  F06A         	movff	_var_RH_Decimal,?_sprintf+4
  3465  001D5E  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3466  001D60  EC98  F012         	call	_sprintf	;wreg free
  3467                           
  3468                           ;Controlador.c: 285:     LCD_String(vec_value);
  3469  001D64  0EE7               	movlw	low _vec_value
  3470  001D66  6E08               	movwf	LCD_String@msg^0,c
  3471  001D68  0E01               	movlw	high _vec_value
  3472  001D6A  6E09               	movwf	(LCD_String@msg+1)^0,c
  3473  001D6C  EC0E  F012         	call	_LCD_String	;wreg free
  3474  001D70                     
  3475                           ;Controlador.c: 286:     LCD_Char('%');
  3476  001D70  0E25               	movlw	37
  3477  001D72  ECA7  F014         	call	_LCD_Char
  3478  001D76                     
  3479                           ;Controlador.c: 289:     sprintf(vec_value, "%d", var_T_Integral);
  3480  001D76  0EE7               	movlw	low _vec_value
  3481  001D78  0100               	movlb	0	; () banked
  3482  001D7A  6F66               	movwf	sprintf@s& (0+255),b
  3483  001D7C  0E01               	movlw	high _vec_value
  3484  001D7E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3485  001D80  0E2E               	movlw	low (STR_6+1)
  3486  001D82  6F68               	movwf	sprintf@fmt& (0+255),b
  3487  001D84  0E08               	movlw	high (STR_6+1)
  3488  001D86  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3489  001D88  C0FA  F06A         	movff	_var_T_Integral,?_sprintf+4
  3490  001D8C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3491  001D8E  EC98  F012         	call	_sprintf	;wreg free
  3492  001D92                     
  3493                           ;Controlador.c: 290:     LCD_String_xy(0, 0, vec_value);
  3494  001D92  0E00               	movlw	0
  3495  001D94  6E0A               	movwf	LCD_String_xy@pos^0,c
  3496  001D96  0EE7               	movlw	low _vec_value
  3497  001D98  6E0B               	movwf	LCD_String_xy@msg^0,c
  3498  001D9A  0E01               	movlw	high _vec_value
  3499  001D9C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3500  001D9E  0E00               	movlw	0
  3501  001DA0  EC6F  F013         	call	_LCD_String_xy
  3502  001DA4                     
  3503                           ;Controlador.c: 291:     sprintf(vec_value, ".%d", var_T_Decimal);
  3504  001DA4  0EE7               	movlw	low _vec_value
  3505  001DA6  0100               	movlb	0	; () banked
  3506  001DA8  6F66               	movwf	sprintf@s& (0+255),b
  3507  001DAA  0E01               	movlw	high _vec_value
  3508  001DAC  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3509  001DAE  0E2D               	movlw	low STR_6
  3510  001DB0  6F68               	movwf	sprintf@fmt& (0+255),b
  3511  001DB2  0E08               	movlw	high STR_6
  3512  001DB4  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3513  001DB6  C0FB  F06A         	movff	_var_T_Decimal,?_sprintf+4
  3514  001DBA  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3515  001DBC  EC98  F012         	call	_sprintf	;wreg free
  3516  001DC0                     
  3517                           ;Controlador.c: 292:     LCD_String(vec_value);
  3518  001DC0  0EE7               	movlw	low _vec_value
  3519  001DC2  6E08               	movwf	LCD_String@msg^0,c
  3520  001DC4  0E01               	movlw	high _vec_value
  3521  001DC6  6E09               	movwf	(LCD_String@msg+1)^0,c
  3522  001DC8  EC0E  F012         	call	_LCD_String	;wreg free
  3523  001DCC                     
  3524                           ;Controlador.c: 293:     LCD_Char(0xdf);
  3525  001DCC  0EDF               	movlw	223
  3526  001DCE  ECA7  F014         	call	_LCD_Char
  3527  001DD2                     
  3528                           ;Controlador.c: 294:     LCD_Char('C');
  3529  001DD2  0E43               	movlw	67
  3530  001DD4  ECA7  F014         	call	_LCD_Char
  3531  001DD8                     
  3532                           ;Controlador.c: 296:     LCD_String_xy(0, 15, "H");
  3533  001DD8  0E0F               	movlw	15
  3534  001DDA  6E0A               	movwf	LCD_String_xy@pos^0,c
  3535  001DDC  0E53               	movlw	low STR_7
  3536  001DDE  6E0B               	movwf	LCD_String_xy@msg^0,c
  3537  001DE0  0E08               	movlw	high STR_7
  3538  001DE2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3539  001DE4  0E00               	movlw	0
  3540  001DE6  EC6F  F013         	call	_LCD_String_xy
  3541  001DEA                     
  3542                           ;Controlador.c: 297:     LCD_String_xy(0, 6, "T");
  3543  001DEA  0E06               	movlw	6
  3544  001DEC  6E0A               	movwf	LCD_String_xy@pos^0,c
  3545  001DEE  0E55               	movlw	low STR_8
  3546  001DF0  6E0B               	movwf	LCD_String_xy@msg^0,c
  3547  001DF2  0E08               	movlw	high STR_8
  3548  001DF4  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  3549  001DF6  0E00               	movlw	0
  3550  001DF8  EC6F  F013         	call	_LCD_String_xy
  3551  001DFC  0012               	return		;funcret
  3552  001DFE                     __end_of_imprimirTemHum:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _sprintf *****************
  3556 ;; Defined at:
  3557 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  s               2    6[BANK0 ] PTR unsigned char 
  3560 ;;		 -> year(10), month(10), date(10), hours(10), 
  3561 ;;		 -> mins(10), secs(10), vec_value(10), 
  3562 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3563 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3564 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3565 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3566 ;;		 -> STR_3(3), 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  f               6   16[BANK0 ] struct _IO_FILE
  3569 ;;  ap              2   14[BANK0 ] PTR void [1]
  3570 ;;		 -> ?_sprintf(2), 
  3571 ;;  ret             2    0        int 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    6[BANK0 ] int 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3581 ;;      Params:         0       6       0       0       0       0       0       0       0
  3582 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3584 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3585 ;;Total ram usage:       16 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    7
  3588 ;; This function calls:
  3589 ;;		_vfprintf
  3590 ;; This function is called by:
  3591 ;;		_imprimirTemHum
  3592 ;;		_mostrarFechaHora
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text17
  3597  002530                     __ptext17:
  3598                           	callstack 0
  3599  002530                     _sprintf:
  3600                           	callstack 22
  3601  002530  0E6A               	movlw	low (?_sprintf+4)
  3602  002532  0100               	movlb	0	; () banked
  3603  002534  6F6E               	movwf	sprintf@ap& (0+255),b
  3604  002536  0E00               	movlw	high (?_sprintf+4)
  3605  002538  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  3606  00253A  C066  F070         	movff	sprintf@s,sprintf@f
  3607  00253E  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  3608  002542                     
  3609                           ; BSR set to: 0
  3610  002542  0E00               	movlw	0
  3611  002544  6F73               	movwf	(sprintf@f+3)& (0+255),b
  3612  002546  0E00               	movlw	0
  3613  002548  6F72               	movwf	(sprintf@f+2)& (0+255),b
  3614  00254A                     
  3615                           ; BSR set to: 0
  3616  00254A  0E00               	movlw	0
  3617  00254C  6F75               	movwf	(sprintf@f+5)& (0+255),b
  3618  00254E  0E00               	movlw	0
  3619  002550  6F74               	movwf	(sprintf@f+4)& (0+255),b
  3620  002552                     
  3621                           ; BSR set to: 0
  3622  002552  0E70               	movlw	low sprintf@f
  3623  002554  6F60               	movwf	vfprintf@fp& (0+255),b
  3624  002556  0E00               	movlw	high sprintf@f
  3625  002558  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3626  00255A  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  3627  00255E  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3628  002562  0E6E               	movlw	low sprintf@ap
  3629  002564  6F64               	movwf	vfprintf@ap& (0+255),b
  3630  002566  0E00               	movlw	high sprintf@ap
  3631  002568  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3632  00256A  EC4F  F011         	call	_vfprintf	;wreg free
  3633  00256E  0100               	movlb	0	; () banked
  3634  002570  5172               	movf	(sprintf@f+2)& (0+255),w,b
  3635  002572  2566               	addwf	sprintf@s& (0+255),w,b
  3636  002574  6ED9               	movwf	fsr2l,c
  3637  002576  5173               	movf	(sprintf@f+3)& (0+255),w,b
  3638  002578  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  3639  00257A  6EDA               	movwf	fsr2h,c
  3640  00257C  0E00               	movlw	0
  3641  00257E  6EDF               	movwf	indf2,c
  3642  002580                     
  3643                           ; BSR set to: 0
  3644  002580  0012               	return		;funcret
  3645  002582                     __end_of_sprintf:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _vfprintf *****************
  3649 ;; Defined at:
  3650 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3653 ;;		 -> sprintf@f(6), 
  3654 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3655 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3656 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3657 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3658 ;;		 -> STR_3(3), 
  3659 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3660 ;;		 -> sprintf@ap(2), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3663 ;;		 -> STR_19(4), STR_18(4), STR_17(8), STR_16(8), 
  3664 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(4), 
  3665 ;;		 -> STR_11(4), STR_6(4), STR_5(3), STR_4(5), 
  3666 ;;		 -> STR_3(3), 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2    0[BANK0 ] int 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3676 ;;      Params:         0       6       0       0       0       0       0       0       0
  3677 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3679 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3680 ;;Total ram usage:        8 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    6
  3683 ;; This function calls:
  3684 ;;		_vfpfcnvrt
  3685 ;; This function is called by:
  3686 ;;		_sprintf
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text18
  3691  00229E                     __ptext18:
  3692                           	callstack 0
  3693  00229E                     _vfprintf:
  3694                           	callstack 22
  3695  00229E                     
  3696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3697  00229E  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  3698  0022A2  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3699  0022A6                     
  3700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3701  0022A6  0E00               	movlw	0
  3702  0022A8  0101               	movlb	1	; () banked
  3703  0022AA  6FA8               	movwf	(_nout+1)& (0+255),b
  3704  0022AC  0E00               	movlw	0
  3705  0022AE  6FA7               	movwf	_nout& (0+255),b
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3708  0022B0  EF6D  F011         	goto	l2853
  3709  0022B4                     l2851:
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3713  0022B4  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3714  0022B8  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3715  0022BC  0E5E               	movlw	low vfprintf@cfmt
  3716  0022BE  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3717  0022C0  0E00               	movlw	high vfprintf@cfmt
  3718  0022C2  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3719  0022C4  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3720  0022C8  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3721  0022CC  ECCA  F00A         	call	_vfpfcnvrt	;wreg free
  3722  0022D0  5043               	movf	?_vfpfcnvrt^0,w,c
  3723  0022D2  0101               	movlb	1	; () banked
  3724  0022D4  27A7               	addwf	_nout& (0+255),f,b
  3725  0022D6  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3726  0022D8  23A8               	addwfc	(_nout+1)& (0+255),f,b
  3727  0022DA                     l2853:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3731  0022DA  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3732  0022DE  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3733  0022E2                     	if	0	;tblptru may be non-zero
  3734  0022E2                     	endif
  3735  0022E2                     	if	0	;tblptru may be non-zero
  3736  0022E2                     	endif
  3737  0022E2  0008               	tblrd		*
  3738  0022E4  50F5               	movf	tablat,w,c
  3739  0022E6  0900               	iorlw	0
  3740  0022E8  A4D8               	btfss	status,2,c
  3741  0022EA  EF79  F011         	goto	u2471
  3742  0022EE  EF7B  F011         	goto	u2470
  3743  0022F2                     u2471:
  3744  0022F2  EF5A  F011         	goto	l2851
  3745  0022F6                     u2470:
  3746  0022F6                     
  3747                           ; BSR set to: 1
  3748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3749  0022F6  C1A7  F060         	movff	_nout,?_vfprintf
  3750  0022FA  C1A8  F061         	movff	_nout+1,?_vfprintf+1
  3751  0022FE                     
  3752                           ; BSR set to: 1
  3753  0022FE  0012               	return		;funcret
  3754  002300                     __end_of_vfprintf:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _vfpfcnvrt *****************
  3758 ;; Defined at:
  3759 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3762 ;;		 -> sprintf@f(6), 
  3763 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3764 ;;		 -> vfprintf@cfmt(2), 
  3765 ;;  ap              2   70[COMRAM] PTR PTR void 
  3766 ;;		 -> sprintf@ap(2), 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  llu             8   84[COMRAM] unsigned long long 
  3769 ;;  ll              8   76[COMRAM] long long 
  3770 ;;  f               4    0        long long 
  3771 ;;  vp              3    0        PTR void 
  3772 ;;  ct              3    0        unsigned char [3]
  3773 ;;  cp              3    0        PTR unsigned char 
  3774 ;;  i               2    0        int 
  3775 ;;  done            2    0        int 
  3776 ;;  c               1   92[COMRAM] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2   66[COMRAM] int 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3786 ;;      Params:         6       0       0       0       0       0       0       0       0
  3787 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3788 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3789 ;;      Totals:        27       0       0       0       0       0       0       0       0
  3790 ;;Total ram usage:       27 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    5
  3793 ;; This function calls:
  3794 ;;		_dtoa
  3795 ;;		_fputc
  3796 ;;		_xtoa
  3797 ;; This function is called by:
  3798 ;;		_vfprintf
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text19
  3803  001594                     __ptext19:
  3804                           	callstack 0
  3805  001594                     _vfpfcnvrt:
  3806                           	callstack 22
  3807  001594                     
  3808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3809  001594  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3810  001598  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3811  00159C  CFDE FFF6          	movff	postinc2,tblptrl
  3812  0015A0  CFDD FFF7          	movff	postdec2,tblptrh
  3813  0015A4                     	if	0	;tblptru may be non-zero
  3814  0015A4                     	endif
  3815  0015A4                     	if	0	;tblptru may be non-zero
  3816  0015A4                     	endif
  3817  0015A4  0008               	tblrd		*
  3818  0015A6  50F5               	movf	tablat,w,c
  3819  0015A8  0A25               	xorlw	37
  3820  0015AA  A4D8               	btfss	status,2,c
  3821  0015AC  EFDA  F00A         	goto	u2311
  3822  0015B0  EFDC  F00A         	goto	u2310
  3823  0015B4                     u2311:
  3824  0015B4  EFFA  F00B         	goto	l2785
  3825  0015B8                     u2310:
  3826  0015B8                     
  3827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3828  0015B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3829  0015BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3830  0015C0  2ADE               	incf	postinc2,f,c
  3831  0015C2  0E00               	movlw	0
  3832  0015C4  22DD               	addwfc	postdec2,f,c
  3833  0015C6                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3835  0015C6  0E00               	movlw	0
  3836  0015C8  0100               	movlb	0	; () banked
  3837  0015CA  6FE3               	movwf	(_width+1)& (0+255),b
  3838  0015CC  0E00               	movlw	0
  3839  0015CE  6FE2               	movwf	_width& (0+255),b
  3840  0015D0  C0E2  F0E6         	movff	_width,_flags
  3841  0015D4  C0E3  F0E7         	movff	_width+1,_flags+1
  3842  0015D8                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3845  0015D8  69E4               	setf	_prec& (0+255),b
  3846  0015DA  69E5               	setf	(_prec+1)& (0+255),b
  3847  0015DC                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3850  0015DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3851  0015E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3852  0015E4  CFDE FFF6          	movff	postinc2,tblptrl
  3853  0015E8  CFDD FFF7          	movff	postdec2,tblptrh
  3854  0015EC                     	if	0	;tblptru may be non-zero
  3855  0015EC                     	endif
  3856  0015EC                     	if	0	;tblptru may be non-zero
  3857  0015EC                     	endif
  3858  0015EC  0008               	tblrd		*
  3859  0015EE  50F5               	movf	tablat,w,c
  3860  0015F0  0A64               	xorlw	100
  3861  0015F2  B4D8               	btfsc	status,2,c
  3862  0015F4  EFFE  F00A         	goto	u2321
  3863  0015F8  EF00  F00B         	goto	u2320
  3864  0015FC                     u2321:
  3865  0015FC  EF12  F00B         	goto	l2749
  3866  001600                     u2320:
  3867  001600                     
  3868                           ; BSR set to: 0
  3869  001600  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3870  001604  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3871  001608  CFDE FFF6          	movff	postinc2,tblptrl
  3872  00160C  CFDD FFF7          	movff	postdec2,tblptrh
  3873  001610                     	if	0	;tblptru may be non-zero
  3874  001610                     	endif
  3875  001610                     	if	0	;tblptru may be non-zero
  3876  001610                     	endif
  3877  001610  0008               	tblrd		*
  3878  001612  50F5               	movf	tablat,w,c
  3879  001614  0A69               	xorlw	105
  3880  001616  A4D8               	btfss	status,2,c
  3881  001618  EF10  F00B         	goto	u2331
  3882  00161C  EF12  F00B         	goto	u2330
  3883  001620                     u2331:
  3884  001620  EF52  F00B         	goto	l2755
  3885  001624                     u2330:
  3886  001624                     l2749:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3890  001624  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3891  001628  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3892  00162C  2ADE               	incf	postinc2,f,c
  3893  00162E  0E00               	movlw	0
  3894  001630  22DD               	addwfc	postdec2,f,c
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3897  001632  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3898  001636  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3899  00163A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3900  00163E  0E02               	movlw	2
  3901  001640  26DE               	addwf	postinc2,f,c
  3902  001642  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3903  001646  0E00               	movlw	0
  3904  001648  22DD               	addwfc	postdec2,f,c
  3905  00164A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3906  00164E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3907  001652  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  3908  001656  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  3909  00165A  0E00               	movlw	0
  3910  00165C  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3911  00165E  0EFF               	movlw	-1
  3912  001660  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  3913  001662  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  3914  001664  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  3915  001666  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  3916  001668  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  3917  00166A  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  3918  00166C                     
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3921  00166C  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3922  001670  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3923  001674  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3924  001678  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3925  00167C  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3926  001680  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3927  001684  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3928  001688  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3929  00168C  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3930  001690  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3931  001694  ECEB  F007         	call	_dtoa	;wreg free
  3932  001698  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3933  00169C  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3934  0016A0  EF15  F00C         	goto	l1250
  3935  0016A4                     l2755:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3939  0016A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3940  0016A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3941  0016AC  CFDE FFF6          	movff	postinc2,tblptrl
  3942  0016B0  CFDD FFF7          	movff	postdec2,tblptrh
  3943  0016B4                     	if	0	;tblptru may be non-zero
  3944  0016B4                     	endif
  3945  0016B4                     	if	0	;tblptru may be non-zero
  3946  0016B4                     	endif
  3947  0016B4  0008               	tblrd		*
  3948  0016B6  50F5               	movf	tablat,w,c
  3949  0016B8  0A78               	xorlw	120
  3950  0016BA  B4D8               	btfsc	status,2,c
  3951  0016BC  EF62  F00B         	goto	u2341
  3952  0016C0  EF64  F00B         	goto	u2340
  3953  0016C4                     u2341:
  3954  0016C4  EF76  F00B         	goto	l2759
  3955  0016C8                     u2340:
  3956  0016C8                     
  3957                           ; BSR set to: 0
  3958  0016C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3959  0016CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3960  0016D0  CFDE FFF6          	movff	postinc2,tblptrl
  3961  0016D4  CFDD FFF7          	movff	postdec2,tblptrh
  3962  0016D8                     	if	0	;tblptru may be non-zero
  3963  0016D8                     	endif
  3964  0016D8                     	if	0	;tblptru may be non-zero
  3965  0016D8                     	endif
  3966  0016D8  0008               	tblrd		*
  3967  0016DA  50F5               	movf	tablat,w,c
  3968  0016DC  0A58               	xorlw	88
  3969  0016DE  A4D8               	btfss	status,2,c
  3970  0016E0  EF74  F00B         	goto	u2351
  3971  0016E4  EF76  F00B         	goto	u2350
  3972  0016E8                     u2351:
  3973  0016E8  EFC4  F00B         	goto	l2769
  3974  0016EC                     u2350:
  3975  0016EC                     l2759:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3979  0016EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3980  0016F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3981  0016F4  CFDE FFF6          	movff	postinc2,tblptrl
  3982  0016F8  CFDD FFF7          	movff	postdec2,tblptrh
  3983  0016FC                     	if	0	;tblptru may be non-zero
  3984  0016FC                     	endif
  3985  0016FC                     	if	0	;tblptru may be non-zero
  3986  0016FC                     	endif
  3987  0016FC  0008               	tblrd		*
  3988  0016FE  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  3989  001702                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3992  001702  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3993  001706  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3994  00170A  2ADE               	incf	postinc2,f,c
  3995  00170C  0E00               	movlw	0
  3996  00170E  22DD               	addwfc	postdec2,f,c
  3997  001710                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4000  001710  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4001  001714  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4002  001718  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4003  00171C  0E02               	movlw	2
  4004  00171E  26DE               	addwf	postinc2,f,c
  4005  001720  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4006  001724  0E00               	movlw	0
  4007  001726  22DD               	addwfc	postdec2,f,c
  4008  001728  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4009  00172C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4010  001730  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4011  001734  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4012  001738  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4013  00173C  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4014  001740  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  4015  001742  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  4016  001744  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  4017  001746  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  4018  001748  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  4019  00174A  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  4020  00174C                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  4023  00174C  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4024  001750  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4025  001754  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4026  001758  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4027  00175C  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4028  001760  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4029  001764  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4030  001768  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4031  00176C  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4032  001770  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4033  001774  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  4034  001778  EC5D  F009         	call	_xtoa	;wreg free
  4035  00177C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4036  001780  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4037  001784  EF15  F00C         	goto	l1250
  4038  001788                     l2769:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4042  001788  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4043  00178C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4044  001790  CFDE FFF6          	movff	postinc2,tblptrl
  4045  001794  CFDD FFF7          	movff	postdec2,tblptrh
  4046  001798                     	if	0	;tblptru may be non-zero
  4047  001798                     	endif
  4048  001798                     	if	0	;tblptru may be non-zero
  4049  001798                     	endif
  4050  001798  0008               	tblrd		*
  4051  00179A  50F5               	movf	tablat,w,c
  4052  00179C  0A25               	xorlw	37
  4053  00179E  A4D8               	btfss	status,2,c
  4054  0017A0  EFD4  F00B         	goto	u2361
  4055  0017A4  EFD6  F00B         	goto	u2360
  4056  0017A8                     u2361:
  4057  0017A8  EFED  F00B         	goto	l2779
  4058  0017AC                     u2360:
  4059  0017AC                     
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4062  0017AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4063  0017B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4064  0017B4  2ADE               	incf	postinc2,f,c
  4065  0017B6  0E00               	movlw	0
  4066  0017B8  22DD               	addwfc	postdec2,f,c
  4067  0017BA                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4070  0017BA  0E00               	movlw	0
  4071  0017BC  6E02               	movwf	(fputc@c+1)^0,c
  4072  0017BE  0E25               	movlw	37
  4073  0017C0  6E01               	movwf	fputc@c^0,c
  4074  0017C2  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4075  0017C6  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4076  0017CA  ECCF  F00F         	call	_fputc	;wreg free
  4077  0017CE                     l2775:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4080  0017CE  0E00               	movlw	0
  4081  0017D0  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4082  0017D2  0E01               	movlw	1
  4083  0017D4  6E43               	movwf	?_vfpfcnvrt^0,c
  4084  0017D6  EF15  F00C         	goto	l1250
  4085  0017DA                     l2779:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4089  0017DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4090  0017DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4091  0017E2  2ADE               	incf	postinc2,f,c
  4092  0017E4  0E00               	movlw	0
  4093  0017E6  22DD               	addwfc	postdec2,f,c
  4094  0017E8                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4097  0017E8  0E00               	movlw	0
  4098  0017EA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4099  0017EC  0E00               	movlw	0
  4100  0017EE  6E43               	movwf	?_vfpfcnvrt^0,c
  4101  0017F0  EF15  F00C         	goto	l1250
  4102  0017F4                     l2785:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4105  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4106  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4107  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  4108  001800  CFDD FFF7          	movff	postdec2,tblptrh
  4109  001804                     	if	0	;tblptru may be non-zero
  4110  001804                     	endif
  4111  001804                     	if	0	;tblptru may be non-zero
  4112  001804                     	endif
  4113  001804  0008               	tblrd		*
  4114  001806  50F5               	movf	tablat,w,c
  4115  001808  6E01               	movwf	fputc@c^0,c
  4116  00180A  6A02               	clrf	(fputc@c+1)^0,c
  4117  00180C  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4118  001810  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4119  001814  ECCF  F00F         	call	_fputc	;wreg free
  4120  001818                     
  4121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4122  001818  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4123  00181C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4124  001820  2ADE               	incf	postinc2,f,c
  4125  001822  0E00               	movlw	0
  4126  001824  22DD               	addwfc	postdec2,f,c
  4127  001826  EFE7  F00B         	goto	l2775
  4128  00182A                     l1250:
  4129  00182A  0012               	return		;funcret
  4130  00182C                     __end_of_vfpfcnvrt:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _xtoa *****************
  4134 ;; Defined at:
  4135 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4138 ;;		 -> sprintf@f(6), 
  4139 ;;  d               8   29[COMRAM] unsigned long long 
  4140 ;;  x               1   37[COMRAM] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  n               8   54[COMRAM] unsigned long long 
  4143 ;;  c               2   64[COMRAM] int 
  4144 ;;  i               2   62[COMRAM] int 
  4145 ;;  w               2   52[COMRAM] int 
  4146 ;;  p               2   50[COMRAM] int 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2   27[COMRAM] int 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4156 ;;      Params:        11       0       0       0       0       0       0       0       0
  4157 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4158 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4159 ;;      Totals:        39       0       0       0       0       0       0       0       0
  4160 ;;Total ram usage:       39 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    4
  4163 ;; This function calls:
  4164 ;;		_isalpha
  4165 ;;		_isupper
  4166 ;;		_pad
  4167 ;;		_toupper
  4168 ;; This function is called by:
  4169 ;;		_vfpfcnvrt
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text20
  4174  0012BA                     __ptext20:
  4175                           	callstack 0
  4176  0012BA                     _xtoa:
  4177                           	callstack 22
  4178  0012BA                     
  4179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4180  0012BA  0100               	movlb	0	; () banked
  4181  0012BC  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4182  0012BE  EF63  F009         	goto	u2111
  4183  0012C2  EF65  F009         	goto	u2110
  4184  0012C6                     u2111:
  4185  0012C6  EF66  F009         	goto	l2643
  4186  0012CA                     u2110:
  4187  0012CA                     
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4190  0012CA  93E6               	bcf	_flags& (0+255),1,b
  4191  0012CC                     l2643:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4195  0012CC  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4196  0012CE  EF73  F009         	goto	u2120
  4197  0012D2  51E5               	movf	(_prec+1)& (0+255),w,b
  4198  0012D4  E106               	bnz	u2121
  4199  0012D6  05E4               	decf	_prec& (0+255),w,b
  4200  0012D8  B0D8               	btfsc	status,0,c
  4201  0012DA  EF71  F009         	goto	u2121
  4202  0012DE  EF73  F009         	goto	u2120
  4203  0012E2                     u2121:
  4204  0012E2  EF79  F009         	goto	l1218
  4205  0012E6                     u2120:
  4206  0012E6                     
  4207                           ; BSR set to: 0
  4208  0012E6  0E00               	movlw	0
  4209  0012E8  6E34               	movwf	(xtoa@p+1)^0,c
  4210  0012EA  0E01               	movlw	1
  4211  0012EC  6E33               	movwf	xtoa@p^0,c
  4212  0012EE  EF7D  F009         	goto	l1220
  4213  0012F2                     l1218:
  4214                           
  4215                           ; BSR set to: 0
  4216  0012F2  C0E4  F033         	movff	_prec,xtoa@p
  4217  0012F6  C0E5  F034         	movff	_prec+1,xtoa@p+1
  4218  0012FA                     l1220:
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4222  0012FA  C0E2  F035         	movff	_width,xtoa@w
  4223  0012FE  C0E3  F036         	movff	_width+1,xtoa@w+1
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4226  001302  A9E6               	btfss	_flags& (0+255),4,b
  4227  001304  EF86  F009         	goto	u2131
  4228  001308  EF88  F009         	goto	u2130
  4229  00130C                     u2131:
  4230  00130C  EF8C  F009         	goto	l2649
  4231  001310                     u2130:
  4232  001310                     
  4233                           ; BSR set to: 0
  4234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4235  001310  0EFE               	movlw	254
  4236  001312  2635               	addwf	xtoa@w^0,f,c
  4237  001314  0EFF               	movlw	255
  4238  001316  2236               	addwfc	(xtoa@w+1)^0,f,c
  4239  001318                     l2649:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4243  001318  C01E  F037         	movff	xtoa@d,xtoa@n
  4244  00131C  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4245  001320  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4246  001324  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4247  001328  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4248  00132C  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4249  001330  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4250  001334  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4251  001338                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4254  001338  0E00               	movlw	0
  4255  00133A  6E40               	movwf	(xtoa@i+1)^0,c
  4256  00133C  0E1F               	movlw	31
  4257  00133E  6E3F               	movwf	xtoa@i^0,c
  4258  001340                     
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4261  001340  0E00               	movlw	0
  4262  001342  0102               	movlb	2	; () banked
  4263  001344  6FEF               	movwf	(_dbuf+31)& (0+255),b
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4266  001346  EF58  F00A         	goto	l2685
  4267  00134A                     l2655:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  4270  00134A  063F               	decf	xtoa@i^0,f,c
  4271  00134C  A0D8               	btfss	status,0,c
  4272  00134E  0640               	decf	(xtoa@i+1)^0,f,c
  4273  001350                     
  4274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4275  001350  0E0F               	movlw	15
  4276  001352  1437               	andwf	xtoa@n^0,w,c
  4277  001354  6E41               	movwf	xtoa@c^0,c
  4278  001356  6A42               	clrf	(xtoa@c+1)^0,c
  4279  001358                     
  4280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4281  001358  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4282  00135A  EFB8  F009         	goto	u2141
  4283  00135E  5042               	movf	(xtoa@c+1)^0,w,c
  4284  001360  E109               	bnz	u2140
  4285  001362  0E0A               	movlw	10
  4286  001364  5C41               	subwf	xtoa@c^0,w,c
  4287  001366  A0D8               	btfss	status,0,c
  4288  001368  EFB8  F009         	goto	u2141
  4289  00136C  EFBA  F009         	goto	u2140
  4290  001370                     u2141:
  4291  001370  EFC2  F009         	goto	l2663
  4292  001374                     u2140:
  4293  001374  0E57               	movlw	87
  4294  001376  2441               	addwf	xtoa@c^0,w,c
  4295  001378  6E41               	movwf	xtoa@c^0,c
  4296  00137A  0E00               	movlw	0
  4297  00137C  2042               	addwfc	(xtoa@c+1)^0,w,c
  4298  00137E  6E42               	movwf	(xtoa@c+1)^0,c
  4299  001380  EFC8  F009         	goto	l1227
  4300  001384                     l2663:
  4301  001384  0E30               	movlw	48
  4302  001386  2441               	addwf	xtoa@c^0,w,c
  4303  001388  6E41               	movwf	xtoa@c^0,c
  4304  00138A  0E00               	movlw	0
  4305  00138C  2042               	addwfc	(xtoa@c+1)^0,w,c
  4306  00138E  6E42               	movwf	(xtoa@c+1)^0,c
  4307  001390                     l1227:
  4308  001390  0EBF               	movlw	191
  4309  001392  6E27               	movwf	??_xtoa^0,c
  4310  001394  0EFF               	movlw	255
  4311  001396  6E28               	movwf	(??_xtoa+1)^0,c
  4312  001398  5026               	movf	xtoa@x^0,w,c
  4313  00139A  6E29               	movwf	(??_xtoa+2)^0,c
  4314  00139C  6A2A               	clrf	(??_xtoa+3)^0,c
  4315  00139E  5027               	movf	??_xtoa^0,w,c
  4316  0013A0  2629               	addwf	(??_xtoa+2)^0,f,c
  4317  0013A2  5028               	movf	(??_xtoa+1)^0,w,c
  4318  0013A4  222A               	addwfc	(??_xtoa+3)^0,f,c
  4319  0013A6  502A               	movf	(??_xtoa+3)^0,w,c
  4320  0013A8  E10A               	bnz	u2150
  4321  0013AA  0E1A               	movlw	26
  4322  0013AC  5C29               	subwf	(??_xtoa+2)^0,w,c
  4323  0013AE  A0D8               	btfss	status,0,c
  4324  0013B0  EFDC  F009         	goto	u2151
  4325  0013B4  EFDF  F009         	goto	u2150
  4326  0013B8                     u2151:
  4327  0013B8  0E01               	movlw	1
  4328  0013BA  EFE0  F009         	goto	u2160
  4329  0013BE                     u2150:
  4330  0013BE  0E00               	movlw	0
  4331  0013C0                     u2160:
  4332  0013C0  6E2F               	movwf	_xtoa$1378^0,c
  4333  0013C2  6A30               	clrf	(_xtoa$1378+1)^0,c
  4334  0013C4  502F               	movf	_xtoa$1378^0,w,c
  4335  0013C6  1030               	iorwf	(_xtoa$1378+1)^0,w,c
  4336  0013C8  B4D8               	btfsc	status,2,c
  4337  0013CA  EFE9  F009         	goto	u2171
  4338  0013CE  EFEB  F009         	goto	u2170
  4339  0013D2                     u2171:
  4340  0013D2  EF1B  F00A         	goto	l2677
  4341  0013D6                     u2170:
  4342  0013D6  0E9F               	movlw	159
  4343  0013D8  6E27               	movwf	??_xtoa^0,c
  4344  0013DA  0EFF               	movlw	255
  4345  0013DC  6E28               	movwf	(??_xtoa+1)^0,c
  4346  0013DE  0E20               	movlw	32
  4347  0013E0  1041               	iorwf	xtoa@c^0,w,c
  4348  0013E2  6E29               	movwf	(??_xtoa+2)^0,c
  4349  0013E4  0E00               	movlw	0
  4350  0013E6  1042               	iorwf	(xtoa@c+1)^0,w,c
  4351  0013E8  6E2A               	movwf	(??_xtoa+3)^0,c
  4352  0013EA  5027               	movf	??_xtoa^0,w,c
  4353  0013EC  2629               	addwf	(??_xtoa+2)^0,f,c
  4354  0013EE  5028               	movf	(??_xtoa+1)^0,w,c
  4355  0013F0  222A               	addwfc	(??_xtoa+3)^0,f,c
  4356  0013F2  502A               	movf	(??_xtoa+3)^0,w,c
  4357  0013F4  E10A               	bnz	u2180
  4358  0013F6  0E1A               	movlw	26
  4359  0013F8  5C29               	subwf	(??_xtoa+2)^0,w,c
  4360  0013FA  A0D8               	btfss	status,0,c
  4361  0013FC  EF02  F00A         	goto	u2181
  4362  001400  EF05  F00A         	goto	u2180
  4363  001404                     u2181:
  4364  001404  0E01               	movlw	1
  4365  001406  EF06  F00A         	goto	u2190
  4366  00140A                     u2180:
  4367  00140A  0E00               	movlw	0
  4368  00140C                     u2190:
  4369  00140C  6E31               	movwf	_xtoa$1379^0,c
  4370  00140E  6A32               	clrf	(_xtoa$1379+1)^0,c
  4371  001410  5031               	movf	_xtoa$1379^0,w,c
  4372  001412  1032               	iorwf	(_xtoa$1379+1)^0,w,c
  4373  001414  B4D8               	btfsc	status,2,c
  4374  001416  EF0F  F00A         	goto	u2201
  4375  00141A  EF11  F00A         	goto	u2200
  4376  00141E                     u2201:
  4377  00141E  EF1B  F00A         	goto	l2677
  4378  001422                     u2200:
  4379  001422                     
  4380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4381  001422  C041  F007         	movff	xtoa@c,toupper@c
  4382  001426  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4383  00142A  ECDF  F011         	call	_toupper	;wreg free
  4384  00142E  C007  F041         	movff	?_toupper,xtoa@c
  4385  001432  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4386  001436                     l2677:
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4389  001436  0ED0               	movlw	low _dbuf
  4390  001438  243F               	addwf	xtoa@i^0,w,c
  4391  00143A  6ED9               	movwf	fsr2l,c
  4392  00143C  0E02               	movlw	high _dbuf
  4393  00143E  2040               	addwfc	(xtoa@i+1)^0,w,c
  4394  001440  6EDA               	movwf	fsr2h,c
  4395  001442  C041  FFDF         	movff	xtoa@c,indf2
  4396  001446                     
  4397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  4398  001446  0633               	decf	xtoa@p^0,f,c
  4399  001448  A0D8               	btfss	status,0,c
  4400  00144A  0634               	decf	(xtoa@p+1)^0,f,c
  4401  00144C                     
  4402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  4403  00144C  0635               	decf	xtoa@w^0,f,c
  4404  00144E  A0D8               	btfss	status,0,c
  4405  001450  0636               	decf	(xtoa@w+1)^0,f,c
  4406  001452                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4408  001452  C037  F027         	movff	xtoa@n,??_xtoa
  4409  001456  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4410  00145A  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4411  00145E  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4412  001462  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4413  001466  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4414  00146A  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4415  00146E  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4416  001472  0E05               	movlw	5
  4417  001474  EF45  F00A         	goto	u2210
  4418  001478                     u2215:
  4419  001478  90D8               	bcf	status,0,c
  4420  00147A  322E               	rrcf	(??_xtoa+7)^0,f,c
  4421  00147C  322D               	rrcf	(??_xtoa+6)^0,f,c
  4422  00147E  322C               	rrcf	(??_xtoa+5)^0,f,c
  4423  001480  322B               	rrcf	(??_xtoa+4)^0,f,c
  4424  001482  322A               	rrcf	(??_xtoa+3)^0,f,c
  4425  001484  3229               	rrcf	(??_xtoa+2)^0,f,c
  4426  001486  3228               	rrcf	(??_xtoa+1)^0,f,c
  4427  001488  3227               	rrcf	??_xtoa^0,f,c
  4428  00148A                     u2210:
  4429  00148A  2EE8               	decfsz	wreg,f,c
  4430  00148C  EF3C  F00A         	goto	u2215
  4431  001490  C027  F037         	movff	??_xtoa,xtoa@n
  4432  001494  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4433  001498  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4434  00149C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4435  0014A0  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4436  0014A4  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4437  0014A8  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4438  0014AC  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4439  0014B0                     l2685:
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4442  0014B0  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4443  0014B2  EF64  F00A         	goto	u2221
  4444  0014B6  5040               	movf	(xtoa@i+1)^0,w,c
  4445  0014B8  E109               	bnz	u2220
  4446  0014BA  0E02               	movlw	2
  4447  0014BC  5C3F               	subwf	xtoa@i^0,w,c
  4448  0014BE  A0D8               	btfss	status,0,c
  4449  0014C0  EF64  F00A         	goto	u2221
  4450  0014C4  EF66  F00A         	goto	u2220
  4451  0014C8                     u2221:
  4452  0014C8  EF97  F00A         	goto	l1241
  4453  0014CC                     u2220:
  4454  0014CC  5037               	movf	xtoa@n^0,w,c
  4455  0014CE  1038               	iorwf	(xtoa@n+1)^0,w,c
  4456  0014D0  1039               	iorwf	(xtoa@n+2)^0,w,c
  4457  0014D2  103A               	iorwf	(xtoa@n+3)^0,w,c
  4458  0014D4  103B               	iorwf	(xtoa@n+4)^0,w,c
  4459  0014D6  103C               	iorwf	(xtoa@n+5)^0,w,c
  4460  0014D8  103D               	iorwf	(xtoa@n+6)^0,w,c
  4461  0014DA  103E               	iorwf	(xtoa@n+7)^0,w,c
  4462  0014DC  A4D8               	btfss	status,2,c
  4463  0014DE  EF73  F00A         	goto	u2231
  4464  0014E2  EF75  F00A         	goto	u2230
  4465  0014E6                     u2231:
  4466  0014E6  EFA5  F009         	goto	l2655
  4467  0014EA                     u2230:
  4468  0014EA  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4469  0014EC  EF82  F00A         	goto	u2240
  4470  0014F0  5034               	movf	(xtoa@p+1)^0,w,c
  4471  0014F2  E106               	bnz	u2241
  4472  0014F4  0433               	decf	xtoa@p^0,w,c
  4473  0014F6  B0D8               	btfsc	status,0,c
  4474  0014F8  EF80  F00A         	goto	u2241
  4475  0014FC  EF82  F00A         	goto	u2240
  4476  001500                     u2241:
  4477  001500  EFA5  F009         	goto	l2655
  4478  001504                     u2240:
  4479  001504  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4480  001506  EF8D  F00A         	goto	u2251
  4481  00150A  5036               	movf	(xtoa@w+1)^0,w,c
  4482  00150C  E108               	bnz	u2250
  4483  00150E  0435               	decf	xtoa@w^0,w,c
  4484  001510  A0D8               	btfss	status,0,c
  4485  001512  EF8D  F00A         	goto	u2251
  4486  001516  EF8F  F00A         	goto	u2250
  4487  00151A                     u2251:
  4488  00151A  EF97  F00A         	goto	l1241
  4489  00151E                     u2250:
  4490  00151E  0100               	movlb	0	; () banked
  4491  001520  B3E6               	btfsc	_flags& (0+255),1,b
  4492  001522  EF95  F00A         	goto	u2261
  4493  001526  EF97  F00A         	goto	u2260
  4494  00152A                     u2261:
  4495  00152A  EFA5  F009         	goto	l2655
  4496  00152E                     u2260:
  4497  00152E                     l1241:
  4498                           
  4499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4500  00152E  0100               	movlb	0	; () banked
  4501  001530  A9E6               	btfss	_flags& (0+255),4,b
  4502  001532  EF9D  F00A         	goto	u2271
  4503  001536  EF9F  F00A         	goto	u2270
  4504  00153A                     u2271:
  4505  00153A  EFB5  F00A         	goto	l2701
  4506  00153E                     u2270:
  4507  00153E                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  4510  00153E  063F               	decf	xtoa@i^0,f,c
  4511  001540  A0D8               	btfss	status,0,c
  4512  001542  0640               	decf	(xtoa@i+1)^0,f,c
  4513  001544                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4516  001544  0ED0               	movlw	low _dbuf
  4517  001546  243F               	addwf	xtoa@i^0,w,c
  4518  001548  6ED9               	movwf	fsr2l,c
  4519  00154A  0E02               	movlw	high _dbuf
  4520  00154C  2040               	addwfc	(xtoa@i+1)^0,w,c
  4521  00154E  6EDA               	movwf	fsr2h,c
  4522  001550  C026  FFDF         	movff	xtoa@x,indf2
  4523  001554                     
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  4526  001554  063F               	decf	xtoa@i^0,f,c
  4527  001556  A0D8               	btfss	status,0,c
  4528  001558  0640               	decf	(xtoa@i+1)^0,f,c
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4531  00155A  0ED0               	movlw	low _dbuf
  4532  00155C  243F               	addwf	xtoa@i^0,w,c
  4533  00155E  6ED9               	movwf	fsr2l,c
  4534  001560  0E02               	movlw	high _dbuf
  4535  001562  2040               	addwfc	(xtoa@i+1)^0,w,c
  4536  001564  6EDA               	movwf	fsr2h,c
  4537  001566  0E30               	movlw	48
  4538  001568  6EDF               	movwf	indf2,c
  4539  00156A                     l2701:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4543  00156A  C01C  F011         	movff	xtoa@fp,pad@fp
  4544  00156E  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4545  001572  0ED0               	movlw	low _dbuf
  4546  001574  243F               	addwf	xtoa@i^0,w,c
  4547  001576  6E13               	movwf	pad@buf^0,c
  4548  001578  0E02               	movlw	high _dbuf
  4549  00157A  2040               	addwfc	(xtoa@i+1)^0,w,c
  4550  00157C  6E14               	movwf	(pad@buf+1)^0,c
  4551  00157E  C035  F015         	movff	xtoa@w,pad@p
  4552  001582  C036  F016         	movff	xtoa@w+1,pad@p+1
  4553  001586  EC34  F010         	call	_pad	;wreg free
  4554  00158A  C011  F01C         	movff	?_pad,?_xtoa
  4555  00158E  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4556  001592  0012               	return		;funcret
  4557  001594                     __end_of_xtoa:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _toupper *****************
  4561 ;; Defined at:
  4562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  c               2    6[COMRAM] int 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    6[COMRAM] int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4576 ;;      Params:         2       0       0       0       0       0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4578 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4579 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4580 ;;Total ram usage:        8 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    1
  4583 ;; This function calls:
  4584 ;;		_islower
  4585 ;; This function is called by:
  4586 ;;		_xtoa
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text21
  4591  0023BE                     __ptext21:
  4592                           	callstack 0
  4593  0023BE                     _toupper:
  4594                           	callstack 24
  4595  0023BE  0E9F               	movlw	159
  4596  0023C0  6E09               	movwf	??_toupper^0,c
  4597  0023C2  0EFF               	movlw	255
  4598  0023C4  6E0A               	movwf	(??_toupper+1)^0,c
  4599  0023C6  C007  F00B         	movff	toupper@c,??_toupper+2
  4600  0023CA  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4601  0023CE  5009               	movf	??_toupper^0,w,c
  4602  0023D0  260B               	addwf	(??_toupper+2)^0,f,c
  4603  0023D2  500A               	movf	(??_toupper+1)^0,w,c
  4604  0023D4  220C               	addwfc	(??_toupper+3)^0,f,c
  4605  0023D6  500C               	movf	(??_toupper+3)^0,w,c
  4606  0023D8  E10A               	bnz	u1900
  4607  0023DA  0E1A               	movlw	26
  4608  0023DC  5C0B               	subwf	(??_toupper+2)^0,w,c
  4609  0023DE  A0D8               	btfss	status,0,c
  4610  0023E0  EFF4  F011         	goto	u1901
  4611  0023E4  EFF7  F011         	goto	u1900
  4612  0023E8                     u1901:
  4613  0023E8  0E01               	movlw	1
  4614  0023EA  EFF8  F011         	goto	u1910
  4615  0023EE                     u1900:
  4616  0023EE  0E00               	movlw	0
  4617  0023F0                     u1910:
  4618  0023F0  6E0D               	movwf	_toupper$1463^0,c
  4619  0023F2  6A0E               	clrf	(_toupper$1463+1)^0,c
  4620  0023F4  500D               	movf	_toupper$1463^0,w,c
  4621  0023F6  100E               	iorwf	(_toupper$1463+1)^0,w,c
  4622  0023F8  B4D8               	btfsc	status,2,c
  4623  0023FA  EF01  F012         	goto	u1921
  4624  0023FE  EF03  F012         	goto	u1920
  4625  002402                     u1921:
  4626  002402  EF09  F012         	goto	l1313
  4627  002406                     u1920:
  4628  002406  0E5F               	movlw	95
  4629  002408  1407               	andwf	toupper@c^0,w,c
  4630  00240A  6E07               	movwf	?_toupper^0,c
  4631  00240C  6A08               	clrf	(?_toupper+1)^0,c
  4632  00240E  EF0D  F012         	goto	l1318
  4633  002412                     l1313:
  4634  002412  C007  F007         	movff	toupper@c,?_toupper
  4635  002416  C008  F008         	movff	toupper@c+1,?_toupper+1
  4636  00241A                     l1318:
  4637  00241A  0012               	return		;funcret
  4638  00241C                     __end_of_toupper:
  4639                           	callstack 0
  4640                           
  4641 ;; *************** function _islower *****************
  4642 ;; Defined at:
  4643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  c               2    0[COMRAM] int 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  2    0[COMRAM] int 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4657 ;;      Params:         2       0       0       0       0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4659 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4660 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4661 ;;Total ram usage:        6 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_toupper
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text22
  4671  002794                     __ptext22:
  4672                           	callstack 0
  4673  002794                     _islower:
  4674                           	callstack 24
  4675  002794  0E9F               	movlw	159
  4676  002796  6E03               	movwf	??_islower^0,c
  4677  002798  0EFF               	movlw	255
  4678  00279A  6E04               	movwf	(??_islower+1)^0,c
  4679  00279C  C001  F005         	movff	islower@c,??_islower+2
  4680  0027A0  C002  F006         	movff	islower@c+1,??_islower+3
  4681  0027A4  5003               	movf	??_islower^0,w,c
  4682  0027A6  2605               	addwf	(??_islower+2)^0,f,c
  4683  0027A8  5004               	movf	(??_islower+1)^0,w,c
  4684  0027AA  2206               	addwfc	(??_islower+3)^0,f,c
  4685  0027AC  5006               	movf	(??_islower+3)^0,w,c
  4686  0027AE  E10A               	bnz	u1660
  4687  0027B0  0E1A               	movlw	26
  4688  0027B2  5C05               	subwf	(??_islower+2)^0,w,c
  4689  0027B4  A0D8               	btfss	status,0,c
  4690  0027B6  EFDF  F013         	goto	u1661
  4691  0027BA  EFE2  F013         	goto	u1660
  4692  0027BE                     u1661:
  4693  0027BE  0E01               	movlw	1
  4694  0027C0  EFE3  F013         	goto	u1670
  4695  0027C4                     u1660:
  4696  0027C4  0E00               	movlw	0
  4697  0027C6                     u1670:
  4698  0027C6  6E01               	movwf	?_islower^0,c
  4699  0027C8  6A02               	clrf	(?_islower+1)^0,c
  4700  0027CA  0012               	return		;funcret
  4701  0027CC                     __end_of_islower:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function _isupper *****************
  4705 ;; Defined at:
  4706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  c               2    0[COMRAM] int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  2    0[COMRAM] int 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4720 ;;      Params:         2       0       0       0       0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4722 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4723 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4724 ;;Total ram usage:        6 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_xtoa
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text23
  4734  0027CC                     __ptext23:
  4735                           	callstack 0
  4736  0027CC                     _isupper:
  4737                           	callstack 25
  4738  0027CC  0EBF               	movlw	191
  4739  0027CE  6E03               	movwf	??_isupper^0,c
  4740  0027D0  0EFF               	movlw	255
  4741  0027D2  6E04               	movwf	(??_isupper+1)^0,c
  4742  0027D4  C001  F005         	movff	isupper@c,??_isupper+2
  4743  0027D8  C002  F006         	movff	isupper@c+1,??_isupper+3
  4744  0027DC  5003               	movf	??_isupper^0,w,c
  4745  0027DE  2605               	addwf	(??_isupper+2)^0,f,c
  4746  0027E0  5004               	movf	(??_isupper+1)^0,w,c
  4747  0027E2  2206               	addwfc	(??_isupper+3)^0,f,c
  4748  0027E4  5006               	movf	(??_isupper+3)^0,w,c
  4749  0027E6  E10A               	bnz	u1860
  4750  0027E8  0E1A               	movlw	26
  4751  0027EA  5C05               	subwf	(??_isupper+2)^0,w,c
  4752  0027EC  A0D8               	btfss	status,0,c
  4753  0027EE  EFFB  F013         	goto	u1861
  4754  0027F2  EFFE  F013         	goto	u1860
  4755  0027F6                     u1861:
  4756  0027F6  0E01               	movlw	1
  4757  0027F8  EFFF  F013         	goto	u1870
  4758  0027FC                     u1860:
  4759  0027FC  0E00               	movlw	0
  4760  0027FE                     u1870:
  4761  0027FE  6E01               	movwf	?_isupper^0,c
  4762  002800  6A02               	clrf	(?_isupper+1)^0,c
  4763  002802  0012               	return		;funcret
  4764  002804                     __end_of_isupper:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _isalpha *****************
  4768 ;; Defined at:
  4769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  c               2    0[COMRAM] int 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  2    0[COMRAM] int 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4783 ;;      Params:         2       0       0       0       0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4785 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4786 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4787 ;;Total ram usage:        6 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_xtoa
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text24
  4797  00271E                     __ptext24:
  4798                           	callstack 0
  4799  00271E                     _isalpha:
  4800                           	callstack 25
  4801  00271E  0E9F               	movlw	159
  4802  002720  6E03               	movwf	??_isalpha^0,c
  4803  002722  0EFF               	movlw	255
  4804  002724  6E04               	movwf	(??_isalpha+1)^0,c
  4805  002726  0E20               	movlw	32
  4806  002728  1001               	iorwf	isalpha@c^0,w,c
  4807  00272A  6E05               	movwf	(??_isalpha+2)^0,c
  4808  00272C  0E00               	movlw	0
  4809  00272E  1002               	iorwf	(isalpha@c+1)^0,w,c
  4810  002730  6E06               	movwf	(??_isalpha+3)^0,c
  4811  002732  5003               	movf	??_isalpha^0,w,c
  4812  002734  2605               	addwf	(??_isalpha+2)^0,f,c
  4813  002736  5004               	movf	(??_isalpha+1)^0,w,c
  4814  002738  2206               	addwfc	(??_isalpha+3)^0,f,c
  4815  00273A  5006               	movf	(??_isalpha+3)^0,w,c
  4816  00273C  E10A               	bnz	u1880
  4817  00273E  0E1A               	movlw	26
  4818  002740  5C05               	subwf	(??_isalpha+2)^0,w,c
  4819  002742  A0D8               	btfss	status,0,c
  4820  002744  EFA6  F013         	goto	u1881
  4821  002748  EFA9  F013         	goto	u1880
  4822  00274C                     u1881:
  4823  00274C  0E01               	movlw	1
  4824  00274E  EFAA  F013         	goto	u1890
  4825  002752                     u1880:
  4826  002752  0E00               	movlw	0
  4827  002754                     u1890:
  4828  002754  6E01               	movwf	?_isalpha^0,c
  4829  002756  6A02               	clrf	(?_isalpha+1)^0,c
  4830  002758  0012               	return		;funcret
  4831  00275A                     __end_of_isalpha:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _dtoa *****************
  4835 ;; Defined at:
  4836 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4839 ;;		 -> sprintf@f(6), 
  4840 ;;  d               8   29[COMRAM] long long 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  n               8   53[COMRAM] long long 
  4843 ;;  i               2   61[COMRAM] int 
  4844 ;;  s               2   51[COMRAM] int 
  4845 ;;  w               2   49[COMRAM] int 
  4846 ;;  p               2   47[COMRAM] int 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  2   27[COMRAM] int 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4856 ;;      Params:        10       0       0       0       0       0       0       0       0
  4857 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4858 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4859 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4860 ;;Total ram usage:       36 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    4
  4863 ;; This function calls:
  4864 ;;		___aodiv
  4865 ;;		___aomod
  4866 ;;		_abs
  4867 ;;		_pad
  4868 ;; This function is called by:
  4869 ;;		_vfpfcnvrt
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text25
  4874  000FD6                     __ptext25:
  4875                           	callstack 0
  4876  000FD6                     _dtoa:
  4877                           	callstack 22
  4878  000FD6                     
  4879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4880  000FD6  C01E  F036         	movff	dtoa@d,dtoa@n
  4881  000FDA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4882  000FDE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4883  000FE2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4884  000FE6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4885  000FEA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4886  000FEE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4887  000FF2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4888  000FF6                     
  4889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4890  000FF6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4891  000FF8  EF00  F008         	goto	u1961
  4892  000FFC  EF03  F008         	goto	u1960
  4893  001000                     u1961:
  4894  001000  0E01               	movlw	1
  4895  001002  EF04  F008         	goto	u1970
  4896  001006                     u1960:
  4897  001006  0E00               	movlw	0
  4898  001008                     u1970:
  4899  001008  6E34               	movwf	dtoa@s^0,c
  4900  00100A  6A35               	clrf	(dtoa@s+1)^0,c
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4903  00100C  5034               	movf	dtoa@s^0,w,c
  4904  00100E  1035               	iorwf	(dtoa@s+1)^0,w,c
  4905  001010  B4D8               	btfsc	status,2,c
  4906  001012  EF0D  F008         	goto	u1981
  4907  001016  EF0F  F008         	goto	u1980
  4908  00101A                     u1981:
  4909  00101A  EF1F  F008         	goto	l2583
  4910  00101E                     u1980:
  4911  00101E                     
  4912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4913  00101E  1E3D               	comf	(dtoa@n+7)^0,f,c
  4914  001020  1E3C               	comf	(dtoa@n+6)^0,f,c
  4915  001022  1E3B               	comf	(dtoa@n+5)^0,f,c
  4916  001024  1E3A               	comf	(dtoa@n+4)^0,f,c
  4917  001026  1E39               	comf	(dtoa@n+3)^0,f,c
  4918  001028  1E38               	comf	(dtoa@n+2)^0,f,c
  4919  00102A  1E37               	comf	(dtoa@n+1)^0,f,c
  4920  00102C  6C36               	negf	dtoa@n^0,c
  4921  00102E  0E00               	movlw	0
  4922  001030  2237               	addwfc	(dtoa@n+1)^0,f,c
  4923  001032  2238               	addwfc	(dtoa@n+2)^0,f,c
  4924  001034  2239               	addwfc	(dtoa@n+3)^0,f,c
  4925  001036  223A               	addwfc	(dtoa@n+4)^0,f,c
  4926  001038  223B               	addwfc	(dtoa@n+5)^0,f,c
  4927  00103A  223C               	addwfc	(dtoa@n+6)^0,f,c
  4928  00103C  223D               	addwfc	(dtoa@n+7)^0,f,c
  4929  00103E                     l2583:
  4930                           
  4931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4932  00103E  0100               	movlb	0	; () banked
  4933  001040  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4934  001042  EF25  F008         	goto	u1991
  4935  001046  EF27  F008         	goto	u1990
  4936  00104A                     u1991:
  4937  00104A  EF28  F008         	goto	l2587
  4938  00104E                     u1990:
  4939  00104E                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4942  00104E  93E6               	bcf	_flags& (0+255),1,b
  4943  001050                     l2587:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4947  001050  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4948  001052  EF35  F008         	goto	u2000
  4949  001056  51E5               	movf	(_prec+1)& (0+255),w,b
  4950  001058  E106               	bnz	u2001
  4951  00105A  05E4               	decf	_prec& (0+255),w,b
  4952  00105C  B0D8               	btfsc	status,0,c
  4953  00105E  EF33  F008         	goto	u2001
  4954  001062  EF35  F008         	goto	u2000
  4955  001066                     u2001:
  4956  001066  EF3B  F008         	goto	l1193
  4957  00106A                     u2000:
  4958  00106A                     
  4959                           ; BSR set to: 0
  4960  00106A  0E00               	movlw	0
  4961  00106C  6E31               	movwf	(dtoa@p+1)^0,c
  4962  00106E  0E01               	movlw	1
  4963  001070  6E30               	movwf	dtoa@p^0,c
  4964  001072  EF3F  F008         	goto	l1195
  4965  001076                     l1193:
  4966                           
  4967                           ; BSR set to: 0
  4968  001076  C0E4  F030         	movff	_prec,dtoa@p
  4969  00107A  C0E5  F031         	movff	_prec+1,dtoa@p+1
  4970  00107E                     l1195:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4974  00107E  C0E2  F032         	movff	_width,dtoa@w
  4975  001082  C0E3  F033         	movff	_width+1,dtoa@w+1
  4976  001086                     
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4979  001086  5034               	movf	dtoa@s^0,w,c
  4980  001088  1035               	iorwf	(dtoa@s+1)^0,w,c
  4981  00108A  A4D8               	btfss	status,2,c
  4982  00108C  EF4A  F008         	goto	u2011
  4983  001090  EF4C  F008         	goto	u2010
  4984  001094                     u2011:
  4985  001094  EF53  F008         	goto	l2595
  4986  001098                     u2010:
  4987  001098                     
  4988                           ; BSR set to: 0
  4989  001098  A5E6               	btfss	_flags& (0+255),2,b
  4990  00109A  EF51  F008         	goto	u2021
  4991  00109E  EF53  F008         	goto	u2020
  4992  0010A2                     u2021:
  4993  0010A2  EF56  F008         	goto	l2597
  4994  0010A6                     u2020:
  4995  0010A6                     l2595:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  4999  0010A6  0632               	decf	dtoa@w^0,f,c
  5000  0010A8  A0D8               	btfss	status,0,c
  5001  0010AA  0633               	decf	(dtoa@w+1)^0,f,c
  5002  0010AC                     l2597:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5006  0010AC  0E00               	movlw	0
  5007  0010AE  6E3F               	movwf	(dtoa@i+1)^0,c
  5008  0010B0  0E1F               	movlw	31
  5009  0010B2  6E3E               	movwf	dtoa@i^0,c
  5010  0010B4                     
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5013  0010B4  0E00               	movlw	0
  5014  0010B6  0102               	movlb	2	; () banked
  5015  0010B8  6FEF               	movwf	(_dbuf+31)& (0+255),b
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5018  0010BA  EFDB  F008         	goto	l2611
  5019  0010BE                     l2601:
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5022  0010BE  063E               	decf	dtoa@i^0,f,c
  5023  0010C0  A0D8               	btfss	status,0,c
  5024  0010C2  063F               	decf	(dtoa@i+1)^0,f,c
  5025  0010C4                     
  5026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5027  0010C4  0ED0               	movlw	low _dbuf
  5028  0010C6  243E               	addwf	dtoa@i^0,w,c
  5029  0010C8  6ED9               	movwf	fsr2l,c
  5030  0010CA  0E02               	movlw	high _dbuf
  5031  0010CC  203F               	addwfc	(dtoa@i+1)^0,w,c
  5032  0010CE  6EDA               	movwf	fsr2h,c
  5033  0010D0  C036  F001         	movff	dtoa@n,___aomod@dividend
  5034  0010D4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5035  0010D8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5036  0010DC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5037  0010E0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5038  0010E4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5039  0010E8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5040  0010EC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5041  0010F0  0E0A               	movlw	10
  5042  0010F2  6E09               	movwf	___aomod@divisor^0,c
  5043  0010F4  0E00               	movlw	0
  5044  0010F6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5045  0010F8  0E00               	movlw	0
  5046  0010FA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5047  0010FC  0E00               	movlw	0
  5048  0010FE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5049  001100  0E00               	movlw	0
  5050  001102  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5051  001104  0E00               	movlw	0
  5052  001106  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5053  001108  0E00               	movlw	0
  5054  00110A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5055  00110C  0E00               	movlw	0
  5056  00110E  6E10               	movwf	(___aomod@divisor+7)^0,c
  5057  001110  ECDB  F00D         	call	___aomod	;wreg free
  5058  001114  C001  F026         	movff	?___aomod,??_dtoa
  5059  001118  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5060  00111C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5061  001120  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5062  001124  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5063  001128  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5064  00112C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5065  001130  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5066  001134  C026  F013         	movff	??_dtoa,abs@a
  5067  001138  C028  F014         	movff	??_dtoa+2,abs@a+1
  5068  00113C  EC4F  F013         	call	_abs	;wreg free
  5069  001140  5013               	movf	?_abs^0,w,c
  5070  001142  0F30               	addlw	48
  5071  001144  6EDF               	movwf	indf2,c
  5072  001146                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5074  001146  0630               	decf	dtoa@p^0,f,c
  5075  001148  A0D8               	btfss	status,0,c
  5076  00114A  0631               	decf	(dtoa@p+1)^0,f,c
  5077  00114C                     
  5078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5079  00114C  0632               	decf	dtoa@w^0,f,c
  5080  00114E  A0D8               	btfss	status,0,c
  5081  001150  0633               	decf	(dtoa@w+1)^0,f,c
  5082  001152                     
  5083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5084  001152  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5085  001156  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5086  00115A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5087  00115E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5088  001162  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5089  001166  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5090  00116A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5091  00116E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5092  001172  0E0A               	movlw	10
  5093  001174  6E09               	movwf	___aodiv@divisor^0,c
  5094  001176  0E00               	movlw	0
  5095  001178  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5096  00117A  0E00               	movlw	0
  5097  00117C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5098  00117E  0E00               	movlw	0
  5099  001180  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5100  001182  0E00               	movlw	0
  5101  001184  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5102  001186  0E00               	movlw	0
  5103  001188  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5104  00118A  0E00               	movlw	0
  5105  00118C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5106  00118E  0E00               	movlw	0
  5107  001190  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5108  001192  EC17  F00D         	call	___aodiv	;wreg free
  5109  001196  C001  F036         	movff	?___aodiv,dtoa@n
  5110  00119A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5111  00119E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5112  0011A2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5113  0011A6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5114  0011AA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5115  0011AE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5116  0011B2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5117  0011B6                     l2611:
  5118                           
  5119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5120  0011B6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5121  0011B8  EFE6  F008         	goto	u2031
  5122  0011BC  503F               	movf	(dtoa@i+1)^0,w,c
  5123  0011BE  E108               	bnz	u2030
  5124  0011C0  043E               	decf	dtoa@i^0,w,c
  5125  0011C2  A0D8               	btfss	status,0,c
  5126  0011C4  EFE6  F008         	goto	u2031
  5127  0011C8  EFE8  F008         	goto	u2030
  5128  0011CC                     u2031:
  5129  0011CC  EF19  F009         	goto	l2621
  5130  0011D0                     u2030:
  5131  0011D0  5036               	movf	dtoa@n^0,w,c
  5132  0011D2  1037               	iorwf	(dtoa@n+1)^0,w,c
  5133  0011D4  1038               	iorwf	(dtoa@n+2)^0,w,c
  5134  0011D6  1039               	iorwf	(dtoa@n+3)^0,w,c
  5135  0011D8  103A               	iorwf	(dtoa@n+4)^0,w,c
  5136  0011DA  103B               	iorwf	(dtoa@n+5)^0,w,c
  5137  0011DC  103C               	iorwf	(dtoa@n+6)^0,w,c
  5138  0011DE  103D               	iorwf	(dtoa@n+7)^0,w,c
  5139  0011E0  A4D8               	btfss	status,2,c
  5140  0011E2  EFF5  F008         	goto	u2041
  5141  0011E6  EFF7  F008         	goto	u2040
  5142  0011EA                     u2041:
  5143  0011EA  EF5F  F008         	goto	l2601
  5144  0011EE                     u2040:
  5145  0011EE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5146  0011F0  EF04  F009         	goto	u2050
  5147  0011F4  5031               	movf	(dtoa@p+1)^0,w,c
  5148  0011F6  E106               	bnz	u2051
  5149  0011F8  0430               	decf	dtoa@p^0,w,c
  5150  0011FA  B0D8               	btfsc	status,0,c
  5151  0011FC  EF02  F009         	goto	u2051
  5152  001200  EF04  F009         	goto	u2050
  5153  001204                     u2051:
  5154  001204  EF5F  F008         	goto	l2601
  5155  001208                     u2050:
  5156  001208  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5157  00120A  EF0F  F009         	goto	u2061
  5158  00120E  5033               	movf	(dtoa@w+1)^0,w,c
  5159  001210  E108               	bnz	u2060
  5160  001212  0432               	decf	dtoa@w^0,w,c
  5161  001214  A0D8               	btfss	status,0,c
  5162  001216  EF0F  F009         	goto	u2061
  5163  00121A  EF11  F009         	goto	u2060
  5164  00121E                     u2061:
  5165  00121E  EF19  F009         	goto	l2621
  5166  001222                     u2060:
  5167  001222  0100               	movlb	0	; () banked
  5168  001224  B3E6               	btfsc	_flags& (0+255),1,b
  5169  001226  EF17  F009         	goto	u2071
  5170  00122A  EF19  F009         	goto	u2070
  5171  00122E                     u2071:
  5172  00122E  EF5F  F008         	goto	l2601
  5173  001232                     u2070:
  5174  001232                     l2621:
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5177  001232  5034               	movf	dtoa@s^0,w,c
  5178  001234  1035               	iorwf	(dtoa@s+1)^0,w,c
  5179  001236  A4D8               	btfss	status,2,c
  5180  001238  EF20  F009         	goto	u2081
  5181  00123C  EF22  F009         	goto	u2080
  5182  001240                     u2081:
  5183  001240  EF2A  F009         	goto	l2625
  5184  001244                     u2080:
  5185  001244  0100               	movlb	0	; () banked
  5186  001246  A5E6               	btfss	_flags& (0+255),2,b
  5187  001248  EF28  F009         	goto	u2091
  5188  00124C  EF2A  F009         	goto	u2090
  5189  001250                     u2091:
  5190  001250  EF48  F009         	goto	l2635
  5191  001254                     u2090:
  5192  001254                     l2625:
  5193                           
  5194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5195  001254  063E               	decf	dtoa@i^0,f,c
  5196  001256  A0D8               	btfss	status,0,c
  5197  001258  063F               	decf	(dtoa@i+1)^0,f,c
  5198  00125A                     
  5199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5200  00125A  5034               	movf	dtoa@s^0,w,c
  5201  00125C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5202  00125E  A4D8               	btfss	status,2,c
  5203  001260  EF34  F009         	goto	u2101
  5204  001264  EF36  F009         	goto	u2100
  5205  001268                     u2101:
  5206  001268  EF3C  F009         	goto	l2631
  5207  00126C                     u2100:
  5208  00126C  0E00               	movlw	0
  5209  00126E  6E2F               	movwf	(_dtoa$1367+1)^0,c
  5210  001270  0E2B               	movlw	43
  5211  001272  6E2E               	movwf	_dtoa$1367^0,c
  5212  001274  EF40  F009         	goto	l2633
  5213  001278                     l2631:
  5214  001278  0E00               	movlw	0
  5215  00127A  6E2F               	movwf	(_dtoa$1367+1)^0,c
  5216  00127C  0E2D               	movlw	45
  5217  00127E  6E2E               	movwf	_dtoa$1367^0,c
  5218  001280                     l2633:
  5219  001280  0ED0               	movlw	low _dbuf
  5220  001282  243E               	addwf	dtoa@i^0,w,c
  5221  001284  6ED9               	movwf	fsr2l,c
  5222  001286  0E02               	movlw	high _dbuf
  5223  001288  203F               	addwfc	(dtoa@i+1)^0,w,c
  5224  00128A  6EDA               	movwf	fsr2h,c
  5225  00128C  C02E  FFDF         	movff	_dtoa$1367,indf2
  5226  001290                     l2635:
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5229  001290  C01C  F011         	movff	dtoa@fp,pad@fp
  5230  001294  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5231  001298  0ED0               	movlw	low _dbuf
  5232  00129A  243E               	addwf	dtoa@i^0,w,c
  5233  00129C  6E13               	movwf	pad@buf^0,c
  5234  00129E  0E02               	movlw	high _dbuf
  5235  0012A0  203F               	addwfc	(dtoa@i+1)^0,w,c
  5236  0012A2  6E14               	movwf	(pad@buf+1)^0,c
  5237  0012A4  C032  F015         	movff	dtoa@w,pad@p
  5238  0012A8  C033  F016         	movff	dtoa@w+1,pad@p+1
  5239  0012AC  EC34  F010         	call	_pad	;wreg free
  5240  0012B0  C011  F01C         	movff	?_pad,?_dtoa
  5241  0012B4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5242  0012B8  0012               	return		;funcret
  5243  0012BA                     __end_of_dtoa:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _pad *****************
  5247 ;; Defined at:
  5248 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5251 ;;		 -> sprintf@f(6), 
  5252 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5253 ;;		 -> dbuf(32), 
  5254 ;;  p               2   20[COMRAM] int 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  w               2   25[COMRAM] int 
  5257 ;;  i               2   23[COMRAM] int 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  2   16[COMRAM] int 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5267 ;;      Params:         6       0       0       0       0       0       0       0       0
  5268 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5269 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5270 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5271 ;;Total ram usage:       11 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    3
  5274 ;; This function calls:
  5275 ;;		_fputc
  5276 ;;		_fputs
  5277 ;;		_strlen
  5278 ;; This function is called by:
  5279 ;;		_dtoa
  5280 ;;		_xtoa
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text26
  5285  002068                     __ptext26:
  5286                           	callstack 0
  5287  002068                     _pad:
  5288                           	callstack 22
  5289  002068                     
  5290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5291  002068  0100               	movlb	0	; () banked
  5292  00206A  A1E6               	btfss	_flags& (0+255),0,b
  5293  00206C  EF3A  F010         	goto	u1811
  5294  002070  EF3C  F010         	goto	u1810
  5295  002074                     u1811:
  5296  002074  EF46  F010         	goto	l2519
  5297  002078                     u1810:
  5298  002078                     
  5299                           ; BSR set to: 0
  5300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5301  002078  C013  F00A         	movff	pad@buf,fputs@s
  5302  00207C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5303  002080  C011  F00C         	movff	pad@fp,fputs@fp
  5304  002084  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5305  002088  EC2D  F013         	call	_fputs	;wreg free
  5306  00208C                     l2519:
  5307                           
  5308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5309  00208C  BE16               	btfsc	(pad@p+1)^0,7,c
  5310  00208E  EF4B  F010         	goto	u1821
  5311  002092  EF4D  F010         	goto	u1820
  5312  002096                     u1821:
  5313  002096  EF53  F010         	goto	l2523
  5314  00209A                     u1820:
  5315  00209A  C015  F01A         	movff	pad@p,pad@w
  5316  00209E  C016  F01B         	movff	pad@p+1,pad@w+1
  5317  0020A2  EF57  F010         	goto	l1182
  5318  0020A6                     l2523:
  5319  0020A6  0E00               	movlw	0
  5320  0020A8  6E1B               	movwf	(pad@w+1)^0,c
  5321  0020AA  0E00               	movlw	0
  5322  0020AC  6E1A               	movwf	pad@w^0,c
  5323  0020AE                     l1182:
  5324                           
  5325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5326  0020AE  0E00               	movlw	0
  5327  0020B0  6E19               	movwf	(pad@i+1)^0,c
  5328  0020B2  0E00               	movlw	0
  5329  0020B4  6E18               	movwf	pad@i^0,c
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5332  0020B6  EF69  F010         	goto	l2529
  5333  0020BA                     l2525:
  5334                           
  5335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5336  0020BA  0E00               	movlw	0
  5337  0020BC  6E02               	movwf	(fputc@c+1)^0,c
  5338  0020BE  0E20               	movlw	32
  5339  0020C0  6E01               	movwf	fputc@c^0,c
  5340  0020C2  C011  F003         	movff	pad@fp,fputc@fp
  5341  0020C6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5342  0020CA  ECCF  F00F         	call	_fputc	;wreg free
  5343  0020CE                     
  5344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5345  0020CE  4A18               	infsnz	pad@i^0,f,c
  5346  0020D0  2A19               	incf	(pad@i+1)^0,f,c
  5347  0020D2                     l2529:
  5348                           
  5349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5350  0020D2  501A               	movf	pad@w^0,w,c
  5351  0020D4  5C18               	subwf	pad@i^0,w,c
  5352  0020D6  5019               	movf	(pad@i+1)^0,w,c
  5353  0020D8  0A80               	xorlw	128
  5354  0020DA  6E17               	movwf	??_pad^0,c
  5355  0020DC  501B               	movf	(pad@w+1)^0,w,c
  5356  0020DE  0A80               	xorlw	128
  5357  0020E0  5817               	subwfb	??_pad^0,w,c
  5358  0020E2  A0D8               	btfss	status,0,c
  5359  0020E4  EF76  F010         	goto	u1831
  5360  0020E8  EF78  F010         	goto	u1830
  5361  0020EC                     u1831:
  5362  0020EC  EF5D  F010         	goto	l2525
  5363  0020F0                     u1830:
  5364  0020F0                     
  5365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5366  0020F0  0100               	movlb	0	; () banked
  5367  0020F2  B1E6               	btfsc	_flags& (0+255),0,b
  5368  0020F4  EF7E  F010         	goto	u1841
  5369  0020F8  EF80  F010         	goto	u1840
  5370  0020FC                     u1841:
  5371  0020FC  EF8A  F010         	goto	l2533
  5372  002100                     u1840:
  5373  002100                     
  5374                           ; BSR set to: 0
  5375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5376  002100  C013  F00A         	movff	pad@buf,fputs@s
  5377  002104  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5378  002108  C011  F00C         	movff	pad@fp,fputs@fp
  5379  00210C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5380  002110  EC2D  F013         	call	_fputs	;wreg free
  5381  002114                     l2533:
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5384  002114  C013  F001         	movff	pad@buf,strlen@s
  5385  002118  C014  F002         	movff	pad@buf+1,strlen@s+1
  5386  00211C  EC02  F014         	call	_strlen	;wreg free
  5387  002120  501A               	movf	pad@w^0,w,c
  5388  002122  2401               	addwf	?_strlen^0,w,c
  5389  002124  6E11               	movwf	?_pad^0,c
  5390  002126  501B               	movf	(pad@w+1)^0,w,c
  5391  002128  2002               	addwfc	(?_strlen+1)^0,w,c
  5392  00212A  6E12               	movwf	(?_pad+1)^0,c
  5393  00212C  0012               	return		;funcret
  5394  00212E                     __end_of_pad:
  5395                           	callstack 0
  5396                           
  5397 ;; *************** function _strlen *****************
  5398 ;; Defined at:
  5399 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5402 ;;		 -> dbuf(32), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5405 ;;		 -> dbuf(32), 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  2    0[COMRAM] unsigned int 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5415 ;;      Params:         2       0       0       0       0       0       0       0       0
  5416 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5418 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        4 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_pad
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text27
  5429  002804                     __ptext27:
  5430                           	callstack 0
  5431  002804                     _strlen:
  5432                           	callstack 24
  5433  002804  C001  F003         	movff	strlen@s,strlen@a
  5434  002808  C002  F004         	movff	strlen@s+1,strlen@a+1
  5435  00280C  EF0A  F014         	goto	l2425
  5436  002810                     l2423:
  5437  002810  4A01               	infsnz	strlen@s^0,f,c
  5438  002812  2A02               	incf	(strlen@s+1)^0,f,c
  5439  002814                     l2425:
  5440  002814  C001  FFD9         	movff	strlen@s,fsr2l
  5441  002818  C002  FFDA         	movff	strlen@s+1,fsr2h
  5442  00281C  50DF               	movf	indf2,w,c
  5443  00281E  A4D8               	btfss	status,2,c
  5444  002820  EF14  F014         	goto	u1651
  5445  002824  EF16  F014         	goto	u1650
  5446  002828                     u1651:
  5447  002828  EF08  F014         	goto	l2423
  5448  00282C                     u1650:
  5449  00282C  5003               	movf	strlen@a^0,w,c
  5450  00282E  5C01               	subwf	strlen@s^0,w,c
  5451  002830  6E01               	movwf	?_strlen^0,c
  5452  002832  5004               	movf	(strlen@a+1)^0,w,c
  5453  002834  5802               	subwfb	(strlen@s+1)^0,w,c
  5454  002836  6E02               	movwf	(?_strlen+1)^0,c
  5455  002838  0012               	return		;funcret
  5456  00283A                     __end_of_strlen:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _fputs *****************
  5460 ;; Defined at:
  5461 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5464 ;;		 -> dbuf(32), 
  5465 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5466 ;;		 -> sprintf@f(6), 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  i               2   14[COMRAM] int 
  5469 ;;  c               1   13[COMRAM] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2    9[COMRAM] int 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5479 ;;      Params:         4       0       0       0       0       0       0       0       0
  5480 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5482 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        7 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    2
  5486 ;; This function calls:
  5487 ;;		_fputc
  5488 ;; This function is called by:
  5489 ;;		_pad
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text28
  5494  00265A                     __ptext28:
  5495                           	callstack 0
  5496  00265A                     _fputs:
  5497                           	callstack 22
  5498  00265A  0E00               	movlw	0
  5499  00265C  6E10               	movwf	(fputs@i+1)^0,c
  5500  00265E  0E00               	movlw	0
  5501  002660  6E0F               	movwf	fputs@i^0,c
  5502  002662  EF3E  F013         	goto	l2419
  5503  002666                     l2415:
  5504  002666  C00E  F001         	movff	fputs@c,fputc@c
  5505  00266A  6A02               	clrf	(fputc@c+1)^0,c
  5506  00266C  C00C  F003         	movff	fputs@fp,fputc@fp
  5507  002670  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5508  002674  ECCF  F00F         	call	_fputc	;wreg free
  5509  002678  4A0F               	infsnz	fputs@i^0,f,c
  5510  00267A  2A10               	incf	(fputs@i+1)^0,f,c
  5511  00267C                     l2419:
  5512  00267C  500F               	movf	fputs@i^0,w,c
  5513  00267E  240A               	addwf	fputs@s^0,w,c
  5514  002680  6ED9               	movwf	fsr2l,c
  5515  002682  5010               	movf	(fputs@i+1)^0,w,c
  5516  002684  200B               	addwfc	(fputs@s+1)^0,w,c
  5517  002686  6EDA               	movwf	fsr2h,c
  5518  002688  50DF               	movf	indf2,w,c
  5519  00268A  6E0E               	movwf	fputs@c^0,c
  5520  00268C  500E               	movf	fputs@c^0,w,c
  5521  00268E  A4D8               	btfss	status,2,c
  5522  002690  EF4C  F013         	goto	u1641
  5523  002694  EF4E  F013         	goto	u1640
  5524  002698                     u1641:
  5525  002698  EF33  F013         	goto	l2415
  5526  00269C                     u1640:
  5527  00269C  0012               	return		;funcret
  5528  00269E                     __end_of_fputs:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _fputc *****************
  5532 ;; Defined at:
  5533 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  c               2    0[COMRAM] int 
  5536 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5537 ;;		 -> sprintf@f(6), 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  2    0[COMRAM] int 
  5542 ;; Registers used:
  5543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5549 ;;      Params:         4       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5552 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:        9 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    1
  5556 ;; This function calls:
  5557 ;;		_putch
  5558 ;; This function is called by:
  5559 ;;		_pad
  5560 ;;		_vfpfcnvrt
  5561 ;;		_fputs
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text29
  5566  001F9E                     __ptext29:
  5567                           	callstack 0
  5568  001F9E                     _fputc:
  5569                           	callstack 22
  5570  001F9E  5003               	movf	fputc@fp^0,w,c
  5571  001FA0  1004               	iorwf	(fputc@fp+1)^0,w,c
  5572  001FA2  B4D8               	btfsc	status,2,c
  5573  001FA4  EFD6  F00F         	goto	u1601
  5574  001FA8  EFD8  F00F         	goto	u1600
  5575  001FAC                     u1601:
  5576  001FAC  EFE1  F00F         	goto	l2403
  5577  001FB0                     u1600:
  5578  001FB0  5003               	movf	fputc@fp^0,w,c
  5579  001FB2  1004               	iorwf	(fputc@fp+1)^0,w,c
  5580  001FB4  A4D8               	btfss	status,2,c
  5581  001FB6  EFDF  F00F         	goto	u1611
  5582  001FBA  EFE1  F00F         	goto	u1610
  5583  001FBE                     u1611:
  5584  001FBE  EFE6  F00F         	goto	l2405
  5585  001FC2                     u1610:
  5586  001FC2                     l2403:
  5587  001FC2  5001               	movf	fputc@c^0,w,c
  5588  001FC4  ECF2  F014         	call	_putch
  5589  001FC8  EF33  F010         	goto	l1291
  5590  001FCC                     l2405:
  5591  001FCC  EE20 F004          	lfsr	2,4
  5592  001FD0  5003               	movf	fputc@fp^0,w,c
  5593  001FD2  26D9               	addwf	fsr2l,f,c
  5594  001FD4  5004               	movf	(fputc@fp+1)^0,w,c
  5595  001FD6  22DA               	addwfc	fsr2h,f,c
  5596  001FD8  50DE               	movf	postinc2,w,c
  5597  001FDA  10DE               	iorwf	postinc2,w,c
  5598  001FDC  B4D8               	btfsc	status,2,c
  5599  001FDE  EFF3  F00F         	goto	u1621
  5600  001FE2  EFF5  F00F         	goto	u1620
  5601  001FE6                     u1621:
  5602  001FE6  EF10  F010         	goto	l2409
  5603  001FEA                     u1620:
  5604  001FEA  EE20 F004          	lfsr	2,4
  5605  001FEE  5003               	movf	fputc@fp^0,w,c
  5606  001FF0  26D9               	addwf	fsr2l,f,c
  5607  001FF2  5004               	movf	(fputc@fp+1)^0,w,c
  5608  001FF4  22DA               	addwfc	fsr2h,f,c
  5609  001FF6  EE10 F002          	lfsr	1,2
  5610  001FFA  5003               	movf	fputc@fp^0,w,c
  5611  001FFC  26E1               	addwf	fsr1l,f,c
  5612  001FFE  5004               	movf	(fputc@fp+1)^0,w,c
  5613  002000  22E2               	addwfc	fsr1h,f,c
  5614  002002  50DE               	movf	postinc2,w,c
  5615  002004  5CE6               	subwf	postinc1,w,c
  5616  002006  50E6               	movf	postinc1,w,c
  5617  002008  0A80               	xorlw	128
  5618  00200A  6E09               	movwf	(??_fputc+4)^0,c
  5619  00200C  50DE               	movf	postinc2,w,c
  5620  00200E  0A80               	xorlw	128
  5621  002010  5809               	subwfb	(??_fputc+4)^0,w,c
  5622  002012  B0D8               	btfsc	status,0,c
  5623  002014  EF0E  F010         	goto	u1631
  5624  002018  EF10  F010         	goto	u1630
  5625  00201C                     u1631:
  5626  00201C  EF33  F010         	goto	l1291
  5627  002020                     u1630:
  5628  002020                     l2409:
  5629  002020  EE20 F002          	lfsr	2,2
  5630  002024  5003               	movf	fputc@fp^0,w,c
  5631  002026  26D9               	addwf	fsr2l,f,c
  5632  002028  5004               	movf	(fputc@fp+1)^0,w,c
  5633  00202A  22DA               	addwfc	fsr2h,f,c
  5634  00202C  CFDE F005          	movff	postinc2,??_fputc
  5635  002030  CFDD F006          	movff	postdec2,??_fputc+1
  5636  002034  C003  FFD9         	movff	fputc@fp,fsr2l
  5637  002038  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5638  00203C  CFDE F007          	movff	postinc2,??_fputc+2
  5639  002040  CFDD F008          	movff	postdec2,??_fputc+3
  5640  002044  5005               	movf	??_fputc^0,w,c
  5641  002046  2407               	addwf	(??_fputc+2)^0,w,c
  5642  002048  6ED9               	movwf	fsr2l,c
  5643  00204A  5006               	movf	(??_fputc+1)^0,w,c
  5644  00204C  2008               	addwfc	(??_fputc+3)^0,w,c
  5645  00204E  6EDA               	movwf	fsr2h,c
  5646  002050  C001  FFDF         	movff	fputc@c,indf2
  5647  002054  EE20 F002          	lfsr	2,2
  5648  002058  5003               	movf	fputc@fp^0,w,c
  5649  00205A  26D9               	addwf	fsr2l,f,c
  5650  00205C  5004               	movf	(fputc@fp+1)^0,w,c
  5651  00205E  22DA               	addwfc	fsr2h,f,c
  5652  002060  2ADE               	incf	postinc2,f,c
  5653  002062  0E00               	movlw	0
  5654  002064  22DD               	addwfc	postdec2,f,c
  5655  002066                     l1291:
  5656  002066  0012               	return		;funcret
  5657  002068                     __end_of_fputc:
  5658                           	callstack 0
  5659                           
  5660 ;; *************** function _putch *****************
  5661 ;; Defined at:
  5662 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  c               1    wreg     unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  c               1    0[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_fputc
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text30
  5690  0029E4                     __ptext30:
  5691                           	callstack 0
  5692  0029E4                     _putch:
  5693                           	callstack 22
  5694  0029E4  0012               	return		;funcret
  5695  0029E6                     __end_of_putch:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _abs *****************
  5699 ;; Defined at:
  5700 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  a               2   18[COMRAM] int 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  2   18[COMRAM] int 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5714 ;;      Params:         2       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5717 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:        4 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_dtoa
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text31
  5728  00269E                     __ptext31:
  5729                           	callstack 0
  5730  00269E                     _abs:
  5731                           	callstack 25
  5732  00269E  BE14               	btfsc	(abs@a+1)^0,7,c
  5733  0026A0  EF5C  F013         	goto	u1850
  5734  0026A4  5014               	movf	(abs@a+1)^0,w,c
  5735  0026A6  E106               	bnz	u1851
  5736  0026A8  0413               	decf	abs@a^0,w,c
  5737  0026AA  B0D8               	btfsc	status,0,c
  5738  0026AC  EF5A  F013         	goto	u1851
  5739  0026B0  EF5C  F013         	goto	u1850
  5740  0026B4                     u1851:
  5741  0026B4  EF6A  F013         	goto	l1264
  5742  0026B8                     u1850:
  5743  0026B8  C013  F015         	movff	abs@a,??_abs
  5744  0026BC  C014  F016         	movff	abs@a+1,??_abs+1
  5745  0026C0  1E15               	comf	??_abs^0,f,c
  5746  0026C2  1E16               	comf	(??_abs+1)^0,f,c
  5747  0026C4  4A15               	infsnz	??_abs^0,f,c
  5748  0026C6  2A16               	incf	(??_abs+1)^0,f,c
  5749  0026C8  C015  F013         	movff	??_abs,?_abs
  5750  0026CC  C016  F014         	movff	??_abs+1,?_abs+1
  5751  0026D0  EF6E  F013         	goto	l1267
  5752  0026D4                     l1264:
  5753  0026D4  C013  F013         	movff	abs@a,?_abs
  5754  0026D8  C014  F014         	movff	abs@a+1,?_abs+1
  5755  0026DC                     l1267:
  5756  0026DC  0012               	return		;funcret
  5757  0026DE                     __end_of_abs:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function ___aomod *****************
  5761 ;; Defined at:
  5762 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  dividend        8    0[COMRAM] long long 
  5765 ;;  divisor         8    8[COMRAM] long long 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  sign            1   17[COMRAM] unsigned char 
  5768 ;;  counter         1   16[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  8    0[COMRAM] long long 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:        16       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:       18 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_dtoa
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text32
  5792  001BB6                     __ptext32:
  5793                           	callstack 0
  5794  001BB6                     ___aomod:
  5795                           	callstack 25
  5796  001BB6  0E00               	movlw	0
  5797  001BB8  6E12               	movwf	___aomod@sign^0,c
  5798  001BBA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5799  001BBC  EFE4  F00D         	goto	u1750
  5800  001BC0  EFE2  F00D         	goto	u1751
  5801  001BC4                     u1751:
  5802  001BC4  EFF6  F00D         	goto	l2487
  5803  001BC8                     u1750:
  5804  001BC8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5805  001BCA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5806  001BCC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5807  001BCE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5808  001BD0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5809  001BD2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5810  001BD4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5811  001BD6  6C01               	negf	___aomod@dividend^0,c
  5812  001BD8  0E00               	movlw	0
  5813  001BDA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5814  001BDC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5815  001BDE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5816  001BE0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5817  001BE2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5818  001BE4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5819  001BE6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5820  001BE8  0E01               	movlw	1
  5821  001BEA  6E12               	movwf	___aomod@sign^0,c
  5822  001BEC                     l2487:
  5823  001BEC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5824  001BEE  EFFD  F00D         	goto	u1760
  5825  001BF2  EFFB  F00D         	goto	u1761
  5826  001BF6                     u1761:
  5827  001BF6  EF0D  F00E         	goto	l2491
  5828  001BFA                     u1760:
  5829  001BFA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5830  001BFC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5831  001BFE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5832  001C00  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5833  001C02  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5834  001C04  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5835  001C06  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5836  001C08  6C09               	negf	___aomod@divisor^0,c
  5837  001C0A  0E00               	movlw	0
  5838  001C0C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5839  001C0E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5840  001C10  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5841  001C12  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5842  001C14  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5843  001C16  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5844  001C18  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5845  001C1A                     l2491:
  5846  001C1A  5009               	movf	___aomod@divisor^0,w,c
  5847  001C1C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5848  001C1E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5849  001C20  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5850  001C22  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5851  001C24  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5852  001C26  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5853  001C28  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5854  001C2A  B4D8               	btfsc	status,2,c
  5855  001C2C  EF1A  F00E         	goto	u1771
  5856  001C30  EF1C  F00E         	goto	u1770
  5857  001C34                     u1771:
  5858  001C34  EF64  F00E         	goto	l2507
  5859  001C38                     u1770:
  5860  001C38  0E01               	movlw	1
  5861  001C3A  6E11               	movwf	___aomod@counter^0,c
  5862  001C3C  EF2A  F00E         	goto	l2497
  5863  001C40                     l2495:
  5864  001C40  90D8               	bcf	status,0,c
  5865  001C42  3609               	rlcf	___aomod@divisor^0,f,c
  5866  001C44  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5867  001C46  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5868  001C48  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5869  001C4A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5870  001C4C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5871  001C4E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5872  001C50  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5873  001C52  2A11               	incf	___aomod@counter^0,f,c
  5874  001C54                     l2497:
  5875  001C54  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5876  001C56  EF2F  F00E         	goto	u1781
  5877  001C5A  EF31  F00E         	goto	u1780
  5878  001C5E                     u1781:
  5879  001C5E  EF20  F00E         	goto	l2495
  5880  001C62                     u1780:
  5881  001C62                     l2499:
  5882  001C62  5009               	movf	___aomod@divisor^0,w,c
  5883  001C64  5C01               	subwf	___aomod@dividend^0,w,c
  5884  001C66  500A               	movf	(___aomod@divisor+1)^0,w,c
  5885  001C68  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5886  001C6A  500B               	movf	(___aomod@divisor+2)^0,w,c
  5887  001C6C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5888  001C6E  500C               	movf	(___aomod@divisor+3)^0,w,c
  5889  001C70  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5890  001C72  500D               	movf	(___aomod@divisor+4)^0,w,c
  5891  001C74  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5892  001C76  500E               	movf	(___aomod@divisor+5)^0,w,c
  5893  001C78  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5894  001C7A  500F               	movf	(___aomod@divisor+6)^0,w,c
  5895  001C7C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5896  001C7E  5010               	movf	(___aomod@divisor+7)^0,w,c
  5897  001C80  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5898  001C82  A0D8               	btfss	status,0,c
  5899  001C84  EF46  F00E         	goto	u1791
  5900  001C88  EF48  F00E         	goto	u1790
  5901  001C8C                     u1791:
  5902  001C8C  EF58  F00E         	goto	l2503
  5903  001C90                     u1790:
  5904  001C90  5009               	movf	___aomod@divisor^0,w,c
  5905  001C92  5E01               	subwf	___aomod@dividend^0,f,c
  5906  001C94  500A               	movf	(___aomod@divisor+1)^0,w,c
  5907  001C96  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5908  001C98  500B               	movf	(___aomod@divisor+2)^0,w,c
  5909  001C9A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5910  001C9C  500C               	movf	(___aomod@divisor+3)^0,w,c
  5911  001C9E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5912  001CA0  500D               	movf	(___aomod@divisor+4)^0,w,c
  5913  001CA2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5914  001CA4  500E               	movf	(___aomod@divisor+5)^0,w,c
  5915  001CA6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5916  001CA8  500F               	movf	(___aomod@divisor+6)^0,w,c
  5917  001CAA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5918  001CAC  5010               	movf	(___aomod@divisor+7)^0,w,c
  5919  001CAE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5920  001CB0                     l2503:
  5921  001CB0  90D8               	bcf	status,0,c
  5922  001CB2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5923  001CB4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5924  001CB6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5925  001CB8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5926  001CBA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5927  001CBC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5928  001CBE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5929  001CC0  3209               	rrcf	___aomod@divisor^0,f,c
  5930  001CC2  2E11               	decfsz	___aomod@counter^0,f,c
  5931  001CC4  EF31  F00E         	goto	l2499
  5932  001CC8                     l2507:
  5933  001CC8  5012               	movf	___aomod@sign^0,w,c
  5934  001CCA  B4D8               	btfsc	status,2,c
  5935  001CCC  EF6A  F00E         	goto	u1801
  5936  001CD0  EF6C  F00E         	goto	u1800
  5937  001CD4                     u1801:
  5938  001CD4  EF7C  F00E         	goto	l2511
  5939  001CD8                     u1800:
  5940  001CD8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5941  001CDA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5942  001CDC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5943  001CDE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5944  001CE0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5945  001CE2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5946  001CE4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5947  001CE6  6C01               	negf	___aomod@dividend^0,c
  5948  001CE8  0E00               	movlw	0
  5949  001CEA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5950  001CEC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5951  001CEE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5952  001CF0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5953  001CF2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5954  001CF4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5955  001CF6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5956  001CF8                     l2511:
  5957  001CF8  C001  F001         	movff	___aomod@dividend,?___aomod
  5958  001CFC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5959  001D00  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5960  001D04  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5961  001D08  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5962  001D0C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5963  001D10  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5964  001D14  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5965  001D18  0012               	return		;funcret
  5966  001D1A                     __end_of___aomod:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function ___aodiv *****************
  5970 ;; Defined at:
  5971 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  dividend        8    0[COMRAM] long long 
  5974 ;;  divisor         8    8[COMRAM] long long 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  quotient        8   18[COMRAM] long long 
  5977 ;;  sign            1   17[COMRAM] unsigned char 
  5978 ;;  counter         1   16[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  8    0[COMRAM] long long 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5988 ;;      Params:        16       0       0       0       0       0       0       0       0
  5989 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5991 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5992 ;;Total ram usage:       26 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_dtoa
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text33
  6002  001A2E                     __ptext33:
  6003                           	callstack 0
  6004  001A2E                     ___aodiv:
  6005                           	callstack 25
  6006  001A2E  0E00               	movlw	0
  6007  001A30  6E12               	movwf	___aodiv@sign^0,c
  6008  001A32  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6009  001A34  EF20  F00D         	goto	u1680
  6010  001A38  EF1E  F00D         	goto	u1681
  6011  001A3C                     u1681:
  6012  001A3C  EF32  F00D         	goto	l2443
  6013  001A40                     u1680:
  6014  001A40  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6015  001A42  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6016  001A44  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6017  001A46  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6018  001A48  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6019  001A4A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6020  001A4C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6021  001A4E  6C09               	negf	___aodiv@divisor^0,c
  6022  001A50  0E00               	movlw	0
  6023  001A52  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6024  001A54  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6025  001A56  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6026  001A58  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6027  001A5A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6028  001A5C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6029  001A5E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6030  001A60  0E01               	movlw	1
  6031  001A62  6E12               	movwf	___aodiv@sign^0,c
  6032  001A64                     l2443:
  6033  001A64  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6034  001A66  EF39  F00D         	goto	u1690
  6035  001A6A  EF37  F00D         	goto	u1691
  6036  001A6E                     u1691:
  6037  001A6E  EF4B  F00D         	goto	l2449
  6038  001A72                     u1690:
  6039  001A72  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6040  001A74  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6041  001A76  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6042  001A78  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6043  001A7A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6044  001A7C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6045  001A7E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6046  001A80  6C01               	negf	___aodiv@dividend^0,c
  6047  001A82  0E00               	movlw	0
  6048  001A84  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6049  001A86  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6050  001A88  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6051  001A8A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6052  001A8C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6053  001A8E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6054  001A90  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6055  001A92  0E01               	movlw	1
  6056  001A94  1A12               	xorwf	___aodiv@sign^0,f,c
  6057  001A96                     l2449:
  6058  001A96  EE20  F013         	lfsr	2,___aodiv@quotient
  6059  001A9A  0E07               	movlw	7
  6060  001A9C                     u1701:
  6061  001A9C  6ADE               	clrf	postinc2,c
  6062  001A9E  06E8               	decf	wreg,f,c
  6063  001AA0  E2FD               	bc	u1701
  6064  001AA2  5009               	movf	___aodiv@divisor^0,w,c
  6065  001AA4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6066  001AA6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6067  001AA8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6068  001AAA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6069  001AAC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6070  001AAE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6071  001AB0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6072  001AB2  B4D8               	btfsc	status,2,c
  6073  001AB4  EF5E  F00D         	goto	u1711
  6074  001AB8  EF60  F00D         	goto	u1710
  6075  001ABC                     u1711:
  6076  001ABC  EFB2  F00D         	goto	l2471
  6077  001AC0                     u1710:
  6078  001AC0  0E01               	movlw	1
  6079  001AC2  6E11               	movwf	___aodiv@counter^0,c
  6080  001AC4  EF6E  F00D         	goto	l2457
  6081  001AC8                     l2455:
  6082  001AC8  90D8               	bcf	status,0,c
  6083  001ACA  3609               	rlcf	___aodiv@divisor^0,f,c
  6084  001ACC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6085  001ACE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6086  001AD0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6087  001AD2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6088  001AD4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6089  001AD6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6090  001AD8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6091  001ADA  2A11               	incf	___aodiv@counter^0,f,c
  6092  001ADC                     l2457:
  6093  001ADC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6094  001ADE  EF73  F00D         	goto	u1721
  6095  001AE2  EF75  F00D         	goto	u1720
  6096  001AE6                     u1721:
  6097  001AE6  EF64  F00D         	goto	l2455
  6098  001AEA                     u1720:
  6099  001AEA                     l2459:
  6100  001AEA  90D8               	bcf	status,0,c
  6101  001AEC  3613               	rlcf	___aodiv@quotient^0,f,c
  6102  001AEE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6103  001AF0  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6104  001AF2  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6105  001AF4  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6106  001AF6  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6107  001AF8  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6108  001AFA  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6109  001AFC  5009               	movf	___aodiv@divisor^0,w,c
  6110  001AFE  5C01               	subwf	___aodiv@dividend^0,w,c
  6111  001B00  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6112  001B02  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6113  001B04  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6114  001B06  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6115  001B08  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6116  001B0A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6117  001B0C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6118  001B0E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6119  001B10  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6120  001B12  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6121  001B14  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6122  001B16  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6123  001B18  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6124  001B1A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6125  001B1C  A0D8               	btfss	status,0,c
  6126  001B1E  EF93  F00D         	goto	u1731
  6127  001B22  EF95  F00D         	goto	u1730
  6128  001B26                     u1731:
  6129  001B26  EFA6  F00D         	goto	l2467
  6130  001B2A                     u1730:
  6131  001B2A  5009               	movf	___aodiv@divisor^0,w,c
  6132  001B2C  5E01               	subwf	___aodiv@dividend^0,f,c
  6133  001B2E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6134  001B30  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6135  001B32  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6136  001B34  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6137  001B36  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6138  001B38  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6139  001B3A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6140  001B3C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6141  001B3E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6142  001B40  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6143  001B42  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6144  001B44  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6145  001B46  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6146  001B48  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6147  001B4A  8013               	bsf	___aodiv@quotient^0,0,c
  6148  001B4C                     l2467:
  6149  001B4C  90D8               	bcf	status,0,c
  6150  001B4E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6151  001B50  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6152  001B52  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6153  001B54  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6154  001B56  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6155  001B58  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6156  001B5A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6157  001B5C  3209               	rrcf	___aodiv@divisor^0,f,c
  6158  001B5E  2E11               	decfsz	___aodiv@counter^0,f,c
  6159  001B60  EF75  F00D         	goto	l2459
  6160  001B64                     l2471:
  6161  001B64  5012               	movf	___aodiv@sign^0,w,c
  6162  001B66  B4D8               	btfsc	status,2,c
  6163  001B68  EFB8  F00D         	goto	u1741
  6164  001B6C  EFBA  F00D         	goto	u1740
  6165  001B70                     u1741:
  6166  001B70  EFCA  F00D         	goto	l2475
  6167  001B74                     u1740:
  6168  001B74  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6169  001B76  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6170  001B78  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6171  001B7A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6172  001B7C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6173  001B7E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6174  001B80  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6175  001B82  6C13               	negf	___aodiv@quotient^0,c
  6176  001B84  0E00               	movlw	0
  6177  001B86  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6178  001B88  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6179  001B8A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6180  001B8C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6181  001B8E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6182  001B90  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6183  001B92  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6184  001B94                     l2475:
  6185  001B94  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6186  001B98  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6187  001B9C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6188  001BA0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6189  001BA4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6190  001BA8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6191  001BAC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6192  001BB0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6193  001BB4  0012               	return		;funcret
  6194  001BB6                     __end_of___aodiv:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _LCD_String_xy *****************
  6198 ;; Defined at:
  6199 ;;		line 99 in file "LCD_16x2.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  row             1    wreg     unsigned char 
  6202 ;;  pos             1    9[COMRAM] unsigned char 
  6203 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  6204 ;;		 -> STR_28(3), STR_27(3), date(10), hours(10), 
  6205 ;;		 -> STR_10(3), STR_9(3), STR_8(2), STR_7(2), 
  6206 ;;		 -> vec_value(10), STR_2(7), STR_1(12), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  row             1   12[COMRAM] unsigned char 
  6209 ;;  location        1   13[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6219 ;;      Params:         3       0       0       0       0       0       0       0       0
  6220 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6222 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6223 ;;Total ram usage:        5 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    3
  6226 ;; This function calls:
  6227 ;;		_LCD_Command
  6228 ;;		_LCD_String
  6229 ;; This function is called by:
  6230 ;;		_main
  6231 ;;		_imprimirTemHum
  6232 ;;		_mostrarFechaHora
  6233 ;;		_verificarHora
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text34
  6238  0026DE                     __ptext34:
  6239                           	callstack 0
  6240  0026DE                     _LCD_String_xy:
  6241                           	callstack 26
  6242                           
  6243                           ;incstack = 0
  6244                           ;LCD_String_xy@row stored from wreg
  6245  0026DE  6E0D               	movwf	LCD_String_xy@row^0,c
  6246  0026E0                     
  6247                           ;LCD_16x2.c: 102:     if(row<1)
  6248  0026E0  500D               	movf	LCD_String_xy@row^0,w,c
  6249  0026E2  A4D8               	btfss	status,2,c
  6250  0026E4  EF76  F013         	goto	u2501
  6251  0026E8  EF78  F013         	goto	u2500
  6252  0026EC                     u2501:
  6253  0026EC  EF81  F013         	goto	l2891
  6254  0026F0                     u2500:
  6255  0026F0                     
  6256                           ;LCD_16x2.c: 103:     {;LCD_16x2.c: 104:         location=(0x80) | ((pos) & 0x0f);
  6257  0026F0  500A               	movf	LCD_String_xy@pos^0,w,c
  6258  0026F2  0B0F               	andlw	15
  6259  0026F4  0980               	iorlw	128
  6260  0026F6  6E0E               	movwf	LCD_String_xy@location^0,c
  6261  0026F8                     
  6262                           ;LCD_16x2.c: 105:         LCD_Command(location);
  6263  0026F8  500E               	movf	LCD_String_xy@location^0,w,c
  6264  0026FA  EC99  F014         	call	_LCD_Command
  6265                           
  6266                           ;LCD_16x2.c: 106:     }
  6267  0026FE  EF88  F013         	goto	l2895
  6268  002702                     l2891:
  6269                           
  6270                           ;LCD_16x2.c: 108:     {;LCD_16x2.c: 109:         location=(0xC0) | ((pos) & 0x0f);
  6271  002702  500A               	movf	LCD_String_xy@pos^0,w,c
  6272  002704  0B0F               	andlw	15
  6273  002706  09C0               	iorlw	192
  6274  002708  6E0E               	movwf	LCD_String_xy@location^0,c
  6275  00270A                     
  6276                           ;LCD_16x2.c: 110:         LCD_Command(location);
  6277  00270A  500E               	movf	LCD_String_xy@location^0,w,c
  6278  00270C  EC99  F014         	call	_LCD_Command
  6279  002710                     l2895:
  6280                           
  6281                           ;LCD_16x2.c: 114:     LCD_String(msg);
  6282  002710  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  6283  002714  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  6284  002718  EC0E  F012         	call	_LCD_String	;wreg free
  6285  00271C  0012               	return		;funcret
  6286  00271E                     __end_of_LCD_String_xy:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _LCD_String *****************
  6290 ;; Defined at:
  6291 ;;		line 89 in file "LCD_16x2.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  6294 ;;		 -> STR_28(3), STR_27(3), STR_26(4), STR_25(4), 
  6295 ;;		 -> STR_24(4), STR_23(4), STR_22(4), STR_21(4), 
  6296 ;;		 -> STR_20(4), year(10), month(10), date(10), 
  6297 ;;		 -> hours(10), mins(10), secs(10), STR_10(3), 
  6298 ;;		 -> STR_9(3), STR_8(2), STR_7(2), vec_value(10), 
  6299 ;;		 -> STR_2(7), STR_1(12), 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         2       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6314 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    2
  6318 ;; This function calls:
  6319 ;;		_LCD_Char
  6320 ;; This function is called by:
  6321 ;;		_LCD_String_xy
  6322 ;;		_imprimirTemHum
  6323 ;;		_mostrarFechaHora
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text35
  6328  00241C                     __ptext35:
  6329                           	callstack 0
  6330  00241C                     _LCD_String:
  6331                           	callstack 26
  6332  00241C                     
  6333                           ;LCD_16x2.c: 89: void LCD_String(const char *msg);LCD_16x2.c: 90: {;LCD_16x2.c: 91:  whi
      +                          le((*msg)!=0)
  6334  00241C  EF24  F012         	goto	l2811
  6335  002420                     l2807:
  6336                           
  6337                           ;LCD_16x2.c: 92:  {;LCD_16x2.c: 93:    LCD_Char(*msg);
  6338  002420  C008  FFF6         	movff	LCD_String@msg,tblptrl
  6339  002424  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  6340  002428  6AF8               	clrf	tblptru,c
  6341  00242A  0E07               	movlw	(high __ramtop+-1)
  6342  00242C  64F7               	cpfsgt	tblptrh,c
  6343  00242E  D003               	bra	u2377
  6344  002430  0008               	tblrd		*
  6345  002432  50F5               	movf	tablat,w,c
  6346  002434  D005               	bra	u2370
  6347  002436                     u2377:
  6348  002436  CFF6 FFE1          	movff	tblptrl,fsr1l
  6349  00243A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6350  00243E  50E7               	movf	indf1,w,c
  6351  002440                     u2370:
  6352  002440  ECA7  F014         	call	_LCD_Char
  6353  002444                     
  6354                           ;LCD_16x2.c: 94:    msg++;
  6355  002444  4A08               	infsnz	LCD_String@msg^0,f,c
  6356  002446  2A09               	incf	(LCD_String@msg+1)^0,f,c
  6357  002448                     l2811:
  6358                           
  6359                           ;LCD_16x2.c: 91:  while((*msg)!=0)
  6360  002448  C008  FFF6         	movff	LCD_String@msg,tblptrl
  6361  00244C  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  6362  002450  6AF8               	clrf	tblptru,c
  6363  002452  0E07               	movlw	(high __ramtop+-1)
  6364  002454  64F7               	cpfsgt	tblptrh,c
  6365  002456  D003               	bra	u2387
  6366  002458  0008               	tblrd		*
  6367  00245A  50F5               	movf	tablat,w,c
  6368  00245C  D005               	bra	u2380
  6369  00245E                     u2387:
  6370  00245E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6371  002462  CFF7 FFE2          	movff	tblptrh,fsr1h
  6372  002466  50E7               	movf	indf1,w,c
  6373  002468                     u2380:
  6374  002468  0900               	iorlw	0
  6375  00246A  A4D8               	btfss	status,2,c
  6376  00246C  EF3A  F012         	goto	u2391
  6377  002470  EF3C  F012         	goto	u2390
  6378  002474                     u2391:
  6379  002474  EF10  F012         	goto	l2807
  6380  002478                     u2390:
  6381  002478  0012               	return		;funcret
  6382  00247A                     __end_of_LCD_String:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _encenderBombillas *****************
  6386 ;; Defined at:
  6387 ;;		line 301 in file "Controlador.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  i               2  164[BANK1 ] int 
  6392 ;;  i               2  162[BANK1 ] int 
  6393 ;;  i               1  166[BANK1 ] unsigned char 
  6394 ;;  i               2  160[BANK1 ] int 
  6395 ;;  i               2  158[BANK1 ] int 
  6396 ;;  i               2  156[BANK1 ] int 
  6397 ;;  i               2  154[BANK1 ] int 
  6398 ;;  buffer_TX      19  135[BANK1 ] unsigned char [19]
  6399 ;;  buffer_TX      27  108[BANK1 ] unsigned char [27]
  6400 ;;  buffer_TX      27   81[BANK1 ] unsigned char [27]
  6401 ;;  buffer_TX      27   54[BANK1 ] unsigned char [27]
  6402 ;;  buffer_TX      27   27[BANK1 ] unsigned char [27]
  6403 ;;  buffer_TX      27    0[BANK1 ] unsigned char [27]
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0     167       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       0     167       0       0       0       0       0       0
  6417 ;;Total ram usage:      167 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    3
  6420 ;; This function calls:
  6421 ;;		_LCD_Char
  6422 ;;		_LCD_Command
  6423 ;;		_LCD_Custom_Char
  6424 ;;		_MSdelay
  6425 ;;		_onLEDS
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text36
  6432  000858                     __ptext36:
  6433                           	callstack 0
  6434  000858                     _encenderBombillas:
  6435                           	callstack 27
  6436  000858                     
  6437                           ;Controlador.c: 302:     LCD_Custom_Char(0,bombillaCar0);
  6438  000858  0EF8               	movlw	low _bombillaCar0
  6439  00085A  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6440  00085C  0E01               	movlw	high _bombillaCar0
  6441  00085E  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6442  000860  0E00               	movlw	0
  6443  000862  ECE6  F012         	call	_LCD_Custom_Char
  6444                           
  6445                           ;Controlador.c: 303:     LCD_Custom_Char(1,bombillaCar0);
  6446  000866  0EF8               	movlw	low _bombillaCar0
  6447  000868  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6448  00086A  0E01               	movlw	high _bombillaCar0
  6449  00086C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6450  00086E  0E01               	movlw	1
  6451  000870  ECE6  F012         	call	_LCD_Custom_Char
  6452                           
  6453                           ;Controlador.c: 304:     LCD_Custom_Char(2,bombillaCar0);
  6454  000874  0EF8               	movlw	low _bombillaCar0
  6455  000876  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6456  000878  0E01               	movlw	high _bombillaCar0
  6457  00087A  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6458  00087C  0E02               	movlw	2
  6459  00087E  ECE6  F012         	call	_LCD_Custom_Char
  6460                           
  6461                           ;Controlador.c: 305:     LCD_Custom_Char(3,bombillaCar0);
  6462  000882  0EF8               	movlw	low _bombillaCar0
  6463  000884  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6464  000886  0E01               	movlw	high _bombillaCar0
  6465  000888  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6466  00088A  0E03               	movlw	3
  6467  00088C  ECE6  F012         	call	_LCD_Custom_Char
  6468                           
  6469                           ;Controlador.c: 306:     LCD_Custom_Char(4,bombillaCar0);
  6470  000890  0EF8               	movlw	low _bombillaCar0
  6471  000892  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6472  000894  0E01               	movlw	high _bombillaCar0
  6473  000896  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6474  000898  0E04               	movlw	4
  6475  00089A  ECE6  F012         	call	_LCD_Custom_Char
  6476  00089E                     
  6477                           ;Controlador.c: 308:     onLEDS(var_T_Integral);
  6478  00089E  0100               	movlb	0	; () banked
  6479  0008A0  51FA               	movf	_var_T_Integral& (0+255),w,b
  6480  0008A2  EC67  F00F         	call	_onLEDS
  6481  0008A6                     
  6482                           ;Controlador.c: 309:     if (var_T_Integral < 30 && acumBom == 0) {
  6483  0008A6  0E1E               	movlw	30
  6484  0008A8  0100               	movlb	0	; () banked
  6485  0008AA  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6486  0008AC  EF5A  F004         	goto	u2661
  6487  0008B0  EF5C  F004         	goto	u2660
  6488  0008B4                     u2661:
  6489  0008B4  EFA5  F004         	goto	l3063
  6490  0008B8                     u2660:
  6491  0008B8                     
  6492                           ; BSR set to: 0
  6493  0008B8  0101               	movlb	1	; () banked
  6494  0008BA  51A9               	movf	_acumBom& (0+255),w,b
  6495  0008BC  11AA               	iorwf	(_acumBom+1)& (0+255),w,b
  6496  0008BE  A4D8               	btfss	status,2,c
  6497  0008C0  EF64  F004         	goto	u2671
  6498  0008C4  EF66  F004         	goto	u2670
  6499  0008C8                     u2671:
  6500  0008C8  EFA5  F004         	goto	l3063
  6501  0008CC                     u2670:
  6502  0008CC                     
  6503                           ; BSR set to: 1
  6504                           ;Controlador.c: 310:         PORTAbits.RA0 = 1;
  6505  0008CC  8080               	bsf	128,0,c	;volatile
  6506  0008CE                     
  6507                           ; BSR set to: 1
  6508                           ;Controlador.c: 311:         char buffer_TX[] = "Se encendio la bombilla 1\r";
  6509  0008CE  EE22  F051         	lfsr	2,encenderBombillas@F3591
  6510  0008D2  EE11  F000         	lfsr	1,encenderBombillas@buffer_TX
  6511  0008D6  0E1A               	movlw	26
  6512  0008D8                     u2681:
  6513  0008D8  CFDB FFE3          	movff	plusw2,plusw1
  6514  0008DC  06E8               	decf	wreg,f,c
  6515  0008DE  E2FC               	bc	u2681
  6516  0008E0                     
  6517                           ; BSR set to: 1
  6518                           ;Controlador.c: 312:         for (int i = 0; i < 27; i++) {
  6519  0008E0  0E00               	movlw	0
  6520  0008E2  6F9B               	movwf	(encenderBombillas@i+1)& (0+255),b
  6521  0008E4  0E00               	movlw	0
  6522  0008E6  6F9A               	movwf	encenderBombillas@i& (0+255),b
  6523  0008E8                     l381:
  6524                           
  6525                           ;Controlador.c: 314:             while (!TXSTAbits.TRMT) {
  6526  0008E8  A2AC               	btfss	172,1,c	;volatile
  6527  0008EA  EF79  F004         	goto	u2691
  6528  0008EE  EF7B  F004         	goto	u2690
  6529  0008F2                     u2691:
  6530  0008F2  EF74  F004         	goto	l381
  6531  0008F6                     u2690:
  6532  0008F6                     
  6533                           ;Controlador.c: 317:             TXREG = buffer_TX[i];
  6534  0008F6  0E00               	movlw	low encenderBombillas@buffer_TX
  6535  0008F8  0101               	movlb	1	; () banked
  6536  0008FA  259A               	addwf	encenderBombillas@i& (0+255),w,b
  6537  0008FC  6ED9               	movwf	fsr2l,c
  6538  0008FE  0E01               	movlw	high encenderBombillas@buffer_TX
  6539  000900  219B               	addwfc	(encenderBombillas@i+1)& (0+255),w,b
  6540  000902  6EDA               	movwf	fsr2h,c
  6541  000904  50DF               	movf	indf2,w,c
  6542  000906  6EAD               	movwf	173,c	;volatile
  6543  000908                     
  6544                           ; BSR set to: 1
  6545                           ;Controlador.c: 318:         }
  6546  000908  4B9A               	infsnz	encenderBombillas@i& (0+255),f,b
  6547  00090A  2B9B               	incf	(encenderBombillas@i+1)& (0+255),f,b
  6548  00090C                     
  6549                           ; BSR set to: 1
  6550  00090C  BF9B               	btfsc	(encenderBombillas@i+1)& (0+255),7,b
  6551  00090E  EF92  F004         	goto	u2701
  6552  000912  519B               	movf	(encenderBombillas@i+1)& (0+255),w,b
  6553  000914  E109               	bnz	u2700
  6554  000916  0E1B               	movlw	27
  6555  000918  5D9A               	subwf	encenderBombillas@i& (0+255),w,b
  6556  00091A  A0D8               	btfss	status,0,c
  6557  00091C  EF92  F004         	goto	u2701
  6558  000920  EF94  F004         	goto	u2700
  6559  000924                     u2701:
  6560  000924  EF74  F004         	goto	l381
  6561  000928                     u2700:
  6562  000928                     
  6563                           ; BSR set to: 1
  6564                           ;Controlador.c: 323:         LCD_Command(0xc0|(0));
  6565  000928  0EC0               	movlw	192
  6566  00092A  EC99  F014         	call	_LCD_Command
  6567                           
  6568                           ;Controlador.c: 324:         LCD_Char(0);
  6569  00092E  0E00               	movlw	0
  6570  000930  ECA7  F014         	call	_LCD_Char
  6571  000934                     
  6572                           ;Controlador.c: 331:         var_T_Integral = var_T_Integral + 6;
  6573  000934  0100               	movlb	0	; () banked
  6574  000936  51FA               	movf	_var_T_Integral& (0+255),w,b
  6575  000938  0F06               	addlw	6
  6576  00093A  6FFA               	movwf	_var_T_Integral& (0+255),b
  6577  00093C                     
  6578                           ; BSR set to: 0
  6579                           ;Controlador.c: 332:        acumBom = 6;
  6580  00093C  0E00               	movlw	0
  6581  00093E  0101               	movlb	1	; () banked
  6582  000940  6FAA               	movwf	(_acumBom+1)& (0+255),b
  6583  000942  0E06               	movlw	6
  6584  000944  6FA9               	movwf	_acumBom& (0+255),b
  6585                           
  6586                           ;Controlador.c: 334:     } else if (var_T_Integral < 30 && acumBom == 6) {
  6587  000946  EF51  F006         	goto	l3203
  6588  00094A                     l3063:
  6589  00094A  0E1E               	movlw	30
  6590  00094C  0100               	movlb	0	; () banked
  6591  00094E  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6592  000950  EFAC  F004         	goto	u2711
  6593  000954  EFAE  F004         	goto	u2710
  6594  000958                     u2711:
  6595  000958  EFF8  F004         	goto	l3089
  6596  00095C                     u2710:
  6597  00095C                     
  6598                           ; BSR set to: 0
  6599  00095C  0E06               	movlw	6
  6600  00095E  0101               	movlb	1	; () banked
  6601  000960  19A9               	xorwf	_acumBom& (0+255),w,b
  6602  000962  11AA               	iorwf	(_acumBom+1)& (0+255),w,b
  6603  000964  A4D8               	btfss	status,2,c
  6604  000966  EFB7  F004         	goto	u2721
  6605  00096A  EFB9  F004         	goto	u2720
  6606  00096E                     u2721:
  6607  00096E  EFF8  F004         	goto	l3089
  6608  000972                     u2720:
  6609  000972                     
  6610                           ; BSR set to: 1
  6611                           ;Controlador.c: 335:         PORTAbits.RA1 = 1;
  6612  000972  8280               	bsf	128,1,c	;volatile
  6613  000974                     
  6614                           ; BSR set to: 1
  6615                           ;Controlador.c: 337:         char buffer_TX[] = "Se encendio la bombilla 2\r";
  6616  000974  EE22  F036         	lfsr	2,encenderBombillas@F3594
  6617  000978  EE11  F01B         	lfsr	1,encenderBombillas@buffer_TX_793
  6618  00097C  0E1A               	movlw	26
  6619  00097E                     u2731:
  6620  00097E  CFDB FFE3          	movff	plusw2,plusw1
  6621  000982  06E8               	decf	wreg,f,c
  6622  000984  E2FC               	bc	u2731
  6623  000986                     
  6624                           ; BSR set to: 1
  6625                           ;Controlador.c: 338:         for (int i = 0; i < 27; i++) {
  6626  000986  0E00               	movlw	0
  6627  000988  6F9D               	movwf	(encenderBombillas@i_794+1)& (0+255),b
  6628  00098A  0E00               	movlw	0
  6629  00098C  6F9C               	movwf	encenderBombillas@i_794& (0+255),b
  6630  00098E                     l390:
  6631                           
  6632                           ;Controlador.c: 340:             while (!TXSTAbits.TRMT) {
  6633  00098E  A2AC               	btfss	172,1,c	;volatile
  6634  000990  EFCC  F004         	goto	u2741
  6635  000994  EFCE  F004         	goto	u2740
  6636  000998                     u2741:
  6637  000998  EFC7  F004         	goto	l390
  6638  00099C                     u2740:
  6639  00099C                     
  6640                           ;Controlador.c: 343:             TXREG = buffer_TX[i];
  6641  00099C  0E1B               	movlw	low encenderBombillas@buffer_TX_793
  6642  00099E  0101               	movlb	1	; () banked
  6643  0009A0  259C               	addwf	encenderBombillas@i_794& (0+255),w,b
  6644  0009A2  6ED9               	movwf	fsr2l,c
  6645  0009A4  0E01               	movlw	high encenderBombillas@buffer_TX_793
  6646  0009A6  219D               	addwfc	(encenderBombillas@i_794+1)& (0+255),w,b
  6647  0009A8  6EDA               	movwf	fsr2h,c
  6648  0009AA  50DF               	movf	indf2,w,c
  6649  0009AC  6EAD               	movwf	173,c	;volatile
  6650  0009AE                     
  6651                           ; BSR set to: 1
  6652                           ;Controlador.c: 344:         }
  6653  0009AE  4B9C               	infsnz	encenderBombillas@i_794& (0+255),f,b
  6654  0009B0  2B9D               	incf	(encenderBombillas@i_794+1)& (0+255),f,b
  6655  0009B2                     
  6656                           ; BSR set to: 1
  6657  0009B2  BF9D               	btfsc	(encenderBombillas@i_794+1)& (0+255),7,b
  6658  0009B4  EFE5  F004         	goto	u2751
  6659  0009B8  519D               	movf	(encenderBombillas@i_794+1)& (0+255),w,b
  6660  0009BA  E109               	bnz	u2750
  6661  0009BC  0E1B               	movlw	27
  6662  0009BE  5D9C               	subwf	encenderBombillas@i_794& (0+255),w,b
  6663  0009C0  A0D8               	btfss	status,0,c
  6664  0009C2  EFE5  F004         	goto	u2751
  6665  0009C6  EFE7  F004         	goto	u2750
  6666  0009CA                     u2751:
  6667  0009CA  EFC7  F004         	goto	l390
  6668  0009CE                     u2750:
  6669  0009CE                     
  6670                           ; BSR set to: 1
  6671                           ;Controlador.c: 346:         LCD_Command(0xc0|(3));
  6672  0009CE  0EC3               	movlw	195
  6673  0009D0  EC99  F014         	call	_LCD_Command
  6674                           
  6675                           ;Controlador.c: 347:         LCD_Char(1);
  6676  0009D4  0E01               	movlw	1
  6677  0009D6  ECA7  F014         	call	_LCD_Char
  6678  0009DA                     
  6679                           ;Controlador.c: 349:         var_T_Integral = var_T_Integral + 6;
  6680  0009DA  0100               	movlb	0	; () banked
  6681  0009DC  51FA               	movf	_var_T_Integral& (0+255),w,b
  6682  0009DE  0F06               	addlw	6
  6683  0009E0  6FFA               	movwf	_var_T_Integral& (0+255),b
  6684  0009E2                     
  6685                           ; BSR set to: 0
  6686                           ;Controlador.c: 350:         acumBom = 12;
  6687  0009E2  0E00               	movlw	0
  6688  0009E4  0101               	movlb	1	; () banked
  6689  0009E6  6FAA               	movwf	(_acumBom+1)& (0+255),b
  6690  0009E8  0E0C               	movlw	12
  6691  0009EA  6FA9               	movwf	_acumBom& (0+255),b
  6692                           
  6693                           ;Controlador.c: 351:     } else if (var_T_Integral < 30 && acumBom == 12) {
  6694  0009EC  EF51  F006         	goto	l3203
  6695  0009F0                     l3089:
  6696  0009F0  0E1E               	movlw	30
  6697  0009F2  0100               	movlb	0	; () banked
  6698  0009F4  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6699  0009F6  EFFF  F004         	goto	u2761
  6700  0009FA  EF01  F005         	goto	u2760
  6701  0009FE                     u2761:
  6702  0009FE  EF4B  F005         	goto	l3115
  6703  000A02                     u2760:
  6704  000A02                     
  6705                           ; BSR set to: 0
  6706  000A02  0E0C               	movlw	12
  6707  000A04  0101               	movlb	1	; () banked
  6708  000A06  19A9               	xorwf	_acumBom& (0+255),w,b
  6709  000A08  11AA               	iorwf	(_acumBom+1)& (0+255),w,b
  6710  000A0A  A4D8               	btfss	status,2,c
  6711  000A0C  EF0A  F005         	goto	u2771
  6712  000A10  EF0C  F005         	goto	u2770
  6713  000A14                     u2771:
  6714  000A14  EF4B  F005         	goto	l3115
  6715  000A18                     u2770:
  6716  000A18                     
  6717                           ; BSR set to: 1
  6718                           ;Controlador.c: 352:         PORTAbits.RA2 = 1;
  6719  000A18  8480               	bsf	128,2,c	;volatile
  6720  000A1A                     
  6721                           ; BSR set to: 1
  6722                           ;Controlador.c: 354:         char buffer_TX[] = "Se encendio la bombilla 3\r";
  6723  000A1A  EE22  F01B         	lfsr	2,encenderBombillas@F3597
  6724  000A1E  EE11  F036         	lfsr	1,encenderBombillas@buffer_TX_796
  6725  000A22  0E1A               	movlw	26
  6726  000A24                     u2781:
  6727  000A24  CFDB FFE3          	movff	plusw2,plusw1
  6728  000A28  06E8               	decf	wreg,f,c
  6729  000A2A  E2FC               	bc	u2781
  6730  000A2C                     
  6731                           ; BSR set to: 1
  6732                           ;Controlador.c: 355:         for (int i = 0; i < 27; i++) {
  6733  000A2C  0E00               	movlw	0
  6734  000A2E  6F9F               	movwf	(encenderBombillas@i_797+1)& (0+255),b
  6735  000A30  0E00               	movlw	0
  6736  000A32  6F9E               	movwf	encenderBombillas@i_797& (0+255),b
  6737  000A34                     l399:
  6738                           
  6739                           ;Controlador.c: 357:             while (!TXSTAbits.TRMT) {
  6740  000A34  A2AC               	btfss	172,1,c	;volatile
  6741  000A36  EF1F  F005         	goto	u2791
  6742  000A3A  EF21  F005         	goto	u2790
  6743  000A3E                     u2791:
  6744  000A3E  EF1A  F005         	goto	l399
  6745  000A42                     u2790:
  6746  000A42                     
  6747                           ;Controlador.c: 360:             TXREG = buffer_TX[i];
  6748  000A42  0E36               	movlw	low encenderBombillas@buffer_TX_796
  6749  000A44  0101               	movlb	1	; () banked
  6750  000A46  259E               	addwf	encenderBombillas@i_797& (0+255),w,b
  6751  000A48  6ED9               	movwf	fsr2l,c
  6752  000A4A  0E01               	movlw	high encenderBombillas@buffer_TX_796
  6753  000A4C  219F               	addwfc	(encenderBombillas@i_797+1)& (0+255),w,b
  6754  000A4E  6EDA               	movwf	fsr2h,c
  6755  000A50  50DF               	movf	indf2,w,c
  6756  000A52  6EAD               	movwf	173,c	;volatile
  6757  000A54                     
  6758                           ; BSR set to: 1
  6759                           ;Controlador.c: 361:         }
  6760  000A54  4B9E               	infsnz	encenderBombillas@i_797& (0+255),f,b
  6761  000A56  2B9F               	incf	(encenderBombillas@i_797+1)& (0+255),f,b
  6762  000A58                     
  6763                           ; BSR set to: 1
  6764  000A58  BF9F               	btfsc	(encenderBombillas@i_797+1)& (0+255),7,b
  6765  000A5A  EF38  F005         	goto	u2801
  6766  000A5E  519F               	movf	(encenderBombillas@i_797+1)& (0+255),w,b
  6767  000A60  E109               	bnz	u2800
  6768  000A62  0E1B               	movlw	27
  6769  000A64  5D9E               	subwf	encenderBombillas@i_797& (0+255),w,b
  6770  000A66  A0D8               	btfss	status,0,c
  6771  000A68  EF38  F005         	goto	u2801
  6772  000A6C  EF3A  F005         	goto	u2800
  6773  000A70                     u2801:
  6774  000A70  EF1A  F005         	goto	l399
  6775  000A74                     u2800:
  6776  000A74                     
  6777                           ; BSR set to: 1
  6778                           ;Controlador.c: 364:         LCD_Command(0xc0|(6));
  6779  000A74  0EC6               	movlw	198
  6780  000A76  EC99  F014         	call	_LCD_Command
  6781                           
  6782                           ;Controlador.c: 365:         LCD_Char(2);
  6783  000A7A  0E02               	movlw	2
  6784  000A7C  ECA7  F014         	call	_LCD_Char
  6785  000A80                     
  6786                           ;Controlador.c: 367:         var_T_Integral = var_T_Integral + 6;
  6787  000A80  0100               	movlb	0	; () banked
  6788  000A82  51FA               	movf	_var_T_Integral& (0+255),w,b
  6789  000A84  0F06               	addlw	6
  6790  000A86  6FFA               	movwf	_var_T_Integral& (0+255),b
  6791  000A88                     
  6792                           ; BSR set to: 0
  6793                           ;Controlador.c: 368:         acumBom = 18;
  6794  000A88  0E00               	movlw	0
  6795  000A8A  0101               	movlb	1	; () banked
  6796  000A8C  6FAA               	movwf	(_acumBom+1)& (0+255),b
  6797  000A8E  0E12               	movlw	18
  6798  000A90  6FA9               	movwf	_acumBom& (0+255),b
  6799                           
  6800                           ;Controlador.c: 369:     } else if (var_T_Integral < 30 && acumBom == 18) {
  6801  000A92  EF51  F006         	goto	l3203
  6802  000A96                     l3115:
  6803  000A96  0E1E               	movlw	30
  6804  000A98  0100               	movlb	0	; () banked
  6805  000A9A  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6806  000A9C  EF52  F005         	goto	u2811
  6807  000AA0  EF54  F005         	goto	u2810
  6808  000AA4                     u2811:
  6809  000AA4  EF9E  F005         	goto	l3141
  6810  000AA8                     u2810:
  6811  000AA8                     
  6812                           ; BSR set to: 0
  6813  000AA8  0E12               	movlw	18
  6814  000AAA  0101               	movlb	1	; () banked
  6815  000AAC  19A9               	xorwf	_acumBom& (0+255),w,b
  6816  000AAE  11AA               	iorwf	(_acumBom+1)& (0+255),w,b
  6817  000AB0  A4D8               	btfss	status,2,c
  6818  000AB2  EF5D  F005         	goto	u2821
  6819  000AB6  EF5F  F005         	goto	u2820
  6820  000ABA                     u2821:
  6821  000ABA  EF9E  F005         	goto	l3141
  6822  000ABE                     u2820:
  6823  000ABE                     
  6824                           ; BSR set to: 1
  6825                           ;Controlador.c: 370:         PORTAbits.RA3 = 1;
  6826  000ABE  8680               	bsf	128,3,c	;volatile
  6827  000AC0                     
  6828                           ; BSR set to: 1
  6829                           ;Controlador.c: 372:         char buffer_TX[] = "Se encendio la bombilla 4\r";
  6830  000AC0  EE22  F000         	lfsr	2,encenderBombillas@F3600
  6831  000AC4  EE11  F051         	lfsr	1,encenderBombillas@buffer_TX_799
  6832  000AC8  0E1A               	movlw	26
  6833  000ACA                     u2831:
  6834  000ACA  CFDB FFE3          	movff	plusw2,plusw1
  6835  000ACE  06E8               	decf	wreg,f,c
  6836  000AD0  E2FC               	bc	u2831
  6837  000AD2                     
  6838                           ; BSR set to: 1
  6839                           ;Controlador.c: 373:         for (int i = 0; i < 27; i++) {
  6840  000AD2  0E00               	movlw	0
  6841  000AD4  6FA1               	movwf	(encenderBombillas@i_800+1)& (0+255),b
  6842  000AD6  0E00               	movlw	0
  6843  000AD8  6FA0               	movwf	encenderBombillas@i_800& (0+255),b
  6844  000ADA                     l408:
  6845                           
  6846                           ;Controlador.c: 375:             while (!TXSTAbits.TRMT) {
  6847  000ADA  A2AC               	btfss	172,1,c	;volatile
  6848  000ADC  EF72  F005         	goto	u2841
  6849  000AE0  EF74  F005         	goto	u2840
  6850  000AE4                     u2841:
  6851  000AE4  EF6D  F005         	goto	l408
  6852  000AE8                     u2840:
  6853  000AE8                     
  6854                           ;Controlador.c: 378:             TXREG = buffer_TX[i];
  6855  000AE8  0E51               	movlw	low encenderBombillas@buffer_TX_799
  6856  000AEA  0101               	movlb	1	; () banked
  6857  000AEC  25A0               	addwf	encenderBombillas@i_800& (0+255),w,b
  6858  000AEE  6ED9               	movwf	fsr2l,c
  6859  000AF0  0E01               	movlw	high encenderBombillas@buffer_TX_799
  6860  000AF2  21A1               	addwfc	(encenderBombillas@i_800+1)& (0+255),w,b
  6861  000AF4  6EDA               	movwf	fsr2h,c
  6862  000AF6  50DF               	movf	indf2,w,c
  6863  000AF8  6EAD               	movwf	173,c	;volatile
  6864  000AFA                     
  6865                           ; BSR set to: 1
  6866                           ;Controlador.c: 379:         }
  6867  000AFA  4BA0               	infsnz	encenderBombillas@i_800& (0+255),f,b
  6868  000AFC  2BA1               	incf	(encenderBombillas@i_800+1)& (0+255),f,b
  6869  000AFE                     
  6870                           ; BSR set to: 1
  6871  000AFE  BFA1               	btfsc	(encenderBombillas@i_800+1)& (0+255),7,b
  6872  000B00  EF8B  F005         	goto	u2851
  6873  000B04  51A1               	movf	(encenderBombillas@i_800+1)& (0+255),w,b
  6874  000B06  E109               	bnz	u2850
  6875  000B08  0E1B               	movlw	27
  6876  000B0A  5DA0               	subwf	encenderBombillas@i_800& (0+255),w,b
  6877  000B0C  A0D8               	btfss	status,0,c
  6878  000B0E  EF8B  F005         	goto	u2851
  6879  000B12  EF8D  F005         	goto	u2850
  6880  000B16                     u2851:
  6881  000B16  EF6D  F005         	goto	l408
  6882  000B1A                     u2850:
  6883  000B1A                     
  6884                           ; BSR set to: 1
  6885                           ;Controlador.c: 382:         LCD_Command(0xc0|(9));
  6886  000B1A  0EC9               	movlw	201
  6887  000B1C  EC99  F014         	call	_LCD_Command
  6888                           
  6889                           ;Controlador.c: 383:         LCD_Char(3);
  6890  000B20  0E03               	movlw	3
  6891  000B22  ECA7  F014         	call	_LCD_Char
  6892  000B26                     
  6893                           ;Controlador.c: 385:         var_T_Integral = var_T_Integral + 6;
  6894  000B26  0100               	movlb	0	; () banked
  6895  000B28  51FA               	movf	_var_T_Integral& (0+255),w,b
  6896  000B2A  0F06               	addlw	6
  6897  000B2C  6FFA               	movwf	_var_T_Integral& (0+255),b
  6898  000B2E                     
  6899                           ; BSR set to: 0
  6900                           ;Controlador.c: 386:         acumBom = 24;
  6901  000B2E  0E00               	movlw	0
  6902  000B30  0101               	movlb	1	; () banked
  6903  000B32  6FAA               	movwf	(_acumBom+1)& (0+255),b
  6904  000B34  0E18               	movlw	24
  6905  000B36  6FA9               	movwf	_acumBom& (0+255),b
  6906                           
  6907                           ;Controlador.c: 387:     } else if (var_T_Integral < 30 && acumBom == 24) {
  6908  000B38  EF51  F006         	goto	l3203
  6909  000B3C                     l3141:
  6910  000B3C  0E1E               	movlw	30
  6911  000B3E  0100               	movlb	0	; () banked
  6912  000B40  61FA               	cpfslt	_var_T_Integral& (0+255),b
  6913  000B42  EFA5  F005         	goto	u2861
  6914  000B46  EFA7  F005         	goto	u2860
  6915  000B4A                     u2861:
  6916  000B4A  EF0A  F006         	goto	l3181
  6917  000B4E                     u2860:
  6918  000B4E                     
  6919                           ; BSR set to: 0
  6920  000B4E  0E18               	movlw	24
  6921  000B50  0101               	movlb	1	; () banked
  6922  000B52  19A9               	xorwf	_acumBom& (0+255),w,b
  6923  000B54  11AA               	iorwf	(_acumBom+1)& (0+255),w,b
  6924  000B56  A4D8               	btfss	status,2,c
  6925  000B58  EFB0  F005         	goto	u2871
  6926  000B5C  EFB2  F005         	goto	u2870
  6927  000B60                     u2871:
  6928  000B60  EF0A  F006         	goto	l3181
  6929  000B64                     u2870:
  6930  000B64                     
  6931                           ; BSR set to: 1
  6932                           ;Controlador.c: 388:         PORTAbits.RA4 = 1;
  6933  000B64  8880               	bsf	128,4,c	;volatile
  6934  000B66                     
  6935                           ; BSR set to: 1
  6936                           ;Controlador.c: 390:         LCD_Custom_Char(4,bombillaCar0);
  6937  000B66  0EF8               	movlw	low _bombillaCar0
  6938  000B68  6E08               	movwf	LCD_Custom_Char@msg^0,c
  6939  000B6A  0E01               	movlw	high _bombillaCar0
  6940  000B6C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  6941  000B6E  0E04               	movlw	4
  6942  000B70  ECE6  F012         	call	_LCD_Custom_Char
  6943  000B74                     
  6944                           ;Controlador.c: 391:         for(char i=4;i<5;i++)
  6945  000B74  0E04               	movlw	4
  6946  000B76  0101               	movlb	1	; () banked
  6947  000B78  6FA6               	movwf	encenderBombillas@i_801& (0+255),b
  6948  000B7A                     l3155:
  6949                           
  6950                           ; BSR set to: 1
  6951                           ;Controlador.c: 392:             {;Controlador.c: 393:                 LCD_Command(0xc0|
      +                          (i*3));
  6952  000B7A  51A6               	movf	encenderBombillas@i_801& (0+255),w,b
  6953  000B7C  0D03               	mullw	3
  6954  000B7E  50F3               	movf	243,w,c
  6955  000B80  09C0               	iorlw	192
  6956  000B82  EC99  F014         	call	_LCD_Command
  6957  000B86                     
  6958                           ;Controlador.c: 394:                 LCD_Char(i);
  6959  000B86  0101               	movlb	1	; () banked
  6960  000B88  51A6               	movf	encenderBombillas@i_801& (0+255),w,b
  6961  000B8A  ECA7  F014         	call	_LCD_Char
  6962  000B8E                     
  6963                           ;Controlador.c: 396:             }
  6964  000B8E  0101               	movlb	1	; () banked
  6965  000B90  2BA6               	incf	encenderBombillas@i_801& (0+255),f,b
  6966  000B92                     
  6967                           ; BSR set to: 1
  6968  000B92  0E04               	movlw	4
  6969  000B94  65A6               	cpfsgt	encenderBombillas@i_801& (0+255),b
  6970  000B96  EFCF  F005         	goto	u2881
  6971  000B9A  EFD1  F005         	goto	u2880
  6972  000B9E                     u2881:
  6973  000B9E  EFBD  F005         	goto	l3155
  6974  000BA2                     u2880:
  6975  000BA2                     
  6976                           ; BSR set to: 1
  6977                           ;Controlador.c: 397:         char buffer_TX[] = "Se encendio la bombilla 5\r";
  6978  000BA2  EE23  F04A         	lfsr	2,encenderBombillas@F3604
  6979  000BA6  EE11  F06C         	lfsr	1,encenderBombillas@buffer_TX_803
  6980  000BAA  0E1A               	movlw	26
  6981  000BAC                     u2891:
  6982  000BAC  CFDB FFE3          	movff	plusw2,plusw1
  6983  000BB0  06E8               	decf	wreg,f,c
  6984  000BB2  E2FC               	bc	u2891
  6985  000BB4                     
  6986                           ; BSR set to: 1
  6987                           ;Controlador.c: 398:         for (int i = 0; i < 27; i++) {
  6988  000BB4  0E00               	movlw	0
  6989  000BB6  6FA3               	movwf	(encenderBombillas@i_804+1)& (0+255),b
  6990  000BB8  0E00               	movlw	0
  6991  000BBA  6FA2               	movwf	encenderBombillas@i_804& (0+255),b
  6992  000BBC                     l419:
  6993                           
  6994                           ;Controlador.c: 400:             while (!TXSTAbits.TRMT) {
  6995  000BBC  A2AC               	btfss	172,1,c	;volatile
  6996  000BBE  EFE3  F005         	goto	u2901
  6997  000BC2  EFE5  F005         	goto	u2900
  6998  000BC6                     u2901:
  6999  000BC6  EFDE  F005         	goto	l419
  7000  000BCA                     u2900:
  7001  000BCA                     
  7002                           ;Controlador.c: 403:             TXREG = buffer_TX[i];
  7003  000BCA  0E6C               	movlw	low encenderBombillas@buffer_TX_803
  7004  000BCC  0101               	movlb	1	; () banked
  7005  000BCE  25A2               	addwf	encenderBombillas@i_804& (0+255),w,b
  7006  000BD0  6ED9               	movwf	fsr2l,c
  7007  000BD2  0E01               	movlw	high encenderBombillas@buffer_TX_803
  7008  000BD4  21A3               	addwfc	(encenderBombillas@i_804+1)& (0+255),w,b
  7009  000BD6  6EDA               	movwf	fsr2h,c
  7010  000BD8  50DF               	movf	indf2,w,c
  7011  000BDA  6EAD               	movwf	173,c	;volatile
  7012  000BDC                     
  7013                           ; BSR set to: 1
  7014                           ;Controlador.c: 404:         }
  7015  000BDC  4BA2               	infsnz	encenderBombillas@i_804& (0+255),f,b
  7016  000BDE  2BA3               	incf	(encenderBombillas@i_804+1)& (0+255),f,b
  7017  000BE0                     
  7018                           ; BSR set to: 1
  7019  000BE0  BFA3               	btfsc	(encenderBombillas@i_804+1)& (0+255),7,b
  7020  000BE2  EFFC  F005         	goto	u2911
  7021  000BE6  51A3               	movf	(encenderBombillas@i_804+1)& (0+255),w,b
  7022  000BE8  E109               	bnz	u2910
  7023  000BEA  0E1B               	movlw	27
  7024  000BEC  5DA2               	subwf	encenderBombillas@i_804& (0+255),w,b
  7025  000BEE  A0D8               	btfss	status,0,c
  7026  000BF0  EFFC  F005         	goto	u2911
  7027  000BF4  EFFE  F005         	goto	u2910
  7028  000BF8                     u2911:
  7029  000BF8  EFDE  F005         	goto	l419
  7030  000BFC                     u2910:
  7031  000BFC                     
  7032                           ; BSR set to: 1
  7033                           ;Controlador.c: 407:         LCD_Command(0xc0|(12));
  7034  000BFC  0ECC               	movlw	204
  7035  000BFE  EC99  F014         	call	_LCD_Command
  7036                           
  7037                           ;Controlador.c: 408:         LCD_Char(4);
  7038  000C02  0E04               	movlw	4
  7039  000C04  ECA7  F014         	call	_LCD_Char
  7040  000C08                     
  7041                           ;Controlador.c: 410:         var_T_Integral = var_T_Integral + 6;
  7042  000C08  0100               	movlb	0	; () banked
  7043  000C0A  51FA               	movf	_var_T_Integral& (0+255),w,b
  7044  000C0C  0F06               	addlw	6
  7045  000C0E  6FFA               	movwf	_var_T_Integral& (0+255),b
  7046                           
  7047                           ;Controlador.c: 411:     } else if (var_T_Integral > 35) {
  7048  000C10  EF51  F006         	goto	l3203
  7049  000C14                     l3181:
  7050  000C14  0E23               	movlw	35
  7051  000C16  0100               	movlb	0	; () banked
  7052  000C18  65FA               	cpfsgt	_var_T_Integral& (0+255),b
  7053  000C1A  EF11  F006         	goto	u2921
  7054  000C1E  EF13  F006         	goto	u2920
  7055  000C22                     u2921:
  7056  000C22  EF4D  F006         	goto	l3201
  7057  000C26                     u2920:
  7058  000C26                     
  7059                           ; BSR set to: 0
  7060                           ;Controlador.c: 412:         banAgregar = 1;
  7061  000C26  0E00               	movlw	0
  7062  000C28  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  7063  000C2A  0E01               	movlw	1
  7064  000C2C  6FF6               	movwf	_banAgregar& (0+255),b
  7065  000C2E                     
  7066                           ; BSR set to: 0
  7067                           ;Controlador.c: 413:         char buffer_TX[] = "Temperatura Alta \r";
  7068  000C2E  EE22  F09B         	lfsr	2,encenderBombillas@F3607
  7069  000C32  EE11  F087         	lfsr	1,encenderBombillas@buffer_TX_806
  7070  000C36  0E12               	movlw	18
  7071  000C38                     u2931:
  7072  000C38  CFDB FFE3          	movff	plusw2,plusw1
  7073  000C3C  06E8               	decf	wreg,f,c
  7074  000C3E  E2FC               	bc	u2931
  7075  000C40                     
  7076                           ; BSR set to: 0
  7077                           ;Controlador.c: 414:         for (int i = 0; i < 19; i++) {
  7078  000C40  0E00               	movlw	0
  7079  000C42  0101               	movlb	1	; () banked
  7080  000C44  6FA5               	movwf	(encenderBombillas@i_807+1)& (0+255),b
  7081  000C46  0E00               	movlw	0
  7082  000C48  6FA4               	movwf	encenderBombillas@i_807& (0+255),b
  7083  000C4A                     l428:
  7084                           
  7085                           ;Controlador.c: 416:             while (!TXSTAbits.TRMT) {
  7086  000C4A  A2AC               	btfss	172,1,c	;volatile
  7087  000C4C  EF2A  F006         	goto	u2941
  7088  000C50  EF2C  F006         	goto	u2940
  7089  000C54                     u2941:
  7090  000C54  EF25  F006         	goto	l428
  7091  000C58                     u2940:
  7092  000C58                     
  7093                           ;Controlador.c: 419:             TXREG = buffer_TX[i];
  7094  000C58  0E87               	movlw	low encenderBombillas@buffer_TX_806
  7095  000C5A  0101               	movlb	1	; () banked
  7096  000C5C  25A4               	addwf	encenderBombillas@i_807& (0+255),w,b
  7097  000C5E  6ED9               	movwf	fsr2l,c
  7098  000C60  0E01               	movlw	high encenderBombillas@buffer_TX_806
  7099  000C62  21A5               	addwfc	(encenderBombillas@i_807+1)& (0+255),w,b
  7100  000C64  6EDA               	movwf	fsr2h,c
  7101  000C66  50DF               	movf	indf2,w,c
  7102  000C68  6EAD               	movwf	173,c	;volatile
  7103  000C6A                     
  7104                           ; BSR set to: 1
  7105                           ;Controlador.c: 420:         }
  7106  000C6A  4BA4               	infsnz	encenderBombillas@i_807& (0+255),f,b
  7107  000C6C  2BA5               	incf	(encenderBombillas@i_807+1)& (0+255),f,b
  7108  000C6E                     
  7109                           ; BSR set to: 1
  7110  000C6E  BFA5               	btfsc	(encenderBombillas@i_807+1)& (0+255),7,b
  7111  000C70  EF43  F006         	goto	u2951
  7112  000C74  51A5               	movf	(encenderBombillas@i_807+1)& (0+255),w,b
  7113  000C76  E109               	bnz	u2950
  7114  000C78  0E13               	movlw	19
  7115  000C7A  5DA4               	subwf	encenderBombillas@i_807& (0+255),w,b
  7116  000C7C  A0D8               	btfss	status,0,c
  7117  000C7E  EF43  F006         	goto	u2951
  7118  000C82  EF45  F006         	goto	u2950
  7119  000C86                     u2951:
  7120  000C86  EF25  F006         	goto	l428
  7121  000C8A                     u2950:
  7122  000C8A                     
  7123                           ; BSR set to: 1
  7124                           ;Controlador.c: 421:         MSdelay(100);
  7125  000C8A  0E00               	movlw	0
  7126  000C8C  6E02               	movwf	(MSdelay@val+1)^0,c
  7127  000C8E  0E64               	movlw	100
  7128  000C90  6E01               	movwf	MSdelay@val^0,c
  7129  000C92  ECC1  F012         	call	_MSdelay	;wreg free
  7130                           
  7131                           ;Controlador.c: 422:     } else
  7132  000C96  EF51  F006         	goto	l3203
  7133  000C9A                     l3201:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;Controlador.c: 423:         banAgregar = 1;
  7137  000C9A  0E00               	movlw	0
  7138  000C9C  6FF7               	movwf	(_banAgregar+1)& (0+255),b
  7139  000C9E  0E01               	movlw	1
  7140  000CA0  6FF6               	movwf	_banAgregar& (0+255),b
  7141  000CA2                     l3203:
  7142                           
  7143                           ;Controlador.c: 424:     MSdelay(1000);
  7144  000CA2  0E03               	movlw	3
  7145  000CA4  6E02               	movwf	(MSdelay@val+1)^0,c
  7146  000CA6  0EE8               	movlw	232
  7147  000CA8  6E01               	movwf	MSdelay@val^0,c
  7148  000CAA  ECC1  F012         	call	_MSdelay	;wreg free
  7149  000CAE  0012               	return		;funcret
  7150  000CB0                     __end_of_encenderBombillas:
  7151                           	callstack 0
  7152                           
  7153 ;; *************** function _onLEDS *****************
  7154 ;; Defined at:
  7155 ;;		line 236 in file "Controlador.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  T_Integral      1    wreg     unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  T_Integral      1   19[COMRAM] unsigned char 
  7160 ;;  i               2   22[COMRAM] int 
  7161 ;;  buffer_TX      19    0[COMRAM] unsigned char [19]
  7162 ;;  valor           2   20[COMRAM] int 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      void 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0
  7173 ;;      Locals:        24       0       0       0       0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7175 ;;      Totals:        24       0       0       0       0       0       0       0       0
  7176 ;;Total ram usage:       24 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_encenderBombillas
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text37
  7186  001ECE                     __ptext37:
  7187                           	callstack 0
  7188  001ECE                     _onLEDS:
  7189                           	callstack 29
  7190                           
  7191                           ;incstack = 0
  7192                           ;onLEDS@T_Integral stored from wreg
  7193  001ECE  6E14               	movwf	onLEDS@T_Integral^0,c
  7194  001ED0                     
  7195                           ;Controlador.c: 237:     int valor = T_Integral;
  7196  001ED0  C014  F015         	movff	onLEDS@T_Integral,onLEDS@valor
  7197  001ED4  6A16               	clrf	(onLEDS@valor+1)^0,c
  7198  001ED6                     
  7199                           ;Controlador.c: 238:     if (valor < 30) {
  7200  001ED6  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7201  001ED8  EF79  F00F         	goto	u2510
  7202  001EDC  5016               	movf	(onLEDS@valor+1)^0,w,c
  7203  001EDE  E107               	bnz	u2511
  7204  001EE0  0E1E               	movlw	30
  7205  001EE2  5C15               	subwf	onLEDS@valor^0,w,c
  7206  001EE4  B0D8               	btfsc	status,0,c
  7207  001EE6  EF77  F00F         	goto	u2511
  7208  001EEA  EF79  F00F         	goto	u2510
  7209  001EEE                     u2511:
  7210  001EEE  EF7E  F00F         	goto	l2903
  7211  001EF2                     u2510:
  7212  001EF2                     
  7213                           ;Controlador.c: 239:         PORTCbits.RC5 = 1;
  7214  001EF2  8A82               	bsf	130,5,c	;volatile
  7215                           
  7216                           ;Controlador.c: 240:         PORTCbits.RC4 = 0;
  7217  001EF4  9882               	bcf	130,4,c	;volatile
  7218                           
  7219                           ;Controlador.c: 241:         PORTAbits.RA5 = 0;
  7220  001EF6  9A80               	bcf	128,5,c	;volatile
  7221                           
  7222                           ;Controlador.c: 242:     } else if (valor >= 30 && valor <= 35) {
  7223  001EF8  EFCE  F00F         	goto	l360
  7224  001EFC                     l2903:
  7225  001EFC  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7226  001EFE  EF8A  F00F         	goto	u2521
  7227  001F02  5016               	movf	(onLEDS@valor+1)^0,w,c
  7228  001F04  E109               	bnz	u2520
  7229  001F06  0E1E               	movlw	30
  7230  001F08  5C15               	subwf	onLEDS@valor^0,w,c
  7231  001F0A  A0D8               	btfss	status,0,c
  7232  001F0C  EF8A  F00F         	goto	u2521
  7233  001F10  EF8C  F00F         	goto	u2520
  7234  001F14                     u2521:
  7235  001F14  EFCB  F00F         	goto	l351
  7236  001F18                     u2520:
  7237  001F18  BE16               	btfsc	(onLEDS@valor+1)^0,7,c
  7238  001F1A  EF9A  F00F         	goto	u2530
  7239  001F1E  5016               	movf	(onLEDS@valor+1)^0,w,c
  7240  001F20  E107               	bnz	u2531
  7241  001F22  0E24               	movlw	36
  7242  001F24  5C15               	subwf	onLEDS@valor^0,w,c
  7243  001F26  B0D8               	btfsc	status,0,c
  7244  001F28  EF98  F00F         	goto	u2531
  7245  001F2C  EF9A  F00F         	goto	u2530
  7246  001F30                     u2531:
  7247  001F30  EFCB  F00F         	goto	l351
  7248  001F34                     u2530:
  7249  001F34                     
  7250                           ;Controlador.c: 243:         PORTCbits.RC5 = 0;
  7251  001F34  9A82               	bcf	130,5,c	;volatile
  7252                           
  7253                           ;Controlador.c: 244:         PORTCbits.RC4 = 1;
  7254  001F36  8882               	bsf	130,4,c	;volatile
  7255                           
  7256                           ;Controlador.c: 245:         PORTAbits.RA5 = 0;
  7257  001F38  9A80               	bcf	128,5,c	;volatile
  7258  001F3A                     
  7259                           ;Controlador.c: 246:         char buffer_TX[] = "Temperatura Ideal\r";
  7260  001F3A  EE22  F0AE         	lfsr	2,onLEDS@F3582
  7261  001F3E  EE10  F001         	lfsr	1,onLEDS@buffer_TX
  7262  001F42  0E12               	movlw	18
  7263  001F44                     u2541:
  7264  001F44  CFDB FFE3          	movff	plusw2,plusw1
  7265  001F48  06E8               	decf	wreg,f,c
  7266  001F4A  E2FC               	bc	u2541
  7267  001F4C                     
  7268                           ;Controlador.c: 247:         for (int i = 0; i < 19; i++) {
  7269  001F4C  0E00               	movlw	0
  7270  001F4E  6E18               	movwf	(onLEDS@i+1)^0,c
  7271  001F50  0E00               	movlw	0
  7272  001F52  6E17               	movwf	onLEDS@i^0,c
  7273  001F54                     l356:
  7274                           
  7275                           ;Controlador.c: 249:             while (!TXSTAbits.TRMT) {
  7276  001F54  A2AC               	btfss	172,1,c	;volatile
  7277  001F56  EFAF  F00F         	goto	u2551
  7278  001F5A  EFB1  F00F         	goto	u2550
  7279  001F5E                     u2551:
  7280  001F5E  EFAA  F00F         	goto	l356
  7281  001F62                     u2550:
  7282  001F62                     
  7283                           ;Controlador.c: 252:             TXREG = buffer_TX[i];
  7284  001F62  0E01               	movlw	low onLEDS@buffer_TX
  7285  001F64  2417               	addwf	onLEDS@i^0,w,c
  7286  001F66  6ED9               	movwf	fsr2l,c
  7287  001F68  0E00               	movlw	high onLEDS@buffer_TX
  7288  001F6A  2018               	addwfc	(onLEDS@i+1)^0,w,c
  7289  001F6C  6EDA               	movwf	fsr2h,c
  7290  001F6E  50DF               	movf	indf2,w,c
  7291  001F70  6EAD               	movwf	173,c	;volatile
  7292  001F72                     
  7293                           ;Controlador.c: 253:         }
  7294  001F72  4A17               	infsnz	onLEDS@i^0,f,c
  7295  001F74  2A18               	incf	(onLEDS@i+1)^0,f,c
  7296  001F76  BE18               	btfsc	(onLEDS@i+1)^0,7,c
  7297  001F78  EFC7  F00F         	goto	u2561
  7298  001F7C  5018               	movf	(onLEDS@i+1)^0,w,c
  7299  001F7E  E109               	bnz	u2560
  7300  001F80  0E13               	movlw	19
  7301  001F82  5C17               	subwf	onLEDS@i^0,w,c
  7302  001F84  A0D8               	btfss	status,0,c
  7303  001F86  EFC7  F00F         	goto	u2561
  7304  001F8A  EFC9  F00F         	goto	u2560
  7305  001F8E                     u2561:
  7306  001F8E  EFAA  F00F         	goto	l356
  7307  001F92                     u2560:
  7308  001F92  EFCE  F00F         	goto	l360
  7309  001F96                     l351:
  7310                           
  7311                           ;Controlador.c: 255:         PORTCbits.RC5 = 0;
  7312  001F96  9A82               	bcf	130,5,c	;volatile
  7313                           
  7314                           ;Controlador.c: 256:         PORTCbits.RC4 = 0;
  7315  001F98  9882               	bcf	130,4,c	;volatile
  7316                           
  7317                           ;Controlador.c: 257:         PORTAbits.RA5 = 1;
  7318  001F9A  8A80               	bsf	128,5,c	;volatile
  7319  001F9C                     l360:
  7320  001F9C  0012               	return		;funcret
  7321  001F9E                     __end_of_onLEDS:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function _LCD_Custom_Char *****************
  7325 ;; Defined at:
  7326 ;;		line 49 in file "LCD_16x2.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  loc             1    wreg     unsigned char 
  7329 ;;  msg             2    7[COMRAM] PTR unsigned char 
  7330 ;;		 -> bombillaCar0(8), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  loc             1    9[COMRAM] unsigned char 
  7333 ;;  i               1   10[COMRAM] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7343 ;;      Params:         2       0       0       0       0       0       0       0       0
  7344 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7346 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    2
  7350 ;; This function calls:
  7351 ;;		_LCD_Char
  7352 ;;		_LCD_Command
  7353 ;; This function is called by:
  7354 ;;		_encenderBombillas
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text38
  7359  0025CC                     __ptext38:
  7360                           	callstack 0
  7361  0025CC                     _LCD_Custom_Char:
  7362                           	callstack 27
  7363                           
  7364                           ;incstack = 0
  7365                           ;LCD_Custom_Char@loc stored from wreg
  7366  0025CC  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  7367  0025CE                     
  7368                           ;LCD_16x2.c: 49: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_16x2.c: 
      +                          50: {;LCD_16x2.c: 51:     unsigned char i;;LCD_16x2.c: 52:     if(loc<8)
  7369  0025CE  0E08               	movlw	8
  7370  0025D0  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  7371  0025D2  EFED  F012         	goto	u2481
  7372  0025D6  EFEF  F012         	goto	u2480
  7373  0025DA                     u2481:
  7374  0025DA  EF09  F013         	goto	l27
  7375  0025DE                     u2480:
  7376  0025DE                     
  7377                           ;LCD_16x2.c: 53:     {;LCD_16x2.c: 54:      LCD_Command(0x40+(loc*8));
  7378  0025DE  500A               	movf	LCD_Custom_Char@loc^0,w,c
  7379  0025E0  0D08               	mullw	8
  7380  0025E2  50F3               	movf	243,w,c
  7381  0025E4  0F40               	addlw	64
  7382  0025E6  EC99  F014         	call	_LCD_Command
  7383  0025EA                     
  7384                           ;LCD_16x2.c: 55:        for(i=0;i<8;i++)
  7385  0025EA  0E00               	movlw	0
  7386  0025EC  6E0B               	movwf	LCD_Custom_Char@i^0,c
  7387  0025EE                     l2877:
  7388                           
  7389                           ;LCD_16x2.c: 56:            LCD_Char(msg[i]);
  7390  0025EE  500B               	movf	LCD_Custom_Char@i^0,w,c
  7391  0025F0  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  7392  0025F2  6ED9               	movwf	fsr2l,c
  7393  0025F4  0E00               	movlw	0
  7394  0025F6  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  7395  0025F8  6EDA               	movwf	fsr2h,c
  7396  0025FA  50DF               	movf	indf2,w,c
  7397  0025FC  ECA7  F014         	call	_LCD_Char
  7398  002600  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  7399  002602  0E07               	movlw	7
  7400  002604  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  7401  002606  EF07  F013         	goto	u2491
  7402  00260A  EF09  F013         	goto	u2490
  7403  00260E                     u2491:
  7404  00260E  EFF7  F012         	goto	l2877
  7405  002612                     u2490:
  7406  002612                     l27:
  7407  002612  0012               	return		;funcret
  7408  002614                     __end_of_LCD_Custom_Char:
  7409                           	callstack 0
  7410                           
  7411 ;; *************** function _LCD_Command *****************
  7412 ;; Defined at:
  7413 ;;		line 66 in file "LCD_16x2.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  cmd             1    wreg     unsigned char 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  cmd             1    6[COMRAM] unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, status,2, status,0, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7427 ;;      Params:         0       0       0       0       0       0       0       0       0
  7428 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7430 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7431 ;;Total ram usage:        1 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    1
  7434 ;; This function calls:
  7435 ;;		_MSdelay
  7436 ;; This function is called by:
  7437 ;;		_LCD_Init
  7438 ;;		_LCD_Custom_Char
  7439 ;;		_LCD_String_xy
  7440 ;;		_encenderBombillas
  7441 ;;		_LCD_Clear
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text39
  7446  002932                     __ptext39:
  7447                           	callstack 0
  7448  002932                     _LCD_Command:
  7449                           	callstack 27
  7450                           
  7451                           ;incstack = 0
  7452                           ;LCD_Command@cmd stored from wreg
  7453  002932  6E07               	movwf	LCD_Command@cmd^0,c
  7454  002934                     
  7455                           ;LCD_16x2.c: 66: void LCD_Command(char cmd );LCD_16x2.c: 67: {;LCD_16x2.c: 68:  LATD= cm
      +                          d;
  7456  002934  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  7457  002938                     
  7458                           ;LCD_16x2.c: 69:  LATC0 = 0;
  7459  002938  908B               	bcf	3979,0,c	;volatile
  7460  00293A                     
  7461                           ;LCD_16x2.c: 70:  LATC1 = 1;
  7462  00293A  828B               	bsf	3979,1,c	;volatile
  7463  00293C                     
  7464                           ;LCD_16x2.c: 71:  __nop();
  7465  00293C  F000               	nop	
  7466  00293E                     
  7467                           ;LCD_16x2.c: 72:  LATC1 = 0;
  7468  00293E  928B               	bcf	3979,1,c	;volatile
  7469  002940                     
  7470                           ;LCD_16x2.c: 73:     MSdelay(3);
  7471  002940  0E00               	movlw	0
  7472  002942  6E02               	movwf	(MSdelay@val+1)^0,c
  7473  002944  0E03               	movlw	3
  7474  002946  6E01               	movwf	MSdelay@val^0,c
  7475  002948  ECC1  F012         	call	_MSdelay	;wreg free
  7476  00294C  0012               	return		;funcret
  7477  00294E                     __end_of_LCD_Command:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function _LCD_Char *****************
  7481 ;; Defined at:
  7482 ;;		line 78 in file "LCD_16x2.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  dat             1    wreg     unsigned char 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  dat             1    6[COMRAM] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7496 ;;      Params:         0       0       0       0       0       0       0       0       0
  7497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7499 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7500 ;;Total ram usage:        1 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    1
  7503 ;; This function calls:
  7504 ;;		_MSdelay
  7505 ;; This function is called by:
  7506 ;;		_LCD_Custom_Char
  7507 ;;		_LCD_String
  7508 ;;		_imprimirTemHum
  7509 ;;		_encenderBombillas
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text40
  7514  00294E                     __ptext40:
  7515                           	callstack 0
  7516  00294E                     _LCD_Char:
  7517                           	callstack 26
  7518                           
  7519                           ;incstack = 0
  7520                           ;LCD_Char@dat stored from wreg
  7521  00294E  6E07               	movwf	LCD_Char@dat^0,c
  7522  002950                     
  7523                           ;LCD_16x2.c: 78: void LCD_Char(char dat);LCD_16x2.c: 79: {;LCD_16x2.c: 80:  LATD= dat;
  7524  002950  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  7525  002954                     
  7526                           ;LCD_16x2.c: 81:  LATC0 = 1;
  7527  002954  808B               	bsf	3979,0,c	;volatile
  7528  002956                     
  7529                           ;LCD_16x2.c: 82:  LATC1=1;
  7530  002956  828B               	bsf	3979,1,c	;volatile
  7531  002958                     
  7532                           ;LCD_16x2.c: 83:  __nop();
  7533  002958  F000               	nop	
  7534  00295A                     
  7535                           ;LCD_16x2.c: 84:  LATC1=0;
  7536  00295A  928B               	bcf	3979,1,c	;volatile
  7537  00295C                     
  7538                           ;LCD_16x2.c: 85:     MSdelay(1);
  7539  00295C  0E00               	movlw	0
  7540  00295E  6E02               	movwf	(MSdelay@val+1)^0,c
  7541  002960  0E01               	movlw	1
  7542  002962  6E01               	movwf	MSdelay@val^0,c
  7543  002964  ECC1  F012         	call	_MSdelay	;wreg free
  7544  002968  0012               	return		;funcret
  7545  00296A                     __end_of_LCD_Char:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _MSdelay *****************
  7549 ;; Defined at:
  7550 ;;		line 118 in file "LCD_16x2.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  val             2    0[COMRAM] unsigned int 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  j               2    4[COMRAM] unsigned int 
  7555 ;;  i               2    2[COMRAM] unsigned int 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7565 ;;      Params:         2       0       0       0       0       0       0       0       0
  7566 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7568 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7569 ;;Total ram usage:        6 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_LCD_Init
  7575 ;;		_LCD_Command
  7576 ;;		_LCD_Char
  7577 ;;		_main
  7578 ;;		_encenderBombillas
  7579 ;;		_mostrarFechaHora
  7580 ;;		_verificarHora
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text41
  7585  002582                     __ptext41:
  7586                           	callstack 0
  7587  002582                     _MSdelay:
  7588                           	callstack 29
  7589  002582                     
  7590                           ;LCD_16x2.c: 118: void MSdelay(unsigned int val);LCD_16x2.c: 119: {;LCD_16x2.c: 120:    
      +                            unsigned int i,j;;LCD_16x2.c: 121:         for(i=0;i<=val;i++)
  7591  002582  0E00               	movlw	0
  7592  002584  6E04               	movwf	(MSdelay@i+1)^0,c
  7593  002586  0E00               	movlw	0
  7594  002588  6E03               	movwf	MSdelay@i^0,c
  7595  00258A  EFDA  F012         	goto	l2573
  7596  00258E                     l2561:
  7597                           
  7598                           ;LCD_16x2.c: 122:             for(j=0;j<81;j++);
  7599  00258E  0E00               	movlw	0
  7600  002590  6E06               	movwf	(MSdelay@j+1)^0,c
  7601  002592  0E00               	movlw	0
  7602  002594  6E05               	movwf	MSdelay@j^0,c
  7603  002596                     l2567:
  7604  002596  4A05               	infsnz	MSdelay@j^0,f,c
  7605  002598  2A06               	incf	(MSdelay@j+1)^0,f,c
  7606  00259A  5006               	movf	(MSdelay@j+1)^0,w,c
  7607  00259C  E109               	bnz	u1930
  7608  00259E  0E51               	movlw	81
  7609  0025A0  5C05               	subwf	MSdelay@j^0,w,c
  7610  0025A2  A0D8               	btfss	status,0,c
  7611  0025A4  EFD6  F012         	goto	u1931
  7612  0025A8  EFD8  F012         	goto	u1930
  7613  0025AC                     u1931:
  7614  0025AC  EFCB  F012         	goto	l2567
  7615  0025B0                     u1930:
  7616  0025B0  4A03               	infsnz	MSdelay@i^0,f,c
  7617  0025B2  2A04               	incf	(MSdelay@i+1)^0,f,c
  7618  0025B4                     l2573:
  7619  0025B4  5003               	movf	MSdelay@i^0,w,c
  7620  0025B6  5C01               	subwf	MSdelay@val^0,w,c
  7621  0025B8  5004               	movf	(MSdelay@i+1)^0,w,c
  7622  0025BA  5802               	subwfb	(MSdelay@val+1)^0,w,c
  7623  0025BC  B0D8               	btfsc	status,0,c
  7624  0025BE  EFE3  F012         	goto	u1941
  7625  0025C2  EFE5  F012         	goto	u1940
  7626  0025C6                     u1941:
  7627  0025C6  EFC7  F012         	goto	l2561
  7628  0025CA                     u1940:
  7629  0025CA  0012               	return		;funcret
  7630  0025CC                     __end_of_MSdelay:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _I2C_Init *****************
  7634 ;; Defined at:
  7635 ;;		line 76 in file "./I2C_Master_File.h"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, status,2
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_main
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text42
  7663  00296A                     __ptext42:
  7664                           	callstack 0
  7665  00296A                     _I2C_Init:
  7666                           	callstack 30
  7667  00296A                     
  7668                           ;./I2C_Master_File.h: 78:     TRISB0=1;
  7669  00296A  8093               	bsf	3987,0,c	;volatile
  7670                           
  7671                           ;./I2C_Master_File.h: 79:  TRISB1=1;
  7672  00296C  8293               	bsf	3987,1,c	;volatile
  7673  00296E                     
  7674                           ;./I2C_Master_File.h: 80:  SSPSTAT=80;
  7675  00296E  0E50               	movlw	80
  7676  002970  6EC7               	movwf	199,c	;volatile
  7677                           
  7678                           ;./I2C_Master_File.h: 81:     SSPCON1=0x28;
  7679  002972  0E28               	movlw	40
  7680  002974  6EC6               	movwf	198,c	;volatile
  7681                           
  7682                           ;./I2C_Master_File.h: 83:  SSPCON2=0;
  7683  002976  0E00               	movlw	0
  7684  002978  6EC5               	movwf	197,c	;volatile
  7685                           
  7686                           ;./I2C_Master_File.h: 84:     SSPADD=((8000000/(4*100000))-1);
  7687  00297A  0E13               	movlw	19
  7688  00297C  6EC8               	movwf	200,c	;volatile
  7689  00297E                     
  7690                           ;./I2C_Master_File.h: 85:     SSPIE=1;
  7691  00297E  869D               	bsf	3997,3,c	;volatile
  7692  002980                     
  7693                           ;./I2C_Master_File.h: 86:     SSPIF=0;
  7694  002980  969E               	bcf	3998,3,c	;volatile
  7695  002982  0012               	return		;funcret
  7696  002984                     __end_of_I2C_Init:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _DHT11_Start *****************
  7700 ;; Defined at:
  7701 ;;		line 202 in file "Controlador.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7717 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7718 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7719 ;;Total ram usage:        1 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text43
  7729  002912                     __ptext43:
  7730                           	callstack 0
  7731  002912                     _DHT11_Start:
  7732                           	callstack 30
  7733  002912                     
  7734                           ;Controlador.c: 203:     TRISCbits.RC2 = 0;
  7735  002912  9494               	bcf	148,2,c	;volatile
  7736                           
  7737                           ;Controlador.c: 204:     LATC2 = 0;
  7738  002914  948B               	bcf	3979,2,c	;volatile
  7739  002916                     
  7740                           ;Controlador.c: 205:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  7741  002916  0E2F               	movlw	47
  7742  002918  6E01               	movwf	??_DHT11_Start^0,c
  7743  00291A  0EC0               	movlw	192
  7744  00291C                     u3197:
  7745  00291C  2EE8               	decfsz	wreg,f,c
  7746  00291E  D7FE               	bra	u3197
  7747  002920  2E01               	decfsz	??_DHT11_Start^0,f,c
  7748  002922  D7FC               	bra	u3197
  7749  002924                     
  7750                           ;Controlador.c: 206:     LATC2 = 1;
  7751  002924  848B               	bsf	3979,2,c	;volatile
  7752                           
  7753                           ;Controlador.c: 207:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  7754  002926  0E0D               	movlw	13
  7755  002928                     u3207:
  7756  002928  2EE8               	decfsz	wreg,f,c
  7757  00292A  D7FE               	bra	u3207
  7758  00292C  F000               	nop	
  7759  00292E                     
  7760                           ;Controlador.c: 208:     TRISCbits.RC2 = 1;
  7761  00292E  8494               	bsf	148,2,c	;volatile
  7762  002930  0012               	return		;funcret
  7763  002932                     __end_of_DHT11_Start:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function _DHT11_ReadData *****************
  7767 ;; Defined at:
  7768 ;;		line 187 in file "Controlador.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  data            1    1[COMRAM] unsigned char 
  7773 ;;  i               1    0[COMRAM] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      unsigned char 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0
  7784 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7786 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7787 ;;Total ram usage:        2 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_main
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text44
  7797  00247A                     __ptext44:
  7798                           	callstack 0
  7799  00247A                     _DHT11_ReadData:
  7800                           	callstack 30
  7801  00247A                     
  7802                           ;Controlador.c: 188:     char i, data = 0;
  7803  00247A  0E00               	movlw	0
  7804  00247C  6E02               	movwf	DHT11_ReadData@data^0,c
  7805                           
  7806                           ;Controlador.c: 189:     for (i = 0; i < 8; i++) {
  7807  00247E  0E00               	movlw	0
  7808  002480  6E01               	movwf	DHT11_ReadData@i^0,c
  7809  002482                     l313:
  7810  002482  A482               	btfss	130,2,c	;volatile
  7811  002484  EF46  F012         	goto	u2621
  7812  002488  EF48  F012         	goto	u2620
  7813  00248C                     u2621:
  7814  00248C  EF41  F012         	goto	l313
  7815  002490                     u2620:
  7816  002490                     
  7817                           ;Controlador.c: 191:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  7818  002490  0E14               	movlw	20
  7819  002492                     u3217:
  7820  002492  2EE8               	decfsz	wreg,f,c
  7821  002494  D7FE               	bra	u3217
  7822  002496                     
  7823                           ;Controlador.c: 192:         if (PORTCbits.RC2 & 1)
  7824  002496  A482               	btfss	130,2,c	;volatile
  7825  002498  EF50  F012         	goto	u2631
  7826  00249C  EF52  F012         	goto	u2630
  7827  0024A0                     u2631:
  7828  0024A0  EF56  F012         	goto	l2999
  7829  0024A4                     u2630:
  7830  0024A4                     
  7831                           ;Controlador.c: 193:             data = ((data << 1) | 1);
  7832  0024A4  80D8               	bsf	status,0,c
  7833  0024A6  3602               	rlcf	DHT11_ReadData@data^0,f,c
  7834  0024A8  EF59  F012         	goto	l318
  7835  0024AC                     l2999:
  7836                           
  7837                           ;Controlador.c: 195:             data = (data << 1);
  7838  0024AC  5002               	movf	DHT11_ReadData@data^0,w,c
  7839  0024AE  2402               	addwf	DHT11_ReadData@data^0,w,c
  7840  0024B0  6E02               	movwf	DHT11_ReadData@data^0,c
  7841  0024B2                     l318:
  7842  0024B2  B482               	btfsc	130,2,c	;volatile
  7843  0024B4  EF5E  F012         	goto	u2641
  7844  0024B8  EF60  F012         	goto	u2640
  7845  0024BC                     u2641:
  7846  0024BC  EF59  F012         	goto	l318
  7847  0024C0                     u2640:
  7848  0024C0                     
  7849                           ;Controlador.c: 198:     }
  7850  0024C0  2A01               	incf	DHT11_ReadData@i^0,f,c
  7851  0024C2  0E07               	movlw	7
  7852  0024C4  6401               	cpfsgt	DHT11_ReadData@i^0,c
  7853  0024C6  EF67  F012         	goto	u2651
  7854  0024CA  EF69  F012         	goto	u2650
  7855  0024CE                     u2651:
  7856  0024CE  EF41  F012         	goto	l313
  7857  0024D2                     u2650:
  7858  0024D2                     
  7859                           ;Controlador.c: 199:     return data;
  7860  0024D2  5002               	movf	DHT11_ReadData@data^0,w,c
  7861  0024D4  0012               	return		;funcret
  7862  0024D6                     __end_of_DHT11_ReadData:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function _DHT11_CheckResponse *****************
  7866 ;; Defined at:
  7867 ;;		line 212 in file "Controlador.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;		None
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      void 
  7874 ;; Registers used:
  7875 ;;		None
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         0       0       0       0       0       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:        0 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_main
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text45
  7895  0028C4                     __ptext45:
  7896                           	callstack 0
  7897  0028C4                     _DHT11_CheckResponse:
  7898                           	callstack 30
  7899  0028C4                     l327:
  7900  0028C4  B482               	btfsc	130,2,c	;volatile
  7901  0028C6  EF67  F014         	goto	u2591
  7902  0028CA  EF69  F014         	goto	u2590
  7903  0028CE                     u2591:
  7904  0028CE  EF62  F014         	goto	l327
  7905  0028D2                     u2590:
  7906  0028D2                     l330:
  7907  0028D2  A482               	btfss	130,2,c	;volatile
  7908  0028D4  EF6E  F014         	goto	u2601
  7909  0028D8  EF70  F014         	goto	u2600
  7910  0028DC                     u2601:
  7911  0028DC  EF69  F014         	goto	l330
  7912  0028E0                     u2600:
  7913  0028E0                     l333:
  7914  0028E0  B482               	btfsc	130,2,c	;volatile
  7915  0028E2  EF75  F014         	goto	u2611
  7916  0028E6  EF77  F014         	goto	u2610
  7917  0028EA                     u2611:
  7918  0028EA  EF70  F014         	goto	l333
  7919  0028EE                     u2610:
  7920  0028EE  0012               	return		;funcret
  7921  0028F0                     __end_of_DHT11_CheckResponse:
  7922                           	callstack 0
  7923                           
  7924                           	psect	rparam
  7925  0000                     
  7926                           	psect	idloc
  7927                           
  7928                           ;Config register IDLOC0 @ 0x200000
  7929                           ;	unspecified, using default values
  7930  200000                     	org	2097152
  7931  200000  FF                 	db	255
  7932                           
  7933                           ;Config register IDLOC1 @ 0x200001
  7934                           ;	unspecified, using default values
  7935  200001                     	org	2097153
  7936  200001  FF                 	db	255
  7937                           
  7938                           ;Config register IDLOC2 @ 0x200002
  7939                           ;	unspecified, using default values
  7940  200002                     	org	2097154
  7941  200002  FF                 	db	255
  7942                           
  7943                           ;Config register IDLOC3 @ 0x200003
  7944                           ;	unspecified, using default values
  7945  200003                     	org	2097155
  7946  200003  FF                 	db	255
  7947                           
  7948                           ;Config register IDLOC4 @ 0x200004
  7949                           ;	unspecified, using default values
  7950  200004                     	org	2097156
  7951  200004  FF                 	db	255
  7952                           
  7953                           ;Config register IDLOC5 @ 0x200005
  7954                           ;	unspecified, using default values
  7955  200005                     	org	2097157
  7956  200005  FF                 	db	255
  7957                           
  7958                           ;Config register IDLOC6 @ 0x200006
  7959                           ;	unspecified, using default values
  7960  200006                     	org	2097158
  7961  200006  FF                 	db	255
  7962                           
  7963                           ;Config register IDLOC7 @ 0x200007
  7964                           ;	unspecified, using default values
  7965  200007                     	org	2097159
  7966  200007  FF                 	db	255
  7967                           
  7968                           	psect	config
  7969                           
  7970                           ;Config register CONFIG1L @ 0x300000
  7971                           ;	PLL Prescaler Selection bits
  7972                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7973                           ;	System Clock Postscaler Selection bits
  7974                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7975                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7976                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7977  300000                     	org	3145728
  7978  300000  00                 	db	0
  7979                           
  7980                           ;Config register CONFIG1H @ 0x300001
  7981                           ;	Oscillator Selection bits
  7982                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7983                           ;	Fail-Safe Clock Monitor Enable bit
  7984                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7985                           ;	Internal/External Oscillator Switchover bit
  7986                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7987  300001                     	org	3145729
  7988  300001  09                 	db	9
  7989                           
  7990                           ;Config register CONFIG2L @ 0x300002
  7991                           ;	Power-up Timer Enable bit
  7992                           ;	PWRT = OFF, PWRT disabled
  7993                           ;	Brown-out Reset Enable bits
  7994                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7995                           ;	Brown-out Reset Voltage bits
  7996                           ;	BORV = 3, Minimum setting 2.05V
  7997                           ;	USB Voltage Regulator Enable bit
  7998                           ;	VREGEN = OFF, USB voltage regulator disabled
  7999  300002                     	org	3145730
  8000  300002  1F                 	db	31
  8001                           
  8002                           ;Config register CONFIG2H @ 0x300003
  8003                           ;	Watchdog Timer Enable bit
  8004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8005                           ;	Watchdog Timer Postscale Select bits
  8006                           ;	WDTPS = 32768, 1:32768
  8007  300003                     	org	3145731
  8008  300003  1E                 	db	30
  8009                           
  8010                           ; Padding undefined space
  8011  300004                     	org	3145732
  8012  300004  FF                 	db	255
  8013                           
  8014                           ;Config register CONFIG3H @ 0x300005
  8015                           ;	CCP2 MUX bit
  8016                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8017                           ;	PORTB A/D Enable bit
  8018                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8019                           ;	Low-Power Timer 1 Oscillator Enable bit
  8020                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8021                           ;	MCLR Pin Enable bit
  8022                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8023  300005                     	org	3145733
  8024  300005  00                 	db	0
  8025                           
  8026                           ;Config register CONFIG4L @ 0x300006
  8027                           ;	Stack Full/Underflow Reset Enable bit
  8028                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8029                           ;	Single-Supply ICSP Enable bit
  8030                           ;	LVP = OFF, Single-Supply ICSP disabled
  8031                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8032                           ;	ICPRT = OFF, ICPORT disabled
  8033                           ;	Extended Instruction Set Enable bit
  8034                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8035                           ;	Background Debugger Enable bit
  8036                           ;	DEBUG = 0x1, unprogrammed default
  8037  300006                     	org	3145734
  8038  300006  81                 	db	129
  8039                           
  8040                           ; Padding undefined space
  8041  300007                     	org	3145735
  8042  300007  FF                 	db	255
  8043                           
  8044                           ;Config register CONFIG5L @ 0x300008
  8045                           ;	Code Protection bit
  8046                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8047                           ;	Code Protection bit
  8048                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8049                           ;	Code Protection bit
  8050                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8051                           ;	Code Protection bit
  8052                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8053  300008                     	org	3145736
  8054  300008  0F                 	db	15
  8055                           
  8056                           ;Config register CONFIG5H @ 0x300009
  8057                           ;	Boot Block Code Protection bit
  8058                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8059                           ;	Data EEPROM Code Protection bit
  8060                           ;	CPD = OFF, Data EEPROM is not code-protected
  8061  300009                     	org	3145737
  8062  300009  C0                 	db	192
  8063                           
  8064                           ;Config register CONFIG6L @ 0x30000A
  8065                           ;	Write Protection bit
  8066                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8067                           ;	Write Protection bit
  8068                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8069                           ;	Write Protection bit
  8070                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8071                           ;	Write Protection bit
  8072                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8073  30000A                     	org	3145738
  8074  30000A  0F                 	db	15
  8075                           
  8076                           ;Config register CONFIG6H @ 0x30000B
  8077                           ;	Configuration Register Write Protection bit
  8078                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8079                           ;	Boot Block Write Protection bit
  8080                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8081                           ;	Data EEPROM Write Protection bit
  8082                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8083  30000B                     	org	3145739
  8084  30000B  E0                 	db	224
  8085                           
  8086                           ;Config register CONFIG7L @ 0x30000C
  8087                           ;	Table Read Protection bit
  8088                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8089                           ;	Table Read Protection bit
  8090                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8091                           ;	Table Read Protection bit
  8092                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8093                           ;	Table Read Protection bit
  8094                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8095  30000C                     	org	3145740
  8096  30000C  0F                 	db	15
  8097                           
  8098                           ;Config register CONFIG7H @ 0x30000D
  8099                           ;	Boot Block Table Read Protection bit
  8100                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8101  30000D                     	org	3145741
  8102  30000D  40                 	db	64
  8103                           tosu	equ	0xFFF
  8104                           tosh	equ	0xFFE
  8105                           tosl	equ	0xFFD
  8106                           stkptr	equ	0xFFC
  8107                           pclatu	equ	0xFFB
  8108                           pclath	equ	0xFFA
  8109                           pcl	equ	0xFF9
  8110                           tblptru	equ	0xFF8
  8111                           tblptrh	equ	0xFF7
  8112                           tblptrl	equ	0xFF6
  8113                           tablat	equ	0xFF5
  8114                           prodh	equ	0xFF4
  8115                           prodl	equ	0xFF3
  8116                           indf0	equ	0xFEF
  8117                           postinc0	equ	0xFEE
  8118                           postdec0	equ	0xFED
  8119                           preinc0	equ	0xFEC
  8120                           plusw0	equ	0xFEB
  8121                           fsr0h	equ	0xFEA
  8122                           fsr0l	equ	0xFE9
  8123                           wreg	equ	0xFE8
  8124                           indf1	equ	0xFE7
  8125                           postinc1	equ	0xFE6
  8126                           postdec1	equ	0xFE5
  8127                           preinc1	equ	0xFE4
  8128                           plusw1	equ	0xFE3
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           bsr	equ	0xFE0
  8132                           indf2	equ	0xFDF
  8133                           postinc2	equ	0xFDE
  8134                           postdec2	equ	0xFDD
  8135                           preinc2	equ	0xFDC
  8136                           plusw2	equ	0xFDB
  8137                           fsr2h	equ	0xFDA
  8138                           fsr2l	equ	0xFD9
  8139                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        326
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    130     160
    BANK1           256    167     256
    BANK2           256      0     240
    BANK3           256      0     101
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1279_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), vec_value(BANK1[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[3]), STR_27(CODE[3]), date(BANK1[10]), hours(BANK1[10]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> vec_value(BANK1[10]), STR_2(CODE[7]), STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), 
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[2]), STR_7(CODE[2]), vec_value(BANK1[10]), 
		 -> STR_2(CODE[7]), STR_1(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> bombillaCar0(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verificarHora->_LCD_String_xy
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _encenderBombillas->_onLEDS
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _main in BANK0

    _main->_mostrarFechaHora
    _mostrarFechaHora->_sprintf
    _imprimirTemHum->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    _main->_encenderBombillas

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   70111
                                             52 BANK0     78    78      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                  _encenderBombillas
                     _imprimirTemHum
                   _mostrarFechaHora
                       _offBombillas
                            _offLEDS
                      _verificarHora
 ---------------------------------------------------------------------------------
 (1) _verificarHora                                        0     0      0    6833
                           _I2C_Stop
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
 ---------------------------------------------------------------------------------
 (1) _offLEDS                                             17    17      0      92
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _offBombillas                                        23    23      0      92
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _mostrarFechaHora                                    30    30      0   24831
                                             22 BANK0     30    30      0
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2182
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _imprimirTemHum                                       0     0      0   22225
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   13184
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5576
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2363
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _encenderBombillas                                  167   167      0    6901
                                              0 BANK1    167   167      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                            _MSdelay
                             _onLEDS
 ---------------------------------------------------------------------------------
 (2) _onLEDS                                              24    24      0     181
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    2794
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1102
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2    1080
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _encenderBombillas
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
     _LCD_Custom_Char
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
     _MSdelay
     _onLEDS
   _imprimirTemHum
     _LCD_Char
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _mostrarFechaHora
     _I2C_Stop
     _LCD_Init
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _offBombillas
   _offLEDS
   _verificarHora
     _I2C_Stop
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      65      11       39.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A7     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     354      20        0.0%
DATA                 0      0     354       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 22:48:50 2020

                                     _j 00F8                      __size_of_I2C_Ready 0012  
                    __size_of_I2C_Start 002E                         onLEDS@buffer_TX 0001  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l21 28C2  
                                    l33 294C                                      l42 2478  
                                    l27 2612                                      l36 2968  
                                    l55 25CA                                      l47 271C  
                           ?_LCD_String 0008                         _LCD_Custom_Char 25CC  
RTC_Read_Calendar@read_calendar_address 0004                          ?_verificarHora 0001  
                                   l201 2894                                     l210 2996  
                                   l221 29BE                                     l214 2910  
                                   l206 2986                                     l303 19DA  
                                   l224 299C                                     l208 2994  
                                   l321 24D4                                     l313 2482  
                                   l330 28D2                                     l170 2982  
                                   l218 29B0                                     l162 275E  
                                   l227 29AA                                     l324 2930  
                                   l164 276C                                     l333 28E0  
                                   l173 29C0                                     l318 24B2  
                                   l166 278C                                     l190 283E  
                                   l327 28C4                                     l351 1F96  
                                   l175 29CE                                     l167 2792  
                                   l343 2320                                     l336 28EE  
                                   l360 1F9C                                     l432 0CAE  
                                   l408 0ADA                                     l176 29D0  
                                   l192 284C                                     l194 2866  
                                   l370 229C                                     l346 235E  
                                   l419 0BBC                                     l435 2658  
                                   l356 1F54                                     l428 0C4A  
                                   l292 18EE                                     l381 08E8  
                                   l373 1DFC                                     l197 286C  
                                   l390 098E                                     l438 252E  
                                   l462 0FD4                                     l199 287A  
                                   l367 225E                                     l459 0F94  
                                   l468 23BC                                     l399 0A34  
                                   l585 1BB4                                     l598 1D18  
                                   _PEN 007E2A                                     _Day 00EE  
                                   _abs 269E                         __end_of_I2C_Ack 29C0  
                                   _pad 2068                                     _min 00F2  
                                   _sec 00F4                                     wreg 000FE8  
                           LCD_Char@dat 0007                                    ?_abs 0013  
                                  l1220 12FA                                    l1213 12B8  
                                  l1302 29E4                                    l3001 24C0  
                                  l1313 2412                                    l1241 152E  
                                  l1218 12F2                                    l1250 182A  
                                  l3003 24C2                                    l1243 1592  
                                  l1227 1390                                    l3011 1D36  
                                  l1308 2838                                    l1324 27CA  
                                  l1260 22FE                                    l3005 24D2  
                                  l1149 2580                                    l3021 1DA4  
                                  l3013 1D48                                    l1182 20AE  
                                  l1270 2758                                    l1318 241A  
                                  l3111 0A80                                    l3103 0A42  
                                  l3031 1DEA                                    l3023 1DC0  
                                  l3015 1D70                                    l1264 26D4  
                                  l3201 0C9A                                    l3121 0AC0  
                                  l3113 0A88                                    l3105 0A54  
                                  l3041 08CC                                    l3033 0858  
                                  l2401 1FB0                                    l1185 20F0  
                                  l1193 1076                                    l3025 1DCC  
                                  l3017 1D76                                    l3009 1D1A  
                                  l3131 0AFA                                    l3123 0AD2  
                                  l3107 0A58                                    l3115 0A96  
                                  l3203 0CA2                                    l3051 08F6  
                                  l3043 08CE                                    l3035 089E  
                                  l1267 26DC                                    l1291 2066  
                                  l2403 1FC2                                    l1187 212C  
                                  l1195 107E                                    l1259 22F6  
                                  l3027 1DD2                                    l3019 1D92  
                                  l3211 0CCA                                    l1276 2802  
                                  l3133 0AFE                                    l3117 0AA8  
                                  l3141 0B3C                                    l3109 0A74  
                                  l3061 093C                                    l3053 0908  
                                  l3045 08E0                                    l3037 08A6  
                                  l2501 1C90                                    l2405 1FCC  
                                  l2413 265A                                    l2421 2804  
                                  l3029 1DD8                                    l3221 0D1A  
                                  l3213 0CDA                                    l3205 0CB0  
                                  l3301 2244                                    l3143 0B4E  
                                  l3135 0B1A                                    l3119 0ABE  
                                  l3071 0986                                    l3055 090C  
                                  l3039 08B8                                    l3063 094A  
                                  l2511 1CF8                                    l2503 1CB0  
                                  l2407 1FEA                                    l2415 2666  
                                  l2423 2810                                    l2431 2794  
                                  l3231 0D90                                    l3223 0D36  
                                  l3215 0CE8                                    l3207 0CBA  
                                  l3311 227C                                    l3303 2256  
                                  l3161 0B92                                    l3145 0B64  
                                  l3137 0B26                                    l3129 0AE8  
                                  l3081 09B2                                    l3065 095C  
                                  l3057 0928                                    l2441 1A60  
                                  l2505 1CC2                                    l2409 2020  
                                  l2417 2678                                    l2425 2814  
                                  l2521 209A                                    l2601 10BE  
                                  l3241 0E00                                    l3225 0D54  
                                  l3217 0CFE                                    l3233 0DA0  
                                  l3209 0CBE                                    l3313 2280  
                                  l3401 18FC                                    l3171 0BCA  
                                  l3163 0BA2                                    l3155 0B7A  
                                  l3147 0B66                                    l3139 0B2E  
                                  l3091 0A02                                    l3083 09CE  
                                  l3067 0972                                    l3059 0934  
                                  l2451 1AA2                                    l2443 1A64  
                                  l2435 1A2E                                    l2507 1CC8  
                                  l1299 269C                                    l2419 267C  
                                  l2427 282C                                    l2531 2100  
                                  l2523 20A6                                    l2515 2068  
                                  l2603 10C4                                    l2611 11B6  
                                  l3251 0E20                                    l3235 0DA8  
                                  l3227 0D72                                    l3219 0D10  
                                  l3315 2300                                    l3411 1942  
                                  l3403 190E                                    l3173 0BDC  
                                  l3165 0BB4                                    l3157 0B86  
                                  l3149 0B74                                    l3181 0C14  
                                  l3093 0A18                                    l3085 09DA  
                                  l3077 099C                                    l3069 0974  
                                  l2461 1AFC                                    l2453 1AC0  
                                  l2445 1A72                                    l2437 1A32  
                                  l2509 1CD8                                    l2533 2114  
                                  l2525 20BA                                    l2517 2078  
                                  l2613 11D0                                    l2621 1232  
                                  l2605 1146                                    l2541 27CC  
                                  l2701 156A                                    l3261 0E98  
                                  l3253 0E3E                                    l3237 0DC4  
                                  l3229 0D84                                    l3309 226C  
                                  l3325 232E                                    l3317 2306  
                                  l3421 196E                                    l3405 1912  
                                  l3341 182C                                    l2711 2958  
                                  l3183 0C26                                    l3175 0BE0  
                                  l3159 0B8E                                    l3095 0A1A  
                                  l3087 09E2                                    l3079 09AE  
                                  l2463 1B2A                                    l2455 1AC8  
                                  l2471 1B64                                    l2447 1A92  
                                  l2439 1A40                                    l2527 20CE  
                                  l2519 208C                                    l2631 1278  
                                  l2623 1244                                    l2615 11EE  
                                  l2607 114C                                    l3271 0EE8  
                                  l3263 0EA8                                    l3255 0E5C  
                                  l3239 0DE2                                    l3247 0E16  
                                  l3327 233E                                    l3319 2318  
                                  l3423 1978                                    l3415 194A  
                                  l3407 192E                                    l3431 199A  
                                  l3351 1838                                    l3343 1830  
                                  l2561 258E                                    l2713 295A  
                                  l2705 2950                                    l2801 293E  
                                  l3193 0C58                                    l3185 0C2E  
                                  l3177 0BFC                                    l3097 0A2C  
                                  l3089 09F0                                    l2473 1B74  
                                  l2465 1B4A                                    l2457 1ADC  
                                  l2449 1A96                                    l2481 1BBA  
                                  l2537 269E                                    l2529 20D2  
                                  l2633 1280                                    l2625 1254  
                                  l2617 1208                                    l2609 1152  
                                  l2545 271E                                    l2553 23F4  
                                  l2641 12CA                                    l2721 28F2  
                                  l3273 0EF8                                    l3265 0EB8  
                                  l3281 0F78                                    l3257 0E7A  
                                  l3249 0E1C                                    l3329 2342  
                                  l3441 19E8                                    l3433 19BE  
                                  l3425 1982                                    l3417 195E  
                                  l3409 193E                                    l3361 1842  
                                  l3353 183A                                    l3345 1832  
                                  l2571 25B0                                    l2715 295C  
                                  l2707 2954                                    l2803 2940  
                                  l3195 0C6A                                    l3187 0C40  
                                  l3179 0C08                                    l2811 2448  
                                  l2475 1B94                                    l2467 1B4C  
                                  l2459 1AEA                                    l2491 1C1A  
                                  l2483 1BC8                                    l2539 26B8  
                                  l2627 125A                                    l2635 1290  
                                  l2619 1222                                    l2555 2406  
                                  l2651 1338                                    l2643 12CC  
                                  l2723 28F6                                    l3291 0FB4  
                                  l3283 0F8A                                    l3275 0F08  
                                  l3267 0EC8                                    l3259 0E8C  
                                  l3443 19FA                                    l3435 19D0  
                                  l3427 1986                                    l3419 1962  
                                  l3371 185C                                    l3363 1844  
                                  l3355 183C                                    l3347 1834  
                                  l2573 25B4                                    l2709 2956  
                                  l2901 1EF2                                    l3197 0C6E  
                                  l2805 241C                                    l2469 1B5E  
                                  l2493 1C38                                    l2485 1BE8  
                                  l2629 126C                                    l2581 101E  
                                  l2549 23BE                                    l2661 1374  
                                  l2653 1340                                    l2645 12E6  
                                  l2741 15C6                                    l2717 29AC  
                                  l2821 2790                                    l2813 275C  
                                  l2733 290E                                    l2725 28FA  
                                  l3293 0FB8                                    l3269 0ED8  
                                  l3445 19FE                                    l3429 198A  
                                  l3381 18AA                                    l3373 1868  
                                  l3365 1846                                    l3357 183E  
                                  l3349 1836                                    l2567 2596  
                                  l2559 2582                                    l2911 1F4C  
                                  l2903 1EFC                                    l3199 0C8A  
                                  l2807 2420                                    l2495 1C40  
                                  l2487 1BEC                                    l2479 1BB6  
                                  l2399 1F9E                                    l2591 1086  
                                  l2583 103E                                    l2663 1384  
                                  l2655 134A                                    l2647 1310  
                                  l2639 12BA                                    l2751 166C  
                                  l2743 15D8                                    l2719 2998  
                                  l2575 29C0                                    l2815 2770  
                                  l2727 2908                                    l2831 2860  
                                  l3279 0F18                                    l3447 1A1A  
                                  l3391 18CE                                    l3383 18AE  
                                  l3375 186C                                    l3367 1854  
                                  l3359 1840                                    l2569 259A  
                                  l2921 1F76                                    l2905 1F18  
                                  l2809 2444                                    l2497 1C54  
                                  l2489 1BFA                                    l2593 1098  
                                  l2585 104E                                    l2577 0FD6  
                                  l2681 144C                                    l2673 1410  
                                  l2657 1350                                    l2649 1318  
                                  l2761 1702                                    l2745 15DC  
                                  l2737 1594                                    l2817 2780  
                                  l2841 2894                                    l2825 2984  
                                  l3289 0FA2                                    l3393 18D2  
                                  l3385 18B6                                    l3377 188A  
                                  l3369 1858                                    l2907 1F34  
                                  l2499 1C62                                    l2595 10A6  
                                  l2587 1050                                    l2579 0FF6  
                                  l2691 1504                                    l2683 1452  
                                  l2675 1422                                    l2667 13C4  
                                  l2659 1358                                    l2771 17AC  
                                  l2763 1710                                    l2755 16A4  
                                  l2747 1600                                    l2739 15B8  
                                  l2851 22B4                                    l2931 256E  
                                  l2923 2530                                    l2819 2788  
                                  l2835 286A                                    l2827 283C  
                                  l3299 223A                                    l3395 18E4  
                                  l3387 18BE                                    l3379 18A6  
                                  l2917 1F62                                    l2909 1F3A  
                                  l2597 10AC                                    l2589 106A  
                                  l2693 151E                                    l2669 13D6  
                                  l2677 1436                                    l2685 14B0  
                                  l2781 17E8                                    l2773 17BA  
                                  l2765 174C                                    l2757 16C8  
                                  l2749 1624                                    l2853 22DA  
                                  l2925 2542                                    l2861 28B0  
                                  l2941 2648                                    l3469 0F3A  
                                  l3389 18C6                                    ?_pad 0011  
                                  l2871 25EA                                    l2919 1F72  
                                  l2599 10B4                                    l2695 153E  
                                  l2687 14CC                                    l2679 1446  
                                  l2775 17CE                                    l2759 16EC  
                                  l2847 229E                                    l2927 254A  
                                  l2863 28B6                                    l2855 2896  
                                  l2839 288E                                    l2951 251A  
                                  l2943 24D8                                    l2935 2616  
                                  l2961 2980                                    l2793 2934  
                                  l2881 2602                                    l2697 1544  
                                  l2689 14EA                                    l2769 1788  
                                  l2785 17F4                                    l2849 22A6  
                                  l2929 2552                                    l2865 28BC  
                                  l2857 289E                                    l2953 252A  
                                  l2945 24EA                                    l2937 2628  
                                  l2955 296A                                    l2795 2938  
                                  l2867 25CE                                    l2891 2702  
                                  l2883 26E0                                    l2699 1554  
                                  l2787 1818                                    l2779 17DA  
                                  l2859 28AA                                    l2947 24FA  
                                  l2939 2638                                    l2971 2386  
                                  l2963 2360                                    l2981 2924  
                                  l2957 296E                                    l2797 293A  
                                  l2877 25EE                                    l2869 25DE  
                                  l2893 270A                                    l2885 26E0  
                                  l2949 250A                                    l2973 2394  
                                  l2965 2366                                    l2983 292E  
                                  l2959 297E                                    l2799 293C  
                                  l2879 2600                                    l2895 2710  
                                  l2887 26F0                                    l2975 23AA  
                                  l2967 236A                                    l2985 28C4  
                                  l2993 2490                                    l2977 2912  
                                  l2897 1ED0                                    l2889 26F8  
                                  l2969 2376                                    l2995 2496  
                                  l2987 247A                                    l2979 2916  
                                  l2899 1ED6                                    l2997 24A4  
                                  l2999 24AC                                    STR_1 0801  
                                  STR_2 081D                                    STR_3 082E  
                                  STR_4 0824                                    STR_5 082E  
                                  STR_6 082D                                    STR_7 0853  
                                  STR_8 0855                                    STR_9 0850  
                                  u2000 106A                                    u2001 1066  
                                  u2010 1098                                    u2011 1094  
                                  u2100 126C                                    u2020 10A6  
                                  u2101 1268                                    u2021 10A2  
                                  u2030 11D0                                    u2110 12CA  
                                  u2031 11CC                                    u2111 12C6  
                                  u2040 11EE                                    u2200 1422  
                                  u2120 12E6                                    u3000 0FD4  
                                  u2041 11EA                                    u2201 141E  
                                  u2121 12E2                                    u3001 0FD0  
                                  u2050 1208                                    u2210 148A  
                                  u2130 1310                                    u2051 1204  
                                  u2131 130C                                    u3011 224E  
                                  u2060 1222                                    u2220 14CC  
                                  u2140 1374                                    u2300 2908  
                                  u3020 226C                                    u3100 188A  
                                  u2061 121E                                    u2221 14C8  
                                  u2141 1370                                    u2301 2904  
                                  u3021 2268                                    u3101 1886  
                                  u2070 1232                                    u2230 14EA  
                                  u2150 13BE                                    u2310 15B8  
                                  u3030 229C                                    u3110 18A6  
                                  u2071 122E                                    u2231 14E6  
                                  u2215 1478                                    u2151 13B8  
                                  u2311 15B4                                    u3031 2298  
                                  u3111 18A2                                    u1600 1FB0  
                                  u2080 1244                                    u2240 1504  
                                  u2160 13C0                                    u2320 1600  
                                  u2400 276C                                    _LATD 000F8C  
                                  u1601 1FAC                                    u2081 1240  
                                  u2241 1500                                    u2321 15FC  
                                  u2401 2768                                    u3041 2310  
                                  u3121 18DC                                    u1610 1FC2  
                                  u2090 1254                                    u2250 151E  
                                  u2170 13D6                                    u2330 1624  
                                  u2410 2780                                    u3050 232E  
                                  u3130 18FC                                    u1611 1FBE  
                                  u2091 1250                                    u2251 151A  
                                  u2171 13D2                                    u2331 1620  
                                  u2411 277C                                    u3051 232A  
                                  u3131 18F8                                    u2500 26F0  
                                  u1620 1FEA                                    u2260 152E  
                                  u2180 140A                                    u2340 16C8  
                                  u2420 2994                                    u3060 235E  
                                  u3140 192E                                    u2501 26EC  
                                  u1701 1A9C                                    u1621 1FE6  
                                  u2261 152A                                    u2181 1404  
                                  u2341 16C4                                    u2421 2990  
                                  u3061 235A                                    u3141 192A  
                                  u2510 1EF2                                    u1710 1AC0  
                                  u1630 2020                                    u2270 153E  
                                  u2190 140C                                    u2350 16EC  
                                  u2430 284C                                    u3150 195E  
                                  u3207 2928                                    u2511 1EEE  
                                  u1711 1ABC                                    u1631 201C  
                                  u2271 153A                                    u2351 16E8  
                                  u2431 2848                                    u3151 195A  
                                  u2600 28E0                                    u2520 1F18  
                                  u1720 1AEA                                    u1800 1CD8  
                                  u1640 269C                                    u2360 17AC  
                                  u2280 29BE                                    u2440 285C  
                                  u2601 28DC                                    u3217 2492  
                                  u2521 1F14                                    u1721 1AE6  
                                  u1801 1CD4                                    u1641 2698  
                                  u2361 17A8                                    u2281 29BA  
                                  u2441 2858                                    u3161 19C8  
                                  u2610 28EE                                    u2530 1F34  
                                  u2370 2440                                    u1730 1B2A  
                                  u1650 282C                                    u1810 2078  
                                  u2290 29AA                                    u2450 287A  
                                  u3170 19E8                                    u2611 28EA  
                                  u2531 1F30                                    u1731 1B26  
                                  u1651 2828                                    u1811 2074  
                                  u2291 29A6                                    u2451 2876  
                                  u3171 19E4                                    u2620 2490  
                                  u2700 0928                                    u2380 2468  
                                  u1740 1B74                                    u1820 209A  
                                  u1660 27C4                                    u1900 23EE  
                                  u2460 288A                                    u3180 1A1A  
                                  u2621 248C                                    u2541 1F44  
                                  u2701 0924                                    u1741 1B70  
                                  u1821 2096                                    u1661 27BE  
                                  u1901 23E8                                    u2461 2886  
                                  u3181 1A16                                    u2630 24A4  
                                  u2550 1F62                                    u2710 095C  
                                  u2390 2478                                    u1750 1BC8  
                                  u1830 20F0                                    u1670 27C6  
                                  u1910 23F0                                    u2470 22F6  
                                  u2631 24A0                                    u2551 1F5E  
                                  u2711 0958                                    u2391 2474  
                                  u1751 1BC4                                    u1831 20EC  
                                  u2471 22F2                                    u2640 24C0  
                                  u2480 25DE                                    u2560 1F92  
                                  u2800 0A74                                    u2720 0972  
                                  u1680 1A40                                    u1760 1BFA  
                                  u1840 2100                                    u1920 2406  
                                  u2641 24BC                                    u2481 25DA  
                                  u2561 1F8E                                    u2801 0A70  
                                  u2721 096E                                    u2377 2436  
                                  u1681 1A3C                                    u1761 1BF6  
                                  u1841 20FC                                    u1921 2402  
                                  u2650 24D2                                    u1930 25B0  
                                  u2490 2612                                    u2810 0AA8  
                                  u1690 1A72                                    u1770 1C38  
                                  u1850 26B8                                    u2570 2386  
                                  u2651 24CE                                    u1931 25AC  
                                  u2491 260E                                    u2811 0AA4  
                                  u2731 097E                                    u2387 245E  
                                  u1691 1A6E                                    u1771 1C34  
                                  u1851 26B4                                    u2571 2382  
                                  u1940 25CA                                    u2900 0BCA  
                                  u2820 0ABE                                    u2740 099C  
                                  u2660 08B8                                    u1780 1C62  
                                  u1860 27FC                                    u2580 2394  
                                  u3197 291C                                    u1941 25C6  
                                  u2901 0BC6                                    u2821 0ABA  
                                  u2741 0998                                    u2661 08B4  
                                  u1781 1C5E                                    u1861 27F6  
                                  u2581 2390                                    u2590 28D2  
                                  u2910 0BFC                                    u2750 09CE  
                                  u2670 08CC                                    u1790 1C90  
                                  u1870 27FE                                    u1950 29CE  
                                  u2591 28CE                                    u2911 0BF8  
                                  u2831 0ACA                                    u2751 09CA  
                                  u2671 08C8                                    u1791 1C8C  
                                  u1951 29CA                                    u2920 0C26  
                                  u2840 0AE8                                    u2760 0A02  
                                  u1960 1006                                    u1880 2752  
                                  u2921 0C22                                    u2841 0AE4  
                                  u2761 09FE                                    u2681 08D8  
                                  u1961 1000                                    u1881 274C  
                                  u2850 0B1A                                    u2770 0A18  
                                  u2690 08F6                                    u1970 1008  
                                  u1890 2754                                    u2931 0C38  
                                  u2851 0B16                                    u2771 0A14  
                                  u2691 08F2                                    u2940 0C58  
                                  u2860 0B4E                                    u1980 101E  
                                  u2941 0C54                                    u2861 0B4A  
                                  u2781 0A24                                    u1981 101A  
                                  u2950 0C8A                                    u2870 0B64  
                                  u2790 0A42                                    u1990 104E  
                                  u2951 0C86                                    u2871 0B60  
                                  u2791 0A3E                                    u1991 104A  
                                  u2880 0BA2                                    u2960 0CDA  
                                  u2881 0B9E                                    u2961 0CD6  
                                  u2970 0CE8                                    u2891 0BAC  
                                  u2971 0CE4                                    _RCEN 007E2B  
                                  u2981 0F82                                    u2990 0FA2  
                                  u2991 0F9E                                    _RSEN 007E29  
                                  _Date 00EC                   mostrarFechaHora@F3615 026C  
                         ?_offBombillas 0001                                    _Year 00E8  
                                  abs@a 0013                                    _date 01BF  
                                  _dbuf 02D0                                    _days 01F1  
                                  _main 182C                                    _dtoa 0FD6  
                       ?_RTC_Read_Clock 0001                                    _hour 00F0  
                      __end_of_I2C_Nack 29AC                                    _mins 01D3  
                                  _secs 01DD                                    _prec 00E4  
                      __end_of_I2C_Init 2984                        __end_of_I2C_Read 2794  
                                  _nout 01A7                                    _year 01AB  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    _xtoa 12BA  
                      __end_of_I2C_Stop 2998                                    prodl 000FF3  
                                  start 0000                         __end_of_MSdelay 25CC  
                      ??_DHT11_ReadData 0001                           _LCD_String_xy 26DE  
                  __size_of_DHT11_Start 0020                            ___param_bank 000000  
      RTC_Read_Clock@read_clock_address 0004                                   ??_abs 0015  
                                 ??_pad 0017                        __end_of_LCD_Char 296A  
                      __end_of_LCD_Init 28C4                              _Clock_type 00FF  
                       __end_of___aodiv 1BB6                                   ?_main 0001  
                                 ?_dtoa 001C                         __end_of___aomod 1D1A  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 084D                                   STR_11 0829  
                                 STR_12 0819                                   STR_20 0841  
                                 STR_21 083D                                   STR_13 0815  
                                 STR_14 0829                                   STR_22 0835  
                                 STR_15 0819                                   STR_23 0831  
                                 STR_16 0815                                   STR_24 0849  
                                 STR_25 0839                                   STR_17 080D  
                                 STR_18 0811                                   STR_26 0845  
                                 STR_19 0829                                   STR_27 0850  
                                 STR_28 084D                                   ?_xtoa 001C  
                                 _LATC0 007C58                                   _LATC1 007C59  
                                 _LATC2 007C5A                                   _AM_PM 00FE  
                          vfpfcnvrt@fmt 0045                            vfpfcnvrt@llu 0055  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                         __end_of_offLEDS 2360  
                                 _Month 00EA                                   _flags 00E6  
                                 _fputc 1F9E                         __end_of_isalpha 275A  
                                 _fputs 265A                                   _hours 01C9  
                                 _month 01B5                       __end_of_I2C_Ready 29D2  
                                 pad@fp 0011                                   _width 00E2  
                                 _putch 29E4                                   main@i 00DE  
                                 dtoa@d 001E                                   dtoa@i 003E  
                                 dtoa@n 0036                                   dtoa@p 0030  
                                 dtoa@s 0034                                   dtoa@w 0032  
                       __end_of_islower 27CC                       __end_of_I2C_Start 2868  
                        ??_offBombillas 0001                       __end_of_I2C_Write 2912  
                       __end_of_isupper 2804                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                     __size_of_LCD_String 005E  
                       __end_of_sprintf 2582                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_toupper 241C                          _var_RH_Decimal 00FD  
                        ?_LCD_String_xy 000A                            _toupper$1463 000D  
               __end_of_LCD_Custom_Char 2614                         __initialization 212E  
                          __end_of_main 1A2E                            __end_of_dtoa 12BA  
                          __end_of_xtoa 1594                       ?_mostrarFechaHora 0001  
                       ??_verificarHora 000F                               ??_I2C_Ack 0001  
                    ??_mostrarFechaHora 0076                                  ??_main 0060  
                                ??_dtoa 0026                                  ??_xtoa 0027  
                         __activetblptr 000002                           main@buffer_TX 00BA  
                                _ADCON1 000FC1                                  ?_fputc 0001  
                                ?_fputs 000A                                  ?_putch 0001  
                   _DHT11_CheckResponse 28C4                        LCD_String_xy@msg 000B  
                      LCD_String_xy@pos 000A                        LCD_String_xy@row 000D  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                          vfprintf@cfmt 005E                               ??___aodiv 0011  
                             ??___aomod 0011                                  _onLEDS 1ECE  
                  ?_DHT11_CheckResponse 0001                                  clear_0 21AC  
                                clear_1 21B8                                  clear_2 21C4  
                                _valor2 00F9                      _I2C_Repeated_Start 2868  
                                pad@buf 0013                               ??_offLEDS 0001  
                      ??_imprimirTemHum 0060                    __size_of_LCD_Command 001C  
                                dtoa@fp 001C                                  _strlen 2804  
                      offLEDS@buffer_TX 0001                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000B  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 2300  
                             ??_sprintf 0060                                  xtoa@fp 001C  
                             ??_toupper 0009                          _var_T_Integral 00FA  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 21CA                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000D                           ___rparam_used 000001  
                            _banAgregar 00F6                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0008                          __pcstackCOMRAM 0001  
                          __pidataBANK0 29E1                            __pidataBANK1 29D2  
                          __pidataBANK2 1DFE                            __pidataBANK3 21D4  
                 ??_DHT11_CheckResponse 0001                         _var_RH_Integral 00FC  
                         __end_of_fputc 2068                           __end_of_fputs 269E  
                         __end_of_putch 29E6                            ??_LCD_String 000A  
                  __end_of_offBombillas 229E                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 01A7                              __pbssBANK2 02D0  
                            ??_LCD_Char 0007                              ??_LCD_Init 0008  
                    __end_of_LCD_String 247A                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                           offBombillas@i 0016  
                               ?_onLEDS 0001                                 _I2C_Ack 29AC  
                               _ACKSTAT 007E2E                                 ?_strlen 0001  
                    __size_of_vfpfcnvrt 0298                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 2582                           ??_DHT11_Start 0001  
                             _I2C_Ready 29C0                               _I2C_Start 283A  
                             _I2C_Write 28F0                           LCD_String@msg 0008  
                               __Hparam 0000                  encenderBombillas@F3600 0200  
                               __Lparam 0000                  encenderBombillas@F3604 034A  
                encenderBombillas@F3607 029B                  encenderBombillas@F3591 0251  
                encenderBombillas@F3594 0236                  encenderBombillas@F3597 021B  
                               ___aodiv 1A2E                       _RTC_Read_Calendar 24D6  
                               ___aomod 1BB6                            _bombillaCar0 01F8  
                     offBombillas@F3586 0286                         __size_of_onLEDS 00D0  
                             ?_vfprintf 0060                            __psmallconst 0800  
                               _acumBom 01A9                  encenderBombillas@i_800 01A0  
                encenderBombillas@i_801 01A6                  encenderBombillas@i_804 01A2  
                encenderBombillas@i_807 01A4                  encenderBombillas@i_794 019C  
                encenderBombillas@i_797 019E                      ?_RTC_Read_Calendar 0001  
                               __pcinit 212E                                 __ramtop 0800  
                               __ptext0 182C                                 __ptext1 2360  
                               __ptext2 2300                                 __ptext3 223A  
                               __ptext4 0CB0                                 __ptext5 2614  
                               __ptext6 24D6                                 __ptext7 2984  
                               __ptext8 283A                                 __ptext9 2868  
                               _offLEDS 2300                         __size_of_strlen 0036  
                          __size_of_abs 0040                            __size_of_pad 00C6  
                               _isalpha 271E                                 onLEDS@i 0017  
                   ??_RTC_Read_Calendar 0003                                 _islower 2794  
                               _isupper 27CC                                 _sprintf 2530  
             __size_of_mostrarFechaHora 0326                                 _toupper 23BE  
                  end_of_initialization 21CA                                 fputc@fp 0003  
                        LCD_Command@cmd 0007                           __Lmediumconst 0000  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
                            ?_I2C_Start 0001                              ?_I2C_Write 0001  
             __end_of_RTC_Read_Calendar 2530                       __end_of_vfpfcnvrt 182C  
                 __size_of_offBombillas 0064                               _RCSTAbits 000FAB  
                   __end_of_DHT11_Start 2932                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005E                                 strlen@a 0003  
                               strlen@s 0001                               _PORTAbits 000F80  
                 __end_of_verificarHora 23BE                               _PORTCbits 000F82  
               __size_of_DHT11_ReadData 005C              encenderBombillas@buffer_TX 0100  
                             _TRISCbits 000F94                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                     __size_of_I2C_Stop 0014                            _offBombillas 223A  
                             _TXSTAbits 000FAC                       __size_of_LCD_Char 001C  
                     __size_of_LCD_Init 002E                      DHT11_ReadData@data 0002  
                         ??_LCD_Command 0007                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@fp 0043                             vfpfcnvrt@ll 004D  
                           _BAUDCONbits 000FB8                          __end_of_onLEDS 1F9E  
                        __end_of_strlen 283A                     start_initialization 212E  
                           __end_of_abs 26DE                             __end_of_pad 212E  
  I2C_Repeated_Start@slave_read_address 0002                       _encenderBombillas 0858  
                           ??_I2C_Ready 0001                      ?_encenderBombillas 0001  
                           _DHT11_Start 2912                             ??_I2C_Start 0002  
           __end_of_DHT11_CheckResponse 28F0                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 271E              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 0062             __size_of_I2C_Repeated_Start 002E  
                   ??_encenderBombillas 0019                                ??_onLEDS 0001  
                         _var_T_Decimal 00FB                             __pdataBANK0 00FE  
                           __pdataBANK1 01F1                             __pdataBANK2 0200  
                           __pdataBANK3 0300                                ?_I2C_Ack 0001  
                              ??_strlen 0003                __size_of_LCD_Custom_Char 0048  
                   __end_of_LCD_Command 294E                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0001  
             __end_of_encenderBombillas 0CB0                        _mostrarFechaHora 0CB0  
                     main@buffer_TX_750 0094                 __size_of_imprimirTemHum 00E4  
                              ?_MSdelay 0001                               _dtoa$1367 002E  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013                          _DHT11_ReadData 247A  
                              ?_offLEDS 0001                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 2998  
                              ?_isalpha 0001                                _I2C_Init 296A  
                              _I2C_Read 275A                                _I2C_Stop 2984  
                              ?_islower 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000E                                ?_sprintf 0066  
        encenderBombillas@buffer_TX_803 016C          encenderBombillas@buffer_TX_806 0187  
        encenderBombillas@buffer_TX_793 011B                          __size_of_fputc 00CA  
        encenderBombillas@buffer_TX_796 0136          encenderBombillas@buffer_TX_799 0151  
                        __size_of_fputs 0044                                ?_toupper 0007  
                        __size_of_putch 0002                                MSdelay@i 0003  
                              MSdelay@j 0005               mostrarFechaHora@buffer_TX 0078  
                              _LCD_Char 294E                                _LCD_Init 2896  
               __size_of_RTC_Read_Clock 0046                               _vec_value 01E7  
                             main@F3564 0326                               main@F3567 0300  
                __end_of_DHT11_ReadData 24D6                             _LCD_Command 2932  
                             _vfpfcnvrt 1594                               _xtoa$1378 002F  
                             _xtoa$1379 0031                        __size_of_I2C_Ack 0014  
                             main@i_751 00E0                        onLEDS@T_Integral 0014  
            __size_of_encenderBombillas 0458                       ??_LCD_Custom_Char 000A  
                            vfpfcnvrt@c 005D                               copy_data0 2142  
                             copy_data1 2162                               copy_data2 2182  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 004A  
                              __Hrparam 0000                              vfprintf@ap 0064  
                              __Lrparam 0000                              vfprintf@fp 0060  
                         I2C_Write@data 0001                         ?_DHT11_ReadData 0001  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                            ?_vfpfcnvrt 0043                         DHT11_ReadData@i 0001  
                       ___aodiv@divisor 0009                         ___aodiv@counter 0011  
                      __size_of_offLEDS 0060                              sprintf@fmt 0068  
                      __size_of_isalpha 003C                        __size_of_islower 0038  
                              __ptext10 28F0                                __ptext11 275A  
                              __ptext20 12BA                                __ptext12 29C0  
                              __ptext21 23BE                                __ptext13 2998  
                              __ptext30 29E4                                __ptext22 2794  
                              __ptext14 29AC                                __ptext31 269E  
                              __ptext23 27CC                                __ptext15 2896  
                              __ptext40 294E                                __ptext32 1BB6  
                              __ptext24 271E                                __ptext16 1D1A  
                              __ptext41 2582                                __ptext33 1A2E  
                              __ptext25 0FD6                                __ptext17 2530  
                              __ptext42 296A                                __ptext34 26DE  
                              __ptext26 2068                                __ptext18 229E  
                              __ptext43 2912                                __ptext35 241C  
                              __ptext27 2804                                __ptext19 1594  
                              __ptext44 247A                                __ptext36 0858  
                              __ptext28 265A                                __ptext45 28C4  
                              __ptext37 1ECE                                __ptext29 1F9E  
                              __ptext38 25CC                                __ptext39 2932  
                      __size_of_isupper 0038                          _imprimirTemHum 1D1A  
                      __size_of_sprintf 0052                        __size_of_toupper 005E  
                         __size_of_main 0202                           __size_of_dtoa 02E4  
                           onLEDS@F3582 02AE                            ?_DHT11_Start 0001  
                         __size_of_xtoa 02DA                  __size_of_verificarHora 005E  
                            MSdelay@val 0001                                offLEDS@i 0010  
              __end_of_mostrarFechaHora 0FD6                                _vfprintf 229E  
                           onLEDS@valor 0015                       mostrarFechaHora@i 0092  
                            _LCD_String 241C                        ___aomod@dividend 0001  
                __end_of_imprimirTemHum 1DFE                                isalpha@c 0001  
                 offBombillas@buffer_TX 0001                      LCD_Custom_Char@loc 000A  
                    LCD_Custom_Char@msg 0008                               sprintf@ap 006E  
                              islower@c 0001              __end_of_I2C_Repeated_Start 2896  
                              isupper@c 0001                          _RTC_Read_Clock 2614  
                          offLEDS@F3576 02C1            __size_of_DHT11_CheckResponse 002C  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0049  
                       ___aomod@counter 0011                                sprintf@f 0070  
                         _verificarHora 2360                                sprintf@s 0066  
                    encenderBombillas@i 019A                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                         ?_imprimirTemHum 0001  
                           _SSPCON2bits 000FC5                            ___aodiv@sign 0012  
                __end_of_RTC_Read_Clock 265A                            ___aomod@sign 0012  
