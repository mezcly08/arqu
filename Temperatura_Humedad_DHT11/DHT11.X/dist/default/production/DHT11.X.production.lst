

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 03 09:56:17 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _LATB	set	3978
    73  0000                     _TRISB	set	3987
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISAbits	set	3986
    76  0000                     _PORTAbits	set	3968
    77  0000                     _ADCON1	set	4033
    78  0000                     _OSCCON	set	4051
    79  0000                     _LATD1	set	31841
    80  0000                     _LATD0	set	31840
    81  0000                     _LATA0	set	31816
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_6:
    88  000801  48                 	db	72	;'H'
    89  000802  75                 	db	117	;'u'
    90  000803  6D                 	db	109	;'m'
    91  000804  65                 	db	101	;'e'
    92  000805  64                 	db	100	;'d'
    93  000806  61                 	db	97	;'a'
    94  000807  64                 	db	100	;'d'
    95  000808  00                 	db	0
    96  000809                     STR_5:
    97  000809  25                 	db	37
    98  00080A  64                 	db	100	;'d'
    99  00080B  20                 	db	32
   100  00080C  20                 	db	32
   101  00080D  00                 	db	0
   102  00080E                     STR_2:
   103  00080E  2E                 	db	46
   104  00080F  25                 	db	37
   105  000810  64                 	db	100	;'d'
   106  000811  20                 	db	32
   107  000812  00                 	db	0
   108  000813                     STR_7:
   109  000813  54                 	db	84	;'T'
   110  000814  65                 	db	101	;'e'
   111  000815  6D                 	db	109	;'m'
   112  000816  70                 	db	112	;'p'
   113  000817  00                 	db	0
   114  000818                     STR_4:
   115  000818  2E                 	db	46
   116  000819  25                 	db	37
   117  00081A  64                 	db	100	;'d'
   118  00081B  00                 	db	0
   119  00081C  00                 	db	0	; dummy byte at the end
   120  0000                     
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124  0015D0                     __pcinit:
   125                           	callstack 0
   126  0015D0                     start_initialization:
   127                           	callstack 0
   128  0015D0                     __initialization:
   129                           	callstack 0
   130                           
   131                           ; Clear objects allocated to BANK0 (38 bytes)
   132  0015D0  EE00  F060         	lfsr	0,__pbssBANK0
   133  0015D4  0E26               	movlw	38
   134  0015D6                     clear_0:
   135  0015D6  6AEE               	clrf	postinc0,c
   136  0015D8  06E8               	decf	wreg,f,c
   137  0015DA  E1FD               	bnz	clear_0
   138                           
   139                           ; Clear objects allocated to COMRAM (2 bytes)
   140  0015DC  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   141  0015DE  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   142  0015E0                     end_of_initialization:
   143                           	callstack 0
   144  0015E0                     __end_of__initialization:
   145                           	callstack 0
   146  0015E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   147  0015E2  6EF8               	movwf	tblptru,c
   148  0015E4  0100               	movlb	0
   149  0015E6  EFCE  F007         	goto	_main	;jump to C main() function
   150                           
   151                           	psect	bssCOMRAM
   152  00005E                     __pbssCOMRAM:
   153                           	callstack 0
   154  00005E                     _flags:
   155                           	callstack 0
   156  00005E                     	ds	2
   157                           
   158                           	psect	bssBANK0
   159  000060                     __pbssBANK0:
   160                           	callstack 0
   161  000060                     _nout:
   162                           	callstack 0
   163  000060                     	ds	2
   164  000062                     _width:
   165                           	callstack 0
   166  000062                     	ds	2
   167  000064                     _prec:
   168                           	callstack 0
   169  000064                     	ds	2
   170  000066                     _dbuf:
   171                           	callstack 0
   172  000066                     	ds	32
   173                           
   174                           	psect	cstackBANK0
   175  000086                     __pcstackBANK0:
   176                           	callstack 0
   177  000086                     	ds	2
   178  000088                     sprintf@ap:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x2
   182  000088                     	ds	2
   183  00008A                     sprintf@f:
   184                           	callstack 0
   185                           
   186                           ; 6 bytes @ 0x4
   187  00008A                     	ds	6
   188  000090                     main@value:
   189                           	callstack 0
   190                           
   191                           ; 10 bytes @ 0xA
   192  000090                     	ds	10
   193  00009A                     main@RH_Decimal:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x14
   197  00009A                     	ds	1
   198  00009B                     main@RH_Integral:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x15
   202  00009B                     	ds	1
   203  00009C                     main@T_Decimal:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x16
   207  00009C                     	ds	1
   208  00009D                     main@T_Integral:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x17
   212  00009D                     	ds	1
   213  00009E                     main@Checksum:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x18
   217  00009E                     	ds	1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	callstack 0
   222  000001                     ??_DHT11_Start:
   223  000001                     ?_strlen:
   224                           	callstack 0
   225  000001                     ?___aodiv:
   226                           	callstack 0
   227  000001                     ?___aomod:
   228                           	callstack 0
   229  000001                     DHT11_ReadData@i:
   230                           	callstack 0
   231  000001                     MSdelay@val:
   232                           	callstack 0
   233  000001                     fputc@c:
   234                           	callstack 0
   235  000001                     strlen@s:
   236                           	callstack 0
   237  000001                     ___aodiv@dividend:
   238                           	callstack 0
   239  000001                     ___aomod@dividend:
   240                           	callstack 0
   241                           
   242                           ; 8 bytes @ 0x0
   243  000001                     	ds	1
   244  000002                     DHT11_ReadData@data:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x1
   248  000002                     	ds	1
   249  000003                     MSdelay@i:
   250                           	callstack 0
   251  000003                     fputc@fp:
   252                           	callstack 0
   253  000003                     strlen@a:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257  000003                     	ds	2
   258  000005                     ??_fputc:
   259  000005                     MSdelay@j:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000005                     	ds	2
   264  000007                     LCD_Command@cmd:
   265                           	callstack 0
   266  000007                     LCD_Char@dat:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x6
   270  000007                     	ds	1
   271  000008                     LCD_String@msg:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x7
   275  000008                     	ds	1
   276  000009                     ___aodiv@divisor:
   277                           	callstack 0
   278  000009                     ___aomod@divisor:
   279                           	callstack 0
   280                           
   281                           ; 8 bytes @ 0x8
   282  000009                     	ds	1
   283  00000A                     LCD_String_xy@pos:
   284                           	callstack 0
   285  00000A                     fputs@s:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x9
   289  00000A                     	ds	1
   290  00000B                     LCD_String_xy@msg:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xA
   294  00000B                     	ds	1
   295  00000C                     fputs@fp:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xB
   299  00000C                     	ds	1
   300  00000D                     LCD_String_xy@row:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xC
   304  00000D                     	ds	1
   305  00000E                     LCD_String_xy@location:
   306                           	callstack 0
   307  00000E                     fputs@c:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0xD
   311  00000E                     	ds	1
   312  00000F                     fputs@i:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xE
   316  00000F                     	ds	2
   317  000011                     ?_pad:
   318                           	callstack 0
   319  000011                     ___aodiv@counter:
   320                           	callstack 0
   321  000011                     ___aomod@counter:
   322                           	callstack 0
   323  000011                     pad@fp:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x10
   327  000011                     	ds	1
   328  000012                     ___aodiv@sign:
   329                           	callstack 0
   330  000012                     ___aomod@sign:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x11
   334  000012                     	ds	1
   335  000013                     ?_abs:
   336                           	callstack 0
   337  000013                     pad@buf:
   338                           	callstack 0
   339  000013                     abs@a:
   340                           	callstack 0
   341  000013                     ___aodiv@quotient:
   342                           	callstack 0
   343                           
   344                           ; 8 bytes @ 0x12
   345  000013                     	ds	2
   346  000015                     ??_abs:
   347  000015                     pad@p:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x14
   351  000015                     	ds	2
   352  000017                     ??_pad:
   353                           
   354                           ; 1 bytes @ 0x16
   355  000017                     	ds	1
   356  000018                     pad@i:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x17
   360  000018                     	ds	2
   361  00001A                     pad@w:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x19
   365  00001A                     	ds	2
   366  00001C                     ?_dtoa:
   367                           	callstack 0
   368  00001C                     dtoa@fp:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x1B
   372  00001C                     	ds	2
   373  00001E                     dtoa@d:
   374                           	callstack 0
   375                           
   376                           ; 8 bytes @ 0x1D
   377  00001E                     	ds	8
   378  000026                     ??_dtoa:
   379                           
   380                           ; 1 bytes @ 0x25
   381  000026                     	ds	8
   382  00002E                     _dtoa$753:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x2D
   386  00002E                     	ds	2
   387  000030                     dtoa@p:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2F
   391  000030                     	ds	2
   392  000032                     dtoa@w:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x31
   396  000032                     	ds	2
   397  000034                     dtoa@s:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x33
   401  000034                     	ds	2
   402  000036                     dtoa@n:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0x35
   406  000036                     	ds	8
   407  00003E                     dtoa@i:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x3D
   411  00003E                     	ds	2
   412  000040                     ?_vfpfcnvrt:
   413                           	callstack 0
   414  000040                     vfpfcnvrt@fp:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x3F
   418  000040                     	ds	2
   419  000042                     vfpfcnvrt@fmt:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x41
   423  000042                     	ds	2
   424  000044                     vfpfcnvrt@ap:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x43
   428  000044                     	ds	2
   429  000046                     ??_vfpfcnvrt:
   430                           
   431                           ; 1 bytes @ 0x45
   432  000046                     	ds	2
   433  000048                     vfpfcnvrt@ll:
   434                           	callstack 0
   435                           
   436                           ; 8 bytes @ 0x47
   437  000048                     	ds	8
   438  000050                     ?_vfprintf:
   439                           	callstack 0
   440  000050                     vfprintf@fp:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x4F
   444  000050                     	ds	2
   445  000052                     vfprintf@fmt:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x51
   449  000052                     	ds	2
   450  000054                     vfprintf@ap:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x53
   454  000054                     	ds	2
   455  000056                     vfprintf@cfmt:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x55
   459  000056                     	ds	2
   460  000058                     ?_sprintf:
   461                           	callstack 0
   462  000058                     sprintf@s:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x57
   466  000058                     	ds	2
   467  00005A                     sprintf@fmt:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x59
   471  00005A                     	ds	4
   472  00005E                     
   473                           ; 1 bytes @ 0x5D
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 22 in file "humidity_Temp.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  value          10   10[BANK0 ] unsigned char [10]
   484 ;;  Checksum        1   24[BANK0 ] unsigned char 
   485 ;;  T_Integral      1   23[BANK0 ] unsigned char 
   486 ;;  T_Decimal       1   22[BANK0 ] unsigned char 
   487 ;;  RH_Integral     1   21[BANK0 ] unsigned char 
   488 ;;  RH_Decimal      1   20[BANK0 ] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   498 ;;      Params:         0       0       0       0       0       0       0       0       0
   499 ;;      Locals:         0      15       0       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0
   501 ;;      Totals:         0      15       0       0       0       0       0       0       0
   502 ;;Total ram usage:       15 bytes
   503 ;; Hardware stack levels required when called:    8
   504 ;; This function calls:
   505 ;;		_DHT11_CheckResponse
   506 ;;		_DHT11_ReadData
   507 ;;		_DHT11_Start
   508 ;;		_LCD_Char
   509 ;;		_LCD_Init
   510 ;;		_LCD_String
   511 ;;		_LCD_String_xy
   512 ;;		_MSdelay
   513 ;;		_sprintf
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text0
   520  000F9C                     __ptext0:
   521                           	callstack 0
   522  000F9C                     _main:
   523                           	callstack 23
   524  000F9C                     
   525                           ;humidity_Temp.c: 24:     char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;humidity_Tem
      +                          p.c: 25:     char Checksum;;humidity_Temp.c: 26:     char value[10];;humidity_Temp.c: 27
      +                          :     OSCCON = 0x72;
   526  000F9C  0E72               	movlw	114
   527  000F9E  6ED3               	movwf	211,c	;volatile
   528  000FA0                     
   529                           ;humidity_Temp.c: 29:     LCD_Init();
   530  000FA0  EC8F  F00A         	call	_LCD_Init	;wreg free
   531  000FA4                     
   532                           ;humidity_Temp.c: 30:     ADCON1=0x0F;
   533  000FA4  0E0F               	movlw	15
   534  000FA6  6EC1               	movwf	193,c	;volatile
   535  000FA8                     l1698:
   536                           
   537                           ;humidity_Temp.c: 32: {;humidity_Temp.c: 33:     DHT11_Start();
   538  000FA8  ECBC  F00A         	call	_DHT11_Start	;wreg free
   539  000FAC                     
   540                           ;humidity_Temp.c: 34:     DHT11_CheckResponse();
   541  000FAC  ECA6  F00A         	call	_DHT11_CheckResponse	;wreg free
   542  000FB0                     
   543                           ;humidity_Temp.c: 37:     RH_Integral = DHT11_ReadData();
   544  000FB0  EC96  F009         	call	_DHT11_ReadData	;wreg free
   545  000FB4  0100               	movlb	0	; () banked
   546  000FB6  6F9B               	movwf	main@RH_Integral& (0+255),b
   547  000FB8                     
   548                           ; BSR set to: 0
   549                           ;humidity_Temp.c: 38:     RH_Decimal = DHT11_ReadData();
   550  000FB8  EC96  F009         	call	_DHT11_ReadData	;wreg free
   551  000FBC  0100               	movlb	0	; () banked
   552  000FBE  6F9A               	movwf	main@RH_Decimal& (0+255),b
   553  000FC0                     
   554                           ; BSR set to: 0
   555                           ;humidity_Temp.c: 39:     T_Integral = DHT11_ReadData();
   556  000FC0  EC96  F009         	call	_DHT11_ReadData	;wreg free
   557  000FC4  0100               	movlb	0	; () banked
   558  000FC6  6F9D               	movwf	main@T_Integral& (0+255),b
   559  000FC8                     
   560                           ; BSR set to: 0
   561                           ;humidity_Temp.c: 40:     T_Decimal = DHT11_ReadData();
   562  000FC8  EC96  F009         	call	_DHT11_ReadData	;wreg free
   563  000FCC  0100               	movlb	0	; () banked
   564  000FCE  6F9C               	movwf	main@T_Decimal& (0+255),b
   565  000FD0                     
   566                           ; BSR set to: 0
   567                           ;humidity_Temp.c: 41:     Checksum = DHT11_ReadData();
   568  000FD0  EC96  F009         	call	_DHT11_ReadData	;wreg free
   569  000FD4  0100               	movlb	0	; () banked
   570  000FD6  6F9E               	movwf	main@Checksum& (0+255),b
   571  000FD8                     
   572                           ; BSR set to: 0
   573                           ;humidity_Temp.c: 44:     sprintf(value,"%d",RH_Integral);
   574  000FD8  0E90               	movlw	low main@value
   575  000FDA  6E58               	movwf	sprintf@s^0,c
   576  000FDC  0E00               	movlw	high main@value
   577  000FDE  6E59               	movwf	(sprintf@s+1)^0,c
   578  000FE0  0E19               	movlw	low (STR_4+1)
   579  000FE2  6E5A               	movwf	sprintf@fmt^0,c
   580  000FE4  0E08               	movlw	high (STR_4+1)
   581  000FE6  6E5B               	movwf	(sprintf@fmt+1)^0,c
   582  000FE8  C09B  F05C         	movff	main@RH_Integral,?_sprintf+4
   583  000FEC  6A5D               	clrf	(?_sprintf+5)^0,c
   584  000FEE  ECC4  F009         	call	_sprintf	;wreg free
   585  000FF2                     
   586                           ;humidity_Temp.c: 45:     LCD_String_xy(0,0,value);
   587  000FF2  0E00               	movlw	0
   588  000FF4  6E0A               	movwf	LCD_String_xy@pos^0,c
   589  000FF6  0E90               	movlw	low main@value
   590  000FF8  6E0B               	movwf	LCD_String_xy@msg^0,c
   591  000FFA  0E00               	movlw	high main@value
   592  000FFC  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   593  000FFE  0E00               	movlw	0
   594  001000  EC54  F00A         	call	_LCD_String_xy
   595  001004                     
   596                           ;humidity_Temp.c: 46:     sprintf(value,".%d ",RH_Decimal);
   597  001004  0E90               	movlw	low main@value
   598  001006  6E58               	movwf	sprintf@s^0,c
   599  001008  0E00               	movlw	high main@value
   600  00100A  6E59               	movwf	(sprintf@s+1)^0,c
   601  00100C  0E0E               	movlw	low STR_2
   602  00100E  6E5A               	movwf	sprintf@fmt^0,c
   603  001010  0E08               	movlw	high STR_2
   604  001012  6E5B               	movwf	(sprintf@fmt+1)^0,c
   605  001014  C09A  F05C         	movff	main@RH_Decimal,?_sprintf+4
   606  001018  6A5D               	clrf	(?_sprintf+5)^0,c
   607  00101A  ECC4  F009         	call	_sprintf	;wreg free
   608  00101E                     
   609                           ;humidity_Temp.c: 47:     LCD_String(value);
   610  00101E  0E90               	movlw	low main@value
   611  001020  6E08               	movwf	LCD_String@msg^0,c
   612  001022  0E00               	movlw	high main@value
   613  001024  6E09               	movwf	(LCD_String@msg+1)^0,c
   614  001026  EC67  F009         	call	_LCD_String	;wreg free
   615  00102A                     
   616                           ;humidity_Temp.c: 48:     LCD_Char('%');
   617  00102A  0E25               	movlw	37
   618  00102C  ECCC  F00A         	call	_LCD_Char
   619  001030                     
   620                           ;humidity_Temp.c: 51:     sprintf(value,"%d",T_Integral);
   621  001030  0E90               	movlw	low main@value
   622  001032  6E58               	movwf	sprintf@s^0,c
   623  001034  0E00               	movlw	high main@value
   624  001036  6E59               	movwf	(sprintf@s+1)^0,c
   625  001038  0E19               	movlw	low (STR_4+1)
   626  00103A  6E5A               	movwf	sprintf@fmt^0,c
   627  00103C  0E08               	movlw	high (STR_4+1)
   628  00103E  6E5B               	movwf	(sprintf@fmt+1)^0,c
   629  001040  C09D  F05C         	movff	main@T_Integral,?_sprintf+4
   630  001044  6A5D               	clrf	(?_sprintf+5)^0,c
   631  001046  ECC4  F009         	call	_sprintf	;wreg free
   632  00104A                     
   633                           ;humidity_Temp.c: 52:     LCD_String_xy(1,0,value);
   634  00104A  0E00               	movlw	0
   635  00104C  6E0A               	movwf	LCD_String_xy@pos^0,c
   636  00104E  0E90               	movlw	low main@value
   637  001050  6E0B               	movwf	LCD_String_xy@msg^0,c
   638  001052  0E00               	movlw	high main@value
   639  001054  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   640  001056  0E01               	movlw	1
   641  001058  EC54  F00A         	call	_LCD_String_xy
   642  00105C                     
   643                           ;humidity_Temp.c: 53:     sprintf(value,".%d",T_Decimal);
   644  00105C  0E90               	movlw	low main@value
   645  00105E  6E58               	movwf	sprintf@s^0,c
   646  001060  0E00               	movlw	high main@value
   647  001062  6E59               	movwf	(sprintf@s+1)^0,c
   648  001064  0E18               	movlw	low STR_4
   649  001066  6E5A               	movwf	sprintf@fmt^0,c
   650  001068  0E08               	movlw	high STR_4
   651  00106A  6E5B               	movwf	(sprintf@fmt+1)^0,c
   652  00106C  C09C  F05C         	movff	main@T_Decimal,?_sprintf+4
   653  001070  6A5D               	clrf	(?_sprintf+5)^0,c
   654  001072  ECC4  F009         	call	_sprintf	;wreg free
   655  001076                     
   656                           ;humidity_Temp.c: 54:     LCD_String(value);
   657  001076  0E90               	movlw	low main@value
   658  001078  6E08               	movwf	LCD_String@msg^0,c
   659  00107A  0E00               	movlw	high main@value
   660  00107C  6E09               	movwf	(LCD_String@msg+1)^0,c
   661  00107E  EC67  F009         	call	_LCD_String	;wreg free
   662  001082                     
   663                           ;humidity_Temp.c: 55:     LCD_Char(0xdf);
   664  001082  0EDF               	movlw	223
   665  001084  ECCC  F00A         	call	_LCD_Char
   666  001088                     
   667                           ;humidity_Temp.c: 56:     LCD_Char('C');
   668  001088  0E43               	movlw	67
   669  00108A  ECCC  F00A         	call	_LCD_Char
   670  00108E                     
   671                           ;humidity_Temp.c: 58:     sprintf(value,"%d  ",Checksum);
   672  00108E  0E90               	movlw	low main@value
   673  001090  6E58               	movwf	sprintf@s^0,c
   674  001092  0E00               	movlw	high main@value
   675  001094  6E59               	movwf	(sprintf@s+1)^0,c
   676  001096  0E09               	movlw	low STR_5
   677  001098  6E5A               	movwf	sprintf@fmt^0,c
   678  00109A  0E08               	movlw	high STR_5
   679  00109C  6E5B               	movwf	(sprintf@fmt+1)^0,c
   680  00109E  C09E  F05C         	movff	main@Checksum,?_sprintf+4
   681  0010A2  6A5D               	clrf	(?_sprintf+5)^0,c
   682  0010A4  ECC4  F009         	call	_sprintf	;wreg free
   683  0010A8                     
   684                           ;humidity_Temp.c: 59:     LCD_String_xy(0,8,"Humedad");
   685  0010A8  0E08               	movlw	8
   686  0010AA  6E0A               	movwf	LCD_String_xy@pos^0,c
   687  0010AC  0E01               	movlw	low STR_6
   688  0010AE  6E0B               	movwf	LCD_String_xy@msg^0,c
   689  0010B0  0E08               	movlw	high STR_6
   690  0010B2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   691  0010B4  0E00               	movlw	0
   692  0010B6  EC54  F00A         	call	_LCD_String_xy
   693  0010BA                     
   694                           ;humidity_Temp.c: 60:     LCD_String_xy(1,8,"Temp");
   695  0010BA  0E08               	movlw	8
   696  0010BC  6E0A               	movwf	LCD_String_xy@pos^0,c
   697  0010BE  0E13               	movlw	low STR_7
   698  0010C0  6E0B               	movwf	LCD_String_xy@msg^0,c
   699  0010C2  0E08               	movlw	high STR_7
   700  0010C4  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   701  0010C6  0E01               	movlw	1
   702  0010C8  EC54  F00A         	call	_LCD_String_xy
   703  0010CC                     
   704                           ;humidity_Temp.c: 68:     MSdelay(500);
   705  0010CC  0E01               	movlw	1
   706  0010CE  6E02               	movwf	(MSdelay@val+1)^0,c
   707  0010D0  0EF4               	movlw	244
   708  0010D2  6E01               	movwf	MSdelay@val^0,c
   709  0010D4  ECED  F009         	call	_MSdelay	;wreg free
   710  0010D8  EFD4  F007         	goto	l1698
   711  0010DC  EF00  F000         	goto	start
   712  0010E0                     __end_of_main:
   713                           	callstack 0
   714                           
   715 ;; *************** function _sprintf *****************
   716 ;; Defined at:
   717 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  s               2   87[COMRAM] PTR unsigned char 
   720 ;;		 -> main@value(10), 
   721 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   722 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
   723 ;;		 -> STR_1(3), 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  f               6    4[BANK0 ] struct _IO_FILE
   726 ;;  ap              2    2[BANK0 ] PTR void [1]
   727 ;;		 -> ?_sprintf(2), 
   728 ;;  ret             2    0        int 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2   87[COMRAM] int 
   731 ;; Registers used:
   732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         6       0       0       0       0       0       0       0       0
   739 ;;      Locals:         0      10       0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0
   741 ;;      Totals:         6      10       0       0       0       0       0       0       0
   742 ;;Total ram usage:       16 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    7
   745 ;; This function calls:
   746 ;;		_vfprintf
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text1
   753  001388                     __ptext1:
   754                           	callstack 0
   755  001388                     _sprintf:
   756                           	callstack 23
   757  001388  0E5C               	movlw	low (?_sprintf+4)
   758  00138A  0100               	movlb	0	; () banked
   759  00138C  6F88               	movwf	sprintf@ap& (0+255),b
   760  00138E  0E00               	movlw	high (?_sprintf+4)
   761  001390  6F89               	movwf	(sprintf@ap+1)& (0+255),b
   762  001392  C058  F08A         	movff	sprintf@s,sprintf@f
   763  001396  C059  F08B         	movff	sprintf@s+1,sprintf@f+1
   764  00139A                     
   765                           ; BSR set to: 0
   766  00139A  0E00               	movlw	0
   767  00139C  6F8D               	movwf	(sprintf@f+3)& (0+255),b
   768  00139E  0E00               	movlw	0
   769  0013A0  6F8C               	movwf	(sprintf@f+2)& (0+255),b
   770  0013A2                     
   771                           ; BSR set to: 0
   772  0013A2  0E00               	movlw	0
   773  0013A4  6F8F               	movwf	(sprintf@f+5)& (0+255),b
   774  0013A6  0E00               	movlw	0
   775  0013A8  6F8E               	movwf	(sprintf@f+4)& (0+255),b
   776  0013AA                     
   777                           ; BSR set to: 0
   778  0013AA  0E8A               	movlw	low sprintf@f
   779  0013AC  6E50               	movwf	vfprintf@fp^0,c
   780  0013AE  0E00               	movlw	high sprintf@f
   781  0013B0  6E51               	movwf	(vfprintf@fp+1)^0,c
   782  0013B2  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   783  0013B6  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   784  0013BA  0E88               	movlw	low sprintf@ap
   785  0013BC  6E54               	movwf	vfprintf@ap^0,c
   786  0013BE  0E00               	movlw	high sprintf@ap
   787  0013C0  6E55               	movwf	(vfprintf@ap+1)^0,c
   788  0013C2  EC36  F009         	call	_vfprintf	;wreg free
   789  0013C6  0100               	movlb	0	; () banked
   790  0013C8  518C               	movf	(sprintf@f+2)& (0+255),w,b
   791  0013CA  2458               	addwf	sprintf@s^0,w,c
   792  0013CC  6ED9               	movwf	fsr2l,c
   793  0013CE  518D               	movf	(sprintf@f+3)& (0+255),w,b
   794  0013D0  2059               	addwfc	(sprintf@s+1)^0,w,c
   795  0013D2  6EDA               	movwf	fsr2h,c
   796  0013D4  0E00               	movlw	0
   797  0013D6  6EDF               	movwf	indf2,c
   798  0013D8                     
   799                           ; BSR set to: 0
   800  0013D8  0012               	return		;funcret
   801  0013DA                     __end_of_sprintf:
   802                           	callstack 0
   803                           
   804 ;; *************** function _vfprintf *****************
   805 ;; Defined at:
   806 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   809 ;;		 -> sprintf@f(6), 
   810 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   811 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
   812 ;;		 -> STR_1(3), 
   813 ;;  ap              2   83[COMRAM] PTR PTR void 
   814 ;;		 -> sprintf@ap(2), 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   817 ;;		 -> STR_5(5), STR_4(4), STR_3(3), STR_2(5), 
   818 ;;		 -> STR_1(3), 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2   79[COMRAM] int 
   821 ;; Registers used:
   822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         6       0       0       0       0       0       0       0       0
   829 ;;      Locals:         2       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         8       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    6
   835 ;; This function calls:
   836 ;;		_vfpfcnvrt
   837 ;; This function is called by:
   838 ;;		_sprintf
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text2
   843  00126C                     __ptext2:
   844                           	callstack 0
   845  00126C                     _vfprintf:
   846                           	callstack 23
   847  00126C                     
   848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   849  00126C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   850  001270  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   851  001274                     
   852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   853  001274  0E00               	movlw	0
   854  001276  0100               	movlb	0	; () banked
   855  001278  6F61               	movwf	(_nout+1)& (0+255),b
   856  00127A  0E00               	movlw	0
   857  00127C  6F60               	movwf	_nout& (0+255),b
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   860  00127E  EF54  F009         	goto	l1620
   861  001282                     l1618:
   862                           
   863                           ; BSR set to: 0
   864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   865  001282  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   866  001286  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   867  00128A  0E56               	movlw	low vfprintf@cfmt
   868  00128C  6E42               	movwf	vfpfcnvrt@fmt^0,c
   869  00128E  0E00               	movlw	high vfprintf@cfmt
   870  001290  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   871  001292  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   872  001296  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   873  00129A  EC7E  F005         	call	_vfpfcnvrt	;wreg free
   874  00129E  5040               	movf	?_vfpfcnvrt^0,w,c
   875  0012A0  0100               	movlb	0	; () banked
   876  0012A2  2760               	addwf	_nout& (0+255),f,b
   877  0012A4  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   878  0012A6  2361               	addwfc	(_nout+1)& (0+255),f,b
   879  0012A8                     l1620:
   880                           
   881                           ; BSR set to: 0
   882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   883  0012A8  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   884  0012AC  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   885  0012B0                     	if	0	;tblptru may be non-zero
   886  0012B0                     	endif
   887  0012B0                     	if	0	;tblptru may be non-zero
   888  0012B0                     	endif
   889  0012B0  0008               	tblrd		*
   890  0012B2  50F5               	movf	tablat,w,c
   891  0012B4  0900               	iorlw	0
   892  0012B6  A4D8               	btfss	status,2,c
   893  0012B8  EF60  F009         	goto	u1061
   894  0012BC  EF62  F009         	goto	u1060
   895  0012C0                     u1061:
   896  0012C0  EF41  F009         	goto	l1618
   897  0012C4                     u1060:
   898  0012C4                     
   899                           ; BSR set to: 0
   900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   901  0012C4  C060  F050         	movff	_nout,?_vfprintf
   902  0012C8  C061  F051         	movff	_nout+1,?_vfprintf+1
   903  0012CC                     
   904                           ; BSR set to: 0
   905  0012CC  0012               	return		;funcret
   906  0012CE                     __end_of_vfprintf:
   907                           	callstack 0
   908                           
   909 ;; *************** function _vfpfcnvrt *****************
   910 ;; Defined at:
   911 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   914 ;;		 -> sprintf@f(6), 
   915 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   916 ;;		 -> vfprintf@cfmt(2), 
   917 ;;  ap              2   67[COMRAM] PTR PTR void 
   918 ;;		 -> sprintf@ap(2), 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  ll              8   71[COMRAM] long long 
   921 ;;  llu             8    0        unsigned long long 
   922 ;;  f               4    0        unsigned long long 
   923 ;;  vp              3    0        PTR void 
   924 ;;  ct              3    0        unsigned char [3]
   925 ;;  cp              3    0        PTR unsigned char 
   926 ;;  i               2    0        int 
   927 ;;  done            2    0        int 
   928 ;;  c               1    0        unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2   63[COMRAM] int 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         6       0       0       0       0       0       0       0       0
   939 ;;      Locals:         8       0       0       0       0       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0
   941 ;;      Totals:        16       0       0       0       0       0       0       0       0
   942 ;;Total ram usage:       16 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    5
   945 ;; This function calls:
   946 ;;		_dtoa
   947 ;;		_fputc
   948 ;; This function is called by:
   949 ;;		_vfprintf
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text3
   954  000AFC                     __ptext3:
   955                           	callstack 0
   956  000AFC                     _vfpfcnvrt:
   957                           	callstack 23
   958  000AFC                     
   959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   960  000AFC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   961  000B00  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   962  000B04  CFDE FFF6          	movff	postinc2,tblptrl
   963  000B08  CFDD FFF7          	movff	postdec2,tblptrh
   964  000B0C                     	if	0	;tblptru may be non-zero
   965  000B0C                     	endif
   966  000B0C                     	if	0	;tblptru may be non-zero
   967  000B0C                     	endif
   968  000B0C  0008               	tblrd		*
   969  000B0E  50F5               	movf	tablat,w,c
   970  000B10  0A25               	xorlw	37
   971  000B12  A4D8               	btfss	status,2,c
   972  000B14  EF8E  F005         	goto	u991
   973  000B18  EF90  F005         	goto	u990
   974  000B1C                     u991:
   975  000B1C  EF3C  F006         	goto	l1586
   976  000B20                     u990:
   977  000B20                     
   978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   979  000B20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   980  000B24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   981  000B28  2ADE               	incf	postinc2,f,c
   982  000B2A  0E00               	movlw	0
   983  000B2C  22DD               	addwfc	postdec2,f,c
   984  000B2E                     
   985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   986  000B2E  0E00               	movlw	0
   987  000B30  0100               	movlb	0	; () banked
   988  000B32  6F63               	movwf	(_width+1)& (0+255),b
   989  000B34  0E00               	movlw	0
   990  000B36  6F62               	movwf	_width& (0+255),b
   991  000B38  C062  F05E         	movff	_width,_flags
   992  000B3C  C063  F05F         	movff	_width+1,_flags+1
   993  000B40                     
   994                           ; BSR set to: 0
   995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   996  000B40  6964               	setf	_prec& (0+255),b
   997  000B42  6965               	setf	(_prec+1)& (0+255),b
   998  000B44                     
   999                           ; BSR set to: 0
  1000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1001  000B44  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1002  000B48  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1003  000B4C  CFDE FFF6          	movff	postinc2,tblptrl
  1004  000B50  CFDD FFF7          	movff	postdec2,tblptrh
  1005  000B54                     	if	0	;tblptru may be non-zero
  1006  000B54                     	endif
  1007  000B54                     	if	0	;tblptru may be non-zero
  1008  000B54                     	endif
  1009  000B54  0008               	tblrd		*
  1010  000B56  50F5               	movf	tablat,w,c
  1011  000B58  0A64               	xorlw	100
  1012  000B5A  B4D8               	btfsc	status,2,c
  1013  000B5C  EFB2  F005         	goto	u1001
  1014  000B60  EFB4  F005         	goto	u1000
  1015  000B64                     u1001:
  1016  000B64  EFC6  F005         	goto	l1564
  1017  000B68                     u1000:
  1018  000B68                     
  1019                           ; BSR set to: 0
  1020  000B68  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1021  000B6C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1022  000B70  CFDE FFF6          	movff	postinc2,tblptrl
  1023  000B74  CFDD FFF7          	movff	postdec2,tblptrh
  1024  000B78                     	if	0	;tblptru may be non-zero
  1025  000B78                     	endif
  1026  000B78                     	if	0	;tblptru may be non-zero
  1027  000B78                     	endif
  1028  000B78  0008               	tblrd		*
  1029  000B7A  50F5               	movf	tablat,w,c
  1030  000B7C  0A69               	xorlw	105
  1031  000B7E  A4D8               	btfss	status,2,c
  1032  000B80  EFC4  F005         	goto	u1011
  1033  000B84  EFC6  F005         	goto	u1010
  1034  000B88                     u1011:
  1035  000B88  EF06  F006         	goto	l1570
  1036  000B8C                     u1010:
  1037  000B8C                     l1564:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1041  000B8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1042  000B90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1043  000B94  2ADE               	incf	postinc2,f,c
  1044  000B96  0E00               	movlw	0
  1045  000B98  22DD               	addwfc	postdec2,f,c
  1046                           
  1047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1048  000B9A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1049  000B9E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1050  000BA2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1051  000BA6  0E02               	movlw	2
  1052  000BA8  26DE               	addwf	postinc2,f,c
  1053  000BAA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1054  000BAE  0E00               	movlw	0
  1055  000BB0  22DD               	addwfc	postdec2,f,c
  1056  000BB2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1057  000BB6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1058  000BBA  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1059  000BBE  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1060  000BC2  0E00               	movlw	0
  1061  000BC4  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1062  000BC6  0EFF               	movlw	-1
  1063  000BC8  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1064  000BCA  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1065  000BCC  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1066  000BCE  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1067  000BD0  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1068  000BD2  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1069  000BD4                     
  1070                           ; BSR set to: 0
  1071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1072  000BD4  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1073  000BD8  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1074  000BDC  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1075  000BE0  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1076  000BE4  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1077  000BE8  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1078  000BEC  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1079  000BF0  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1080  000BF4  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1081  000BF8  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1082  000BFC  EC0F  F004         	call	_dtoa	;wreg free
  1083  000C00  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1084  000C04  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1085  000C08  EF57  F006         	goto	l859
  1086  000C0C                     l1570:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1090  000C0C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1091  000C10  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1092  000C14  CFDE FFF6          	movff	postinc2,tblptrl
  1093  000C18  CFDD FFF7          	movff	postdec2,tblptrh
  1094  000C1C                     	if	0	;tblptru may be non-zero
  1095  000C1C                     	endif
  1096  000C1C                     	if	0	;tblptru may be non-zero
  1097  000C1C                     	endif
  1098  000C1C  0008               	tblrd		*
  1099  000C1E  50F5               	movf	tablat,w,c
  1100  000C20  0A25               	xorlw	37
  1101  000C22  A4D8               	btfss	status,2,c
  1102  000C24  EF16  F006         	goto	u1021
  1103  000C28  EF18  F006         	goto	u1020
  1104  000C2C                     u1021:
  1105  000C2C  EF2F  F006         	goto	l1580
  1106  000C30                     u1020:
  1107  000C30                     
  1108                           ; BSR set to: 0
  1109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1110  000C30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1111  000C34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1112  000C38  2ADE               	incf	postinc2,f,c
  1113  000C3A  0E00               	movlw	0
  1114  000C3C  22DD               	addwfc	postdec2,f,c
  1115  000C3E                     
  1116                           ; BSR set to: 0
  1117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1118  000C3E  0E00               	movlw	0
  1119  000C40  6E02               	movwf	(fputc@c+1)^0,c
  1120  000C42  0E25               	movlw	37
  1121  000C44  6E01               	movwf	fputc@c^0,c
  1122  000C46  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1123  000C4A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1124  000C4E  EC70  F008         	call	_fputc	;wreg free
  1125  000C52                     l1576:
  1126                           
  1127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1128  000C52  0E00               	movlw	0
  1129  000C54  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1130  000C56  0E01               	movlw	1
  1131  000C58  6E40               	movwf	?_vfpfcnvrt^0,c
  1132  000C5A  EF57  F006         	goto	l859
  1133  000C5E                     l1580:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1137  000C5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138  000C62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139  000C66  2ADE               	incf	postinc2,f,c
  1140  000C68  0E00               	movlw	0
  1141  000C6A  22DD               	addwfc	postdec2,f,c
  1142  000C6C                     
  1143                           ; BSR set to: 0
  1144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1145  000C6C  0E00               	movlw	0
  1146  000C6E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1147  000C70  0E00               	movlw	0
  1148  000C72  6E40               	movwf	?_vfpfcnvrt^0,c
  1149  000C74  EF57  F006         	goto	l859
  1150  000C78                     l1586:
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1153  000C78  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1154  000C7C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1155  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  1156  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  1157  000C88                     	if	0	;tblptru may be non-zero
  1158  000C88                     	endif
  1159  000C88                     	if	0	;tblptru may be non-zero
  1160  000C88                     	endif
  1161  000C88  0008               	tblrd		*
  1162  000C8A  50F5               	movf	tablat,w,c
  1163  000C8C  6E01               	movwf	fputc@c^0,c
  1164  000C8E  6A02               	clrf	(fputc@c+1)^0,c
  1165  000C90  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1166  000C94  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1167  000C98  EC70  F008         	call	_fputc	;wreg free
  1168  000C9C                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1170  000C9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  000CA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  000CA4  2ADE               	incf	postinc2,f,c
  1173  000CA6  0E00               	movlw	0
  1174  000CA8  22DD               	addwfc	postdec2,f,c
  1175  000CAA  EF29  F006         	goto	l1576
  1176  000CAE                     l859:
  1177  000CAE  0012               	return		;funcret
  1178  000CB0                     __end_of_vfpfcnvrt:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _dtoa *****************
  1182 ;; Defined at:
  1183 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1186 ;;		 -> sprintf@f(6), 
  1187 ;;  d               8   29[COMRAM] long long 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  n               8   53[COMRAM] long long 
  1190 ;;  i               2   61[COMRAM] int 
  1191 ;;  s               2   51[COMRAM] int 
  1192 ;;  w               2   49[COMRAM] int 
  1193 ;;  p               2   47[COMRAM] int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   27[COMRAM] int 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:        10       0       0       0       0       0       0       0       0
  1204 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1205 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1206 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1207 ;;Total ram usage:       36 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    4
  1210 ;; This function calls:
  1211 ;;		___aodiv
  1212 ;;		___aomod
  1213 ;;		_abs
  1214 ;;		_pad
  1215 ;; This function is called by:
  1216 ;;		_vfpfcnvrt
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text4
  1221  00081E                     __ptext4:
  1222                           	callstack 0
  1223  00081E                     _dtoa:
  1224                           	callstack 23
  1225  00081E                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1227  00081E  C01E  F036         	movff	dtoa@d,dtoa@n
  1228  000822  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1229  000826  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1230  00082A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1231  00082E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1232  000832  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1233  000836  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1234  00083A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1235  00083E                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1237  00083E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1238  000840  EF24  F004         	goto	u841
  1239  000844  EF27  F004         	goto	u840
  1240  000848                     u841:
  1241  000848  0E01               	movlw	1
  1242  00084A  EF28  F004         	goto	u850
  1243  00084E                     u840:
  1244  00084E  0E00               	movlw	0
  1245  000850                     u850:
  1246  000850  6E34               	movwf	dtoa@s^0,c
  1247  000852  6A35               	clrf	(dtoa@s+1)^0,c
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1250  000854  5034               	movf	dtoa@s^0,w,c
  1251  000856  1035               	iorwf	(dtoa@s+1)^0,w,c
  1252  000858  B4D8               	btfsc	status,2,c
  1253  00085A  EF31  F004         	goto	u861
  1254  00085E  EF33  F004         	goto	u860
  1255  000862                     u861:
  1256  000862  EF43  F004         	goto	l1484
  1257  000866                     u860:
  1258  000866                     
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1260  000866  1E3D               	comf	(dtoa@n+7)^0,f,c
  1261  000868  1E3C               	comf	(dtoa@n+6)^0,f,c
  1262  00086A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1263  00086C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1264  00086E  1E39               	comf	(dtoa@n+3)^0,f,c
  1265  000870  1E38               	comf	(dtoa@n+2)^0,f,c
  1266  000872  1E37               	comf	(dtoa@n+1)^0,f,c
  1267  000874  6C36               	negf	dtoa@n^0,c
  1268  000876  0E00               	movlw	0
  1269  000878  2237               	addwfc	(dtoa@n+1)^0,f,c
  1270  00087A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1271  00087C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1272  00087E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1273  000880  223B               	addwfc	(dtoa@n+5)^0,f,c
  1274  000882  223C               	addwfc	(dtoa@n+6)^0,f,c
  1275  000884  223D               	addwfc	(dtoa@n+7)^0,f,c
  1276  000886                     l1484:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1279  000886  0100               	movlb	0	; () banked
  1280  000888  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1281  00088A  EF49  F004         	goto	u871
  1282  00088E  EF4B  F004         	goto	u870
  1283  000892                     u871:
  1284  000892  EF4C  F004         	goto	l1488
  1285  000896                     u870:
  1286  000896                     
  1287                           ; BSR set to: 0
  1288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1289  000896  925E               	bcf	_flags^0,1,c
  1290  000898                     l1488:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1294  000898  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1295  00089A  EF59  F004         	goto	u880
  1296  00089E  5165               	movf	(_prec+1)& (0+255),w,b
  1297  0008A0  E106               	bnz	u881
  1298  0008A2  0564               	decf	_prec& (0+255),w,b
  1299  0008A4  B0D8               	btfsc	status,0,c
  1300  0008A6  EF57  F004         	goto	u881
  1301  0008AA  EF59  F004         	goto	u880
  1302  0008AE                     u881:
  1303  0008AE  EF5F  F004         	goto	l832
  1304  0008B2                     u880:
  1305  0008B2                     
  1306                           ; BSR set to: 0
  1307  0008B2  0E00               	movlw	0
  1308  0008B4  6E31               	movwf	(dtoa@p+1)^0,c
  1309  0008B6  0E01               	movlw	1
  1310  0008B8  6E30               	movwf	dtoa@p^0,c
  1311  0008BA  EF63  F004         	goto	l834
  1312  0008BE                     l832:
  1313                           
  1314                           ; BSR set to: 0
  1315  0008BE  C064  F030         	movff	_prec,dtoa@p
  1316  0008C2  C065  F031         	movff	_prec+1,dtoa@p+1
  1317  0008C6                     l834:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1321  0008C6  C062  F032         	movff	_width,dtoa@w
  1322  0008CA  C063  F033         	movff	_width+1,dtoa@w+1
  1323  0008CE                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1326  0008CE  5034               	movf	dtoa@s^0,w,c
  1327  0008D0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1328  0008D2  A4D8               	btfss	status,2,c
  1329  0008D4  EF6E  F004         	goto	u891
  1330  0008D8  EF70  F004         	goto	u890
  1331  0008DC                     u891:
  1332  0008DC  EF77  F004         	goto	l1496
  1333  0008E0                     u890:
  1334  0008E0                     
  1335                           ; BSR set to: 0
  1336  0008E0  A45E               	btfss	_flags^0,2,c
  1337  0008E2  EF75  F004         	goto	u901
  1338  0008E6  EF77  F004         	goto	u900
  1339  0008EA                     u901:
  1340  0008EA  EF7A  F004         	goto	l1498
  1341  0008EE                     u900:
  1342  0008EE                     l1496:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1346  0008EE  0632               	decf	dtoa@w^0,f,c
  1347  0008F0  A0D8               	btfss	status,0,c
  1348  0008F2  0633               	decf	(dtoa@w+1)^0,f,c
  1349  0008F4                     l1498:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1353  0008F4  0E00               	movlw	0
  1354  0008F6  6E3F               	movwf	(dtoa@i+1)^0,c
  1355  0008F8  0E1F               	movlw	31
  1356  0008FA  6E3E               	movwf	dtoa@i^0,c
  1357  0008FC                     
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1360  0008FC  0E00               	movlw	0
  1361  0008FE  6F85               	movwf	(_dbuf+31)& (0+255),b
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1364  000900  EFFE  F004         	goto	l1512
  1365  000904                     l1502:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1368  000904  063E               	decf	dtoa@i^0,f,c
  1369  000906  A0D8               	btfss	status,0,c
  1370  000908  063F               	decf	(dtoa@i+1)^0,f,c
  1371  00090A                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1373  00090A  0E66               	movlw	low _dbuf
  1374  00090C  243E               	addwf	dtoa@i^0,w,c
  1375  00090E  6ED9               	movwf	fsr2l,c
  1376  000910  0E00               	movlw	high _dbuf
  1377  000912  203F               	addwfc	(dtoa@i+1)^0,w,c
  1378  000914  6EDA               	movwf	fsr2h,c
  1379  000916  C036  F001         	movff	dtoa@n,___aomod@dividend
  1380  00091A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1381  00091E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1382  000922  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1383  000926  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1384  00092A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1385  00092E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1386  000932  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1387  000936  0E0A               	movlw	10
  1388  000938  6E09               	movwf	___aomod@divisor^0,c
  1389  00093A  0E00               	movlw	0
  1390  00093C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1391  00093E  0E00               	movlw	0
  1392  000940  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1393  000942  0E00               	movlw	0
  1394  000944  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1395  000946  0E00               	movlw	0
  1396  000948  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1397  00094A  0E00               	movlw	0
  1398  00094C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1399  00094E  0E00               	movlw	0
  1400  000950  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1401  000952  0E00               	movlw	0
  1402  000954  6E10               	movwf	(___aomod@divisor+7)^0,c
  1403  000956  EC1C  F007         	call	___aomod	;wreg free
  1404  00095A  C001  F026         	movff	?___aomod,??_dtoa
  1405  00095E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1406  000962  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1407  000966  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1408  00096A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1409  00096E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1410  000972  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1411  000976  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1412  00097A  C026  F013         	movff	??_dtoa,abs@a
  1413  00097E  C028  F014         	movff	??_dtoa+2,abs@a+1
  1414  000982  EC34  F00A         	call	_abs	;wreg free
  1415  000986  5013               	movf	?_abs^0,w,c
  1416  000988  0F30               	addlw	48
  1417  00098A  6EDF               	movwf	indf2,c
  1418  00098C                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1420  00098C  0630               	decf	dtoa@p^0,f,c
  1421  00098E  A0D8               	btfss	status,0,c
  1422  000990  0631               	decf	(dtoa@p+1)^0,f,c
  1423  000992                     
  1424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1425  000992  0632               	decf	dtoa@w^0,f,c
  1426  000994  A0D8               	btfss	status,0,c
  1427  000996  0633               	decf	(dtoa@w+1)^0,f,c
  1428  000998                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1430  000998  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1431  00099C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1432  0009A0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1433  0009A4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1434  0009A8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1435  0009AC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1436  0009B0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1437  0009B4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1438  0009B8  0E0A               	movlw	10
  1439  0009BA  6E09               	movwf	___aodiv@divisor^0,c
  1440  0009BC  0E00               	movlw	0
  1441  0009BE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1442  0009C0  0E00               	movlw	0
  1443  0009C2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1444  0009C4  0E00               	movlw	0
  1445  0009C6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1446  0009C8  0E00               	movlw	0
  1447  0009CA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1448  0009CC  0E00               	movlw	0
  1449  0009CE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1450  0009D0  0E00               	movlw	0
  1451  0009D2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1452  0009D4  0E00               	movlw	0
  1453  0009D6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1454  0009D8  EC58  F006         	call	___aodiv	;wreg free
  1455  0009DC  C001  F036         	movff	?___aodiv,dtoa@n
  1456  0009E0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1457  0009E4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1458  0009E8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1459  0009EC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1460  0009F0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1461  0009F4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1462  0009F8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1463  0009FC                     l1512:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1466  0009FC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1467  0009FE  EF09  F005         	goto	u911
  1468  000A02  503F               	movf	(dtoa@i+1)^0,w,c
  1469  000A04  E108               	bnz	u910
  1470  000A06  043E               	decf	dtoa@i^0,w,c
  1471  000A08  A0D8               	btfss	status,0,c
  1472  000A0A  EF09  F005         	goto	u911
  1473  000A0E  EF0B  F005         	goto	u910
  1474  000A12                     u911:
  1475  000A12  EF3B  F005         	goto	l1522
  1476  000A16                     u910:
  1477  000A16  5036               	movf	dtoa@n^0,w,c
  1478  000A18  1037               	iorwf	(dtoa@n+1)^0,w,c
  1479  000A1A  1038               	iorwf	(dtoa@n+2)^0,w,c
  1480  000A1C  1039               	iorwf	(dtoa@n+3)^0,w,c
  1481  000A1E  103A               	iorwf	(dtoa@n+4)^0,w,c
  1482  000A20  103B               	iorwf	(dtoa@n+5)^0,w,c
  1483  000A22  103C               	iorwf	(dtoa@n+6)^0,w,c
  1484  000A24  103D               	iorwf	(dtoa@n+7)^0,w,c
  1485  000A26  A4D8               	btfss	status,2,c
  1486  000A28  EF18  F005         	goto	u921
  1487  000A2C  EF1A  F005         	goto	u920
  1488  000A30                     u921:
  1489  000A30  EF82  F004         	goto	l1502
  1490  000A34                     u920:
  1491  000A34  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1492  000A36  EF27  F005         	goto	u930
  1493  000A3A  5031               	movf	(dtoa@p+1)^0,w,c
  1494  000A3C  E106               	bnz	u931
  1495  000A3E  0430               	decf	dtoa@p^0,w,c
  1496  000A40  B0D8               	btfsc	status,0,c
  1497  000A42  EF25  F005         	goto	u931
  1498  000A46  EF27  F005         	goto	u930
  1499  000A4A                     u931:
  1500  000A4A  EF82  F004         	goto	l1502
  1501  000A4E                     u930:
  1502  000A4E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1503  000A50  EF32  F005         	goto	u941
  1504  000A54  5033               	movf	(dtoa@w+1)^0,w,c
  1505  000A56  E108               	bnz	u940
  1506  000A58  0432               	decf	dtoa@w^0,w,c
  1507  000A5A  A0D8               	btfss	status,0,c
  1508  000A5C  EF32  F005         	goto	u941
  1509  000A60  EF34  F005         	goto	u940
  1510  000A64                     u941:
  1511  000A64  EF3B  F005         	goto	l1522
  1512  000A68                     u940:
  1513  000A68  B25E               	btfsc	_flags^0,1,c
  1514  000A6A  EF39  F005         	goto	u951
  1515  000A6E  EF3B  F005         	goto	u950
  1516  000A72                     u951:
  1517  000A72  EF82  F004         	goto	l1502
  1518  000A76                     u950:
  1519  000A76                     l1522:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1522  000A76  5034               	movf	dtoa@s^0,w,c
  1523  000A78  1035               	iorwf	(dtoa@s+1)^0,w,c
  1524  000A7A  A4D8               	btfss	status,2,c
  1525  000A7C  EF42  F005         	goto	u961
  1526  000A80  EF44  F005         	goto	u960
  1527  000A84                     u961:
  1528  000A84  EF4B  F005         	goto	l1526
  1529  000A88                     u960:
  1530  000A88  A45E               	btfss	_flags^0,2,c
  1531  000A8A  EF49  F005         	goto	u971
  1532  000A8E  EF4B  F005         	goto	u970
  1533  000A92                     u971:
  1534  000A92  EF69  F005         	goto	l1536
  1535  000A96                     u970:
  1536  000A96                     l1526:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1539  000A96  063E               	decf	dtoa@i^0,f,c
  1540  000A98  A0D8               	btfss	status,0,c
  1541  000A9A  063F               	decf	(dtoa@i+1)^0,f,c
  1542  000A9C                     
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1544  000A9C  5034               	movf	dtoa@s^0,w,c
  1545  000A9E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1546  000AA0  A4D8               	btfss	status,2,c
  1547  000AA2  EF55  F005         	goto	u981
  1548  000AA6  EF57  F005         	goto	u980
  1549  000AAA                     u981:
  1550  000AAA  EF5D  F005         	goto	l1532
  1551  000AAE                     u980:
  1552  000AAE  0E00               	movlw	0
  1553  000AB0  6E2F               	movwf	(_dtoa$753+1)^0,c
  1554  000AB2  0E2B               	movlw	43
  1555  000AB4  6E2E               	movwf	_dtoa$753^0,c
  1556  000AB6  EF61  F005         	goto	l1534
  1557  000ABA                     l1532:
  1558  000ABA  0E00               	movlw	0
  1559  000ABC  6E2F               	movwf	(_dtoa$753+1)^0,c
  1560  000ABE  0E2D               	movlw	45
  1561  000AC0  6E2E               	movwf	_dtoa$753^0,c
  1562  000AC2                     l1534:
  1563  000AC2  0E66               	movlw	low _dbuf
  1564  000AC4  243E               	addwf	dtoa@i^0,w,c
  1565  000AC6  6ED9               	movwf	fsr2l,c
  1566  000AC8  0E00               	movlw	high _dbuf
  1567  000ACA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1568  000ACC  6EDA               	movwf	fsr2h,c
  1569  000ACE  C02E  FFDF         	movff	_dtoa$753,indf2
  1570  000AD2                     l1536:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1573  000AD2  C01C  F011         	movff	dtoa@fp,pad@fp
  1574  000AD6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1575  000ADA  0E66               	movlw	low _dbuf
  1576  000ADC  243E               	addwf	dtoa@i^0,w,c
  1577  000ADE  6E13               	movwf	pad@buf^0,c
  1578  000AE0  0E00               	movlw	high _dbuf
  1579  000AE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1580  000AE4  6E14               	movwf	(pad@buf+1)^0,c
  1581  000AE6  C032  F015         	movff	dtoa@w,pad@p
  1582  000AEA  C033  F016         	movff	dtoa@w+1,pad@p+1
  1583  000AEE  ECD5  F008         	call	_pad	;wreg free
  1584  000AF2  C011  F01C         	movff	?_pad,?_dtoa
  1585  000AF6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1586  000AFA  0012               	return		;funcret
  1587  000AFC                     __end_of_dtoa:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _pad *****************
  1591 ;; Defined at:
  1592 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1595 ;;		 -> sprintf@f(6), 
  1596 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1597 ;;		 -> dbuf(32), 
  1598 ;;  p               2   20[COMRAM] int 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  w               2   25[COMRAM] int 
  1601 ;;  i               2   23[COMRAM] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  2   16[COMRAM] int 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         6       0       0       0       0       0       0       0       0
  1612 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1614 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:       11 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		_fputc
  1620 ;;		_fputs
  1621 ;;		_strlen
  1622 ;; This function is called by:
  1623 ;;		_dtoa
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text5
  1628  0011AA                     __ptext5:
  1629                           	callstack 0
  1630  0011AA                     _pad:
  1631                           	callstack 23
  1632  0011AA                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1634  0011AA  A05E               	btfss	_flags^0,0,c
  1635  0011AC  EFDA  F008         	goto	u771
  1636  0011B0  EFDC  F008         	goto	u770
  1637  0011B4                     u771:
  1638  0011B4  EFE6  F008         	goto	l1440
  1639  0011B8                     u770:
  1640  0011B8                     
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1642  0011B8  C013  F00A         	movff	pad@buf,fputs@s
  1643  0011BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1644  0011C0  C011  F00C         	movff	pad@fp,fputs@fp
  1645  0011C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1646  0011C8  EC12  F00A         	call	_fputs	;wreg free
  1647  0011CC                     l1440:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1650  0011CC  BE16               	btfsc	(pad@p+1)^0,7,c
  1651  0011CE  EFEB  F008         	goto	u781
  1652  0011D2  EFED  F008         	goto	u780
  1653  0011D6                     u781:
  1654  0011D6  EFF3  F008         	goto	l1444
  1655  0011DA                     u780:
  1656  0011DA  C015  F01A         	movff	pad@p,pad@w
  1657  0011DE  C016  F01B         	movff	pad@p+1,pad@w+1
  1658  0011E2  EFF7  F008         	goto	l821
  1659  0011E6                     l1444:
  1660  0011E6  0E00               	movlw	0
  1661  0011E8  6E1B               	movwf	(pad@w+1)^0,c
  1662  0011EA  0E00               	movlw	0
  1663  0011EC  6E1A               	movwf	pad@w^0,c
  1664  0011EE                     l821:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1667  0011EE  0E00               	movlw	0
  1668  0011F0  6E19               	movwf	(pad@i+1)^0,c
  1669  0011F2  0E00               	movlw	0
  1670  0011F4  6E18               	movwf	pad@i^0,c
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1673  0011F6  EF09  F009         	goto	l1450
  1674  0011FA                     l1446:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1677  0011FA  0E00               	movlw	0
  1678  0011FC  6E02               	movwf	(fputc@c+1)^0,c
  1679  0011FE  0E20               	movlw	32
  1680  001200  6E01               	movwf	fputc@c^0,c
  1681  001202  C011  F003         	movff	pad@fp,fputc@fp
  1682  001206  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1683  00120A  EC70  F008         	call	_fputc	;wreg free
  1684  00120E                     
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1686  00120E  4A18               	infsnz	pad@i^0,f,c
  1687  001210  2A19               	incf	(pad@i+1)^0,f,c
  1688  001212                     l1450:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1691  001212  501A               	movf	pad@w^0,w,c
  1692  001214  5C18               	subwf	pad@i^0,w,c
  1693  001216  5019               	movf	(pad@i+1)^0,w,c
  1694  001218  0A80               	xorlw	128
  1695  00121A  6E17               	movwf	??_pad^0,c
  1696  00121C  501B               	movf	(pad@w+1)^0,w,c
  1697  00121E  0A80               	xorlw	128
  1698  001220  5817               	subwfb	??_pad^0,w,c
  1699  001222  A0D8               	btfss	status,0,c
  1700  001224  EF16  F009         	goto	u791
  1701  001228  EF18  F009         	goto	u790
  1702  00122C                     u791:
  1703  00122C  EFFD  F008         	goto	l1446
  1704  001230                     u790:
  1705  001230                     
  1706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1707  001230  B05E               	btfsc	_flags^0,0,c
  1708  001232  EF1D  F009         	goto	u801
  1709  001236  EF1F  F009         	goto	u800
  1710  00123A                     u801:
  1711  00123A  EF29  F009         	goto	l1454
  1712  00123E                     u800:
  1713  00123E                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1715  00123E  C013  F00A         	movff	pad@buf,fputs@s
  1716  001242  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1717  001246  C011  F00C         	movff	pad@fp,fputs@fp
  1718  00124A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1719  00124E  EC12  F00A         	call	_fputs	;wreg free
  1720  001252                     l1454:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1723  001252  C013  F001         	movff	pad@buf,strlen@s
  1724  001256  C014  F002         	movff	pad@buf+1,strlen@s+1
  1725  00125A  EC74  F00A         	call	_strlen	;wreg free
  1726  00125E  501A               	movf	pad@w^0,w,c
  1727  001260  2401               	addwf	?_strlen^0,w,c
  1728  001262  6E11               	movwf	?_pad^0,c
  1729  001264  501B               	movf	(pad@w+1)^0,w,c
  1730  001266  2002               	addwfc	(?_strlen+1)^0,w,c
  1731  001268  6E12               	movwf	(?_pad+1)^0,c
  1732  00126A  0012               	return		;funcret
  1733  00126C                     __end_of_pad:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _strlen *****************
  1737 ;; Defined at:
  1738 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1741 ;;		 -> dbuf(32), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1744 ;;		 -> dbuf(32), 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2    0[COMRAM] unsigned int 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1754 ;;      Params:         2       0       0       0       0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1757 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1758 ;;Total ram usage:        4 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_pad
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text6
  1768  0014E8                     __ptext6:
  1769                           	callstack 0
  1770  0014E8                     _strlen:
  1771                           	callstack 25
  1772  0014E8  C001  F003         	movff	strlen@s,strlen@a
  1773  0014EC  C002  F004         	movff	strlen@s+1,strlen@a+1
  1774  0014F0  EF7C  F00A         	goto	l1350
  1775  0014F4                     l1348:
  1776  0014F4  4A01               	infsnz	strlen@s^0,f,c
  1777  0014F6  2A02               	incf	(strlen@s+1)^0,f,c
  1778  0014F8                     l1350:
  1779  0014F8  C001  FFD9         	movff	strlen@s,fsr2l
  1780  0014FC  C002  FFDA         	movff	strlen@s+1,fsr2h
  1781  001500  50DF               	movf	indf2,w,c
  1782  001502  A4D8               	btfss	status,2,c
  1783  001504  EF86  F00A         	goto	u631
  1784  001508  EF88  F00A         	goto	u630
  1785  00150C                     u631:
  1786  00150C  EF7A  F00A         	goto	l1348
  1787  001510                     u630:
  1788  001510  5003               	movf	strlen@a^0,w,c
  1789  001512  5C01               	subwf	strlen@s^0,w,c
  1790  001514  6E01               	movwf	?_strlen^0,c
  1791  001516  5004               	movf	(strlen@a+1)^0,w,c
  1792  001518  5802               	subwfb	(strlen@s+1)^0,w,c
  1793  00151A  6E02               	movwf	(?_strlen+1)^0,c
  1794  00151C  0012               	return		;funcret
  1795  00151E                     __end_of_strlen:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _fputs *****************
  1799 ;; Defined at:
  1800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1803 ;;		 -> dbuf(32), 
  1804 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1805 ;;		 -> sprintf@f(6), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  i               2   14[COMRAM] int 
  1808 ;;  c               1   13[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    9[COMRAM] int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         4       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1821 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:        7 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    2
  1825 ;; This function calls:
  1826 ;;		_fputc
  1827 ;; This function is called by:
  1828 ;;		_pad
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text7
  1833  001424                     __ptext7:
  1834                           	callstack 0
  1835  001424                     _fputs:
  1836                           	callstack 23
  1837  001424  0E00               	movlw	0
  1838  001426  6E10               	movwf	(fputs@i+1)^0,c
  1839  001428  0E00               	movlw	0
  1840  00142A  6E0F               	movwf	fputs@i^0,c
  1841  00142C  EF23  F00A         	goto	l1344
  1842  001430                     l1340:
  1843  001430  C00E  F001         	movff	fputs@c,fputc@c
  1844  001434  6A02               	clrf	(fputc@c+1)^0,c
  1845  001436  C00C  F003         	movff	fputs@fp,fputc@fp
  1846  00143A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1847  00143E  EC70  F008         	call	_fputc	;wreg free
  1848  001442  4A0F               	infsnz	fputs@i^0,f,c
  1849  001444  2A10               	incf	(fputs@i+1)^0,f,c
  1850  001446                     l1344:
  1851  001446  500F               	movf	fputs@i^0,w,c
  1852  001448  240A               	addwf	fputs@s^0,w,c
  1853  00144A  6ED9               	movwf	fsr2l,c
  1854  00144C  5010               	movf	(fputs@i+1)^0,w,c
  1855  00144E  200B               	addwfc	(fputs@s+1)^0,w,c
  1856  001450  6EDA               	movwf	fsr2h,c
  1857  001452  50DF               	movf	indf2,w,c
  1858  001454  6E0E               	movwf	fputs@c^0,c
  1859  001456  500E               	movf	fputs@c^0,w,c
  1860  001458  A4D8               	btfss	status,2,c
  1861  00145A  EF31  F00A         	goto	u621
  1862  00145E  EF33  F00A         	goto	u620
  1863  001462                     u621:
  1864  001462  EF18  F00A         	goto	l1340
  1865  001466                     u620:
  1866  001466  0012               	return		;funcret
  1867  001468                     __end_of_fputs:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _fputc *****************
  1871 ;; Defined at:
  1872 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  c               2    0[COMRAM] int 
  1875 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1876 ;;		 -> sprintf@f(6), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    0[COMRAM] int 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1888 ;;      Params:         4       0       0       0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1890 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1892 ;;Total ram usage:        9 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    1
  1895 ;; This function calls:
  1896 ;;		_putch
  1897 ;; This function is called by:
  1898 ;;		_pad
  1899 ;;		_vfpfcnvrt
  1900 ;;		_fputs
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text8
  1905  0010E0                     __ptext8:
  1906                           	callstack 0
  1907  0010E0                     _fputc:
  1908                           	callstack 26
  1909  0010E0  5003               	movf	fputc@fp^0,w,c
  1910  0010E2  1004               	iorwf	(fputc@fp+1)^0,w,c
  1911  0010E4  B4D8               	btfsc	status,2,c
  1912  0010E6  EF77  F008         	goto	u581
  1913  0010EA  EF79  F008         	goto	u580
  1914  0010EE                     u581:
  1915  0010EE  EF82  F008         	goto	l1328
  1916  0010F2                     u580:
  1917  0010F2  5003               	movf	fputc@fp^0,w,c
  1918  0010F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  1919  0010F6  A4D8               	btfss	status,2,c
  1920  0010F8  EF80  F008         	goto	u591
  1921  0010FC  EF82  F008         	goto	u590
  1922  001100                     u591:
  1923  001100  EF87  F008         	goto	l1330
  1924  001104                     u590:
  1925  001104                     l1328:
  1926  001104  5001               	movf	fputc@c^0,w,c
  1927  001106  ECF5  F00A         	call	_putch
  1928  00110A  EFD4  F008         	goto	l885
  1929  00110E                     l1330:
  1930  00110E  EE20 F004          	lfsr	2,4
  1931  001112  5003               	movf	fputc@fp^0,w,c
  1932  001114  26D9               	addwf	fsr2l,f,c
  1933  001116  5004               	movf	(fputc@fp+1)^0,w,c
  1934  001118  22DA               	addwfc	fsr2h,f,c
  1935  00111A  50DE               	movf	postinc2,w,c
  1936  00111C  10DE               	iorwf	postinc2,w,c
  1937  00111E  B4D8               	btfsc	status,2,c
  1938  001120  EF94  F008         	goto	u601
  1939  001124  EF96  F008         	goto	u600
  1940  001128                     u601:
  1941  001128  EFB1  F008         	goto	l1334
  1942  00112C                     u600:
  1943  00112C  EE20 F004          	lfsr	2,4
  1944  001130  5003               	movf	fputc@fp^0,w,c
  1945  001132  26D9               	addwf	fsr2l,f,c
  1946  001134  5004               	movf	(fputc@fp+1)^0,w,c
  1947  001136  22DA               	addwfc	fsr2h,f,c
  1948  001138  EE10 F002          	lfsr	1,2
  1949  00113C  5003               	movf	fputc@fp^0,w,c
  1950  00113E  26E1               	addwf	fsr1l,f,c
  1951  001140  5004               	movf	(fputc@fp+1)^0,w,c
  1952  001142  22E2               	addwfc	fsr1h,f,c
  1953  001144  50DE               	movf	postinc2,w,c
  1954  001146  5CE6               	subwf	postinc1,w,c
  1955  001148  50E6               	movf	postinc1,w,c
  1956  00114A  0A80               	xorlw	128
  1957  00114C  6E09               	movwf	(??_fputc+4)^0,c
  1958  00114E  50DE               	movf	postinc2,w,c
  1959  001150  0A80               	xorlw	128
  1960  001152  5809               	subwfb	(??_fputc+4)^0,w,c
  1961  001154  B0D8               	btfsc	status,0,c
  1962  001156  EFAF  F008         	goto	u611
  1963  00115A  EFB1  F008         	goto	u610
  1964  00115E                     u611:
  1965  00115E  EFD4  F008         	goto	l885
  1966  001162                     u610:
  1967  001162                     l1334:
  1968  001162  EE20 F002          	lfsr	2,2
  1969  001166  5003               	movf	fputc@fp^0,w,c
  1970  001168  26D9               	addwf	fsr2l,f,c
  1971  00116A  5004               	movf	(fputc@fp+1)^0,w,c
  1972  00116C  22DA               	addwfc	fsr2h,f,c
  1973  00116E  CFDE F005          	movff	postinc2,??_fputc
  1974  001172  CFDD F006          	movff	postdec2,??_fputc+1
  1975  001176  C003  FFD9         	movff	fputc@fp,fsr2l
  1976  00117A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1977  00117E  CFDE F007          	movff	postinc2,??_fputc+2
  1978  001182  CFDD F008          	movff	postdec2,??_fputc+3
  1979  001186  5005               	movf	??_fputc^0,w,c
  1980  001188  2407               	addwf	(??_fputc+2)^0,w,c
  1981  00118A  6ED9               	movwf	fsr2l,c
  1982  00118C  5006               	movf	(??_fputc+1)^0,w,c
  1983  00118E  2008               	addwfc	(??_fputc+3)^0,w,c
  1984  001190  6EDA               	movwf	fsr2h,c
  1985  001192  C001  FFDF         	movff	fputc@c,indf2
  1986  001196  EE20 F002          	lfsr	2,2
  1987  00119A  5003               	movf	fputc@fp^0,w,c
  1988  00119C  26D9               	addwf	fsr2l,f,c
  1989  00119E  5004               	movf	(fputc@fp+1)^0,w,c
  1990  0011A0  22DA               	addwfc	fsr2h,f,c
  1991  0011A2  2ADE               	incf	postinc2,f,c
  1992  0011A4  0E00               	movlw	0
  1993  0011A6  22DD               	addwfc	postdec2,f,c
  1994  0011A8                     l885:
  1995  0011A8  0012               	return		;funcret
  1996  0011AA                     __end_of_fputc:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _putch *****************
  2000 ;; Defined at:
  2001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  c               1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  c               1    0[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_fputc
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text9
  2029  0015EA                     __ptext9:
  2030                           	callstack 0
  2031  0015EA                     _putch:
  2032                           	callstack 26
  2033  0015EA  0012               	return		;funcret
  2034  0015EC                     __end_of_putch:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _abs *****************
  2038 ;; Defined at:
  2039 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  a               2   18[COMRAM] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2   18[COMRAM] int 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         2       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        4 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_dtoa
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text10
  2067  001468                     __ptext10:
  2068                           	callstack 0
  2069  001468                     _abs:
  2070                           	callstack 26
  2071  001468  BE14               	btfsc	(abs@a+1)^0,7,c
  2072  00146A  EF41  F00A         	goto	u810
  2073  00146E  5014               	movf	(abs@a+1)^0,w,c
  2074  001470  E106               	bnz	u811
  2075  001472  0413               	decf	abs@a^0,w,c
  2076  001474  B0D8               	btfsc	status,0,c
  2077  001476  EF3F  F00A         	goto	u811
  2078  00147A  EF41  F00A         	goto	u810
  2079  00147E                     u811:
  2080  00147E  EF4F  F00A         	goto	l870
  2081  001482                     u810:
  2082  001482  C013  F015         	movff	abs@a,??_abs
  2083  001486  C014  F016         	movff	abs@a+1,??_abs+1
  2084  00148A  1E15               	comf	??_abs^0,f,c
  2085  00148C  1E16               	comf	(??_abs+1)^0,f,c
  2086  00148E  4A15               	infsnz	??_abs^0,f,c
  2087  001490  2A16               	incf	(??_abs+1)^0,f,c
  2088  001492  C015  F013         	movff	??_abs,?_abs
  2089  001496  C016  F014         	movff	??_abs+1,?_abs+1
  2090  00149A  EF53  F00A         	goto	l873
  2091  00149E                     l870:
  2092  00149E  C013  F013         	movff	abs@a,?_abs
  2093  0014A2  C014  F014         	movff	abs@a+1,?_abs+1
  2094  0014A6                     l873:
  2095  0014A6  0012               	return		;funcret
  2096  0014A8                     __end_of_abs:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function ___aomod *****************
  2100 ;; Defined at:
  2101 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  dividend        8    0[COMRAM] long long 
  2104 ;;  divisor         8    8[COMRAM] long long 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  sign            1   17[COMRAM] unsigned char 
  2107 ;;  counter         1   16[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  8    0[COMRAM] long long 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:        16       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2120 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:       18 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_dtoa
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text11
  2131  000E38                     __ptext11:
  2132                           	callstack 0
  2133  000E38                     ___aomod:
  2134                           	callstack 26
  2135  000E38  0E00               	movlw	0
  2136  000E3A  6E12               	movwf	___aomod@sign^0,c
  2137  000E3C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2138  000E3E  EF25  F007         	goto	u710
  2139  000E42  EF23  F007         	goto	u711
  2140  000E46                     u711:
  2141  000E46  EF37  F007         	goto	l1408
  2142  000E4A                     u710:
  2143  000E4A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2144  000E4C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2145  000E4E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2146  000E50  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2147  000E52  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2148  000E54  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2149  000E56  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2150  000E58  6C01               	negf	___aomod@dividend^0,c
  2151  000E5A  0E00               	movlw	0
  2152  000E5C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2153  000E5E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2154  000E60  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2155  000E62  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2156  000E64  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2157  000E66  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2158  000E68  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2159  000E6A  0E01               	movlw	1
  2160  000E6C  6E12               	movwf	___aomod@sign^0,c
  2161  000E6E                     l1408:
  2162  000E6E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2163  000E70  EF3E  F007         	goto	u720
  2164  000E74  EF3C  F007         	goto	u721
  2165  000E78                     u721:
  2166  000E78  EF4E  F007         	goto	l1412
  2167  000E7C                     u720:
  2168  000E7C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2169  000E7E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2170  000E80  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2171  000E82  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2172  000E84  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2173  000E86  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2174  000E88  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2175  000E8A  6C09               	negf	___aomod@divisor^0,c
  2176  000E8C  0E00               	movlw	0
  2177  000E8E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2178  000E90  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2179  000E92  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2180  000E94  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2181  000E96  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2182  000E98  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2183  000E9A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2184  000E9C                     l1412:
  2185  000E9C  5009               	movf	___aomod@divisor^0,w,c
  2186  000E9E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2187  000EA0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2188  000EA2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2189  000EA4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2190  000EA6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2191  000EA8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2192  000EAA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2193  000EAC  B4D8               	btfsc	status,2,c
  2194  000EAE  EF5B  F007         	goto	u731
  2195  000EB2  EF5D  F007         	goto	u730
  2196  000EB6                     u731:
  2197  000EB6  EFA5  F007         	goto	l1428
  2198  000EBA                     u730:
  2199  000EBA  0E01               	movlw	1
  2200  000EBC  6E11               	movwf	___aomod@counter^0,c
  2201  000EBE  EF6B  F007         	goto	l1418
  2202  000EC2                     l1416:
  2203  000EC2  90D8               	bcf	status,0,c
  2204  000EC4  3609               	rlcf	___aomod@divisor^0,f,c
  2205  000EC6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2206  000EC8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2207  000ECA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2208  000ECC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2209  000ECE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2210  000ED0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2211  000ED2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2212  000ED4  2A11               	incf	___aomod@counter^0,f,c
  2213  000ED6                     l1418:
  2214  000ED6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2215  000ED8  EF70  F007         	goto	u741
  2216  000EDC  EF72  F007         	goto	u740
  2217  000EE0                     u741:
  2218  000EE0  EF61  F007         	goto	l1416
  2219  000EE4                     u740:
  2220  000EE4                     l1420:
  2221  000EE4  5009               	movf	___aomod@divisor^0,w,c
  2222  000EE6  5C01               	subwf	___aomod@dividend^0,w,c
  2223  000EE8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2224  000EEA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2225  000EEC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2226  000EEE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2227  000EF0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2228  000EF2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2229  000EF4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2230  000EF6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2231  000EF8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2232  000EFA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2233  000EFC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2234  000EFE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2235  000F00  5010               	movf	(___aomod@divisor+7)^0,w,c
  2236  000F02  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2237  000F04  A0D8               	btfss	status,0,c
  2238  000F06  EF87  F007         	goto	u751
  2239  000F0A  EF89  F007         	goto	u750
  2240  000F0E                     u751:
  2241  000F0E  EF99  F007         	goto	l1424
  2242  000F12                     u750:
  2243  000F12  5009               	movf	___aomod@divisor^0,w,c
  2244  000F14  5E01               	subwf	___aomod@dividend^0,f,c
  2245  000F16  500A               	movf	(___aomod@divisor+1)^0,w,c
  2246  000F18  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2247  000F1A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2248  000F1C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2249  000F1E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2250  000F20  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2251  000F22  500D               	movf	(___aomod@divisor+4)^0,w,c
  2252  000F24  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2253  000F26  500E               	movf	(___aomod@divisor+5)^0,w,c
  2254  000F28  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2255  000F2A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2256  000F2C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2257  000F2E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2258  000F30  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2259  000F32                     l1424:
  2260  000F32  90D8               	bcf	status,0,c
  2261  000F34  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2262  000F36  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2263  000F38  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2264  000F3A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2265  000F3C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2266  000F3E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2267  000F40  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2268  000F42  3209               	rrcf	___aomod@divisor^0,f,c
  2269  000F44  2E11               	decfsz	___aomod@counter^0,f,c
  2270  000F46  EF72  F007         	goto	l1420
  2271  000F4A                     l1428:
  2272  000F4A  5012               	movf	___aomod@sign^0,w,c
  2273  000F4C  B4D8               	btfsc	status,2,c
  2274  000F4E  EFAB  F007         	goto	u761
  2275  000F52  EFAD  F007         	goto	u760
  2276  000F56                     u761:
  2277  000F56  EFBD  F007         	goto	l1432
  2278  000F5A                     u760:
  2279  000F5A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2280  000F5C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2281  000F5E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2282  000F60  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2283  000F62  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2284  000F64  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2285  000F66  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2286  000F68  6C01               	negf	___aomod@dividend^0,c
  2287  000F6A  0E00               	movlw	0
  2288  000F6C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2289  000F6E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2290  000F70  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2291  000F72  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2292  000F74  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2293  000F76  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2294  000F78  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2295  000F7A                     l1432:
  2296  000F7A  C001  F001         	movff	___aomod@dividend,?___aomod
  2297  000F7E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2298  000F82  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2299  000F86  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2300  000F8A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2301  000F8E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2302  000F92  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2303  000F96  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2304  000F9A  0012               	return		;funcret
  2305  000F9C                     __end_of___aomod:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function ___aodiv *****************
  2309 ;; Defined at:
  2310 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  dividend        8    0[COMRAM] long long 
  2313 ;;  divisor         8    8[COMRAM] long long 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  quotient        8   18[COMRAM] long long 
  2316 ;;  sign            1   17[COMRAM] unsigned char 
  2317 ;;  counter         1   16[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  8    0[COMRAM] long long 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:        16       0       0       0       0       0       0       0       0
  2328 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2330 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:       26 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_dtoa
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text12
  2341  000CB0                     __ptext12:
  2342                           	callstack 0
  2343  000CB0                     ___aodiv:
  2344                           	callstack 26
  2345  000CB0  0E00               	movlw	0
  2346  000CB2  6E12               	movwf	___aodiv@sign^0,c
  2347  000CB4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2348  000CB6  EF61  F006         	goto	u640
  2349  000CBA  EF5F  F006         	goto	u641
  2350  000CBE                     u641:
  2351  000CBE  EF73  F006         	goto	l1364
  2352  000CC2                     u640:
  2353  000CC2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2354  000CC4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2355  000CC6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2356  000CC8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2357  000CCA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2358  000CCC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2359  000CCE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2360  000CD0  6C09               	negf	___aodiv@divisor^0,c
  2361  000CD2  0E00               	movlw	0
  2362  000CD4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2363  000CD6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2364  000CD8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2365  000CDA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2366  000CDC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2367  000CDE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2368  000CE0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2369  000CE2  0E01               	movlw	1
  2370  000CE4  6E12               	movwf	___aodiv@sign^0,c
  2371  000CE6                     l1364:
  2372  000CE6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2373  000CE8  EF7A  F006         	goto	u650
  2374  000CEC  EF78  F006         	goto	u651
  2375  000CF0                     u651:
  2376  000CF0  EF8C  F006         	goto	l1370
  2377  000CF4                     u650:
  2378  000CF4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2379  000CF6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2380  000CF8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2381  000CFA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2382  000CFC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2383  000CFE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2384  000D00  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2385  000D02  6C01               	negf	___aodiv@dividend^0,c
  2386  000D04  0E00               	movlw	0
  2387  000D06  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2388  000D08  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2389  000D0A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2390  000D0C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2391  000D0E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2392  000D10  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2393  000D12  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2394  000D14  0E01               	movlw	1
  2395  000D16  1A12               	xorwf	___aodiv@sign^0,f,c
  2396  000D18                     l1370:
  2397  000D18  EE20  F013         	lfsr	2,___aodiv@quotient
  2398  000D1C  0E07               	movlw	7
  2399  000D1E                     u661:
  2400  000D1E  6ADE               	clrf	postinc2,c
  2401  000D20  06E8               	decf	wreg,f,c
  2402  000D22  E2FD               	bc	u661
  2403  000D24  5009               	movf	___aodiv@divisor^0,w,c
  2404  000D26  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2405  000D28  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2406  000D2A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2407  000D2C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2408  000D2E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2409  000D30  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2410  000D32  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2411  000D34  B4D8               	btfsc	status,2,c
  2412  000D36  EF9F  F006         	goto	u671
  2413  000D3A  EFA1  F006         	goto	u670
  2414  000D3E                     u671:
  2415  000D3E  EFF3  F006         	goto	l1392
  2416  000D42                     u670:
  2417  000D42  0E01               	movlw	1
  2418  000D44  6E11               	movwf	___aodiv@counter^0,c
  2419  000D46  EFAF  F006         	goto	l1378
  2420  000D4A                     l1376:
  2421  000D4A  90D8               	bcf	status,0,c
  2422  000D4C  3609               	rlcf	___aodiv@divisor^0,f,c
  2423  000D4E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2424  000D50  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2425  000D52  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2426  000D54  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2427  000D56  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2428  000D58  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2429  000D5A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2430  000D5C  2A11               	incf	___aodiv@counter^0,f,c
  2431  000D5E                     l1378:
  2432  000D5E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2433  000D60  EFB4  F006         	goto	u681
  2434  000D64  EFB6  F006         	goto	u680
  2435  000D68                     u681:
  2436  000D68  EFA5  F006         	goto	l1376
  2437  000D6C                     u680:
  2438  000D6C                     l1380:
  2439  000D6C  90D8               	bcf	status,0,c
  2440  000D6E  3613               	rlcf	___aodiv@quotient^0,f,c
  2441  000D70  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2442  000D72  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2443  000D74  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2444  000D76  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2445  000D78  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2446  000D7A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2447  000D7C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2448  000D7E  5009               	movf	___aodiv@divisor^0,w,c
  2449  000D80  5C01               	subwf	___aodiv@dividend^0,w,c
  2450  000D82  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2451  000D84  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2452  000D86  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2453  000D88  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2454  000D8A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2455  000D8C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2456  000D8E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2457  000D90  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2458  000D92  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2459  000D94  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2460  000D96  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2461  000D98  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2462  000D9A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2463  000D9C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2464  000D9E  A0D8               	btfss	status,0,c
  2465  000DA0  EFD4  F006         	goto	u691
  2466  000DA4  EFD6  F006         	goto	u690
  2467  000DA8                     u691:
  2468  000DA8  EFE7  F006         	goto	l1388
  2469  000DAC                     u690:
  2470  000DAC  5009               	movf	___aodiv@divisor^0,w,c
  2471  000DAE  5E01               	subwf	___aodiv@dividend^0,f,c
  2472  000DB0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2473  000DB2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2474  000DB4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2475  000DB6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2476  000DB8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2477  000DBA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2478  000DBC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2479  000DBE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2480  000DC0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2481  000DC2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2482  000DC4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2483  000DC6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2484  000DC8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2485  000DCA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2486  000DCC  8013               	bsf	___aodiv@quotient^0,0,c
  2487  000DCE                     l1388:
  2488  000DCE  90D8               	bcf	status,0,c
  2489  000DD0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2490  000DD2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2491  000DD4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2492  000DD6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2493  000DD8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2494  000DDA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2495  000DDC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2496  000DDE  3209               	rrcf	___aodiv@divisor^0,f,c
  2497  000DE0  2E11               	decfsz	___aodiv@counter^0,f,c
  2498  000DE2  EFB6  F006         	goto	l1380
  2499  000DE6                     l1392:
  2500  000DE6  5012               	movf	___aodiv@sign^0,w,c
  2501  000DE8  B4D8               	btfsc	status,2,c
  2502  000DEA  EFF9  F006         	goto	u701
  2503  000DEE  EFFB  F006         	goto	u700
  2504  000DF2                     u701:
  2505  000DF2  EF0B  F007         	goto	l1396
  2506  000DF6                     u700:
  2507  000DF6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2508  000DF8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2509  000DFA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2510  000DFC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2511  000DFE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2512  000E00  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2513  000E02  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2514  000E04  6C13               	negf	___aodiv@quotient^0,c
  2515  000E06  0E00               	movlw	0
  2516  000E08  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2517  000E0A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2518  000E0C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2519  000E0E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2520  000E10  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2521  000E12  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2522  000E14  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2523  000E16                     l1396:
  2524  000E16  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2525  000E1A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2526  000E1E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2527  000E22  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2528  000E26  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2529  000E2A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2530  000E2E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2531  000E32  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2532  000E36  0012               	return		;funcret
  2533  000E38                     __end_of___aodiv:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _LCD_String_xy *****************
  2537 ;; Defined at:
  2538 ;;		line 57 in file "LCD_16x2.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  row             1    wreg     unsigned char 
  2541 ;;  pos             1    9[COMRAM] unsigned char 
  2542 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  2543 ;;		 -> STR_7(5), STR_6(8), main@value(10), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  row             1   12[COMRAM] unsigned char 
  2546 ;;  location        1   13[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2556 ;;      Params:         3       0       0       0       0       0       0       0       0
  2557 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2559 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2560 ;;Total ram usage:        5 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    3
  2563 ;; This function calls:
  2564 ;;		_LCD_Command
  2565 ;;		_LCD_String
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text13
  2572  0014A8                     __ptext13:
  2573                           	callstack 0
  2574  0014A8                     _LCD_String_xy:
  2575                           	callstack 27
  2576                           
  2577                           ;incstack = 0
  2578                           ;LCD_String_xy@row stored from wreg
  2579  0014A8  6E0D               	movwf	LCD_String_xy@row^0,c
  2580  0014AA                     
  2581                           ;LCD_16x2.c: 60:     if(row<1)
  2582  0014AA  500D               	movf	LCD_String_xy@row^0,w,c
  2583  0014AC  A4D8               	btfss	status,2,c
  2584  0014AE  EF5B  F00A         	goto	u1141
  2585  0014B2  EF5D  F00A         	goto	u1140
  2586  0014B6                     u1141:
  2587  0014B6  EF66  F00A         	goto	l1686
  2588  0014BA                     u1140:
  2589  0014BA                     
  2590                           ;LCD_16x2.c: 61:     {;LCD_16x2.c: 62:         location=(0x80) | ((pos) & 0x0f);
  2591  0014BA  500A               	movf	LCD_String_xy@pos^0,w,c
  2592  0014BC  0B0F               	andlw	15
  2593  0014BE  0980               	iorlw	128
  2594  0014C0  6E0E               	movwf	LCD_String_xy@location^0,c
  2595  0014C2                     
  2596                           ;LCD_16x2.c: 63:         LCD_Command(location);
  2597  0014C2  500E               	movf	LCD_String_xy@location^0,w,c
  2598  0014C4  ECDA  F00A         	call	_LCD_Command
  2599                           
  2600                           ;LCD_16x2.c: 64:     }
  2601  0014C8  EF6D  F00A         	goto	l1690
  2602  0014CC                     l1686:
  2603                           
  2604                           ;LCD_16x2.c: 66:     {;LCD_16x2.c: 67:         location=(0xC0) | ((pos) & 0x0f);
  2605  0014CC  500A               	movf	LCD_String_xy@pos^0,w,c
  2606  0014CE  0B0F               	andlw	15
  2607  0014D0  09C0               	iorlw	192
  2608  0014D2  6E0E               	movwf	LCD_String_xy@location^0,c
  2609  0014D4                     
  2610                           ;LCD_16x2.c: 68:         LCD_Command(location);
  2611  0014D4  500E               	movf	LCD_String_xy@location^0,w,c
  2612  0014D6  ECDA  F00A         	call	_LCD_Command
  2613  0014DA                     l1690:
  2614                           
  2615                           ;LCD_16x2.c: 72:     LCD_String(msg);
  2616  0014DA  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  2617  0014DE  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2618  0014E2  EC67  F009         	call	_LCD_String	;wreg free
  2619  0014E6  0012               	return		;funcret
  2620  0014E8                     __end_of_LCD_String_xy:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _LCD_String *****************
  2624 ;; Defined at:
  2625 ;;		line 47 in file "LCD_16x2.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  2628 ;;		 -> STR_7(5), STR_6(8), main@value(10), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         2       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2643 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:        2 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		_LCD_Char
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;;		_LCD_String_xy
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text14
  2656  0012CE                     __ptext14:
  2657                           	callstack 0
  2658  0012CE                     _LCD_String:
  2659                           	callstack 27
  2660  0012CE                     
  2661                           ;LCD_16x2.c: 47: void LCD_String(const char *msg);LCD_16x2.c: 48: {;LCD_16x2.c: 49:  whi
      +                          le((*msg)!=0)
  2662  0012CE  EF7D  F009         	goto	l1600
  2663  0012D2                     l1596:
  2664                           
  2665                           ;LCD_16x2.c: 50:  {;LCD_16x2.c: 51:    LCD_Char(*msg);
  2666  0012D2  C008  FFF6         	movff	LCD_String@msg,tblptrl
  2667  0012D6  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  2668  0012DA  6AF8               	clrf	tblptru,c
  2669  0012DC  0E07               	movlw	(high __ramtop+-1)
  2670  0012DE  64F7               	cpfsgt	tblptrh,c
  2671  0012E0  D003               	bra	u1037
  2672  0012E2  0008               	tblrd		*
  2673  0012E4  50F5               	movf	tablat,w,c
  2674  0012E6  D005               	bra	u1030
  2675  0012E8                     u1037:
  2676  0012E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  2677  0012EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  2678  0012F0  50E7               	movf	indf1,w,c
  2679  0012F2                     u1030:
  2680  0012F2  ECCC  F00A         	call	_LCD_Char
  2681  0012F6                     
  2682                           ;LCD_16x2.c: 52:    msg++;
  2683  0012F6  4A08               	infsnz	LCD_String@msg^0,f,c
  2684  0012F8  2A09               	incf	(LCD_String@msg+1)^0,f,c
  2685  0012FA                     l1600:
  2686                           
  2687                           ;LCD_16x2.c: 49:  while((*msg)!=0)
  2688  0012FA  C008  FFF6         	movff	LCD_String@msg,tblptrl
  2689  0012FE  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  2690  001302  6AF8               	clrf	tblptru,c
  2691  001304  0E07               	movlw	(high __ramtop+-1)
  2692  001306  64F7               	cpfsgt	tblptrh,c
  2693  001308  D003               	bra	u1047
  2694  00130A  0008               	tblrd		*
  2695  00130C  50F5               	movf	tablat,w,c
  2696  00130E  D005               	bra	u1040
  2697  001310                     u1047:
  2698  001310  CFF6 FFE1          	movff	tblptrl,fsr1l
  2699  001314  CFF7 FFE2          	movff	tblptrh,fsr1h
  2700  001318  50E7               	movf	indf1,w,c
  2701  00131A                     u1040:
  2702  00131A  0900               	iorlw	0
  2703  00131C  A4D8               	btfss	status,2,c
  2704  00131E  EF93  F009         	goto	u1051
  2705  001322  EF95  F009         	goto	u1050
  2706  001326                     u1051:
  2707  001326  EF69  F009         	goto	l1596
  2708  00132A                     u1050:
  2709  00132A  0012               	return		;funcret
  2710  00132C                     __end_of_LCD_String:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _LCD_Char *****************
  2714 ;; Defined at:
  2715 ;;		line 36 in file "LCD_16x2.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  dat             1    wreg     unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  dat             1    6[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        1 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    1
  2736 ;; This function calls:
  2737 ;;		_MSdelay
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;;		_LCD_String
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text15
  2745  001598                     __ptext15:
  2746                           	callstack 0
  2747  001598                     _LCD_Char:
  2748                           	callstack 27
  2749                           
  2750                           ;incstack = 0
  2751                           ;LCD_Char@dat stored from wreg
  2752  001598  6E07               	movwf	LCD_Char@dat^0,c
  2753  00159A                     
  2754                           ;LCD_16x2.c: 36: void LCD_Char(char dat);LCD_16x2.c: 37: {;LCD_16x2.c: 38:  LATB= dat;
  2755  00159A  C007  FF8A         	movff	LCD_Char@dat,3978	;volatile
  2756  00159E                     
  2757                           ;LCD_16x2.c: 39:  LATD0 = 1;
  2758  00159E  808C               	bsf	3980,0,c	;volatile
  2759  0015A0                     
  2760                           ;LCD_16x2.c: 40:  LATD1=1;
  2761  0015A0  828C               	bsf	3980,1,c	;volatile
  2762  0015A2                     
  2763                           ;LCD_16x2.c: 41:  __nop();
  2764  0015A2  F000               	nop	
  2765  0015A4                     
  2766                           ;LCD_16x2.c: 42:  LATD1=0;
  2767  0015A4  928C               	bcf	3980,1,c	;volatile
  2768  0015A6                     
  2769                           ;LCD_16x2.c: 43:     MSdelay(1);
  2770  0015A6  0E00               	movlw	0
  2771  0015A8  6E02               	movwf	(MSdelay@val+1)^0,c
  2772  0015AA  0E01               	movlw	1
  2773  0015AC  6E01               	movwf	MSdelay@val^0,c
  2774  0015AE  ECED  F009         	call	_MSdelay	;wreg free
  2775  0015B2  0012               	return		;funcret
  2776  0015B4                     __end_of_LCD_Char:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _LCD_Init *****************
  2780 ;; Defined at:
  2781 ;;		line 9 in file "LCD_16x2.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    2
  2802 ;; This function calls:
  2803 ;;		_LCD_Command
  2804 ;;		_MSdelay
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text16
  2811  00151E                     __ptext16:
  2812                           	callstack 0
  2813  00151E                     _LCD_Init:
  2814                           	callstack 28
  2815  00151E                     
  2816                           ;LCD_16x2.c: 11:     TRISD = 0x00;
  2817  00151E  0E00               	movlw	0
  2818  001520  6E95               	movwf	149,c	;volatile
  2819                           
  2820                           ;LCD_16x2.c: 12:     TRISB = 0x00;
  2821  001522  0E00               	movlw	0
  2822  001524  6E93               	movwf	147,c	;volatile
  2823  001526                     
  2824                           ;LCD_16x2.c: 13:     MSdelay(20);
  2825  001526  0E00               	movlw	0
  2826  001528  6E02               	movwf	(MSdelay@val+1)^0,c
  2827  00152A  0E14               	movlw	20
  2828  00152C  6E01               	movwf	MSdelay@val^0,c
  2829  00152E  ECED  F009         	call	_MSdelay	;wreg free
  2830  001532                     
  2831                           ;LCD_16x2.c: 14:  LCD_Command(0x38);
  2832  001532  0E38               	movlw	56
  2833  001534  ECDA  F00A         	call	_LCD_Command
  2834  001538                     
  2835                           ;LCD_16x2.c: 15:     LCD_Command(0x01);
  2836  001538  0E01               	movlw	1
  2837  00153A  ECDA  F00A         	call	_LCD_Command
  2838  00153E                     
  2839                           ;LCD_16x2.c: 16:     LCD_Command(0x0c);
  2840  00153E  0E0C               	movlw	12
  2841  001540  ECDA  F00A         	call	_LCD_Command
  2842  001544                     
  2843                           ;LCD_16x2.c: 17:     LCD_Command(0x06);
  2844  001544  0E06               	movlw	6
  2845  001546  ECDA  F00A         	call	_LCD_Command
  2846  00154A  0012               	return		;funcret
  2847  00154C                     __end_of_LCD_Init:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _LCD_Command *****************
  2851 ;; Defined at:
  2852 ;;		line 26 in file "LCD_16x2.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  cmd             1    wreg     unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  cmd             1    6[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2869 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2870 ;;Total ram usage:        1 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    1
  2873 ;; This function calls:
  2874 ;;		_MSdelay
  2875 ;; This function is called by:
  2876 ;;		_LCD_Init
  2877 ;;		_LCD_String_xy
  2878 ;;		_LCD_Clear
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text17
  2883  0015B4                     __ptext17:
  2884                           	callstack 0
  2885  0015B4                     _LCD_Command:
  2886                           	callstack 28
  2887                           
  2888                           ;incstack = 0
  2889                           ;LCD_Command@cmd stored from wreg
  2890  0015B4  6E07               	movwf	LCD_Command@cmd^0,c
  2891  0015B6                     
  2892                           ;LCD_16x2.c: 26: void LCD_Command(char cmd );LCD_16x2.c: 27: {;LCD_16x2.c: 28:  LATB= cm
      +                          d;
  2893  0015B6  C007  FF8A         	movff	LCD_Command@cmd,3978	;volatile
  2894  0015BA                     
  2895                           ;LCD_16x2.c: 29:  LATD0 = 0;
  2896  0015BA  908C               	bcf	3980,0,c	;volatile
  2897  0015BC                     
  2898                           ;LCD_16x2.c: 30:  LATD1 = 1;
  2899  0015BC  828C               	bsf	3980,1,c	;volatile
  2900  0015BE                     
  2901                           ;LCD_16x2.c: 31:  __nop();
  2902  0015BE  F000               	nop	
  2903  0015C0                     
  2904                           ;LCD_16x2.c: 32:  LATD1 = 0;
  2905  0015C0  928C               	bcf	3980,1,c	;volatile
  2906  0015C2                     
  2907                           ;LCD_16x2.c: 33:     MSdelay(3);
  2908  0015C2  0E00               	movlw	0
  2909  0015C4  6E02               	movwf	(MSdelay@val+1)^0,c
  2910  0015C6  0E03               	movlw	3
  2911  0015C8  6E01               	movwf	MSdelay@val^0,c
  2912  0015CA  ECED  F009         	call	_MSdelay	;wreg free
  2913  0015CE  0012               	return		;funcret
  2914  0015D0                     __end_of_LCD_Command:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _MSdelay *****************
  2918 ;; Defined at:
  2919 ;;		line 76 in file "LCD_16x2.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  val             2    0[COMRAM] unsigned int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  j               2    4[COMRAM] unsigned int 
  2924 ;;  i               2    2[COMRAM] unsigned int 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         2       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        6 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;;		_LCD_Init
  2945 ;;		_LCD_Command
  2946 ;;		_LCD_Char
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text18
  2951  0013DA                     __ptext18:
  2952                           	callstack 0
  2953  0013DA                     _MSdelay:
  2954                           	callstack 30
  2955  0013DA                     
  2956                           ;LCD_16x2.c: 76: void MSdelay(unsigned int val);LCD_16x2.c: 77: {;LCD_16x2.c: 78:      u
      +                          nsigned int i,j;;LCD_16x2.c: 79:         for(i=0;i<=val;i++)
  2957  0013DA  0E00               	movlw	0
  2958  0013DC  6E04               	movwf	(MSdelay@i+1)^0,c
  2959  0013DE  0E00               	movlw	0
  2960  0013E0  6E03               	movwf	MSdelay@i^0,c
  2961  0013E2  EF06  F00A         	goto	l1476
  2962  0013E6                     l1464:
  2963                           
  2964                           ;LCD_16x2.c: 80:             for(j=0;j<81;j++);
  2965  0013E6  0E00               	movlw	0
  2966  0013E8  6E06               	movwf	(MSdelay@j+1)^0,c
  2967  0013EA  0E00               	movlw	0
  2968  0013EC  6E05               	movwf	MSdelay@j^0,c
  2969  0013EE                     l1470:
  2970  0013EE  4A05               	infsnz	MSdelay@j^0,f,c
  2971  0013F0  2A06               	incf	(MSdelay@j+1)^0,f,c
  2972  0013F2  5006               	movf	(MSdelay@j+1)^0,w,c
  2973  0013F4  E109               	bnz	u820
  2974  0013F6  0E51               	movlw	81
  2975  0013F8  5C05               	subwf	MSdelay@j^0,w,c
  2976  0013FA  A0D8               	btfss	status,0,c
  2977  0013FC  EF02  F00A         	goto	u821
  2978  001400  EF04  F00A         	goto	u820
  2979  001404                     u821:
  2980  001404  EFF7  F009         	goto	l1470
  2981  001408                     u820:
  2982  001408  4A03               	infsnz	MSdelay@i^0,f,c
  2983  00140A  2A04               	incf	(MSdelay@i+1)^0,f,c
  2984  00140C                     l1476:
  2985  00140C  5003               	movf	MSdelay@i^0,w,c
  2986  00140E  5C01               	subwf	MSdelay@val^0,w,c
  2987  001410  5004               	movf	(MSdelay@i+1)^0,w,c
  2988  001412  5802               	subwfb	(MSdelay@val+1)^0,w,c
  2989  001414  B0D8               	btfsc	status,0,c
  2990  001416  EF0F  F00A         	goto	u831
  2991  00141A  EF11  F00A         	goto	u830
  2992  00141E                     u831:
  2993  00141E  EFF3  F009         	goto	l1464
  2994  001422                     u830:
  2995  001422  0012               	return		;funcret
  2996  001424                     __end_of_MSdelay:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _DHT11_Start *****************
  3000 ;; Defined at:
  3001 ;;		line 90 in file "humidity_Temp.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text19
  3029  001578                     __ptext19:
  3030                           	callstack 0
  3031  001578                     _DHT11_Start:
  3032                           	callstack 30
  3033  001578                     
  3034                           ;humidity_Temp.c: 92:     TRISAbits.RA0 = 0;
  3035  001578  9092               	bcf	146,0,c	;volatile
  3036                           
  3037                           ;humidity_Temp.c: 93:     LATA0 = 0;
  3038  00157A  9089               	bcf	3977,0,c	;volatile
  3039  00157C                     
  3040                           ;humidity_Temp.c: 94:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3041  00157C  0E2F               	movlw	47
  3042  00157E  6E01               	movwf	??_DHT11_Start^0,c
  3043  001580  0EC0               	movlw	192
  3044  001582                     u1157:
  3045  001582  2EE8               	decfsz	wreg,f,c
  3046  001584  D7FE               	bra	u1157
  3047  001586  2E01               	decfsz	??_DHT11_Start^0,f,c
  3048  001588  D7FC               	bra	u1157
  3049  00158A                     
  3050                           ;humidity_Temp.c: 95:     LATA0 = 1;
  3051  00158A  8089               	bsf	3977,0,c	;volatile
  3052                           
  3053                           ;humidity_Temp.c: 96:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  3054  00158C  0E0D               	movlw	13
  3055  00158E                     u1167:
  3056  00158E  2EE8               	decfsz	wreg,f,c
  3057  001590  D7FE               	bra	u1167
  3058  001592  F000               	nop	
  3059  001594                     
  3060                           ;humidity_Temp.c: 97:     TRISAbits.RA0 = 1;
  3061  001594  8092               	bsf	146,0,c	;volatile
  3062  001596  0012               	return		;funcret
  3063  001598                     __end_of_DHT11_Start:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _DHT11_ReadData *****************
  3067 ;; Defined at:
  3068 ;;		line 74 in file "humidity_Temp.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  data            1    1[COMRAM] unsigned char 
  3073 ;;  i               1    0[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      unsigned char 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0
  3084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3087 ;;Total ram usage:        2 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text20
  3097  00132C                     __ptext20:
  3098                           	callstack 0
  3099  00132C                     _DHT11_ReadData:
  3100                           	callstack 30
  3101  00132C                     
  3102                           ;humidity_Temp.c: 76:   char i,data = 0;
  3103  00132C  0E00               	movlw	0
  3104  00132E  6E02               	movwf	DHT11_ReadData@data^0,c
  3105                           
  3106                           ;humidity_Temp.c: 77:     for(i=0;i<8;i++)
  3107  001330  0E00               	movlw	0
  3108  001332  6E01               	movwf	DHT11_ReadData@i^0,c
  3109  001334                     l43:
  3110  001334  A080               	btfss	128,0,c	;volatile
  3111  001336  EF9F  F009         	goto	u1101
  3112  00133A  EFA1  F009         	goto	u1100
  3113  00133E                     u1101:
  3114  00133E  EF9A  F009         	goto	l43
  3115  001342                     u1100:
  3116  001342                     
  3117                           ;humidity_Temp.c: 80:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  3118  001342  0E14               	movlw	20
  3119  001344                     u1177:
  3120  001344  2EE8               	decfsz	wreg,f,c
  3121  001346  D7FE               	bra	u1177
  3122  001348                     
  3123                           ;humidity_Temp.c: 81:         if(PORTAbits.RA0 & 1)
  3124  001348  A080               	btfss	128,0,c	;volatile
  3125  00134A  EFA9  F009         	goto	u1111
  3126  00134E  EFAB  F009         	goto	u1110
  3127  001352                     u1111:
  3128  001352  EFAF  F009         	goto	l1656
  3129  001356                     u1110:
  3130  001356                     
  3131                           ;humidity_Temp.c: 82:           data = ((data<<1) | 1);
  3132  001356  80D8               	bsf	status,0,c
  3133  001358  3602               	rlcf	DHT11_ReadData@data^0,f,c
  3134  00135A  EFB2  F009         	goto	l48
  3135  00135E                     l1656:
  3136                           
  3137                           ;humidity_Temp.c: 84:           data = (data<<1);
  3138  00135E  5002               	movf	DHT11_ReadData@data^0,w,c
  3139  001360  2402               	addwf	DHT11_ReadData@data^0,w,c
  3140  001362  6E02               	movwf	DHT11_ReadData@data^0,c
  3141  001364                     l48:
  3142  001364  B080               	btfsc	128,0,c	;volatile
  3143  001366  EFB7  F009         	goto	u1121
  3144  00136A  EFB9  F009         	goto	u1120
  3145  00136E                     u1121:
  3146  00136E  EFB2  F009         	goto	l48
  3147  001372                     u1120:
  3148  001372                     
  3149                           ;humidity_Temp.c: 86:     }
  3150  001372  2A01               	incf	DHT11_ReadData@i^0,f,c
  3151  001374  0E07               	movlw	7
  3152  001376  6401               	cpfsgt	DHT11_ReadData@i^0,c
  3153  001378  EFC0  F009         	goto	u1131
  3154  00137C  EFC2  F009         	goto	u1130
  3155  001380                     u1131:
  3156  001380  EF9A  F009         	goto	l43
  3157  001384                     u1130:
  3158  001384                     
  3159                           ;humidity_Temp.c: 87:   return data;
  3160  001384  5002               	movf	DHT11_ReadData@data^0,w,c
  3161  001386  0012               	return		;funcret
  3162  001388                     __end_of_DHT11_ReadData:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _DHT11_CheckResponse *****************
  3166 ;; Defined at:
  3167 ;;		line 101 in file "humidity_Temp.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		None
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text21
  3195  00154C                     __ptext21:
  3196                           	callstack 0
  3197  00154C                     _DHT11_CheckResponse:
  3198                           	callstack 30
  3199  00154C                     l57:
  3200  00154C  B080               	btfsc	128,0,c	;volatile
  3201  00154E  EFAB  F00A         	goto	u1071
  3202  001552  EFAD  F00A         	goto	u1070
  3203  001556                     u1071:
  3204  001556  EFA6  F00A         	goto	l57
  3205  00155A                     u1070:
  3206  00155A                     l60:
  3207  00155A  A080               	btfss	128,0,c	;volatile
  3208  00155C  EFB2  F00A         	goto	u1081
  3209  001560  EFB4  F00A         	goto	u1080
  3210  001564                     u1081:
  3211  001564  EFAD  F00A         	goto	l60
  3212  001568                     u1080:
  3213  001568                     l63:
  3214  001568  B080               	btfsc	128,0,c	;volatile
  3215  00156A  EFB9  F00A         	goto	u1091
  3216  00156E  EFBB  F00A         	goto	u1090
  3217  001572                     u1091:
  3218  001572  EFB4  F00A         	goto	l63
  3219  001576                     u1090:
  3220  001576  0012               	return		;funcret
  3221  001578                     __end_of_DHT11_CheckResponse:
  3222                           	callstack 0
  3223                           
  3224                           	psect	rparam
  3225  0000                     
  3226                           	psect	idloc
  3227                           
  3228                           ;Config register IDLOC0 @ 0x200000
  3229                           ;	unspecified, using default values
  3230  200000                     	org	2097152
  3231  200000  FF                 	db	255
  3232                           
  3233                           ;Config register IDLOC1 @ 0x200001
  3234                           ;	unspecified, using default values
  3235  200001                     	org	2097153
  3236  200001  FF                 	db	255
  3237                           
  3238                           ;Config register IDLOC2 @ 0x200002
  3239                           ;	unspecified, using default values
  3240  200002                     	org	2097154
  3241  200002  FF                 	db	255
  3242                           
  3243                           ;Config register IDLOC3 @ 0x200003
  3244                           ;	unspecified, using default values
  3245  200003                     	org	2097155
  3246  200003  FF                 	db	255
  3247                           
  3248                           ;Config register IDLOC4 @ 0x200004
  3249                           ;	unspecified, using default values
  3250  200004                     	org	2097156
  3251  200004  FF                 	db	255
  3252                           
  3253                           ;Config register IDLOC5 @ 0x200005
  3254                           ;	unspecified, using default values
  3255  200005                     	org	2097157
  3256  200005  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC6 @ 0x200006
  3259                           ;	unspecified, using default values
  3260  200006                     	org	2097158
  3261  200006  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC7 @ 0x200007
  3264                           ;	unspecified, using default values
  3265  200007                     	org	2097159
  3266  200007  FF                 	db	255
  3267                           
  3268                           	psect	config
  3269                           
  3270                           ;Config register CONFIG1L @ 0x300000
  3271                           ;	PLL Prescaler Selection bits
  3272                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3273                           ;	System Clock Postscaler Selection bits
  3274                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3275                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3276                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3277  300000                     	org	3145728
  3278  300000  00                 	db	0
  3279                           
  3280                           ;Config register CONFIG1H @ 0x300001
  3281                           ;	Oscillator Selection bits
  3282                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3283                           ;	Fail-Safe Clock Monitor Enable bit
  3284                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3285                           ;	Internal/External Oscillator Switchover bit
  3286                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3287  300001                     	org	3145729
  3288  300001  09                 	db	9
  3289                           
  3290                           ;Config register CONFIG2L @ 0x300002
  3291                           ;	Power-up Timer Enable bit
  3292                           ;	PWRT = OFF, PWRT disabled
  3293                           ;	Brown-out Reset Enable bits
  3294                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3295                           ;	Brown-out Reset Voltage bits
  3296                           ;	BORV = 3, Minimum setting 2.05V
  3297                           ;	USB Voltage Regulator Enable bit
  3298                           ;	VREGEN = OFF, USB voltage regulator disabled
  3299  300002                     	org	3145730
  3300  300002  1F                 	db	31
  3301                           
  3302                           ;Config register CONFIG2H @ 0x300003
  3303                           ;	Watchdog Timer Enable bit
  3304                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3305                           ;	Watchdog Timer Postscale Select bits
  3306                           ;	WDTPS = 32768, 1:32768
  3307  300003                     	org	3145731
  3308  300003  1E                 	db	30
  3309                           
  3310                           ; Padding undefined space
  3311  300004                     	org	3145732
  3312  300004  FF                 	db	255
  3313                           
  3314                           ;Config register CONFIG3H @ 0x300005
  3315                           ;	CCP2 MUX bit
  3316                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3317                           ;	PORTB A/D Enable bit
  3318                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3319                           ;	Low-Power Timer 1 Oscillator Enable bit
  3320                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3321                           ;	MCLR Pin Enable bit
  3322                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3323  300005                     	org	3145733
  3324  300005  00                 	db	0
  3325                           
  3326                           ;Config register CONFIG4L @ 0x300006
  3327                           ;	Stack Full/Underflow Reset Enable bit
  3328                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3329                           ;	Single-Supply ICSP Enable bit
  3330                           ;	LVP = OFF, Single-Supply ICSP disabled
  3331                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3332                           ;	ICPRT = OFF, ICPORT disabled
  3333                           ;	Extended Instruction Set Enable bit
  3334                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3335                           ;	Background Debugger Enable bit
  3336                           ;	DEBUG = 0x1, unprogrammed default
  3337  300006                     	org	3145734
  3338  300006  81                 	db	129
  3339                           
  3340                           ; Padding undefined space
  3341  300007                     	org	3145735
  3342  300007  FF                 	db	255
  3343                           
  3344                           ;Config register CONFIG5L @ 0x300008
  3345                           ;	Code Protection bit
  3346                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3347                           ;	Code Protection bit
  3348                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3349                           ;	Code Protection bit
  3350                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3351                           ;	Code Protection bit
  3352                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3353  300008                     	org	3145736
  3354  300008  0F                 	db	15
  3355                           
  3356                           ;Config register CONFIG5H @ 0x300009
  3357                           ;	Boot Block Code Protection bit
  3358                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3359                           ;	Data EEPROM Code Protection bit
  3360                           ;	CPD = OFF, Data EEPROM is not code-protected
  3361  300009                     	org	3145737
  3362  300009  C0                 	db	192
  3363                           
  3364                           ;Config register CONFIG6L @ 0x30000A
  3365                           ;	Write Protection bit
  3366                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3367                           ;	Write Protection bit
  3368                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3369                           ;	Write Protection bit
  3370                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3371                           ;	Write Protection bit
  3372                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3373  30000A                     	org	3145738
  3374  30000A  0F                 	db	15
  3375                           
  3376                           ;Config register CONFIG6H @ 0x30000B
  3377                           ;	Configuration Register Write Protection bit
  3378                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3379                           ;	Boot Block Write Protection bit
  3380                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3381                           ;	Data EEPROM Write Protection bit
  3382                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3383  30000B                     	org	3145739
  3384  30000B  E0                 	db	224
  3385                           
  3386                           ;Config register CONFIG7L @ 0x30000C
  3387                           ;	Table Read Protection bit
  3388                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3389                           ;	Table Read Protection bit
  3390                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3391                           ;	Table Read Protection bit
  3392                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3393                           ;	Table Read Protection bit
  3394                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3395  30000C                     	org	3145740
  3396  30000C  0F                 	db	15
  3397                           
  3398                           ;Config register CONFIG7H @ 0x30000D
  3399                           ;	Boot Block Table Read Protection bit
  3400                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3401  30000D                     	org	3145741
  3402  30000D  40                 	db	64
  3403                           tosu	equ	0xFFF
  3404                           tosh	equ	0xFFE
  3405                           tosl	equ	0xFFD
  3406                           stkptr	equ	0xFFC
  3407                           pclatu	equ	0xFFB
  3408                           pclath	equ	0xFFA
  3409                           pcl	equ	0xFF9
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           indf0	equ	0xFEF
  3417                           postinc0	equ	0xFEE
  3418                           postdec0	equ	0xFED
  3419                           preinc0	equ	0xFEC
  3420                           plusw0	equ	0xFEB
  3421                           fsr0h	equ	0xFEA
  3422                           fsr0l	equ	0xFE9
  3423                           wreg	equ	0xFE8
  3424                           indf1	equ	0xFE7
  3425                           postinc1	equ	0xFE6
  3426                           postdec1	equ	0xFE5
  3427                           preinc1	equ	0xFE4
  3428                           plusw1	equ	0xFE3
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           bsr	equ	0xFE0
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           preinc2	equ	0xFDC
  3436                           plusw2	equ	0xFDB
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     25      63
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S680_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@value(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[5]), STR_6(CODE[8]), main@value(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[5]), STR_6(CODE[8]), main@value(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   11669
                                             10 BANK0     15    15      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7064
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1852
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     691
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     814
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     396
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _LCD_Char
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      3F       5       39.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 03 09:56:17 2020

                main@Checksum 009E                  ?_LCD_Command 0001                            l51 1386  
                          l43 1334                            l60 155A                            l54 1596  
                          l63 1568                            l48 1364                            l57 154C  
                          l66 1576                            l91 15CE                            l85 154A  
                          l94 15B2                   ?_LCD_String 0008                           l100 132A  
                         l113 1422                           l105 14E6                           l230 0E36  
                         l243 0F9A                           l821 11EE                           l902 151C  
                         l824 1230                           l832 08BE                           l826 126A  
                         l834 08C6                           l852 0AFA                           l870 149E  
                         l873 14A6                           l865 12C4                           l866 12CC  
                         l794 13D8                           l859 0CAE                           l885 11A8  
                         l893 1466                           l896 15EA                 main@T_Decimal 009C  
                         u600 112C                           u601 1128                           u610 1162  
                         u611 115E                           u700 0DF6                           u620 1466  
                         u701 0DF2                           u621 1462                           u710 0E4A  
                         u630 1510                           u711 0E46                           u631 150C  
                         u640 0CC2                           u720 0E7C                           u800 123E  
                         u641 0CBE                           u721 0E78                           u801 123A  
                         u650 0CF4                           u730 0EBA                           u810 1482  
                         u651 0CF0                           u731 0EB6                           u811 147E  
                         u820 1408                           u740 0EE4                           u580 10F2  
                         u900 08EE                           u821 1404                           u661 0D1E  
                         u741 0EE0                           u581 10EE                           u901 08EA  
                         u830 1422                           u670 0D42                           u750 0F12  
                         u590 1104                           u910 0A16                           u831 141E  
                         u671 0D3E                           u751 0F0E                           u591 1100  
                         u911 0A12                           u680 0D6C                           u760 0F5A  
                         u920 0A34                           u840 084E                           u681 0D68  
                         u761 0F56                           u921 0A30                           u841 0848  
                         u690 0DAC                           u770 11B8                           u930 0A4E  
                         u850 0850                           u691 0DA8                           u771 11B4  
                         u931 0A4A                           u780 11DA                           u940 0A68  
                         u860 0866                           u781 11D6                           u941 0A64  
                         u861 0862                           u790 1230                           u950 0A76  
                         u870 0896                           u791 122C                           u951 0A72  
                         u871 0892                           u960 0A88                           u880 08B2  
                         u961 0A84                           u881 08AE                           u970 0A96  
                         u890 08E0                           u971 0A92                           u891 08DC  
                         u980 0AAE                           u981 0AAA                           u990 0B20  
                         u991 0B1C                           _abs 1468                           _pad 11AA  
                         wreg 000FE8                   LCD_Char@dat 0007                          ?_abs 0013  
                        l1400 0E38                          l1410 0E7C                          l1402 0E3C  
                        l1330 110E                          l1420 0EE4                          l1412 0E9C  
                        l1404 0E4A                          l1332 112C                          l1324 10E0  
                        l1340 1430                          l1500 08FC                          l1430 0F5A  
                        l1422 0F12                          l1414 0EBA                          l1406 0E6A  
                        l1334 1162                          l1326 10F2                          l1342 1442  
                        l1350 14F8                          l1510 0998                          l1502 0904  
                        l1600 12FA                          l1360 0CC2                          l1432 0F7A  
                        l1424 0F32                          l1416 0EC2                          l1408 0E6E  
                        l1328 1104                          l1344 1446                          l1352 1510  
                        l1440 11CC                          l1520 0A68                          l1504 090A  
                        l1512 09FC                          l1610 15C0                          l1602 15B6  
                        l1370 0D18                          l1362 0CE2                          l1426 0F44  
                        l1418 0ED6                          l1338 1424                          l1346 14E8  
                        l1450 1212                          l1442 11DA                          l1530 0AAE  
                        l1514 0A16                          l1522 0A76                          l1506 098C  
                        l1612 15C2                          l1604 15BA                          l1540 159A  
                        l1380 0D6C                          l1372 0D24                          l1364 0CE6  
                        l1356 0CB0                          l1428 0F4A                          l1460 1482  
                        l1348 14F4                          l1452 123E                          l1444 11E6  
                        l1436 11AA                          l1532 0ABA                          l1524 0A88  
                        l1516 0A34                          l1508 0992                          l1620 12A8  
                        l1700 0FAC                          l1470 13EE                          l1462 13DA  
                        l1606 15BC                          l1630 153E                          l1622 151E  
                        l1550 15A6                          l1542 159E                          l1390 0DE0  
                        l1382 0D7E                          l1374 0D42                          l1366 0CF4  
                        l1358 0CB4                          l1454 1252                          l1446 11FA  
                        l1438 11B8                          l1534 0AC2                          l1526 0A96  
                        l1518 0A4E                          l1614 126C                          l1710 0FD0  
                        l1702 0FB0                          l1640 1594                          l1472 13F2  
                        l1464 13E6                          l1608 15BE                          l1632 1544  
                        l1624 1526                          l1544 15A0                          l1384 0DAC  
                        l1376 0D4A                          l1392 0DE6                          l1368 0D14  
                        l1448 120E                          l1528 0A9C                          l1536 0AD2  
                        l1480 083E                          l1560 0B44                          l1552 0AFC  
                        l1616 1274                          l1720 102A                          l1712 0FD8  
                        l1704 0FB8                          l1642 154C                          l1650 1342  
                        l1634 1578                          l1474 1408                          l1626 1532  
                        l1546 15A2                          l1394 0DF6                          l1386 0DCC  
                        l1378 0D5E                          l1458 1468                          l1490 08B2  
                        l1482 0866                          l1570 0C0C                          l1562 0B68  
                        l1554 0B20                          l1618 1282                          l1730 1082  
                        l1722 1030                          l1714 0FF2                          l1706 0FC0  
                        l1660 1374                          l1652 1348                          l1644 132C  
                        l1636 157C                          l1476 140C                          l1628 1538  
                        l1548 15A4                          l1396 0E16                          l1388 0DCE  
                        l1492 08CE                          l1484 0886                          l1572 0C30  
                        l1580 0C5E                          l1564 0B8C                          l1556 0B2E  
                        l1740 10CC                          l1732 1088                          l1724 104A  
                        l1716 1004                          l1708 0FC8                          l1662 1384  
                        l1654 1356                          l1638 158A                          l1494 08E0  
                        l1486 0896                          l1478 081E                          l1582 0C6C  
                        l1574 0C3E                          l1566 0BD4                          l1558 0B40  
                        l1670 13A2                          l1734 108E                          l1726 105C  
                        l1718 101E                          l1656 135E                          l1680 14AA  
                        l1496 08EE                          l1488 0898                          l1576 0C52  
                        l1672 13AA                          l1736 10A8                          l1728 1076  
                        l1658 1372                          l1594 12CE                          l1690 14DA  
                        l1682 14BA                          l1498 08F4                          l1586 0C78  
                        l1674 13C6                          l1666 1388                          l1738 10BA  
                        l1596 12D2                          l1684 14C2                          l1588 0C9C  
                        l1668 139A                          l1692 0F9C                          l1598 12F6  
                        l1686 14CC                          l1678 14AA                          l1694 0FA0  
                        l1688 14D4                          l1696 0FA4                          l1698 0FA8  
                        ?_pad 0011                          STR_1 0819                          STR_2 080E  
                        STR_3 0819                          STR_4 0818                          STR_5 0809  
                        STR_6 0801                          STR_7 0813                          u1000 0B68  
                        u1001 0B64                          u1010 0B8C                          u1011 0B88  
                        u1100 1342                          u1020 0C30                          u1101 133E  
                        u1021 0C2C                          u1110 1356                          u1030 12F2  
                        u1111 1352                          u1120 1372                          u1040 131A  
                        u1121 136E                          u1130 1384                          u1050 132A  
                        u1131 1380                          u1051 1326                          u1140 14BA  
                        u1060 12C4                          u1037 12E8                          u1141 14B6  
                        u1061 12C0                          u1070 155A                          u1071 1556  
                        u1047 1310                          u1080 1568                          u1081 1564  
                        u1090 1576                          u1091 1572                          u1157 1582  
                        _LATB 000F8A                          u1167 158E                          u1177 1344  
                        abs@a 0013                          _dbuf 0066                          _main 0F9C  
                        _dtoa 081E                          _prec 0064                          _nout 0060  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 001A                          fsr2l 000FD9  
                        start 0000               __end_of_MSdelay 1424              ??_DHT11_ReadData 0001  
               _LCD_String_xy 14A8          __size_of_DHT11_Start 0020                  ___param_bank 000000  
              main@T_Integral 009D                         ??_abs 0015                         ??_pad 0017  
            __end_of_LCD_Char 15B4              __end_of_LCD_Init 154C               __end_of___aodiv 0E38  
                       ?_main 0001                         ?_dtoa 001C               __end_of___aomod 0F9C  
                       _LATA0 007C48                         _LATD0 007C60                         _LATD1 007C61  
                vfpfcnvrt@fmt 0042                         _TRISB 000F93                         _TRISD 000F95  
                       _flags 005E                         _fputc 10E0                         _fputs 1424  
                       pad@fp 0011                         _width 0062                         _putch 15EA  
                       dtoa@d 001E                         dtoa@i 003E                         dtoa@n 0036  
                       dtoa@p 0030                         dtoa@s 0034                         dtoa@w 0032  
                       tablat 000FF5                         status 000FD8           __size_of_LCD_String 005E  
             __end_of_sprintf 13DA                ?_LCD_String_xy 000A               __initialization 15D0  
                __end_of_main 10E0                  __end_of_dtoa 0AFC                        ??_main 005E  
                      ??_dtoa 0026                 __activetblptr 000002                        _ADCON1 000FC1  
                      ?_fputc 0001                        ?_fputs 000A                        ?_putch 0001  
         _DHT11_CheckResponse 154C              LCD_String_xy@msg 000B              LCD_String_xy@pos 000A  
            LCD_String_xy@row 000D                     ??_MSdelay 0003                        _OSCCON 000FD3  
                vfprintf@cfmt 0056                     ??___aodiv 0011                     ??___aomod 0011  
        ?_DHT11_CheckResponse 0001                        clear_0 15D6                        pad@buf 0013  
        __size_of_LCD_Command 001C                        dtoa@fp 001C                        _strlen 14E8  
                      fputc@c 0001                        fputs@c 000E                        fputs@i 000F  
                      fputs@s 000A                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 12CE                     ??_sprintf 005E                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 15E0                     ?_LCD_Init 0001  
             ??_LCD_String_xy 000D                 ___rparam_used 000001                __pcstackCOMRAM 0001  
       ??_DHT11_CheckResponse 0001                 __end_of_fputc 11AA                 __end_of_fputs 1468  
               __end_of_putch 15EC                  ??_LCD_String 000A                       ??_fputc 0005  
                     ??_fputs 000E                       ??_putch 0001                    __pbssBANK0 0060  
                  ??_LCD_Char 0007                    ??_LCD_Init 0008            __end_of_LCD_String 132C  
                     ?_strlen 0001            __size_of_vfpfcnvrt 01B4                       _MSdelay 13DA  
               ??_DHT11_Start 0001                 LCD_String@msg 0008                       __Hparam 0000  
                     __Lparam 0000                       ___aodiv 0CB0                       ___aomod 0E38  
                   ?_vfprintf 0050                  __psmallconst 0800                       __pcinit 15D0  
                     __ramtop 0800                       __ptext0 0F9C                       __ptext1 1388  
                     __ptext2 126C                       __ptext3 0AFC                       __ptext4 081E  
                     __ptext5 11AA                       __ptext6 14E8                       __ptext7 1424  
                     __ptext8 10E0                       __ptext9 15EA               __size_of_strlen 0036  
                __size_of_abs 0040                  __size_of_pad 00C2                       _sprintf 1388  
        end_of_initialization 15E0                       fputc@fp 0003                LCD_Command@cmd 0007  
               __Lmediumconst 0000                       fputs@fp 000C             __end_of_vfpfcnvrt 0CB0  
         __end_of_DHT11_Start 1598                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 0056  
                     strlen@a 0003                       strlen@s 0001                     _PORTAbits 000F80  
     __size_of_DHT11_ReadData 005C                     _TRISAbits 000F92             __size_of_LCD_Char 001C  
           __size_of_LCD_Init 002E            DHT11_ReadData@data 0002                 ??_LCD_Command 0007  
                 vfpfcnvrt@ap 0044                   vfpfcnvrt@fp 0040                   vfpfcnvrt@ll 0048  
              __end_of_strlen 151E           start_initialization 15D0                   __end_of_abs 14A8  
                 __end_of_pad 126C                   _DHT11_Start 1578   __end_of_DHT11_CheckResponse 1578  
       __end_of_LCD_String_xy 14E8                   vfprintf@fmt 0052                      ??_strlen 0003  
         __end_of_LCD_Command 15D0                   __pbssCOMRAM 005E                 __pcstackBANK0 0086  
            ___aodiv@dividend 0001                      ?_MSdelay 0001                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013                _DHT11_ReadData 132C  
           __size_of_vfprintf 0062                   __smallconst 0800         LCD_String_xy@location 000E  
                    ?_sprintf 0058                __size_of_fputc 00CA                __size_of_fputs 0044  
              __size_of_putch 0002                      MSdelay@i 0003                      MSdelay@j 0005  
                    _LCD_Char 1598                      _LCD_Init 151E        __end_of_DHT11_ReadData 1388  
                 _LCD_Command 15B4                     _vfpfcnvrt 0AFC                     main@value 0090  
            __size_of_MSdelay 004A                      __Hrparam 0000                    vfprintf@ap 0054  
                    __Lrparam 0000                    vfprintf@fp 0050               ?_DHT11_ReadData 0001  
            __size_of___aodiv 0188              __size_of___aomod 0164                    ?_vfpfcnvrt 0040  
             DHT11_ReadData@i 0001               ___aodiv@divisor 0009               ___aodiv@counter 0011  
                  sprintf@fmt 005A                      _dtoa$753 002E                      __ptext10 1468  
                    __ptext11 0E38                      __ptext20 132C                      __ptext12 0CB0  
                    __ptext21 154C                      __ptext13 14A8                      __ptext14 12CE  
                    __ptext15 1598                      __ptext16 151E                      __ptext17 15B4  
                    __ptext18 13DA                      __ptext19 1578              __size_of_sprintf 0052  
               __size_of_main 0144                 __size_of_dtoa 02DE                  ?_DHT11_Start 0001  
                  MSdelay@val 0001                      _vfprintf 126C                    _LCD_String 12CE  
            ___aomod@dividend 0001                     sprintf@ap 0088               main@RH_Integral 009B  
__size_of_DHT11_CheckResponse 002C               ___aomod@divisor 0009                   ??_vfpfcnvrt 0046  
             ___aomod@counter 0011                main@RH_Decimal 009A                      sprintf@f 008A  
                    sprintf@s 0058        __size_of_LCD_String_xy 0040                  ___aodiv@sign 0012  
                ___aomod@sign 0012  
